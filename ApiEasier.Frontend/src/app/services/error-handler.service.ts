import { HttpErrorResponse } from "@angular/common/http";
import { Injectable } from "@angular/core";
import { Router } from "@angular/router";
import { TuiAlertService } from "@taiga-ui/core";

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤.
 *
 * @remarks
 * –≠—Ç–æ—Ç —Å–µ—Ä–≤–∏—Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫, –≤–æ–∑–Ω–∏–∫–∞—é—â–∏—Ö –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤.
 * –û–Ω –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç—É—Å –æ—à–∏–±–∫–∏ –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è, —Ç–∞–∫–∏–µ –∫–∞–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö
 * –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—à–∏–±–æ–∫.
 *
 * @type {ErrorHandlerService}
 * @memberof Component
 */
@Injectable({
  providedIn: 'root',
})
export class ErrorHandlerService {
  private errorMessages: { [key: number]: string } = {
    404: '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–ª–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∞. üïµÔ∏è‚Äç‚ôÇÔ∏è',
    405: '–ú–µ—Ç–æ–¥ –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –º–µ—Ç–æ–¥ –∑–∞–ø—Ä–æ—Å–∞. üõë',
    406: '–ù–µ–ø—Ä–∏–µ–º–ª–µ–º—ã–π –∑–∞–ø—Ä–æ—Å. –°–µ—Ä–≤–µ—Ä –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç –≤ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ. üö´',
    408: '–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∏—Å—Ç–µ–∫–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑. ‚è≥',
    409: '–ö–æ–Ω—Ñ–ª–∏–∫—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å. üí•',
    410: '–†–µ—Å—É—Ä—Å —É–¥–∞–ª–µ–Ω –∏ –±–æ–ª—å—à–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. üóëÔ∏è',
    413: '–°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∞—è –ø–æ–ª–µ–∑–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞. –£–º–µ–Ω—å—à–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞. üì¶',
    418: '–Ø —á–∞–π–Ω–∏–∫. ‚òïÔ∏è',
    422: '–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç. –ó–∞–ø—Ä–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω. üìú',
    429: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ. üïí',
    502: '–ü–ª–æ—Ö–æ–π —à–ª—é–∑. –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ. üåê',
    503: '–°–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ú—ã –Ω–∞ —Ä–µ–º–æ–Ω—Ç–µ! üîß',
    504: '–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –∏—Å—Ç–µ–∫–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑. ‚è∞',
  };

  constructor(private router: Router, private readonly alert: TuiAlertService) {}

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏ HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤.
   *
   * @param {HttpErrorResponse} error - –û–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏ HTTP.
   * @returns {void}
   * @memberof ErrorHandlerService
   */
  handleError(error: HttpErrorResponse): void {
    console.error('Error occurred:', error);
    const errorCode = error.status as number;

    if (errorCode === 400) {
      this.handleBadRequestError();
      return;
    }

    const errorMessage =
      this.errorMessages[errorCode] ||
      `–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞. –ö–æ–¥: ${errorCode}. ü§∑‚Äç‚ôÇÔ∏è`;

    if (errorCode === 404) {
      this.router.navigate(['/page-not-found']);
      return;
    }

    this.router.navigate(['/error'], {
      queryParams: { code: errorCode, message: errorMessage },
    });
  }

  private handleBadRequestError(): void {
    const badRequestErorMessage =
      '–ù–µ–≤–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞. ü§¶‚Äç‚ôÇÔ∏è';
    this.alert.open(badRequestErorMessage).subscribe();
    return;
  }
}
