var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AlertDeleteComponent.html",[0,0.173,1,0.683]],["body/components/AlertDeleteComponent.html",[0,0.281,1,1.292,2,0.989,3,0.219,4,0.187,5,0.853,6,0.912,7,0.853,8,0.853,9,0.187,10,4.168,11,3.671,12,3.137,13,0.251,14,0.026,15,1.069,16,2.012,17,1.133,18,1.356,19,0.853,20,1.624,21,1.624,22,1.504,23,3.299,24,1.133,25,2.858,26,1.211,27,5.527,28,1.133,29,4.922,30,0.187,31,0.68,32,2.858,33,2.149,34,3.372,35,0.626,36,0.599,37,3.74,38,1.035,39,0.471,40,3.705,41,5.89,42,0.544,43,1.541,44,0.393,45,0.279,46,2.26,47,3.705,48,0.797,49,2.074,50,0.473,51,0.291,52,0.431,53,3.705,54,0.393,55,2.756,56,0.853,57,1.133,58,0.853,59,1.356,60,0.853,61,0.379,62,0.853,63,0.744,64,0.624,65,1.133,66,1.356,67,0.797,68,0.828,69,1.356,70,0.744,71,0.853,72,0.744,73,0.853,74,1.133,75,0.744,76,1.357,77,0.853,78,0.797,79,0.744,80,0.853,81,0.744,82,0.853,83,0.797,84,0.744,85,0.797,86,0.737,87,0.744,88,0.744,89,0.599,90,0.853,91,0.744,92,0.744,93,0.853,94,0.853,95,0.744,96,0.853,97,0.744,98,0.853,99,0.853,100,0.744,101,0.744,102,0.853,103,0.744,104,0.797,105,0.853,106,0.744,107,0.853,108,0.744,109,0.797,110,0.797,111,0.853,112,0.018,113,0.018]],["title/components/ApiDialogComponent.html",[0,0.173,63,0.683]],["body/components/ApiDialogComponent.html",[0,0.225,1,0.498,2,0.744,3,0.146,4,0.125,5,0.57,6,0.609,7,0.57,8,0.57,9,0.125,13,0.357,14,0.026,15,1.019,16,1.763,17,0.852,18,1.133,19,0.57,20,1.565,21,1.565,22,0.57,24,0.852,26,0.911,28,0.852,30,0.125,31,0.512,32,3.324,33,2.148,34,2.705,35,0.47,36,0.717,37,3.212,38,0.921,39,0.779,42,0.537,44,0.392,45,0.321,46,1.51,48,0.797,49,1.386,50,0.578,51,0.219,52,0.288,54,0.65,56,0.57,57,0.852,58,0.57,59,1.133,60,0.57,61,0.425,62,0.57,63,1.312,64,0.716,65,1.133,66,1.133,67,0.533,68,0.664,69,1.133,70,0.498,71,0.57,72,0.498,73,0.57,74,0.852,75,0.498,76,1.189,77,0.57,78,0.533,79,0.498,80,0.57,81,0.498,82,0.57,83,0.533,84,0.498,85,0.533,86,0.554,87,0.498,88,0.498,89,0.4,90,0.57,91,0.498,92,0.498,93,0.57,94,0.57,95,0.498,96,0.57,97,0.498,98,0.57,99,0.57,100,0.498,101,0.498,102,0.57,103,0.498,104,0.533,105,0.57,106,0.498,107,0.57,108,0.498,109,0.533,110,0.533,111,0.57,112,0.013,113,0.013,114,5.268,115,4.64,116,1.51,117,1.775,118,2.705,119,3.306,120,2.125,121,2.971,122,2.971,123,3.306,124,3.306,125,3.306,126,2.971,127,2.971,128,2.481,129,2.971,130,4.433,131,1.165,132,3.306,133,3.753,134,0.599,135,3.134,136,2.76,137,2.76,138,2.76,139,2.258,140,3.306,141,2.292,142,3.134,143,5.444,144,2.476,145,0.921,146,0.921,147,3.134,148,0.926,149,1.547,150,2.76,151,4.17,152,2.476,153,2.76,154,3.668,155,2.476,156,3.668,157,1.346,158,3.701,159,2.476,160,2.476,161,2.476,162,3.134,163,3.134,164,4.165,165,2.476,166,2.76,167,2.476,168,2.258,169,3.701,170,3.134,171,2.476,172,1.846,173,2.476,174,1.846,175,2.476,176,1.676,177,1.846,178,2.096,179,1.187,180,2.481,181,1.104,182,1.386,183,1.104,184,1.439,185,1.038,186,2.096,187,1.846,188,0.921,189,1.66,190,1.846,191,1.846,192,1.846,193,1.28,194,0.962,195,1.977,196,0.843,197,1.846,198,1.846,199,2.76,200,3.306,201,1.846,202,1.66,203,1.66,204,1.846,205,2.096,206,2.476]],["title/injectables/ApiHubServiceService.html",[207,0.836,208,2.533]],["body/injectables/ApiHubServiceService.html",[0,0.175,3,0.203,4,0.174,9,0.174,13,0.318,14,0.026,30,0.269,31,0.648,35,0.677,36,0.862,38,0.878,39,0.784,42,0.494,44,0.365,45,0.302,50,0.331,51,0.203,52,0.401,54,0.681,61,0.486,64,0.747,112,0.017,113,0.017,131,1.712,134,0.758,145,0.646,146,0.646,148,0.558,149,0.906,176,2.298,183,1.538,184,1.34,185,1.315,188,1.204,195,2.669,196,1.174,207,1.154,208,4.913,209,1.538,210,4.709,211,5.516,212,2.103,213,6.314,214,5.983,215,5.329,216,3.572,217,5.329,218,5.329,219,4.689,220,1.311,221,4.689,222,4.689,223,3.447,224,4.689,225,1.815,226,3.447,227,4.689,228,3.447,229,4.689,230,3.447,231,2.742,232,4.689,233,3.447,234,2.919,235,3.447,236,1.254,237,1.653,238,1.538,239,4.689,240,3.447,241,3.447,242,3.447,243,3.447,244,3.447,245,3.447,246,3.447,247,2.919,248,2.919,249,2.919,250,3.447,251,3.447,252,3.447,253,3.447,254,3.447,255,4.689,256,5.983,257,3.447,258,3.447,259,3.447,260,3.447,261,3.447,262,3.447,263,5.329,264,5.329,265,3.447,266,5.329,267,3.447,268,0.998,269,3.251,270,3.447,271,3.447,272,4.689,273,5.329,274,3.447,275,3.447,276,3.447,277,3.447,278,2.919,279,1.815,280,3.447,281,3.447,282,3.447,283,3.447,284,2.626,285,3.447]],["title/injectables/ApiService.html",[207,0.836,284,1.902]],["body/injectables/ApiService.html",[0,0.146,3,0.17,4,0.145,9,0.145,13,0.417,14,0.026,15,0.466,23,1.931,30,0.145,31,0.572,35,0.366,36,0.466,38,0.991,39,0.807,42,0.53,44,0.305,45,0.316,48,0.62,50,0.277,51,0.17,52,0.335,54,0.663,61,0.489,64,0.748,89,0.783,112,0.015,113,0.015,131,1.668,134,0.669,145,1.151,146,1.151,148,1.081,176,2.131,183,1.285,185,1.723,188,1.172,194,1.12,207,1.018,209,1.285,210,4.794,212,1.758,216,3.244,220,1.018,231,3.31,236,1.048,237,1.381,238,1.285,268,1.081,269,2.952,279,1.908,284,3.599,286,4.348,287,3.749,288,3.014,289,4.097,290,3.502,291,3.502,292,4.478,293,3.502,294,2.523,295,4.097,296,4.097,297,2.148,298,3.244,299,2.013,300,2.056,301,3.502,302,2.439,303,2.881,304,3.637,305,3.502,306,2.896,307,2.439,308,3.502,309,2.881,310,3.557,311,2.881,312,3.502,313,2.881,314,2.773,315,3.962,316,2.881,317,2.439,318,2.881,319,2.439,320,2.881,321,3.085,322,1.758,323,1.931,324,1.931,325,1.931,326,1.931,327,1.931,328,4.479,329,2.881,330,4.479,331,4.479,332,2.881,333,4.136,334,1.931,335,2.881,336,2.881,337,2.148,338,2.881,339,1.613,340,1.931,341,1.931,342,1.12,343,1.285,344,1.931]],["title/injectables/ApiServiceRepositoryService.html",[207,0.836,345,1.902]],["body/injectables/ApiServiceRepositoryService.html",[0,0.164,3,0.19,4,0.163,9,0.163,13,0.421,14,0.026,30,0.163,38,1.041,39,0.803,42,0.504,44,0.341,45,0.319,50,0.309,51,0.19,52,0.375,54,0.67,61,0.494,64,0.753,112,0.016,113,0.016,134,0.724,145,1.161,146,1.161,148,1.087,176,2.187,183,1.437,185,1.739,188,1.184,207,1.101,209,1.437,220,0.792,231,3.322,236,1.171,237,1.544,238,1.437,268,1.098,269,3.138,279,1.989,284,3.54,289,4.355,290,3.789,291,3.789,292,4.706,293,3.789,295,4.355,296,4.355,302,2.727,304,3.847,305,3.789,306,3.019,308,3.789,310,3.563,312,3.789,317,2.727,319,2.727,326,2.159,345,3.64,346,5.436,347,2.159,348,3.221,349,3.221,350,3.221,351,3.221,352,3.221,353,3.221,354,3.221,355,3.221,356,3.221,357,3.221,358,2.402,359,1.544,360,3.221,361,3.221,362,3.221,363,3.221,364,3.221,365,3.221,366,3.221]],["title/interfaces/ApiServiceStructure.html",[306,1.756,367,1.157]],["body/interfaces/ApiServiceStructure.html",[0,0.237,3,0.275,4,0.235,9,0.235,13,0.46,14,0.026,30,0.235,31,0.788,35,0.783,36,0.755,38,1.232,42,0.403,45,0.348,50,0.448,51,0.275,54,0.495,61,0.515,64,0.604,86,1.015,112,0.02,113,0.02,176,1.942,268,1.122,279,2.28,306,2.948,367,1.589,368,2.412,369,3.95,370,5.667,371,2.562]],["title/components/AppComponent.html",[0,0.173,70,0.683]],["body/components/AppComponent.html",[0,0.307,1,0.898,2,1.116,3,0.264,4,0.226,5,1.029,7,1.029,8,1.029,9,0.226,14,0.026,15,0.723,18,1.279,19,1.029,20,1.646,21,1.646,22,1.029,24,1.279,28,1.279,30,0.226,31,0.768,35,0.568,36,0.723,39,0.568,42,0.546,44,0.474,45,0.226,48,0.962,51,0.328,52,0.52,56,1.029,57,1.279,58,1.029,59,1.455,60,1.029,61,0.427,62,1.029,63,0.898,64,0.67,65,1.279,66,1.455,67,0.962,68,0.905,69,1.455,70,1.27,71,1.029,72,0.898,73,1.029,74,1.279,75,0.898,76,1.426,77,1.029,78,0.962,79,0.898,80,1.029,81,0.898,82,1.029,83,0.962,84,0.898,85,0.962,86,0.832,87,0.898,88,0.898,89,0.723,90,1.029,91,0.898,92,0.898,93,1.029,94,1.029,95,0.898,96,1.029,97,0.898,98,1.029,99,1.029,100,0.898,101,0.898,102,1.029,103,0.898,104,0.962,105,1.029,106,0.898,107,1.029,108,0.898,109,0.962,110,0.962,111,1.029,112,0.02,113,0.02,238,2.477,268,0.723,372,3.784,373,6.042,374,6.042,375,3.686,376,5.553,377,3.388,378,5.553,379,6.042,380,4.702,381,4.47,382,1.737]],["title/components/BackButtonComponent.html",[0,0.173,72,0.683]],["body/components/BackButtonComponent.html",[0,0.268,1,0.681,2,0.931,3,0.2,4,0.171,5,0.78,6,0.834,7,0.78,8,0.78,9,0.171,13,0.315,14,0.026,17,1.067,18,1.308,19,0.78,20,1.613,21,1.613,22,0.78,24,0.78,26,1.3,28,1.067,30,0.171,39,0.589,42,0.49,43,1.41,44,0.359,45,0.171,50,0.507,51,0.274,52,0.394,54,0.491,56,0.78,57,1.067,58,0.78,59,1.308,60,0.78,61,0.407,62,0.78,63,0.681,64,0.602,65,1.067,66,1.308,67,0.729,68,0.791,69,1.308,70,0.681,71,0.78,72,1.32,73,1.474,74,1.067,75,0.681,76,1.322,77,0.78,78,0.729,79,0.681,80,0.78,81,0.681,82,0.78,83,0.729,84,0.681,85,0.729,86,0.694,87,0.681,88,0.681,89,0.75,90,0.78,91,0.681,92,0.681,93,0.78,94,0.78,95,0.681,96,0.78,97,0.681,98,0.78,99,0.78,100,0.681,101,0.681,102,0.78,103,0.681,104,0.729,105,0.78,106,0.681,107,0.78,108,0.681,109,0.729,110,0.729,111,0.78,112,0.017,113,0.017,131,0.89,134,0.75,145,0.635,146,0.635,148,0.548,149,1.218,168,2.828,188,0.868,195,2.356,220,0.834,359,1.625,377,2.067,382,1.317,383,4.473,384,3.939,385,2.527,386,3.742,387,5.613,388,2.731,389,4.473,390,3.924,391,4.809,392,3.389,393,3.389,394,3.389,395,4.579,396,3.389,397,3.389,398,2.527,399,3.389,400,3.389,401,3.389,402,3.389,403,3.389,404,4.635,405,2.527,406,2.198,407,2.053,408,1.625,409,1.928,410,1.898,411,1.752,412,4.473,413,2.869,414,1.512,415,1.41,416,2.869,417,1.41,418,1.41,419,2.067,420,1.898,421,1.898,422,1.41,423,1.512,424,1.41,425,1.752,426,1.752,427,2.869]],["title/components/CardApiComponent.html",[0,0.173,75,0.683]],["body/components/CardApiComponent.html",[0,0.21,1,0.443,2,0.682,3,0.13,4,0.111,5,0.508,6,0.543,7,0.508,8,0.508,9,0.111,13,0.28,14,0.026,15,0.668,16,1.083,17,0.781,18,1.068,19,0.508,20,1.544,21,1.544,22,0.508,24,0.781,25,2.136,26,0.835,28,0.781,30,0.111,31,0.469,33,1.606,35,0.431,36,0.549,38,0.774,39,0.741,42,0.53,43,1.411,44,0.234,45,0.294,48,0.475,50,0.445,51,0.244,52,0.257,54,0.584,55,2.597,56,0.508,57,0.781,58,0.508,59,1.068,60,0.508,61,0.357,62,0.508,63,0.682,64,0.731,65,0.781,66,1.068,67,0.475,68,0.619,69,1.068,70,0.443,71,0.508,72,0.443,73,0.508,74,0.781,75,1.276,76,1.339,77,0.508,78,0.475,79,0.443,80,0.508,81,0.443,82,0.508,83,0.475,84,0.443,85,0.475,86,0.508,87,0.443,88,0.443,89,0.943,90,0.508,91,0.932,92,0.443,93,0.508,94,0.508,95,0.443,96,0.508,97,0.932,98,0.781,99,0.508,100,0.443,101,0.443,102,0.508,103,0.443,104,0.475,105,0.508,106,0.443,107,0.508,108,0.932,109,0.475,110,0.475,111,0.508,112,0.012,113,0.012,115,1.645,117,1.981,120,1.981,131,1.389,134,0.549,141,2.588,145,0.635,146,0.635,148,0.668,149,1.315,157,0.802,176,1.58,183,0.984,184,1.319,188,0.938,193,1.754,194,2.054,196,1.155,220,0.835,225,0.752,268,0.549,269,2.521,299,1.93,300,1.803,304,1.235,342,1.606,343,1.513,345,2.597,375,2.521,382,0.858,387,5.324,388,1.141,406,2.199,407,2.265,408,1.981,409,2.083,410,1.235,411,1.141,414,2.233,415,1.719,417,1.411,418,1.411,419,2.069,420,1.235,421,1.235,422,1.411,423,1.513,424,1.93,425,1.754,426,1.141,428,3.988,429,5.037,430,1.868,431,1.899,432,1.899,433,4.132,434,2.206,435,3.392,436,3.459,437,2.529,438,3.459,439,1.513,440,3.081,441,1.626,442,4.132,443,1.868,444,3.109,445,3.109,446,2.206,447,3.499,448,2.206,449,2.224,450,2.206,451,2.206,452,2.529,453,2.206,454,3.733,455,2.206,456,3.392,457,1.754,458,2.206,459,2.206,460,2.206,461,1.235,462,1.626,463,2.274,464,1.645,465,1.479,466,1.346,467,1.645,468,1.645,469,1.346,470,1.645,471,1.868,472,3.392,473,2.529,474,2.529,475,2.274,476,2.206,477,2.206,478,2.136,479,3.392,480,2.206,481,2.597,482,2.274,483,1.868,484,4.132,485,1.645,486,3.392,487,1.868,488,1.868,489,2.206,490,2.206,491,1.479,492,2.314,493,2.206,494,1.346,495,1.479,496,1.645,497,2.069,498,1.479,499,1.645,500,1.645,501,2.206,502,2.206,503,3.392,504,3.392,505,1.479,506,1.155,507,1.346,508,1.754,509,1.513,510,1.479,511,1.235,512,3.109,513,1.479,514,2.069,515,1.479,516,2.274,517,1.981,518,1.479,519,3.355,520,2.732,521,2.069,522,1.479,523,1.479,524,1.479,525,1.479,526,1.235,527,1.479,528,1.899,529,1.479,530,1.754,531,1.346,532,2.274,533,2.521,534,1.346,535,1.235,536,3.054,537,1.645,538,1.645,539,1.645,540,3.109,541,1.346,542,1.479,543,1.479,544,1.479,545,1.479,546,1.479,547,1.479,548,1.479,549,1.513,550,2.224,551,1.058,552,1.346,553,1.626,554,1.513,555,1.626,556,1.754,557,2.136,558,1.141,559,1.141,560,2.069,561,1.346,562,1.479,563,1.645,564,1.346,565,1.235,566,1.235,567,1.479,568,1.235,569,1.346,570,1.141,571,1.346,572,1.479,573,1.479]],["title/components/CardEndpointComponent.html",[0,0.173,79,0.683]],["body/components/CardEndpointComponent.html",[0,0.199,1,0.406,2,0.637,3,0.119,4,0.102,5,0.466,6,0.498,7,0.466,8,0.466,9,0.102,13,0.362,14,0.026,15,0.632,16,1.012,17,0.73,18,1.019,19,0.466,20,1.528,21,1.528,22,0.466,24,0.73,25,2.022,26,0.78,28,0.73,30,0.102,31,0.438,33,1.52,35,0.497,36,0.513,38,0.732,39,0.775,42,0.527,43,0.841,44,0.214,45,0.315,48,0.435,50,0.425,51,0.187,52,0.235,54,0.647,55,2.856,56,0.466,57,0.73,58,0.466,59,1.019,60,0.466,61,0.425,62,0.466,63,0.406,64,0.585,65,0.73,66,1.019,67,0.435,68,0.981,69,1.019,70,0.406,71,0.466,72,0.406,73,0.466,74,0.73,75,0.406,76,1.313,77,0.466,78,0.435,79,1.309,80,0.466,81,0.406,82,0.466,83,0.435,84,0.637,85,0.435,86,0.764,87,0.406,88,0.406,89,0.973,90,0.466,91,0.406,92,0.406,93,0.466,94,0.466,95,0.406,96,0.466,97,0.89,98,0.73,99,0.466,100,0.406,101,0.406,102,0.466,103,0.406,104,0.435,105,0.466,106,0.406,107,0.466,108,0.89,109,0.435,110,0.435,111,0.466,112,0.011,113,0.011,117,1.875,131,1.721,134,0.513,141,3.192,145,0.955,146,0.955,148,0.862,149,1.622,157,0.736,176,0.689,183,0.902,184,1.232,188,1.063,193,1.639,194,2.073,196,1.508,220,0.78,225,0.689,236,0.736,268,0.632,299,1.842,300,1.721,342,1.52,343,1.414,375,2.385,382,0.786,386,1.133,406,1.627,407,1.869,408,1.52,409,1.627,414,1.744,415,1.319,417,0.841,418,0.841,419,1.744,422,0.841,423,0.902,424,1.627,428,4.138,436,3.301,437,2.364,438,3.301,439,1.414,441,1.52,444,2.967,445,2.967,449,2.122,452,2.364,454,3.585,457,1.639,462,1.52,463,2.125,464,1.508,465,1.356,466,1.234,467,1.508,469,1.234,473,2.364,475,2.125,478,2.289,481,2.479,482,2.621,485,1.508,487,1.712,488,1.712,491,1.356,492,2.189,494,1.234,495,1.356,496,1.508,497,2.385,498,1.356,499,1.508,500,1.508,505,1.356,506,1.08,507,1.234,508,1.046,509,1.414,510,1.356,511,1.133,512,2.967,513,1.356,514,1.934,515,1.356,516,2.125,517,1.875,518,1.356,519,3.222,520,2.637,521,1.934,522,1.356,523,1.356,524,1.356,525,1.356,526,1.133,527,1.356,528,1.133,529,1.356,530,1.639,531,1.234,532,2.125,533,2.385,534,1.234,535,1.133,536,2.933,537,1.508,538,1.508,539,1.508,540,2.967,541,1.234,542,1.356,543,1.356,544,1.356,545,1.356,546,1.356,547,1.356,548,1.356,549,1.414,550,2.122,551,0.97,552,1.234,553,1.52,554,1.414,555,1.52,556,1.639,557,2.022,558,1.046,559,1.046,568,1.133,569,1.234,570,1.046,571,1.234,572,1.356,573,1.356,574,5.227,575,1.712,576,2.023,577,3.17,578,3.17,579,3.17,580,3.17,581,2.916,582,3.311,583,3.311,584,2.916,585,3.91,586,2.023,587,3.574,588,2.023,589,2.023,590,2.023,591,2.023,592,2.023,593,3.17,594,2.023,595,3.17,596,2.023,597,2.023,598,2.023,599,2.023,600,3.17,601,2.023,602,3.17,603,2.023,604,3.17,605,2.023,606,1.234,607,1.234,608,1.712,609,1.508,610,2.023,611,3.17,612,2.023,613,3.91,614,1.508,615,4.426,616,3.311,617,4.426,618,3.17,619,2.023,620,2.023,621,2.023,622,2.023,623,1.508,624,2.023,625,3.17,626,3.17]],["title/components/CardEntityComponent.html",[0,0.173,81,0.683]],["body/components/CardEntityComponent.html",[0,0.194,1,0.393,2,0.62,3,0.115,4,0.099,5,0.45,6,0.481,7,0.45,8,0.45,9,0.099,13,0.357,14,0.026,15,0.618,16,0.985,17,0.71,18,1,19,0.45,20,1.521,21,1.521,22,0.45,24,0.71,25,1.977,26,0.759,28,0.71,30,0.099,31,0.426,33,1.486,35,0.639,36,0.765,38,0.886,39,0.795,42,0.506,43,0.813,44,0.207,45,0.316,48,0.42,50,0.417,51,0.182,52,0.227,54,0.641,55,2.814,56,0.45,57,0.71,58,0.45,59,1,60,0.45,61,0.42,62,0.45,63,0.393,64,0.578,65,0.71,66,1,67,0.42,68,0.572,69,1,70,0.393,71,0.45,72,0.393,73,0.45,74,0.71,75,0.393,76,1.302,77,0.45,78,0.42,79,0.393,80,0.45,81,1.302,82,0.45,83,0.42,84,0.393,85,0.42,86,0.952,87,0.62,88,0.393,89,1.021,90,0.45,91,0.393,92,0.393,93,0.45,94,0.45,95,0.393,96,0.45,97,0.873,98,0.71,99,0.45,100,0.393,101,0.393,102,0.45,103,0.393,104,0.42,105,0.45,106,0.393,107,0.45,108,0.873,109,0.42,110,0.42,111,0.45,112,0.011,113,0.011,117,1.833,131,1.786,134,0.499,141,2.972,145,0.941,146,0.941,148,0.882,149,1.643,157,0.71,184,1.199,188,1.077,193,1.595,194,2.045,196,1.302,220,0.759,225,0.665,236,0.71,268,0.882,269,2.332,294,1.882,299,1.807,300,1.688,339,2.814,342,1.486,343,1.376,371,1.283,375,2.332,382,0.759,388,1.01,406,2.091,407,2.182,408,1.833,409,1.967,410,1.094,411,1.01,414,2.109,415,1.59,417,1.283,418,1.283,419,1.937,420,1.094,421,1.094,422,1.283,423,1.376,424,1.807,425,1.595,426,1.01,428,4.229,436,3.238,437,2.301,438,3.238,439,1.376,441,1.479,444,2.563,445,2.911,449,2.082,452,2.301,454,3.238,457,1.595,462,1.479,463,2.068,464,1.457,465,1.309,466,1.192,467,1.457,469,1.192,473,2.301,474,2.301,475,2.068,478,1.977,481,2.432,483,2.612,485,1.457,491,1.309,492,1.727,494,1.192,495,1.309,496,1.457,497,1.192,498,1.309,499,1.457,500,1.457,505,1.309,506,1.051,507,1.192,508,1.595,509,1.376,510,1.309,511,1.094,512,2.911,513,1.309,514,1.882,515,1.309,516,2.068,517,1.833,518,1.309,519,3.169,520,2.598,521,1.882,522,1.309,523,1.309,524,1.309,525,1.309,526,1.094,527,1.309,528,1.727,529,1.309,530,1.595,531,1.192,532,2.068,533,2.332,534,1.192,535,1.094,536,2.884,537,1.457,538,1.457,539,1.457,540,2.911,541,1.192,542,1.309,543,1.309,544,1.309,545,1.309,546,1.309,547,1.309,548,1.309,549,1.376,550,2.082,551,0.937,552,1.192,553,1.479,554,1.376,555,1.479,556,1.595,557,1.977,558,1.01,559,1.01,560,1.882,561,1.192,562,1.309,563,1.457,564,1.192,565,1.094,566,1.094,567,1.309,568,1.094,569,1.192,570,1.01,571,1.192,572,1.309,573,1.309,582,3.237,584,2.851,607,1.192,608,3.237,616,3.677,627,5.342,628,1.654,629,1.953,630,3.085,631,2.563,632,3.823,633,3.085,634,4.342,635,3.085,636,3.085,637,3.823,638,1.654,639,3.656,640,1.953,641,1.953,642,1.953,643,1.953,644,3.085,645,1.953,646,1.953,647,3.085,648,1.953,649,3.085,650,1.953,651,3.085,652,1.953,653,2.301,654,1.953,655,1.953,656,1.953,657,3.085,658,1.953,659,1.953,660,1.953,661,1.953,662,1.457,663,1.953,664,3.085,665,1.953,666,3.823,667,1.953,668,3.823,669,3.085,670,1.953,671,1.953,672,1.953,673,1.953,674,1.953,675,1.953,676,1.953,677,1.953,678,1.953,679,1.953,680,3.085,681,3.085]],["title/interfaces/Endpoint.html",[68,0.509,367,1.157]],["body/interfaces/Endpoint.html",[3,0.294,4,0.251,9,0.251,13,0.338,14,0.026,30,0.251,31,0.819,35,0.753,36,0.805,38,1.228,45,0.353,51,0.294,68,0.948,112,0.021,113,0.021,268,1.119,279,2.232,367,1.694,368,2.571,371,2.466,682,4.211,683,5.55,684,4.42]],["title/components/EndpointDialogComponent.html",[0,0.173,84,0.683]],["body/components/EndpointDialogComponent.html",[0,0.242,1,0.565,2,0.816,3,0.166,4,0.142,5,0.647,6,0.691,7,0.647,8,0.647,9,0.142,13,0.324,14,0.026,15,0.987,16,1.297,17,0.935,18,1.204,19,0.647,20,1.586,21,1.586,22,0.647,23,2.723,24,0.935,26,1,28,0.935,30,0.142,31,0.562,32,3.307,33,2.418,34,2.911,35,0.606,36,0.846,37,2.911,38,0.979,39,0.776,42,0.552,44,0.431,45,0.319,46,1.714,48,0.875,49,1.574,50,0.502,51,0.24,52,0.327,54,0.647,56,0.647,57,0.935,58,0.647,59,1.204,60,0.647,61,0.402,62,0.647,63,0.565,64,0.554,65,0.935,66,1.204,67,0.605,68,0.985,69,1.204,70,0.565,71,0.647,72,0.565,73,0.647,74,0.935,75,0.565,76,1.244,77,0.647,78,0.605,79,0.565,80,0.647,81,0.565,82,0.647,83,0.605,84,1.321,85,0.605,86,0.608,87,0.565,88,0.565,89,0.455,90,0.647,91,0.565,92,0.565,93,0.647,94,0.647,95,0.565,96,0.647,97,0.565,98,0.647,99,0.647,100,0.565,101,0.565,102,0.647,103,0.565,104,0.605,105,0.647,106,0.565,107,0.647,108,0.565,109,0.605,110,0.605,111,0.647,112,0.015,113,0.015,116,1.714,117,1.948,118,2.911,119,3.559,120,2.288,121,3.199,122,3.199,123,3.559,124,3.559,125,3.559,126,3.199,127,3.199,128,2.723,129,3.199,131,1.254,132,3.559,134,0.657,136,3.03,137,3.03,138,3.899,139,2.479,140,3.559,141,2.467,145,0.761,146,0.761,148,0.935,149,1.519,150,3.03,151,3.875,153,3.03,154,3.899,156,3.899,157,1.478,166,3.03,172,2.096,174,2.096,177,2.096,179,1.347,180,2.723,181,1.254,182,1.574,184,1.579,185,1.139,187,2.096,188,0.761,189,1.884,190,2.096,191,2.096,192,2.096,193,1.453,194,1.092,195,2.129,196,0.957,197,2.096,198,2.096,199,3.03,200,3.559,201,2.096,202,1.884,203,1.884,204,2.096,268,0.772,334,2.723,606,1.714,609,4.638,684,3.03,685,5.266,686,4.772,687,2.81,688,2.81,689,2.81,690,2.81,691,2.81,692,4.063,693,2.81,694,2.81,695,2.81,696,2.81,697,2.81]],["title/injectables/EndpointRepositoryService.html",[207,0.836,587,2.277]],["body/injectables/EndpointRepositoryService.html",[0,0.147,3,0.171,4,0.146,9,0.146,13,0.408,14,0.026,30,0.146,38,0.994,39,0.765,42,0.458,44,0.307,45,0.311,50,0.278,51,0.171,52,0.337,54,0.638,61,0.463,64,0.727,68,1.02,112,0.015,113,0.015,134,0.672,145,1.127,146,1.127,148,1.052,185,1.638,188,1.271,207,1.023,209,1.294,220,0.714,231,3.253,236,1.055,237,1.39,238,1.294,268,1.158,279,1.913,347,1.944,358,2.163,359,1.39,581,3.099,587,4.201,606,1.769,614,3.099,623,3.099,698,5.212,699,3.099,700,4.201,701,3.519,702,3.519,703,3.519,704,2.9,705,2.455,706,3.519,707,4.676,708,2.9,709,4.359,710,3.519,711,6.811,712,2.9,713,3.519,714,2.9,715,3.519,716,2.9,717,3.519,718,2.9,719,4.156,720,2.9,721,2.9,722,2.9,723,2.9,724,2.9,725,2.9,726,2.9,727,2.9]],["title/injectables/EndpointService.html",[207,0.836,700,2.277]],["body/injectables/EndpointService.html",[0,0.133,3,0.155,4,0.132,9,0.132,13,0.406,14,0.026,15,0.424,23,1.757,30,0.132,31,0.534,35,0.333,36,0.424,38,0.948,39,0.777,42,0.504,44,0.278,45,0.308,48,0.564,50,0.252,51,0.155,52,0.305,54,0.635,61,0.461,64,0.719,68,0.965,89,0.742,112,0.014,113,0.014,131,1.633,134,0.625,145,1.121,146,1.121,148,1.051,185,1.636,188,1.26,194,1.019,207,0.95,209,1.169,212,1.599,216,3.074,220,0.95,231,3.249,236,0.953,237,1.257,238,1.169,268,1.153,279,1.723,286,4.207,287,3.652,288,2.917,294,2.356,297,1.955,298,3.074,299,1.908,300,1.967,307,2.22,310,2.797,314,2.589,315,3.845,321,2.88,322,1.599,323,1.757,324,1.757,325,1.757,327,1.757,328,4.207,330,4.207,331,4.207,334,1.757,337,1.955,339,1.468,340,1.757,341,1.757,342,1.019,343,1.169,344,1.757,581,3.419,606,1.599,614,3.419,623,3.419,684,1.955,699,2.88,700,4.166,701,3.882,702,3.882,703,3.882,706,2.22,707,4.572,709,4.388,710,2.22,713,2.22,715,2.22,717,2.22,728,5.262,729,3.862,730,6.215,731,2.622,732,6.376,733,2.622,734,2.22,735,2.622,736,2.22,737,2.622,738,2.622,739,3.862,740,4.585,741,2.622]],["title/interfaces/Entity.html",[86,0.509,367,1.157]],["body/interfaces/Entity.html",[0,0.236,3,0.275,4,0.235,9,0.235,13,0.316,14,0.026,30,0.235,31,0.787,35,0.782,36,0.752,38,1.231,42,0.402,45,0.348,50,0.447,51,0.275,54,0.493,61,0.515,68,1.014,86,0.852,112,0.02,113,0.02,268,1.063,279,2.278,367,1.584,368,2.405,371,2.559,699,4.988,742,3.938,743,4.988]],["title/components/EntityDialogComponent.html",[0,0.173,87,0.683]],["body/components/EntityDialogComponent.html",[0,0.206,1,0.429,2,0.665,3,0.126,4,0.108,5,0.492,6,0.526,7,0.492,8,0.492,9,0.108,13,0.381,14,0.026,15,0.934,16,1.056,17,0.762,18,1.05,19,0.492,20,1.538,21,1.538,22,0.492,24,0.762,26,0.814,28,0.762,30,0.108,31,0.457,32,3.29,33,2.243,34,2.47,35,0.627,36,0.88,37,2.47,38,1.019,39,0.815,42,0.526,44,0.351,45,0.33,46,1.303,48,0.712,49,1.196,50,0.501,51,0.195,52,0.249,54,0.675,56,0.492,57,0.762,58,0.492,59,1.05,60,0.492,61,0.444,62,0.492,63,0.429,64,0.483,65,1.05,66,1.05,67,0.46,68,0.606,69,1.05,70,0.429,71,0.492,72,0.429,73,0.492,74,0.762,75,0.429,76,1.123,77,0.492,78,0.46,79,0.429,80,0.492,81,0.429,82,0.492,83,0.46,84,0.429,85,0.46,86,0.925,87,1.326,88,0.429,89,0.655,90,0.492,91,0.429,92,0.429,93,0.492,94,0.492,95,0.429,96,0.492,97,0.429,98,0.492,99,0.492,100,0.429,101,0.429,102,0.492,103,0.429,104,0.46,105,0.492,106,0.429,107,0.492,108,0.429,109,0.46,110,0.46,111,0.492,112,0.012,113,0.012,116,1.303,117,1.586,118,2.47,119,3.019,120,1.941,121,2.714,122,2.714,123,3.019,124,3.019,125,3.019,126,2.714,127,2.714,128,2.217,129,2.714,131,1.622,132,3.019,133,3.428,134,0.535,135,2.801,136,2.467,137,2.467,139,2.018,140,3.019,141,2.093,142,2.801,143,5.288,145,1.019,146,1.019,147,2.801,148,0.986,149,1.622,150,2.467,151,4.086,153,2.467,154,3.4,156,3.4,157,1.203,162,3.428,163,2.801,164,3.86,166,2.467,170,2.801,172,1.593,174,1.593,177,1.593,178,1.808,179,1.024,180,2.217,181,0.953,182,1.852,184,2.115,185,1.525,186,1.808,187,1.593,188,0.977,189,1.432,190,1.593,191,1.593,192,1.593,193,1.104,194,1.286,195,1.806,196,0.727,197,1.593,198,1.593,199,2.467,200,3.019,201,1.593,202,1.432,203,1.432,204,1.593,205,1.808,247,1.808,268,0.954,299,1.684,300,1.286,339,2.267,342,0.83,343,0.953,371,0.889,398,2.467,405,2.467,431,1.852,432,1.852,457,1.104,461,1.196,482,1.432,492,1.196,506,0.727,526,1.196,607,1.303,653,2.467,662,4.816,743,3.019,744,5.468,745,4.048,746,4.048,747,4.048,748,3.308,749,4.559,750,3.308,751,3.308,752,3.308,753,2.136,754,2.136,755,3.86,756,3.308,757,4.559,758,4.932,759,3.308,760,3.308,761,2.136,762,2.136,763,2.136,764,2.136,765,3.308,766,2.136,767,3.308,768,2.136,769,1.808,770,2.136,771,2.136,772,2.136,773,2.136,774,2.136,775,2.136,776,2.136,777,2.136,778,4.192,779,2.136,780,2.136,781,2.136,782,4.048,783,2.136,784,2.136,785,2.136,786,2.136,787,4.559,788,2.136,789,2.801,790,2.136,791,2.136,792,2.136,793,1.808,794,2.136,795,2.136]],["title/injectables/EntityRepositoryService.html",[207,0.836,639,2.277]],["body/injectables/EntityRepositoryService.html",[0,0.162,3,0.188,4,0.161,9,0.161,13,0.42,14,0.026,30,0.161,38,1.037,39,0.786,42,0.478,44,0.338,45,0.318,50,0.306,51,0.188,52,0.371,54,0.656,61,0.476,64,0.734,86,1.028,112,0.016,113,0.016,134,0.719,145,1.158,146,1.158,148,1.07,185,1.69,188,1.248,207,1.094,209,1.422,220,0.785,231,3.29,236,1.16,237,1.529,238,1.422,268,1.148,279,1.982,310,2.711,347,2.137,358,2.378,359,1.529,607,1.945,639,4.294,705,2.7,707,4.614,709,4.349,796,5.34,797,4.227,798,3.763,799,3.763,800,3.763,801,3.763,802,3.763,803,3.763,804,3.189,805,3.763,806,3.189,807,3.763,808,3.189,809,3.763,810,3.189,811,3.763,812,3.189,813,3.763,814,3.189,815,3.763,816,3.189,817,3.189,818,3.189,819,3.189,820,3.189,821,3.189,822,3.189,823,3.189]],["title/injectables/EntityService.html",[207,0.836,797,2.277]],["body/injectables/EntityService.html",[0,0.14,3,0.163,4,0.139,9,0.139,13,0.412,14,0.026,15,0.447,30,0.139,31,0.554,35,0.351,36,0.447,38,0.971,39,0.799,42,0.524,44,0.293,45,0.312,48,0.594,50,0.265,51,0.163,52,0.321,54,0.657,61,0.467,64,0.737,86,1.01,89,0.764,112,0.014,113,0.014,131,1.653,134,0.649,145,1.138,146,1.138,148,1.075,176,0.941,183,1.232,185,1.703,188,1.228,194,1.074,207,0.987,209,1.232,212,1.685,216,3.167,220,0.987,231,3.297,236,1.004,237,1.324,238,1.232,268,1.139,279,1.766,286,4.285,287,3.706,288,2.971,294,2.448,297,2.059,298,3.167,299,1.966,300,2.016,301,3.397,310,2.883,314,2.689,315,3.931,321,2.992,322,1.685,323,1.851,324,1.851,325,1.851,327,1.851,328,4.422,330,4.422,331,4.422,334,1.851,337,2.059,339,1.546,340,1.851,341,1.851,342,1.074,343,1.232,344,1.851,607,1.685,707,4.453,709,4.319,734,2.338,736,2.338,797,4.271,798,3.397,799,4.001,800,3.397,801,3.397,802,4.001,803,4.001,805,3.397,807,2.338,809,3.397,811,3.397,813,2.338,815,2.338,824,5.396,825,5.186,826,2.762,827,2.762,828,2.762,829,2.762,830,2.762,831,2.762,832,2.762,833,2.762,834,2.762,835,2.762,836,2.762,837,2.762,838,2.762]],["title/interfaces/EntityShort.html",[367,1.157,839,2.277]],["body/interfaces/EntityShort.html",[3,0.296,4,0.253,9,0.253,13,0.34,14,0.026,30,0.253,31,0.823,35,0.756,36,0.81,38,1.231,45,0.343,51,0.296,61,0.506,112,0.021,113,0.021,268,1.121,279,2.238,367,1.706,368,2.59,371,2.476,743,4.899,839,3.99,840,4.242]],["title/components/ErrorDisplayComponent.html",[0,0.173,88,0.683]],["body/components/ErrorDisplayComponent.html",[0,0.245,1,0.573,2,0.826,3,0.168,4,0.144,5,0.657,6,0.702,7,0.657,8,0.657,9,0.144,13,0.279,14,0.026,15,0.462,17,0.946,18,1.338,19,0.657,20,1.588,21,1.588,22,0.657,24,0.946,26,1.011,28,0.946,30,0.144,31,0.568,39,0.709,42,0.455,44,0.303,45,0.282,48,0.614,50,0.274,51,0.243,52,0.332,54,0.558,56,0.657,57,0.946,58,0.657,59,1.212,60,0.657,61,0.37,62,0.657,63,0.573,64,0.558,65,0.946,66,1.212,67,0.614,68,0.721,69,1.212,70,0.573,71,0.657,72,0.573,73,1.108,74,0.946,75,0.573,76,1.251,77,0.657,78,0.614,79,0.573,80,0.657,81,0.573,82,0.657,83,0.614,84,0.573,85,0.614,86,0.615,87,0.573,88,1.273,89,1.025,90,0.657,91,0.573,92,0.573,93,0.657,94,0.657,95,0.573,96,0.657,97,0.573,98,0.657,99,0.657,100,0.573,101,0.573,102,0.657,103,0.573,104,0.614,105,0.657,106,0.573,107,0.657,108,0.573,109,0.614,110,0.614,111,0.657,112,0.015,113,0.015,120,2.308,131,0.75,134,0.664,145,0.534,146,0.534,148,0.664,149,1.383,157,1.494,188,0.769,220,0.702,268,0.94,359,1.368,382,1.109,386,3.496,388,1.475,391,4.458,406,2.491,407,2.463,408,2.308,409,2.597,411,2.124,414,2.592,415,2.191,417,1.187,418,1.187,419,2.349,420,1.598,421,1.598,422,1.187,423,1.832,424,2.003,425,2.124,426,1.475,505,1.913,506,1.979,507,1.741,508,2.489,509,2.147,510,1.913,511,1.598,512,3.529,513,1.913,514,2.506,515,1.913,516,2.754,517,2.308,518,1.913,519,3.74,520,3.096,521,1.741,522,1.913,523,1.913,524,1.913,525,1.913,526,1.598,527,1.913,528,2.3,529,1.913,530,2.489,531,1.741,532,2.754,533,2.937,534,1.741,535,1.598,536,3.404,540,3.529,541,2.506,542,1.913,543,1.913,544,1.913,545,1.913,546,1.913,547,1.913,548,1.913,549,2.489,550,2.786,551,1.97,552,1.741,553,2.308,554,2.147,555,2.524,556,2.124,557,2.124,558,1.475,559,1.475,560,2.506,564,1.741,565,1.598,566,1.598,567,1.913,568,1.598,570,1.475,683,4.075,841,4.92,842,4.92,843,2.416,844,3.063,845,4.075,846,4.813,847,4.108,848,4.724,849,3.74,850,4.458,851,2.854,852,5.58,853,4.108,854,2.854,855,2.854,856,2.854,857,2.854,858,2.854,859,2.854,860,2.416,861,2.854,862,2.854,863,2.854,864,4.108,865,2.416,866,1.913,867,2.128,868,2.416,869,3.478,870,2.854,871,2.854,872,2.128,873,3.478,874,2.128,875,2.128,876,1.913,877,2.416,878,2.854,879,2.416,880,2.854,881,2.854,882,2.754,883,2.854,884,2.854,885,2.416]],["title/injectables/ErrorHandlerService.html",[207,0.836,288,1.756]],["body/injectables/ErrorHandlerService.html",[0,0.202,3,0.234,4,0.2,9,0.2,13,0.35,14,0.026,15,0.642,30,0.2,35,0.505,39,0.655,42,0.522,44,0.421,45,0.289,48,0.855,50,0.381,51,0.234,52,0.462,54,0.546,61,0.396,89,0.833,109,0.855,112,0.019,113,0.019,131,1.043,134,0.833,145,0.965,146,0.965,148,0.833,149,1.502,185,1.113,188,0.744,207,1.268,209,1.771,220,0.977,237,1.904,238,1.771,287,4.045,288,3.128,294,3.143,300,2.352,314,3.453,315,3.825,322,2.423,359,1.904,382,1.544,386,3.598,495,3.453,534,3.99,653,2.961,848,5.123,849,4.563,860,3.362,886,4.842,887,3.362,888,3.971,889,5.718,890,3.971,891,3.971,892,5.538,893,3.971,894,3.971,895,3.971,896,3.362,897,3.971,898,3.362,899,3.971,900,3.971,901,3.971,902,3.971,903,3.971,904,3.971,905,3.971,906,3.362]],["title/components/ExportApiButtonComponent.html",[0,0.173,91,0.683]],["body/components/ExportApiButtonComponent.html",[0,0.268,1,0.68,2,0.931,3,0.2,4,0.171,5,0.78,6,0.833,7,0.78,8,0.78,9,0.171,13,0.314,14,0.026,15,0.854,16,1.479,17,1.067,18,1.307,19,0.78,20,1.613,21,1.613,22,0.78,24,1.067,26,1.14,28,1.067,30,0.171,39,0.671,42,0.53,44,0.359,45,0.286,48,0.729,50,0.445,51,0.383,52,0.394,54,0.56,56,0.78,57,1.067,58,0.78,59,1.307,60,0.78,61,0.437,62,0.78,63,0.68,64,0.751,65,1.067,66,1.307,67,0.729,68,0.791,69,1.307,70,0.68,71,0.78,72,0.68,73,0.78,74,1.067,75,0.68,76,1.321,77,0.78,78,0.729,79,0.68,80,0.78,81,0.68,82,0.78,83,0.729,84,0.68,85,0.729,86,0.694,87,0.68,88,0.68,89,0.854,90,0.78,91,1.332,92,0.68,93,0.78,94,0.78,95,0.68,96,0.78,97,0.68,98,0.78,99,0.78,100,0.68,101,0.68,102,0.78,103,0.68,104,0.729,105,0.78,106,0.68,107,0.78,108,0.68,109,0.729,110,0.729,111,0.78,112,0.017,113,0.017,120,2.532,134,0.749,141,2.395,145,0.634,146,0.634,148,0.548,149,1.217,176,1.934,183,1.511,188,0.634,195,2.652,196,1.578,220,0.833,225,1.153,304,1.896,306,2.395,326,2.27,339,1.896,345,3.179,359,1.624,385,2.525,388,2.73,389,3.922,390,3.922,395,3.455,406,2.197,407,2.207,408,1.624,409,1.927,410,1.896,411,1.751,414,2.066,415,1.409,417,1.409,418,1.409,419,1.511,420,1.896,421,1.896,422,1.409,423,1.511,424,1.409,425,2.395,426,1.751,439,2.066,440,3.938,443,2.867,447,4.471,468,2.525,469,2.066,470,4.234,474,3.455,481,1.896,508,1.751,526,1.896,528,1.896,560,2.826,561,2.066,562,2.27,563,2.525,564,2.066,565,1.896,566,1.896,567,2.27,778,4.234,907,4.807,908,3.386,909,5.677,910,4.633,911,3.386,912,3.386,913,3.386,914,3.386,915,3.386,916,3.386,917,3.386,918,3.386,919,3.386,920,3.386,921,3.386,922,3.386,923,3.386,924,3.386,925,3.386,926,3.386]],["title/interfaces/FileStatus.html",[367,1.157,927,2.277]],["body/interfaces/FileStatus.html",[0,0.236,3,0.274,4,0.234,9,0.342,13,0.315,14,0.026,15,0.75,30,0.234,31,0.785,35,0.589,42,0.4,45,0.345,50,0.445,51,0.274,54,0.492,89,1.062,112,0.02,113,0.02,181,2.069,268,1.062,367,1.58,368,2.398,494,4.007,535,3.743,631,4.403,849,4.48,927,3.808,928,3.927,929,5.659,930,6.684]],["title/components/FilterByInputComponent.html",[0,0.173,92,0.683]],["body/components/FilterByInputComponent.html",[0,0.251,1,0.599,2,0.852,3,0.176,4,0.151,5,0.687,6,0.734,7,0.687,8,0.687,9,0.151,13,0.288,14,0.026,15,0.869,16,1.353,17,0.976,18,1.237,19,0.687,20,1.595,21,1.595,22,0.687,24,0.976,26,1.043,28,0.976,30,0.151,31,0.586,35,0.771,36,0.918,39,0.788,42,0.49,44,0.316,45,0.327,50,0.474,51,0.25,52,0.347,54,0.657,56,0.687,57,0.976,58,0.687,59,1.237,60,0.687,61,0.38,62,0.687,63,0.599,64,0.57,65,0.976,66,1.237,67,0.642,68,0.739,69,1.237,70,0.599,71,0.687,72,0.599,73,0.687,74,0.976,75,0.599,76,1.27,77,0.687,78,0.642,79,0.599,80,0.687,81,0.599,82,0.687,83,0.642,84,0.599,85,0.642,86,0.635,87,0.599,88,0.599,89,0.482,90,0.687,91,0.599,92,1.35,93,1.428,94,0.687,95,0.599,96,0.687,97,0.599,98,0.687,99,0.687,100,0.599,101,0.599,102,0.687,103,0.599,104,0.642,105,0.687,106,0.599,107,0.687,108,0.599,109,0.642,110,0.642,111,0.687,112,0.015,113,0.015,121,3.307,122,3.307,134,0.686,139,2.587,145,0.559,146,0.559,148,0.798,149,1.114,151,2.842,168,2.587,179,1.43,181,1.331,182,1.67,184,1.648,185,1.189,188,0.559,189,1.999,195,2.397,196,2.067,202,3.307,203,3.307,220,1.214,225,1.933,268,1.066,431,2.374,432,2.374,439,1.891,441,2.033,449,2.576,457,2.935,461,1.67,462,2.033,509,1.891,554,2.201,755,4.177,789,2.526,876,1.999,931,5.342,932,5.342,933,2.526,934,4.24,935,3.679,936,4.934,937,4.24,938,4.934,939,4.24,940,4.934,941,5.676,942,4.934,943,2.983,944,5.898,945,2.983,946,2.983,947,2.983,948,2.983,949,4.24,950,2.983,951,5.373,952,4.24,953,3.679,954,4.24,955,4.934,956,2.983,957,2.983,958,2.983,959,2.983,960,3.59,961,2.983,962,2.983,963,4.24,964,2.983,965,2.983,966,2.983,967,2.983,968,2.983,969,2.983,970,2.983,971,2.983,972,2.983,973,2.983,974,2.983,975,2.526,976,2.224]],["title/components/HeaderComponent.html",[0,0.173,95,0.683]],["body/components/HeaderComponent.html",[0,0.247,1,0.583,2,0.836,3,0.171,4,0.147,5,0.669,6,0.714,7,0.669,8,0.669,9,0.147,13,0.197,14,0.026,15,0.786,16,1.328,17,0.958,18,1.222,19,0.669,20,1.591,21,1.591,22,0.669,24,0.958,25,2.513,26,1.196,28,0.958,30,0.147,31,0.575,33,1.889,35,0.765,36,0.859,38,0.91,39,0.765,42,0.556,43,1.208,44,0.308,45,0.316,48,0.625,50,0.467,51,0.246,52,0.338,54,0.638,56,0.669,57,0.958,58,0.669,59,1.222,60,0.669,61,0.32,62,0.669,63,0.583,64,0.62,65,0.958,66,1.222,67,0.625,68,0.728,69,1.222,70,0.583,71,0.669,72,1.067,73,0.958,74,0.958,75,0.583,76,1.258,77,0.669,78,0.625,79,0.583,80,0.669,81,0.583,82,0.669,83,0.625,84,0.583,85,0.625,86,0.623,87,0.583,88,0.583,89,0.47,90,0.669,91,0.583,92,0.583,93,0.669,94,0.669,95,1.319,96,0.669,97,0.583,98,0.669,99,0.669,100,0.836,101,0.583,102,0.669,103,0.583,104,0.625,105,0.669,106,0.583,107,0.669,108,0.583,109,0.625,110,0.625,111,0.669,112,0.015,113,0.015,117,2.33,131,1.277,134,0.673,148,0.673,149,1.394,157,1.513,184,2.063,193,2.151,196,1.808,225,0.989,268,0.946,371,2.022,377,1.771,384,2.165,388,1.501,395,3.102,406,2.208,407,2.063,408,1.392,409,1.731,410,2.329,411,1.501,412,3.522,413,2.458,414,1.295,415,1.208,416,2.458,417,1.208,418,1.208,419,1.855,420,1.626,421,1.626,422,1.208,423,1.295,424,1.208,425,1.501,426,1.501,427,2.458,439,1.855,441,1.994,449,2.693,457,2.151,462,1.994,463,3.558,465,1.946,471,2.458,506,1.656,508,1.501,509,2.168,514,1.771,517,2.545,528,2.329,530,1.501,533,2.538,536,2.538,549,1.855,550,2.33,551,1.994,553,1.994,554,1.855,555,2.33,564,1.771,872,2.165,873,2.458,874,2.165,875,2.165,876,1.946,977,2.458,978,6.438,979,4.86,980,4.16,981,5.308,982,5.618,983,4.86,984,4.86,985,5.618,986,2.904,987,2.904,988,4.86,989,2.904,990,2.904,991,2.904,992,2.904,993,4.16,994,4.16,995,2.904,996,2.165,997,2.904,998,2.904,999,4.16,1000,4.16,1001,2.904,1002,4.16,1003,2.904,1004,3.522,1005,2.904,1006,2.904,1007,2.904,1008,2.904,1009,4.16,1010,3.522]],["title/interceptors/HttpErrorInterceptor.html",[1011,2.876,1012,2.277]],["body/interceptors/HttpErrorInterceptor.html",[3,0.236,4,0.202,9,0.202,13,0.39,14,0.026,15,0.648,30,0.202,39,0.658,42,0.566,44,0.425,45,0.261,48,0.862,50,0.384,51,0.236,52,0.466,54,0.425,61,0.399,112,0.019,113,0.019,131,1.052,134,0.838,145,0.97,146,0.97,148,0.838,185,1.452,188,1.137,194,1.557,207,1.274,220,0.985,231,2.91,236,1.456,287,4.183,288,3.388,298,3.848,299,2.525,300,2.547,315,3.16,322,2.443,323,2.684,324,2.684,325,2.684,327,2.684,340,2.684,341,2.684,342,1.557,343,1.786,344,2.684,359,1.92,382,1.557,386,2.242,481,3.399,844,2.986,1012,4.214,1013,4.004,1014,4.861,1015,3.39,1016,5.179,1017,4.004,1018,4.004,1019,5.179,1020,6.286,1021,6.286,1022,4.004,1023,5.179,1024,4.004,1025,5.179,1026,4.004,1027,4.004,1028,4.004]],["title/components/IconTrashComponent.html",[0,0.173,97,0.683]],["body/components/IconTrashComponent.html",[0,0.253,1,0.864,2,0.864,3,0.18,4,0.153,5,0.7,6,0.748,7,0.7,8,0.7,9,0.153,11,2.268,13,0.292,14,0.026,15,0.877,16,1.372,17,0.99,18,1.248,19,0.7,20,1.598,21,1.598,22,0.99,24,0.7,26,1.058,28,0.99,30,0.153,32,2.578,39,0.775,42,0.555,44,0.322,45,0.328,48,0.655,49,1.703,50,0.413,51,0.254,52,0.354,54,0.647,55,1.703,56,0.7,57,0.99,58,0.7,59,1.248,60,0.7,61,0.384,62,0.7,63,0.611,64,0.629,65,0.99,66,1.248,67,0.655,68,0.914,69,1.248,70,0.611,71,0.7,72,0.611,73,0.7,74,0.99,75,0.611,76,1.278,77,0.7,78,0.655,79,0.611,80,0.7,81,0.611,82,0.7,83,0.655,84,0.611,85,0.655,86,0.644,87,0.611,88,0.611,89,0.492,90,0.7,91,0.611,92,0.611,93,0.7,94,0.7,95,0.611,96,0.7,97,1.347,98,1.435,99,0.7,100,0.611,101,0.611,102,0.7,103,0.611,104,0.655,105,0.7,106,0.611,107,0.7,108,0.611,109,0.655,110,0.655,111,0.7,112,0.015,113,0.015,131,1.129,134,0.695,145,0.57,146,0.57,148,0.492,149,1.129,176,1.846,183,1.357,185,1.205,188,0.805,195,1.357,196,1.948,220,1.058,225,1.036,236,1.106,299,2.075,300,2.307,342,1.182,343,1.357,382,1.182,386,3.49,407,1.938,414,1.357,417,1.265,418,1.265,419,1.357,422,1.265,423,1.357,424,1.265,439,1.918,440,3.719,441,2.061,449,2.598,457,2.578,462,2.061,466,3.802,475,2.882,478,1.572,492,1.703,506,1.036,520,1.572,521,1.855,557,1.572,568,1.703,569,1.855,570,1.572,571,1.855,572,2.039,573,2.039,583,4.222,584,3.719,606,1.855,793,2.575,839,3.633,1029,5.277,1030,2.575,1031,4.299,1032,3.041,1033,4.299,1034,5.42,1035,4.987,1036,4.987,1037,3.041,1038,4.299,1039,3.041,1040,3.041,1041,3.041,1042,3.041,1043,3.041,1044,3.041,1045,3.041,1046,3.041,1047,3.041,1048,3.041,1049,4.299,1050,3.041,1051,3.041,1052,3.041,1053,3.041,1054,3.041,1055,3.041,1056,4.987,1057,4.299,1058,3.041,1059,3.041]],["title/components/ImportDialogComponent.html",[0,0.173,100,0.683]],["body/components/ImportDialogComponent.html",[0,0.197,1,0.401,2,0.63,3,0.118,4,0.101,5,0.459,6,0.491,7,0.459,8,0.459,9,0.326,13,0.383,14,0.026,15,0.82,16,1.001,17,0.722,18,1.011,19,0.459,20,1.525,21,1.525,22,0.459,24,0.722,26,0.953,28,0.722,30,0.101,31,0.433,32,3.41,33,2.062,34,2.364,35,0.674,36,0.772,37,2.364,38,0.373,39,0.773,42,0.551,43,0.83,44,0.211,45,0.311,48,0.675,49,1.117,50,0.301,51,0.185,52,0.232,54,0.645,55,2.169,56,0.459,57,0.722,58,0.459,59,1.011,60,0.459,61,0.461,62,0.459,63,0.401,64,0.635,65,0.722,66,1.011,67,0.429,68,0.58,69,1.011,70,0.401,71,0.459,72,0.401,73,0.459,74,0.722,75,0.401,76,1.091,77,0.459,78,0.429,79,0.401,80,0.459,81,0.401,82,0.459,83,0.429,84,0.401,85,0.429,86,0.469,87,0.401,88,0.401,89,1.006,90,0.459,91,0.401,92,0.401,93,0.459,94,0.459,95,0.401,96,0.459,97,0.401,98,0.459,99,0.459,100,1.307,101,0.401,102,0.459,103,0.401,104,0.429,105,0.459,106,0.401,107,0.459,108,0.401,109,0.834,110,0.429,111,0.459,112,0.011,113,0.011,116,1.217,117,1.503,120,1.858,127,2.597,128,2.102,131,1.677,134,0.507,138,3.275,145,0.993,146,0.993,148,0.914,149,1.519,157,1.14,179,0.956,180,2.102,181,0.889,185,1.584,188,1.104,194,0.775,195,2.63,220,0.771,225,1.32,268,0.858,279,0.679,284,2.459,299,1.827,300,1.707,304,1.117,306,2.742,326,1.337,342,0.775,345,2.459,370,1.688,371,1.827,377,1.217,398,1.487,405,1.487,407,0.775,424,0.83,425,1.031,431,1.756,432,1.756,444,2.597,445,2.944,461,1.117,468,1.487,469,1.217,478,1.621,481,1.117,482,1.337,491,3.201,492,1.117,494,2.913,497,1.217,506,1.727,511,1.117,520,1.621,535,3.302,549,0.889,550,1.503,551,0.956,553,0.956,554,0.889,555,1.503,556,1.031,557,1.031,558,1.031,559,1.031,561,1.217,631,3.952,638,1.688,769,1.688,778,4.397,849,1.337,866,1.337,867,1.487,892,4.651,927,4.17,929,4.292,935,2.889,953,3.275,960,3.28,996,4.589,1060,5.211,1061,3.874,1062,3.874,1063,3.874,1064,3.874,1065,3.874,1066,4.292,1067,3.874,1068,3.874,1069,3.135,1070,3.135,1071,3.135,1072,3.135,1073,3.135,1074,3.135,1075,3.135,1076,3.135,1077,1.994,1078,4.392,1079,1.994,1080,3.135,1081,4.392,1082,1.994,1083,3.135,1084,3.135,1085,1.994,1086,3.874,1087,1.994,1088,3.135,1089,1.994,1090,1.994,1091,1.994,1092,1.994,1093,1.994,1094,1.994,1095,1.994,1096,1.994,1097,1.994,1098,1.994,1099,1.994,1100,4.392,1101,3.874,1102,3.874,1103,1.994,1104,4.775,1105,5.07,1106,5.07,1107,4.775,1108,1.994,1109,1.994,1110,1.994,1111,1.994,1112,1.994,1113,1.994,1114,1.994,1115,1.994,1116,1.994,1117,3.135,1118,1.994,1119,1.994,1120,3.874,1121,1.994,1122,5.07,1123,1.994,1124,1.994,1125,1.994,1126,1.994,1127,1.994,1128,1.994,1129,1.994,1130,1.994,1131,1.994,1132,3.135,1133,4.392,1134,1.994,1135,1.994,1136,1.994,1137,1.994,1138,1.994,1139,1.994,1140,1.994,1141,1.994,1142,1.994,1143,1.994,1144,1.994,1145,1.994,1146,1.994,1147,1.994]],["title/components/LoadingComponent.html",[0,0.173,101,0.683]],["body/components/LoadingComponent.html",[0,0.279,1,0.734,2,0.98,3,0.216,4,0.184,5,0.841,6,0.898,7,0.841,8,0.841,9,0.184,13,0.248,14,0.026,17,1.122,18,1.348,19,0.841,20,1.623,21,1.623,22,0.841,24,0.841,26,1.35,28,1.122,30,0.184,31,0.674,35,0.62,36,0.591,39,0.464,42,0.421,44,0.387,45,0.246,50,0.351,51,0.288,52,0.425,54,0.387,56,0.841,57,1.122,58,0.841,59,1.348,60,0.841,61,0.375,62,0.841,63,0.734,64,0.621,65,1.122,66,1.348,67,0.786,68,0.822,69,1.348,70,0.734,71,0.841,72,0.734,73,0.841,74,1.122,75,0.734,76,1.351,77,0.841,78,0.786,79,0.734,80,0.841,81,0.734,82,0.841,83,0.786,84,0.734,85,0.786,86,0.73,87,0.734,88,0.734,89,0.591,90,0.841,91,0.734,92,0.734,93,0.841,94,0.841,95,0.734,96,0.841,97,0.734,98,0.841,99,0.841,100,0.734,101,1.288,102,0.841,103,0.734,104,0.786,105,0.841,106,0.734,107,0.841,108,0.734,109,0.786,110,0.786,111,0.841,112,0.018,113,0.018,157,1.773,268,0.888,377,2.228,406,1.519,409,2.611,415,1.519,506,1.66,508,2.837,509,2.174,517,2.631,530,3.027,531,2.974,541,3.348,549,1.629,550,1.751,551,1.751,553,1.751,554,1.629,555,2.337,556,2.837,558,2.52,559,1.888,565,2.045,566,2.045,570,2.52,571,2.228,631,3.678,866,2.447,868,3.092,869,4.646,882,3.268,976,2.723,1148,3.092,1149,5.488,1150,4.875,1151,5.488,1152,5.488,1153,3.651,1154,3.651,1155,3.651,1156,3.651,1157,3.651,1158,3.092,1159,3.651,1160,4.875,1161,4.875,1162,3.092,1163,4.875,1164,4.875,1165,3.651,1166,3.651,1167,3.651,1168,3.651,1169,4.875,1170,3.651,1171,3.651,1172,3.651,1173,3.092,1174,2.723,1175,3.651]],["title/components/PageNotFoundComponent.html",[0,0.173,103,0.683]],["body/components/PageNotFoundComponent.html",[0,0.275,1,0.715,2,0.962,3,0.21,4,0.179,5,0.819,6,0.875,7,0.819,8,0.819,9,0.179,13,0.241,14,0.026,15,0.575,17,1.103,18,1.466,19,0.819,20,1.619,21,1.619,22,0.819,24,1.103,25,2.8,26,1.179,28,1.103,42,0.522,43,1.48,44,0.377,48,0.766,50,0.342,51,0.283,52,0.414,56,0.819,57,1.103,58,0.819,59,1.334,60,0.819,61,0.369,62,0.819,63,0.715,64,0.614,65,1.103,66,1.334,67,0.766,68,0.811,69,1.334,70,0.715,71,0.819,72,0.715,73,0.819,74,1.103,75,0.715,76,1.341,77,0.819,78,0.766,79,0.715,80,0.819,81,0.715,82,0.819,83,0.766,84,0.715,85,0.766,86,0.717,87,0.715,88,0.715,89,0.575,90,0.819,91,0.715,92,0.715,93,0.819,94,0.819,95,0.715,96,0.819,97,0.715,98,0.819,99,0.819,100,0.715,101,0.715,102,0.819,103,1.252,104,1.393,105,0.819,106,0.715,107,0.819,108,0.715,109,0.766,110,0.766,111,0.819,112,0.017,113,0.017,120,2.596,157,1.742,375,3.304,382,1.383,388,1.839,406,2.41,407,2.421,409,2.41,410,1.992,411,2.476,414,2.416,415,2.253,417,1.48,418,1.48,419,2.136,422,1.48,423,2.136,424,1.993,426,1.839,506,2.234,509,2.416,511,1.992,517,2.296,520,1.839,530,2.476,549,2.136,550,2.596,551,2.296,553,2.596,554,2.136,555,2.899,562,2.384,568,3.386,865,3.011,866,2.384,867,2.652,872,3.572,874,3.572,875,2.652,876,2.384,877,3.011,879,3.011,882,3.211,885,3.011,896,4.906,898,4.055,975,4.055,1004,3.011,1162,4.055,1174,3.572,1176,3.011,1177,3.011,1178,3.011,1179,5.415,1180,4.79,1181,3.557,1182,3.557,1183,3.557,1184,4.055,1185,3.557,1186,3.557,1187,3.557,1188,3.557,1189,3.557,1190,3.557,1191,3.557,1192,3.557]],["title/components/PaginationComponent.html",[0,0.173,106,0.683]],["body/components/PaginationComponent.html",[0,0.264,1,0.662,2,0.913,3,0.194,4,0.166,5,0.758,6,0.81,7,0.758,8,0.758,9,0.166,13,0.308,14,0.026,15,0.908,16,1.451,17,1.356,18,1.402,19,0.758,20,1.609,21,1.609,22,0.758,24,1.047,26,1.118,28,1.047,30,0.166,33,1.28,35,0.774,36,0.842,39,0.774,42,0.508,44,0.349,45,0.33,50,0.316,51,0.268,52,0.383,54,0.645,56,0.758,57,1.047,58,0.758,59,1.292,60,0.758,61,0.4,62,0.758,63,0.662,64,0.595,65,1.047,66,1.292,67,0.709,68,0.779,69,1.292,70,0.662,71,0.758,72,0.662,73,0.758,74,1.047,75,0.662,76,1.31,77,0.758,78,0.709,79,0.662,80,0.758,81,0.662,82,0.758,83,0.709,84,0.662,85,0.709,86,0.681,87,0.662,88,0.662,89,0.533,90,0.758,91,0.662,92,0.662,93,0.758,94,0.758,95,0.662,96,0.758,97,0.662,98,0.758,99,0.758,100,0.662,101,0.662,102,0.758,103,0.662,104,1.389,105,0.758,106,1.337,107,0.758,108,0.662,109,0.709,110,0.709,111,0.758,112,0.016,113,0.016,118,3.175,126,3.488,134,0.735,139,2.773,145,0.617,146,0.617,148,0.735,149,1.474,168,2.773,179,1.579,181,1.469,182,1.844,185,0.923,188,0.617,196,1.911,225,1.122,278,4.751,431,2.545,432,2.545,439,2.027,441,2.179,449,2.69,461,1.844,462,2.179,478,2.35,506,1.773,1193,2.789,1194,4.751,1195,4.545,1196,6.863,1197,4.545,1198,5.204,1199,5.204,1200,5.204,1201,4.545,1202,4.545,1203,5.887,1204,5.204,1205,5.204,1206,5.204,1207,5.204,1208,3.293,1209,5.204,1210,3.293,1211,3.293,1212,3.293,1213,4.545,1214,3.293,1215,4.545,1216,3.293,1217,3.293,1218,3.293,1219,3.293]],["title/components/SwitchComponent.html",[0,0.173,108,0.683]],["body/components/SwitchComponent.html",[0,0.248,1,0.588,2,0.841,3,0.173,4,0.148,5,0.674,6,0.72,7,0.674,8,0.674,9,0.148,13,0.199,14,0.026,15,0.79,16,1.335,17,1.297,18,1.349,19,0.674,20,1.592,21,1.592,22,0.674,24,0.963,25,2.524,26,1.029,28,0.963,30,0.148,31,0.578,32,3.03,33,2.278,35,0.677,36,1.031,38,1.13,39,0.745,42,0.486,43,1.218,44,0.31,45,0.296,50,0.281,51,0.247,52,0.341,54,0.621,56,0.674,57,0.963,58,0.674,59,1.226,60,0.674,61,0.322,62,0.674,63,0.588,64,0.565,65,0.963,66,1.226,67,0.63,68,0.731,69,1.226,70,0.588,71,0.674,72,0.588,73,0.674,74,0.963,75,0.588,76,1.262,77,0.674,78,0.63,79,0.588,80,0.674,81,0.588,82,0.674,83,0.63,84,0.588,85,0.63,86,0.626,87,0.588,88,0.588,89,0.473,90,0.674,91,0.588,92,0.588,93,0.674,94,0.674,95,0.588,96,0.674,97,0.588,98,0.674,99,0.674,100,0.588,101,0.588,102,0.674,103,0.588,104,0.63,105,0.674,106,0.588,107,0.674,108,1.309,109,1.213,110,0.63,111,0.674,112,0.015,113,0.015,118,2.978,129,3.272,134,0.677,148,0.677,149,1.54,157,1.064,179,1.403,181,1.305,184,2.071,196,1.663,225,1.919,342,1.626,371,2.51,406,2.031,407,1.898,408,1.403,409,1.74,415,1.74,417,1.218,418,1.218,422,1.74,431,2.342,432,2.342,439,1.866,441,2.006,449,2.702,461,1.639,462,2.006,478,2.163,506,2.055,507,1.785,509,2.178,517,2.341,549,1.305,556,1.513,557,1.513,558,2.524,559,2.163,560,1.785,561,1.785,565,2.342,566,2.342,569,3.681,570,1.513,844,3.119,845,4.133,850,4.51,882,1.962,935,3.64,953,3.64,976,2.182,1158,2.478,1184,3.542,1194,4.51,1220,2.478,1221,4.183,1222,4.183,1223,4.183,1224,3.542,1225,4.882,1226,4.183,1227,4.882,1228,4.882,1229,4.183,1230,4.882,1231,4.882,1232,5.861,1233,5.635,1234,2.927,1235,2.927,1236,2.927,1237,2.927,1238,4.183,1239,5.327,1240,2.927,1241,4.183,1242,2.927,1243,2.927,1244,2.927,1245,2.927,1246,2.927,1247,2.927,1248,4.183,1249,2.927,1250,4.183,1251,2.927,1252,4.183,1253,4.183,1254,4.183,1255,4.882,1256,4.183,1257,4.183,1258,2.927,1259,2.927]],["title/interfaces/apiServiceShortStructure.html",[176,1.157,367,1.157]],["body/interfaces/apiServiceShortStructure.html",[3,0.294,4,0.251,9,0.251,13,0.454,14,0.026,30,0.251,31,0.819,35,0.753,36,0.805,38,1.228,45,0.343,51,0.294,61,0.504,64,0.628,112,0.021,113,0.021,176,2.019,268,1.119,279,2.232,367,1.694,368,2.571,371,2.466,1260,4.211]],["title/coverage.html",[1261,3.931]],["body/coverage.html",[0,0.36,1,0.834,9,0.209,10,3.513,11,3.094,12,3.513,14,0.026,45,0.209,63,0.834,64,0.652,67,0.893,68,0.874,70,0.834,72,0.834,75,0.834,76,1.324,78,0.893,79,0.834,81,0.834,83,0.893,84,0.834,85,0.893,86,0.621,87,0.834,88,0.834,91,0.834,92,0.834,95,0.834,97,0.834,100,0.834,101,0.834,103,0.834,106,0.834,108,0.834,112,0.019,113,0.019,114,3.513,115,3.094,116,3.753,176,1.413,207,1.646,208,3.094,210,3.952,211,3.513,212,3.753,225,1.413,284,2.323,288,2.145,304,2.323,306,2.145,345,2.323,346,3.513,347,3.914,367,2.214,369,3.513,372,3.513,383,3.513,384,3.094,385,3.952,428,3.914,429,3.513,430,3.513,466,2.531,470,3.094,506,1.805,574,3.513,575,3.513,587,2.781,609,3.094,627,3.513,628,3.513,639,2.781,662,3.094,682,3.513,685,3.513,698,3.513,700,2.781,728,3.513,742,3.513,744,3.513,796,3.513,797,2.781,824,3.513,839,2.781,840,3.513,841,3.513,842,3.513,843,3.513,886,3.513,887,3.513,907,3.513,927,2.781,928,3.513,931,3.513,932,3.513,933,3.513,977,3.513,996,3.094,1011,3.513,1012,2.781,1014,3.513,1015,3.513,1029,3.513,1030,3.513,1060,3.513,1148,3.513,1173,4.487,1174,5.316,1176,3.513,1177,3.513,1178,3.513,1193,3.513,1220,3.513,1260,3.513,1261,3.513,1262,4.149,1263,4.149,1264,4.149,1265,4.149,1266,3.513,1267,4.149,1268,3.513,1269,4.149,1270,5.299,1271,4.149,1272,5.299,1273,5.299,1274,5.839,1275,4.149,1276,4.149,1277,5.299,1278,6.356,1279,5.839,1280,5.299,1281,4.149,1282,4.149,1283,6.152,1284,4.149,1285,4.149,1286,4.149,1287,4.149,1288,4.149,1289,4.149,1290,4.149,1291,4.149,1292,4.149,1293,4.149,1294,4.149,1295,5.299,1296,4.149,1297,4.149,1298,5.299,1299,5.299,1300,4.149,1301,4.149,1302,5.299,1303,5.299,1304,4.149,1305,4.149,1306,4.149,1307,3.513]],["title/dependencies.html",[1308,2.399,1309,3.461]],["body/dependencies.html",[14,0.026,15,1.149,43,2.063,44,0.526,46,3.025,48,1.067,112,0.021,113,0.021,179,2.377,181,2.212,182,2.776,234,4.198,236,1.803,382,1.927,1307,4.198,1309,4.198,1310,4.958,1311,6.917,1312,4.958,1313,5.916,1314,5.009,1315,4.958,1316,4.958,1317,6.691,1318,4.958,1319,6.996,1320,4.958,1321,4.958,1322,4.958,1323,4.958,1324,4.958,1325,4.958,1326,4.958,1327,6.322,1328,6.322,1329,4.958,1330,4.958,1331,4.958,1332,4.958,1333,4.958,1334,4.958,1335,4.958,1336,4.958,1337,4.958,1338,4.958,1339,4.958]],["title/index.html",[30,0.143,1340,2.833,1341,2.833]],["body/index.html",[0,0.317,2,0.969,4,0.243,14,0.021,17,1.553,35,0.74,104,1.038,110,1.038,112,0.021,113,0.021,168,3.958,225,1.643,248,5.291,249,4.085,380,4.085,497,2.943,498,3.234,552,4.116,906,4.927,1010,4.085,1066,4.085,1314,4.085,1342,6.249,1343,4.824,1344,5.819,1345,6.641,1346,4.085,1347,4.824,1348,5.819,1349,6.249,1350,4.824,1351,6.641,1352,6.747,1353,4.824,1354,5.819,1355,4.824,1356,4.824,1357,5.819,1358,4.824,1359,4.824,1360,4.824,1361,4.824,1362,5.819,1363,4.824,1364,4.824,1365,4.824,1366,6.249,1367,4.824,1368,4.824,1369,4.824,1370,4.824,1371,4.824,1372,4.824,1373,4.824,1374,4.824,1375,4.824,1376,4.824,1377,4.824,1378,4.824,1379,4.824,1380,4.824,1381,4.824,1382,4.824,1383,5.819,1384,6.249,1385,4.824,1386,4.824,1387,4.824,1388,4.824,1389,4.824,1390,4.824,1391,6.249,1392,4.824,1393,4.824,1394,5.819,1395,4.824,1396,4.824,1397,4.824,1398,4.824,1399,4.824,1400,4.824,1401,4.824,1402,4.824,1403,4.824,1404,4.824,1405,4.824,1406,4.824,1407,4.824,1408,4.824,1409,4.824,1410,3.597,1411,4.824]],["title/modules.html",[1412,3.931]],["body/modules.html",[14,0.023,112,0.023,113,0.023,1412,4.736]],["title/overview.html",[1410,3.462]],["body/overview.html",[2,1.116,14,0.023,112,0.023,113,0.023,209,2.478,368,2.872,1410,4.142,1413,5.554,1414,5.554,1415,5.554]],["title/properties.html",[31,0.565,1308,2.399]],["body/properties.html",[14,0.024,31,0.77,112,0.023,113,0.023,1346,4.719,1416,5.574]],["title/miscellaneous/variables.html",[1417,2.399,1418,3.461]],["body/miscellaneous/variables.html",[14,0.026,30,0.272,35,0.685,36,0.871,45,0.272,112,0.022,113,0.022,184,2.414,1012,3.61,1224,4.561,1266,4.561,1268,5.258,1417,4.561,1418,4.561,1419,5.386,1420,5.386,1421,5.386,1422,5.386,1423,5.386,1424,5.386,1425,5.386,1426,5.386,1427,5.386,1428,5.386,1429,5.386,1430,5.386]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":506,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1416,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":875,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["0.15.0",{"_index":1339,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":1185,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["0.2s",{"_index":883,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["0.3125rem",{"_index":416,"title":{},"body":{"components/BackButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["0.3s",{"_index":423,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["0.5rem",{"_index":1005,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0.625rem",{"_index":412,"title":{},"body":{"components/BackButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["0/1",{"_index":1269,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1265,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":573,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{}}}],["003366",{"_index":884,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["004080",{"_index":567,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["0056a6",{"_index":508,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{}}}],["0056b3",{"_index":1192,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["007bff",{"_index":1189,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["1",{"_index":278,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"components/PaginationComponent.html":{}}}],["1.2",{"_index":569,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{},"components/SwitchComponent.html":{}}}],["1.25rem",{"_index":413,"title":{},"body":{"components/BackButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["1.2em",{"_index":1191,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["1.5",{"_index":524,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["1/1",{"_index":1294,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1174,"title":{},"body":{"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["100px",{"_index":1156,"title":{},"body":{"components/LoadingComponent.html":{}}}],["100vh",{"_index":1154,"title":{},"body":{"components/LoadingComponent.html":{}}}],["10px",{"_index":520,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["10rem",{"_index":1144,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["13px",{"_index":563,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["14/14",{"_index":1274,"title":{},"body":{"coverage.html":{}}}],["14/17",{"_index":1276,"title":{},"body":{"coverage.html":{}}}],["14px",{"_index":1255,"title":{},"body":{"components/SwitchComponent.html":{}}}],["15px",{"_index":568,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["16",{"_index":1209,"title":{},"body":{"components/PaginationComponent.html":{}}}],["16.8px",{"_index":1254,"title":{},"body":{"components/SwitchComponent.html":{}}}],["16px",{"_index":522,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["19.1.0",{"_index":1311,"title":{},"body":{"dependencies.html":{}}}],["19.1.3",{"_index":1347,"title":{},"body":{"index.html":{}}}],["19/19",{"_index":1284,"title":{},"body":{"coverage.html":{}}}],["1px",{"_index":868,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/LoadingComponent.html":{}}}],["1rem",{"_index":425,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{}}}],["1s",{"_index":1165,"title":{},"body":{"components/LoadingComponent.html":{}}}],["2",{"_index":526,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["2.3.0",{"_index":1337,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1270,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1305,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":571,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{}}}],["20px",{"_index":570,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["23",{"_index":1413,"title":{},"body":{"overview.html":{}}}],["24/24",{"_index":1290,"title":{},"body":{"coverage.html":{}}}],["24px",{"_index":507,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/SwitchComponent.html":{}}}],["25px",{"_index":1188,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["2em",{"_index":1187,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["2px",{"_index":873,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{}}}],["2rem",{"_index":518,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["3.10.1",{"_index":1334,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1272,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1301,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":246,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["300px",{"_index":975,"title":{},"body":{"components/FilterByInputComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["30px",{"_index":1190,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["32px",{"_index":1161,"title":{},"body":{"components/LoadingComponent.html":{}}}],["333",{"_index":1186,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["34/34",{"_index":1293,"title":{},"body":{"coverage.html":{}}}],["34px",{"_index":1248,"title":{},"body":{"components/SwitchComponent.html":{}}}],["36px",{"_index":880,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["3px",{"_index":1256,"title":{},"body":{"components/SwitchComponent.html":{}}}],["4.0.2",{"_index":1325,"title":{},"body":{"dependencies.html":{}}}],["4.21.0",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["4.22.0",{"_index":1328,"title":{},"body":{"dependencies.html":{}}}],["4.24.0",{"_index":1332,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1278,"title":{},"body":{"coverage.html":{}}}],["40.8px",{"_index":1247,"title":{},"body":{"components/SwitchComponent.html":{}}}],["400",{"_index":893,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["400px",{"_index":877,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["404",{"_index":896,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/PageNotFoundComponent.html":{}}}],["408",{"_index":899,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["409",{"_index":496,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["40px",{"_index":1183,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["42",{"_index":1300,"title":{},"body":{"coverage.html":{}}}],["45/45",{"_index":1287,"title":{},"body":{"coverage.html":{}}}],["46px",{"_index":1157,"title":{},"body":{"components/LoadingComponent.html":{}}}],["4caf50",{"_index":1258,"title":{},"body":{"components/SwitchComponent.html":{}}}],["4px",{"_index":1184,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["4rem",{"_index":1002,"title":{},"body":{"components/HeaderComponent.html":{}}}],["4s",{"_index":1252,"title":{},"body":{"components/SwitchComponent.html":{}}}],["5/5",{"_index":1295,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":976,"title":{},"body":{"components/FilterByInputComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["500",{"_index":900,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["5000",{"_index":247,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"components/EntityDialogComponent.html":{}}}],["502",{"_index":901,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["503",{"_index":902,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["504",{"_index":903,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["50px",{"_index":878,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["555",{"_index":547,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["5px",{"_index":564,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["6",{"_index":1415,"title":{},"body":{"overview.html":{}}}],["6/6",{"_index":1280,"title":{},"body":{"coverage.html":{}}}],["65",{"_index":510,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["66",{"_index":1304,"title":{},"body":{"coverage.html":{}}}],["666",{"_index":521,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/IconTrashComponent.html":{}}}],["7.8.0",{"_index":1335,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1277,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":1299,"title":{},"body":{"coverage.html":{}}}],["768px",{"_index":1008,"title":{},"body":{"components/HeaderComponent.html":{}}}],["7px",{"_index":562,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["8",{"_index":1414,"title":{},"body":{"overview.html":{}}}],["8.0.7",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["8/10",{"_index":1273,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":1279,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":1297,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1173,"title":{},"body":{"components/LoadingComponent.html":{},"coverage.html":{}}}],["81",{"_index":1302,"title":{},"body":{"coverage.html":{}}}],["82",{"_index":1275,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1298,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":1296,"title":{},"body":{"coverage.html":{}}}],["888",{"_index":545,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["8px",{"_index":541,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/LoadingComponent.html":{}}}],["9",{"_index":955,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["9/11",{"_index":1303,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1271,"title":{},"body":{"coverage.html":{}}}],["9]/g",{"_index":204,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["a.click",{"_index":924,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["a.download",{"_index":922,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["a.href",{"_index":921,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["absolute",{"_index":559,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["accessors",{"_index":139,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/PaginationComponent.html":{}}}],["action",{"_index":730,"title":{},"body":{"injectables/EndpointService.html":{}}}],["actionname",{"_index":732,"title":{},"body":{"injectables/EndpointService.html":{}}}],["actions",{"_index":548,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["activatedroute",{"_index":852,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["actual_component",{"_index":111,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["additional",{"_index":1402,"title":{},"body":{"index.html":{}}}],["addservice",{"_index":261,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["alert",{"_index":22,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["alertdeletecomponent",{"_index":1,"title":{"components/AlertDeleteComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["alerts",{"_index":299,"title":{},"body":{"injectables/ApiService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["alertservice",{"_index":889,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["align",{"_index":553,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["allowedchars",{"_index":969,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["allowedchars.test(inputchar",{"_index":970,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["alternate",{"_index":1169,"title":{},"body":{"components/LoadingComponent.html":{}}}],["angular",{"_index":168,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/BackButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/PaginationComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":1310,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":43,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":322,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["angular/compiler",{"_index":1312,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":44,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":179,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1313,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":1163,"title":{},"body":{"components/LoadingComponent.html":{}}}],["api",{"_index":64,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{}}}],["api'},{'name",{"_index":77,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["api.component.css",{"_index":472,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.css,../../styles/card.css,../../styles/button.css,../../styles/icon.css",{"_index":434,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.html",{"_index":435,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts",{"_index":430,"title":{},"body":{"components/CardApiComponent.html":{},"coverage.html":{}}}],["api.component.ts:117",{"_index":453,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:141",{"_index":455,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:191",{"_index":451,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:65",{"_index":448,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:73",{"_index":450,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:75",{"_index":460,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:76",{"_index":459,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:84",{"_index":458,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:87",{"_index":446,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api/card",{"_index":429,"title":{},"body":{"components/CardApiComponent.html":{},"coverage.html":{}}}],["apideleted",{"_index":442,"title":{},"body":{"components/CardApiComponent.html":{}}}],["apidialogcomponent",{"_index":63,"title":{"components/ApiDialogComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["apieasier",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["apiendpointlistcomponent",{"_index":67,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["apihubserviceservice",{"_index":208,"title":{"injectables/ApiHubServiceService.html":{}},"body":{"injectables/ApiHubServiceService.html":{},"coverage.html":{}}}],["apiinfo",{"_index":440,"title":{},"body":{"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/IconTrashComponent.html":{}}}],["apiinfo.description",{"_index":504,"title":{},"body":{"components/CardApiComponent.html":{}}}],["apiinfo.name",{"_index":503,"title":{},"body":{"components/CardApiComponent.html":{}}}],["apilist",{"_index":255,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["apilistsubject",{"_index":215,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["apiname",{"_index":582,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["apiservice",{"_index":284,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["apiservice.name",{"_index":273,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["apiservicename",{"_index":709,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["apiservicerepository",{"_index":447,"title":{},"body":{"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["apiservicerepositoryservice",{"_index":345,"title":{"injectables/ApiServiceRepositoryService.html":{}},"body":{"injectables/ApiServiceRepositoryService.html":{},"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["apiserviceshortstructure",{"_index":176,"title":{"interfaces/apiServiceShortStructure.html":{}},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"injectables/EntityService.html":{},"components/ExportApiButtonComponent.html":{},"components/IconTrashComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{}}}],["apiservicestructure",{"_index":306,"title":{"interfaces/ApiServiceStructure.html":{}},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["app",{"_index":21,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["app.component.css",{"_index":378,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":376,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":70,"title":{"components/AppComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1268,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appearance",{"_index":342,"title":{},"body":{"injectables/ApiService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["application",{"_index":1357,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":918,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["applicationconfig",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arguments",{"_index":753,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["artifacts",{"_index":1376,"title":{},"body":{"index.html":{}}}],["assets/dora.png",{"_index":1152,"title":{},"body":{"components/LoadingComponent.html":{}}}],["auto",{"_index":528,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["autoclose",{"_index":793,"title":{},"body":{"components/EntityDialogComponent.html":{},"components/IconTrashComponent.html":{}}}],["automatically",{"_index":1358,"title":{},"body":{"index.html":{}}}],["available",{"_index":1010,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["back",{"_index":73,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["backbuttoncomponent",{"_index":72,"title":{"components/BackButtonComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["background",{"_index":406,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["basedomain",{"_index":401,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["baseurl",{"_index":216,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["behaviorsubject",{"_index":214,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["between",{"_index":1001,"title":{},"body":{"components/HeaderComponent.html":{}}}],["blob",{"_index":916,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["blob([jsonstring",{"_index":917,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["block",{"_index":561,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["body",{"_index":1181,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["bold",{"_index":421,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["boolean",{"_index":38,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["border",{"_index":409,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["bottom",{"_index":566,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["box",{"_index":530,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["break",{"_index":534,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["browser",{"_index":1314,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["build",{"_index":248,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"index.html":{}}}],["buildthis",{"_index":1373,"title":{},"body":{"index.html":{}}}],["button",{"_index":388,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["button'},{'name",{"_index":74,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["button.component",{"_index":471,"title":{},"body":{"components/CardApiComponent.html":{},"components/HeaderComponent.html":{}}}],["button.component.css",{"_index":389,"title":{},"body":{"components/BackButtonComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["button.component.css,../../styles/button.css",{"_index":908,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["button.component.html",{"_index":390,"title":{},"body":{"components/BackButtonComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["button.component.ts",{"_index":385,"title":{},"body":{"components/BackButtonComponent.html":{},"components/ExportApiButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:24",{"_index":393,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["button.component.ts:32",{"_index":910,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["button.component.ts:47",{"_index":394,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["button.component.ts:51",{"_index":911,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["button/back",{"_index":384,"title":{},"body":{"components/BackButtonComponent.html":{},"components/HeaderComponent.html":{},"coverage.html":{}}}],["button/export",{"_index":470,"title":{},"body":{"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{},"coverage.html":{}}}],["button:hover",{"_index":426,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["button[tuiiconbutton",{"_index":1146,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["buttonclick",{"_index":985,"title":{},"body":{"components/HeaderComponent.html":{}}}],["buttontext",{"_index":982,"title":{},"body":{"components/HeaderComponent.html":{}}}],["calc(1.5em",{"_index":525,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["card",{"_index":76,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["cardapicomponent",{"_index":75,"title":{"components/CardApiComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["cardapilistcomponent",{"_index":78,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["cardendpointcomponent",{"_index":79,"title":{"components/CardEndpointComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["cardentitycomponent",{"_index":81,"title":{"components/CardEntityComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["case",{"_index":892,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/ImportDialogComponent.html":{}}}],["catch",{"_index":405,"title":{},"body":{"components/BackButtonComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["catch(err",{"_index":251,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["catcherror",{"_index":324,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["catcherror((error",{"_index":1028,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["cc",{"_index":1182,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["cd",{"_index":444,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ImportDialogComponent.html":{}}}],["center",{"_index":555,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["changedetection",{"_index":431,"title":{},"body":{"components/CardApiComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["changedetectionstrategy",{"_index":461,"title":{},"body":{"components/CardApiComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":432,"title":{},"body":{"components/CardApiComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["changedetectorref",{"_index":445,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ImportDialogComponent.html":{}}}],["charts",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["choose",{"_index":1398,"title":{},"body":{"index.html":{}}}],["chrome",{"_index":537,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["class",{"_index":52,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["cleanedvalue",{"_index":200,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["cli",{"_index":1345,"title":{},"body":{"index.html":{}}}],["click",{"_index":981,"title":{},"body":{"components/HeaderComponent.html":{}}}],["closeable",{"_index":994,"title":{},"body":{"components/HeaderComponent.html":{}}}],["closed",{"_index":500,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["code",{"_index":906,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["color",{"_index":407,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["column",{"_index":867,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["come",{"_index":1396,"title":{},"body":{"index.html":{}}}],["command",{"_index":1391,"title":{},"body":{"index.html":{}}}],["commerce",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["commonmodule",{"_index":25,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["compile",{"_index":1374,"title":{},"body":{"index.html":{}}}],["complete",{"_index":498,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"index.html":{}}}],["component",{"_index":0,"title":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":60,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"index.html":{},"overview.html":{}}}],["connecting",{"_index":253,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["console.error",{"_index":482,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["console.error('error",{"_index":252,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["console.error(message",{"_index":677,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["console.info('dialog",{"_index":499,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["console.info(`dialog",{"_index":487,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{}}}],["console.log",{"_index":478,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["console.log('api",{"_index":490,"title":{},"body":{"components/CardApiComponent.html":{}}}],["console.log('connected",{"_index":250,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["console.log(apilist",{"_index":260,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["console.log(currentlist",{"_index":267,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["console.log(error",{"_index":926,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["console.warn",{"_index":1137,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["const",{"_index":195,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"components/BackButtonComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["constructor",{"_index":220,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["constructor(alerts",{"_index":1037,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["constructor(apiservice",{"_index":348,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["constructor(apiservicerepository",{"_index":443,"title":{},"body":{"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["constructor(cd",{"_index":638,"title":{},"body":{"components/CardEntityComponent.html":{},"components/ImportDialogComponent.html":{}}}],["constructor(endpointrepositoryservice",{"_index":586,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["constructor(endpointservice",{"_index":704,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["constructor(entityservice",{"_index":804,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["constructor(errorhandler",{"_index":1017,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["constructor(http",{"_index":297,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["constructor(location",{"_index":392,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["constructor(private",{"_index":359,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["constructor(route",{"_index":851,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["constructor(router",{"_index":888,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["container",{"_index":865,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["content",{"_index":157,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["context",{"_index":34,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["control",{"_index":960,"title":{},"body":{"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{}}}],["control.value",{"_index":962,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["controlname",{"_index":940,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["coverage",{"_index":1261,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createapientity",{"_index":798,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["createapientity(apiservicename",{"_index":805,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["createapiservice",{"_index":289,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["createapiservice(service",{"_index":302,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["createendpoint",{"_index":701,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["createendpoint(apiservicename",{"_index":706,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["createfullapiservice",{"_index":290,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["createfullapiservice(service",{"_index":305,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["currentfiles",{"_index":1139,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["currentlist",{"_index":263,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["currentlist.findindex((apiservice",{"_index":272,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["currentlist.push(api",{"_index":265,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["currentlist.splice(index",{"_index":277,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["currentlist[index",{"_index":274,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["currentpage",{"_index":1203,"title":{},"body":{"components/PaginationComponent.html":{}}}],["currenturl",{"_index":396,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["cursor",{"_index":417,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["d9534f",{"_index":881,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["data",{"_index":141,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["data.name}.json",{"_index":923,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["datawithoutname",{"_index":913,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["decorators",{"_index":162,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["default",{"_index":35,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":39,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["delete",{"_index":23,"title":{},"body":{"components/AlertDeleteComponent.html":{},"injectables/ApiService.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{}}}],["delete'},{'name",{"_index":62,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["delete(`${this.baseurl}/apientity/${apiservicename}/${entityname",{"_index":836,"title":{},"body":{"injectables/EntityService.html":{}}}],["delete.component",{"_index":1047,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["delete.component.css",{"_index":27,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["delete.component.html",{"_index":29,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["delete.component.ts",{"_index":12,"title":{},"body":{"components/AlertDeleteComponent.html":{},"coverage.html":{}}}],["delete.component.ts:38",{"_index":40,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["delete/alert",{"_index":11,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/IconTrashComponent.html":{},"coverage.html":{}}}],["deleteapientity",{"_index":799,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["deleteapientity(apiservicename",{"_index":807,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["deleteapientity(this.apiname",{"_index":671,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["deleteapiservice",{"_index":291,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["deleteapiservice(servicename",{"_index":308,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["deleteendpoint",{"_index":623,"title":{},"body":{"components/CardEndpointComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["deleteendpoint(apiservicename",{"_index":710,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["dependencies",{"_index":1309,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["descriptioninputref",{"_index":130,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["detailed",{"_index":1407,"title":{},"body":{"index.html":{}}}],["development",{"_index":1348,"title":{},"body":{"index.html":{}}}],["di",{"_index":169,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog",{"_index":117,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{}}}],["dialog'},{'name",{"_index":66,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["dialog.component",{"_index":465,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/HeaderComponent.html":{}}}],["dialog.component.css",{"_index":127,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["dialog.component.html",{"_index":128,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["dialog.component.ts",{"_index":116,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:100",{"_index":771,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:102",{"_index":173,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:108",{"_index":769,"title":{},"body":{"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:112",{"_index":175,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:116",{"_index":688,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:117",{"_index":774,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:125",{"_index":159,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:127",{"_index":775,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:129",{"_index":687,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:134",{"_index":1089,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:138",{"_index":777,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:143",{"_index":155,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:150",{"_index":1079,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:154",{"_index":780,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:156",{"_index":152,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:172",{"_index":1077,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:173",{"_index":144,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:178",{"_index":756,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:193",{"_index":1082,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:194",{"_index":761,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:213",{"_index":1087,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:216",{"_index":764,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:227",{"_index":766,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:246",{"_index":763,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:260",{"_index":1085,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:263",{"_index":762,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:38",{"_index":1090,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:46",{"_index":1091,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:51",{"_index":691,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:55",{"_index":1092,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:56",{"_index":171,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:59",{"_index":693,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:63",{"_index":1093,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:66",{"_index":772,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:67",{"_index":690,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:68",{"_index":165,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:71",{"_index":1075,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:75",{"_index":773,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:76",{"_index":694,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:79",{"_index":167,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:83",{"_index":770,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:86",{"_index":695,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:90",{"_index":161,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:91",{"_index":768,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:98",{"_index":689,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog/api",{"_index":115,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"coverage.html":{}}}],["dialog/endpoint",{"_index":609,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/EndpointDialogComponent.html":{},"coverage.html":{}}}],["dialog/entity",{"_index":662,"title":{},"body":{"components/CardEntityComponent.html":{},"components/EntityDialogComponent.html":{},"coverage.html":{}}}],["dialog/import",{"_index":996,"title":{},"body":{"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["dialogs",{"_index":132,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["direction",{"_index":866,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["directive",{"_index":58,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["directives",{"_index":110,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"index.html":{}}}],["directory",{"_index":1378,"title":{},"body":{"index.html":{}}}],["dismissible",{"_index":193,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/HeaderComponent.html":{}}}],["display",{"_index":549,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["display'},{'name",{"_index":90,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["display.component.css",{"_index":846,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display.component.html",{"_index":847,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display.component.ts",{"_index":843,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"coverage.html":{}}}],["display.component.ts:30",{"_index":856,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display.component.ts:37",{"_index":853,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display.component.ts:52",{"_index":855,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display.component.ts:65",{"_index":854,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display/error",{"_index":842,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"coverage.html":{}}}],["dist",{"_index":1377,"title":{},"body":{"index.html":{}}}],["doc",{"_index":1321,"title":{},"body":{"dependencies.html":{}}}],["document.createelement('a",{"_index":920,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["document:keydown",{"_index":752,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["document:keydown(event",{"_index":754,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["documentation",{"_index":1262,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["dynamic",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1113,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["e.target?.result",{"_index":1115,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["e0e0e0",{"_index":870,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["e2e",{"_index":1393,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":1395,"title":{},"body":{"index.html":{}}}],["e6e6e6",{"_index":427,"title":{},"body":{"components/BackButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["ease",{"_index":1167,"title":{},"body":{"components/LoadingComponent.html":{}}}],["edge",{"_index":539,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["edit",{"_index":65,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["element",{"_index":57,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["elementref",{"_index":143,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["ellipsis",{"_index":513,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["emitted",{"_index":488,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{}}}],["end",{"_index":552,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"index.html":{}}}],["endpoint",{"_index":68,"title":{"interfaces/Endpoint.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["endpoint'},{'name",{"_index":80,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["endpoint.component.css",{"_index":611,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.css,../../styles/card.css,../../styles/icon.css",{"_index":576,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.html",{"_index":577,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts",{"_index":575,"title":{},"body":{"components/CardEndpointComponent.html":{},"coverage.html":{}}}],["endpoint.component.ts:116",{"_index":598,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:144",{"_index":599,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:158",{"_index":601,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:170",{"_index":603,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:192",{"_index":594,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:210",{"_index":596,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:235",{"_index":597,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:54",{"_index":591,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:62",{"_index":590,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:71",{"_index":589,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:79",{"_index":592,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:87",{"_index":605,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:90",{"_index":588,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint/card",{"_index":574,"title":{},"body":{"components/CardEndpointComponent.html":{},"coverage.html":{}}}],["endpointcardlistcomponent",{"_index":83,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["endpointdeleted",{"_index":585,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpointdialogcomponent",{"_index":84,"title":{"components/EndpointDialogComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["endpointinfo",{"_index":583,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/IconTrashComponent.html":{}}}],["endpointinfo.route",{"_index":625,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpointinfo.type",{"_index":626,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpointname",{"_index":711,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["endpointrepositoryservice",{"_index":587,"title":{"injectables/EndpointRepositoryService.html":{}},"body":{"components/CardEndpointComponent.html":{},"injectables/EndpointRepositoryService.html":{},"coverage.html":{}}}],["endpoints",{"_index":699,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{}}}],["endpointservice",{"_index":700,"title":{"injectables/EndpointService.html":{}},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"coverage.html":{}}}],["enter",{"_index":757,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["entities",{"_index":370,"title":{},"body":{"interfaces/ApiServiceStructure.html":{},"components/ImportDialogComponent.html":{}}}],["entity",{"_index":86,"title":{"interfaces/Entity.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["entity'},{'name",{"_index":82,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["entity.component.css",{"_index":664,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.css,../../styles/card.css,../../styles/button.css,../../styles/icon.css",{"_index":629,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.html",{"_index":630,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts",{"_index":628,"title":{},"body":{"components/CardEntityComponent.html":{},"coverage.html":{}}}],["entity.component.ts:111",{"_index":655,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:131",{"_index":656,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:147",{"_index":654,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:164",{"_index":645,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:181",{"_index":648,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:197",{"_index":650,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:207",{"_index":646,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:220",{"_index":652,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:53",{"_index":642,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:62",{"_index":641,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:70",{"_index":643,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:72",{"_index":660,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:73",{"_index":661,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:74",{"_index":659,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:82",{"_index":658,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:85",{"_index":640,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity/card",{"_index":627,"title":{},"body":{"components/CardEntityComponent.html":{},"coverage.html":{}}}],["entitycardlistcomponent",{"_index":85,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["entitydeleted",{"_index":637,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entitydialogcomponent",{"_index":87,"title":{"components/EntityDialogComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["entityinfo",{"_index":584,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{}}}],["entityinfo.name",{"_index":680,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entityname",{"_index":707,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["entityrepositoryservice",{"_index":639,"title":{"injectables/EntityRepositoryService.html":{}},"body":{"components/CardEntityComponent.html":{},"injectables/EntityRepositoryService.html":{},"coverage.html":{}}}],["entityservice",{"_index":797,"title":{"injectables/EntityService.html":{}},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"coverage.html":{}}}],["entityshort",{"_index":839,"title":{"interfaces/EntityShort.html":{}},"body":{"interfaces/EntityShort.html":{},"components/IconTrashComponent.html":{},"coverage.html":{}}}],["err",{"_index":254,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["error",{"_index":89,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["error.interceptor.ts",{"_index":1015,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["error.interceptor.ts:24",{"_index":1018,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error.interceptor.ts:39",{"_index":1022,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error.status",{"_index":495,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["errorcode",{"_index":848,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["errordisplaycomponent",{"_index":88,"title":{"components/ErrorDisplayComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["errorhandler",{"_index":298,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["errorhandlerservice",{"_index":288,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["errormessage",{"_index":849,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["errormessage}`).subscribe",{"_index":895,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["escape",{"_index":758,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["event",{"_index":151,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["event.ctrlkey",{"_index":971,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["event.key",{"_index":789,"title":{},"body":{"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["event.metakey",{"_index":972,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["event.preventdefault",{"_index":189,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["event.target",{"_index":197,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["eventcoalescing",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":449,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["example",{"_index":17,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"index.html":{}}}],["execute",{"_index":1385,"title":{},"body":{"index.html":{}}}],["export",{"_index":51,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["exportapibuttoncomponent",{"_index":91,"title":{"components/ExportApiButtonComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["f.file.name",{"_index":1100,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["f.status",{"_index":1106,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["f1f1f1",{"_index":543,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["f44336",{"_index":1251,"title":{},"body":{"components/SwitchComponent.html":{}}}],["f9f9f9",{"_index":871,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["false",{"_index":371,"title":{},"body":{"interfaces/ApiServiceStructure.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"interfaces/EntityShort.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["fff",{"_index":1162,"title":{},"body":{"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{}}}],["file.errormessage",{"_index":1133,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["file.name",{"_index":1101,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["file.status",{"_index":1122,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["filename",{"_index":1081,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["filename.replace",{"_index":1123,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["filereader",{"_index":1111,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["files",{"_index":1066,"title":{},"body":{"components/ImportDialogComponent.html":{},"index.html":{}}}],["files.filter(file",{"_index":1098,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["files.foreach(file",{"_index":1109,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["filestatus",{"_index":927,"title":{"interfaces/FileStatus.html":{}},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["filestatus.status",{"_index":1121,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["filetoremove",{"_index":1086,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["filetoremove.file",{"_index":1142,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["fill",{"_index":1009,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filter",{"_index":93,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["filterbyinputcomponent",{"_index":92,"title":{"components/FilterByInputComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["filtereditems",{"_index":942,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["flex",{"_index":550,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["following",{"_index":1390,"title":{},"body":{"index.html":{}}}],["font",{"_index":419,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["fontawesome",{"_index":1329,"title":{},"body":{"dependencies.html":{}}}],["form",{"_index":938,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["formcontrol",{"_index":953,"title":{},"body":{"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["formcontrol(false",{"_index":1238,"title":{},"body":{"components/SwitchComponent.html":{}}}],["formcontrol(true",{"_index":1241,"title":{},"body":{"components/SwitchComponent.html":{}}}],["formgroup",{"_index":951,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["formsmodule",{"_index":118,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["found",{"_index":898,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/PageNotFoundComponent.html":{}}}],["found'},{'name",{"_index":105,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["found.component.css",{"_index":1179,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.html",{"_index":1180,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1178,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found/page",{"_index":1177,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["framework",{"_index":1397,"title":{},"body":{"index.html":{}}}],["gap",{"_index":1145,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["generate",{"_index":1366,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1343,"title":{},"body":{"index.html":{}}}],["get(`${this.baseurl}/apientity/${apiservicename",{"_index":832,"title":{},"body":{"injectables/EntityService.html":{}}}],["get(`${this.baseurl}/apientity/${apiservicename}/${entityname",{"_index":833,"title":{},"body":{"injectables/EntityService.html":{}}}],["get(`${this.baseurl}/apiservice",{"_index":329,"title":{},"body":{"injectables/ApiService.html":{}}}],["get(`${this.baseurl}/apiservices",{"_index":838,"title":{},"body":{"injectables/EntityService.html":{}}}],["getallapiservices",{"_index":825,"title":{},"body":{"injectables/EntityService.html":{}}}],["getapientity",{"_index":800,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["getapientity(apiservicename",{"_index":809,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["getapientitylist",{"_index":801,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["getapientitylist(apiservicename",{"_index":811,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["getapilist",{"_index":292,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["getapistructurelist",{"_index":293,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["getapistructurelist(name",{"_index":312,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["getbyindex",{"_index":692,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["getdata",{"_index":174,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["getendpointbyname",{"_index":702,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["getendpointbyname(apiservicename",{"_index":713,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["getendpointlist",{"_index":703,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["getendpointlist(apiservicename",{"_index":715,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["getfilestatus",{"_index":1069,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["getfilestatus(file",{"_index":1076,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["getfilestatustext",{"_index":1070,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["getfilestatustext(file",{"_index":1078,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["getfiltereditems",{"_index":957,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["gethasvalue",{"_index":172,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["getstructure",{"_index":776,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["getting",{"_index":1340,"title":{"index.html":{}},"body":{}}],["gettotalpages",{"_index":1216,"title":{},"body":{"components/PaginationComponent.html":{}}}],["go",{"_index":864,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["goback",{"_index":391,"title":{},"body":{"components/BackButtonComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["gotopage",{"_index":1202,"title":{},"body":{"components/PaginationComponent.html":{}}}],["gotopage(2",{"_index":1215,"title":{},"body":{"components/PaginationComponent.html":{}}}],["gotopage(page",{"_index":1213,"title":{},"body":{"components/PaginationComponent.html":{}}}],["h1",{"_index":879,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["h3",{"_index":505,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["handleeditdialogdata",{"_index":633,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleeditdialogdata(data",{"_index":644,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleendpointupdate",{"_index":578,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["handleendpointupdate(response",{"_index":593,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["handleendpointupdateerror",{"_index":579,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["handleendpointupdateerror(error",{"_index":595,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["handleentitydeletion",{"_index":634,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleentityupdate",{"_index":635,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleentityupdate(response",{"_index":647,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleentityupdateerror",{"_index":636,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleentityupdateerror(error",{"_index":649,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleerror",{"_index":294,"title":{},"body":{"injectables/ApiService.html":{},"components/CardEntityComponent.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{}}}],["handleerror(error",{"_index":314,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{}}}],["handleerror(message",{"_index":651,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handlekeyboardevent",{"_index":748,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["handlekeyboardevent(event",{"_index":759,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["handler.service",{"_index":327,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["handler.service.ts",{"_index":887,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:20",{"_index":890,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:30",{"_index":891,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handlesubmit",{"_index":749,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["hasfiles",{"_index":1067,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["hasvalue",{"_index":140,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["header",{"_index":978,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":96,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["header.component.css",{"_index":979,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":980,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":95,"title":{"components/HeaderComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["height",{"_index":517,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["helpbuilding",{"_index":1372,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":516,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["hostlistener",{"_index":781,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["hostlistener('document:keydown",{"_index":760,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["hostlisteners",{"_index":751,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["html",{"_index":18,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["htmlinputelement",{"_index":198,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["http",{"_index":287,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["http://localhost:4200",{"_index":1356,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":286,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["httperrorinterceptor",{"_index":1012,"title":{"interceptors/HttpErrorInterceptor.html":{}},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httperrorresponse",{"_index":315,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["httpevent",{"_index":1024,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["httphandler",{"_index":1021,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["httpinterceptor",{"_index":1025,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["httprequest",{"_index":1020,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["https://www.titan2.ru/images/temp/logo__ru.jpg",{"_index":988,"title":{},"body":{"components/HeaderComponent.html":{}}}],["hub",{"_index":211,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"coverage.html":{}}}],["hubconnection",{"_index":217,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["i:hover",{"_index":572,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{}}}],["icon",{"_index":98,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["icontrashcomponent",{"_index":97,"title":{"components/IconTrashComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["identifier",{"_index":1263,"title":{},"body":{"coverage.html":{}}}],["if(buttontext",{"_index":1000,"title":{},"body":{"components/HeaderComponent.html":{}}}],["if(entityinfo.structure",{"_index":681,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["if(isapipage",{"_index":999,"title":{},"body":{"components/HeaderComponent.html":{}}}],["img",{"_index":1004,"title":{},"body":{"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["implements",{"_index":844,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/SwitchComponent.html":{}}}],["import",{"_index":42,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["importdialogcomponent",{"_index":100,"title":{"components/ImportDialogComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["imports",{"_index":24,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["includes",{"_index":1363,"title":{},"body":{"index.html":{}}}],["including",{"_index":1406,"title":{},"body":{"index.html":{}}}],["index",{"_index":30,"title":{"index.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":1166,"title":{},"body":{"components/LoadingComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["information",{"_index":1405,"title":{},"body":{"index.html":{}}}],["initialdata",{"_index":224,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["initializedata",{"_index":219,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["initializedata(initialdata",{"_index":222,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["inject",{"_index":177,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["inject(tuialertservice",{"_index":767,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["inject(tuidialogservice",{"_index":166,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["injectable",{"_index":207,"title":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{}},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["injectables",{"_index":209,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"overview.html":{}}}],["injectcontext",{"_index":37,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["inline",{"_index":1246,"title":{},"body":{"components/SwitchComponent.html":{}}}],["input",{"_index":196,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["input'},{'name",{"_index":94,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["input.component.css",{"_index":936,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.html",{"_index":937,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts",{"_index":933,"title":{},"body":{"components/FilterByInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:122",{"_index":950,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:44",{"_index":947,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:53",{"_index":945,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:62",{"_index":946,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:70",{"_index":948,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:78",{"_index":956,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:89",{"_index":958,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:97",{"_index":943,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.value",{"_index":199,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["input/filter",{"_index":932,"title":{},"body":{"components/FilterByInputComponent.html":{},"coverage.html":{}}}],["input:checked",{"_index":1257,"title":{},"body":{"components/SwitchComponent.html":{}}}],["inputchar",{"_index":968,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["inputs",{"_index":439,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["intercept",{"_index":1016,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["intercept(req",{"_index":1019,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["interceptor",{"_index":1011,"title":{"interceptors/HttpErrorInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":1013,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["interface",{"_index":367,"title":{"interfaces/ApiServiceStructure.html":{},"interfaces/Endpoint.html":{},"interfaces/Entity.html":{},"interfaces/EntityShort.html":{},"interfaces/FileStatus.html":{},"interfaces/apiServiceShortStructure.html":{}},"body":{"interfaces/ApiServiceStructure.html":{},"interfaces/Endpoint.html":{},"interfaces/Entity.html":{},"interfaces/EntityShort.html":{},"interfaces/FileStatus.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{}}}],["interfaces",{"_index":368,"title":{},"body":{"interfaces/ApiServiceStructure.html":{},"interfaces/Endpoint.html":{},"interfaces/Entity.html":{},"interfaces/EntityShort.html":{},"interfaces/FileStatus.html":{},"interfaces/apiServiceShortStructure.html":{},"overview.html":{}}}],["interfaces/apiserviceshortstructure",{"_index":183,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"injectables/EntityService.html":{},"components/ExportApiButtonComponent.html":{},"components/IconTrashComponent.html":{}}}],["interfaces/apiservicestructure",{"_index":326,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{}}}],["interfaces/endpoint",{"_index":606,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/IconTrashComponent.html":{}}}],["interfaces/entity",{"_index":607,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["interfaces/entityshort",{"_index":1048,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["interfaces/filestatus",{"_index":1095,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["invalid",{"_index":1239,"title":{},"body":{"components/SwitchComponent.html":{}}}],["invalidfalse",{"_index":1230,"title":{},"body":{"components/SwitchComponent.html":{}}}],["invalidtrue",{"_index":1231,"title":{},"body":{"components/SwitchComponent.html":{}}}],["isactive",{"_index":279,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"interfaces/Endpoint.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ImportDialogComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["isapipage",{"_index":983,"title":{},"body":{"components/HeaderComponent.html":{}}}],["iscansubmit",{"_index":746,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["isfeatureenabled",{"_index":1221,"title":{},"body":{"components/SwitchComponent.html":{}}}],["item",{"_index":1035,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["item.includes(value",{"_index":965,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["items",{"_index":554,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["itemsperpage",{"_index":1204,"title":{},"body":{"components/PaginationComponent.html":{}}}],["json",{"_index":778,"title":{},"body":{"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{}}}],["json.description",{"_index":1125,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["json.entities",{"_index":1126,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["json.isactive",{"_index":1124,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["json.parse(text",{"_index":1116,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["json.parse(value",{"_index":786,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["json.stringify(datawithoutname",{"_index":915,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["json.stringify(this.data.structure",{"_index":783,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["jsonstring",{"_index":914,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["jszip",{"_index":1333,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":551,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["karma",{"_index":1386,"title":{},"body":{"index.html":{}}}],["keyboardevent",{"_index":755,"title":{},"body":{"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["keyframes",{"_index":1171,"title":{},"body":{"components/LoadingComponent.html":{}}}],["label",{"_index":457,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{}}}],["left",{"_index":565,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["legend",{"_index":56,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["line",{"_index":523,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["list",{"_index":1368,"title":{},"body":{"index.html":{}}}],["list'},{'name",{"_index":69,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["list.component.ts",{"_index":1283,"title":{},"body":{"coverage.html":{}}}],["list/api",{"_index":1282,"title":{},"body":{"coverage.html":{}}}],["list/card",{"_index":1286,"title":{},"body":{"coverage.html":{}}}],["list/endpoint",{"_index":1289,"title":{},"body":{"coverage.html":{}}}],["list/entity",{"_index":1292,"title":{},"body":{"coverage.html":{}}}],["listens",{"_index":256,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["loader",{"_index":1155,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loader:after",{"_index":1160,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loader:before",{"_index":1159,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading",{"_index":631,"title":{},"body":{"components/CardEntityComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{}}}],["loading'},{'name",{"_index":102,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["loading.component.css",{"_index":1149,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading.component.html",{"_index":1150,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loadingcomponent",{"_index":101,"title":{"components/LoadingComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["local",{"_index":1350,"title":{},"body":{"index.html":{}}}],["location",{"_index":387,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{}}}],["logourl",{"_index":984,"title":{},"body":{"components/HeaderComponent.html":{}}}],["margin",{"_index":414,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["matching",{"_index":113,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1330,"title":{},"body":{"dependencies.html":{}}}],["math.ceil(this.totalitems",{"_index":1218,"title":{},"body":{"components/PaginationComponent.html":{}}}],["max",{"_index":876,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["media",{"_index":1006,"title":{},"body":{"components/HeaderComponent.html":{}}}],["memberof",{"_index":54,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["message",{"_index":653,"title":{},"body":{"components/CardEntityComponent.html":{},"components/EntityDialogComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["metadata",{"_index":19,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["methods",{"_index":134,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["microsoft/signalr",{"_index":234,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"dependencies.html":{}}}],["min",{"_index":974,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["miscellaneous",{"_index":1417,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mobile",{"_index":1322,"title":{},"body":{"dependencies.html":{}}}],["modify",{"_index":1361,"title":{},"body":{"index.html":{}}}],["modules",{"_index":1412,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":1404,"title":{},"body":{"index.html":{}}}],["movefocus",{"_index":135,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["movefocus(targetinput",{"_index":142,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["multi",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":61,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["namefor",{"_index":1367,"title":{},"body":{"index.html":{}}}],["nameinputref",{"_index":133,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["navigate",{"_index":1355,"title":{},"body":{"index.html":{}}}],["needs",{"_index":1401,"title":{},"body":{"index.html":{}}}],["negative",{"_index":343,"title":{},"body":{"injectables/ApiService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{}}}],["new",{"_index":225,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{},"index.html":{}}}],["newfiles",{"_index":1097,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["newfiles.map(file",{"_index":1103,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["newstate",{"_index":454,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["next",{"_index":481,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/ImportDialogComponent.html":{}}}],["next.handle(req).pipe",{"_index":1027,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["ng",{"_index":1352,"title":{},"body":{"index.html":{}}}],["ng_event_plugins",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngfor",{"_index":1065,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["ngif",{"_index":1061,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["ngoninit",{"_index":850,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/SwitchComponent.html":{}}}],["ngzone",{"_index":233,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["none",{"_index":410,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["normal",{"_index":535,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["normal').foreach(file",{"_index":1129,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["normal').length",{"_index":1107,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["notification",{"_index":1050,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["notification.subscribe",{"_index":1059,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["nowrap",{"_index":515,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["null",{"_index":339,"title":{},"body":{"injectables/ApiService.html":{},"components/CardEntityComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"components/ExportApiButtonComponent.html":{}}}],["number",{"_index":1196,"title":{},"body":{"components/PaginationComponent.html":{}}}],["observable",{"_index":231,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["oldname",{"_index":269,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{}}}],["onclick",{"_index":909,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["ondeleteconfirmed",{"_index":436,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["one",{"_index":1399,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":845,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/SwitchComponent.html":{}}}],["oninput",{"_index":136,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["oninput(event",{"_index":150,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["onkeypress",{"_index":939,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["onkeypress(event",{"_index":949,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["onpagechange(page",{"_index":1195,"title":{},"body":{"components/PaginationComponent.html":{}}}],["ontoggle",{"_index":1232,"title":{},"body":{"components/SwitchComponent.html":{}}}],["ontoggle(value",{"_index":1222,"title":{},"body":{"components/SwitchComponent.html":{}}}],["ontogglechange",{"_index":437,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["ontogglechange(newstate",{"_index":452,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["opacity",{"_index":1249,"title":{},"body":{"components/SwitchComponent.html":{}}}],["open",{"_index":497,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ImportDialogComponent.html":{},"index.html":{}}}],["open('api",{"_index":493,"title":{},"body":{"components/CardApiComponent.html":{}}}],["open(`${message",{"_index":678,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["open(message",{"_index":792,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["open(new",{"_index":1051,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["openeditdialog",{"_index":438,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["optimizes",{"_index":1380,"title":{},"body":{"index.html":{}}}],["optional",{"_index":146,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{}}}],["ordersupdated",{"_index":218,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["out",{"_index":1168,"title":{},"body":{"components/LoadingComponent.html":{}}}],["outline",{"_index":1003,"title":{},"body":{"components/HeaderComponent.html":{}}}],["output",{"_index":462,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["outputs",{"_index":441,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["overflow",{"_index":512,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["overview",{"_index":1410,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":519,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["package",{"_index":1308,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":411,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["page",{"_index":104,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"index.html":{}}}],["pagechange",{"_index":1206,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagenotfoundcomponent",{"_index":103,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["pagination",{"_index":1197,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination'},{'name",{"_index":107,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["pagination.component.css",{"_index":1200,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.component.html",{"_index":1201,"title":{},"body":{"components/PaginationComponent.html":{}}}],["paginationcomponent",{"_index":106,"title":{"components/PaginationComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["param",{"_index":188,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{}}}],["parameters",{"_index":145,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{}}}],["params['code",{"_index":859,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["params['message",{"_index":862,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["patch",{"_index":337,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["path",{"_index":1151,"title":{},"body":{"components/LoadingComponent.html":{}}}],["performance",{"_index":1381,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":1053,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["pipe(catcherror((err",{"_index":330,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["pipes",{"_index":1371,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":1324,"title":{},"body":{"dependencies.html":{}}}],["pointer",{"_index":418,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["polymorpheuscomponent",{"_index":1046,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["polymorpheuscomponent(alertdeletecomponent",{"_index":1052,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["position",{"_index":558,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["post",{"_index":684,"title":{},"body":{"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{}}}],["post(`${this.baseurl}/apientity/${apiservicename",{"_index":834,"title":{},"body":{"injectables/EntityService.html":{}}}],["post(`${this.baseurl}/apiservice",{"_index":333,"title":{},"body":{"injectables/ApiService.html":{}}}],["powerful",{"_index":1364,"title":{},"body":{"index.html":{}}}],["previousurl",{"_index":399,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["previousurl.startswith(basedomain",{"_index":402,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["primary",{"_index":560,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/SwitchComponent.html":{}}}],["private",{"_index":131,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["processeddata",{"_index":1068,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["processeditdialogdata",{"_index":580,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["processeditdialogdata(data",{"_index":600,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["processjson",{"_index":1071,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["processjson(json",{"_index":1080,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["production",{"_index":1379,"title":{},"body":{"index.html":{}}}],["progressevent",{"_index":1114,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["project",{"_index":1342,"title":{},"body":{"index.html":{}}}],["properties",{"_index":31,"title":{"properties.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"properties.html":{}}}],["protected",{"_index":32,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["provide",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":237,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{}}}],["providehttpclient",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(app_routes",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1224,"title":{},"body":{"components/SwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":129,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["put",{"_index":334,"title":{},"body":{"injectables/ApiService.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["queryparams",{"_index":905,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["radius",{"_index":415,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["reactiveformsmodule",{"_index":935,"title":{},"body":{"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["read",{"_index":164,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["reader",{"_index":1110,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["reader.onload",{"_index":1112,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["reader.readastext(file",{"_index":1119,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["readfiles",{"_index":1072,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["readfiles(files",{"_index":1083,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["readonly",{"_index":33,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["recievemessage",{"_index":257,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["red",{"_index":1147,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["reference",{"_index":1411,"title":{},"body":{"index.html":{}}}],["references",{"_index":1408,"title":{},"body":{"index.html":{}}}],["relative",{"_index":1158,"title":{},"body":{"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["reload",{"_index":1359,"title":{},"body":{"index.html":{}}}],["remarks",{"_index":50,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["removefile",{"_index":1073,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["removefile(filetoremove",{"_index":1084,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["removeservice",{"_index":275,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["repositories/api",{"_index":468,"title":{},"body":{"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{}}}],["repositories/endpoint",{"_index":610,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["repositories/entity",{"_index":663,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["repository.service",{"_index":469,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{}}}],["repository.service.ts",{"_index":347,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{},"coverage.html":{}}}],["repository.service.ts:102",{"_index":356,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:19",{"_index":705,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:20",{"_index":349,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:29",{"_index":353,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:30",{"_index":812,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:31",{"_index":716,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["repository.service.ts:40",{"_index":354,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:42",{"_index":810,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:44",{"_index":708,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["repository.service.ts:51",{"_index":350,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:54",{"_index":806,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:57",{"_index":714,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["repository.service.ts:64",{"_index":351,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:67",{"_index":814,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:71",{"_index":718,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["repository.service.ts:76",{"_index":355,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:79",{"_index":808,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:84",{"_index":712,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["repository.service.ts:90",{"_index":352,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:92",{"_index":816,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:98",{"_index":720,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["req",{"_index":1023,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["resources",{"_index":1403,"title":{},"body":{"index.html":{}}}],["response",{"_index":55,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["response.error",{"_index":1136,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["responsealert",{"_index":1036,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["results",{"_index":112,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":185,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"components/FilterByInputComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{}}}],["returns",{"_index":148,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["reverse",{"_index":1170,"title":{},"body":{"components/LoadingComponent.html":{}}}],["rgba(0",{"_index":874,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["right",{"_index":557,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["root",{"_index":238,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/AppComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{}}}],["root'},{'name",{"_index":71,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["route",{"_index":683,"title":{},"body":{"interfaces/Endpoint.html":{},"components/ErrorDisplayComponent.html":{}}}],["router",{"_index":386,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardEndpointComponent.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{}}}],["routermodule",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["routeroutlet",{"_index":373,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1351,"title":{},"body":{"index.html":{}}}],["runner",{"_index":1388,"title":{},"body":{"index.html":{}}}],["running",{"_index":1354,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":236,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":325,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["safari",{"_index":538,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["scaffolding",{"_index":1362,"title":{},"body":{"index.html":{}}}],["scale(1.05",{"_index":885,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["schematics",{"_index":1369,"title":{},"body":{"index.html":{}}}],["screen",{"_index":1007,"title":{},"body":{"components/HeaderComponent.html":{}}}],["scrollbar",{"_index":540,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["search",{"_index":944,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["searchquery",{"_index":941,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["selector",{"_index":20,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["serveonce",{"_index":1353,"title":{},"body":{"index.html":{}}}],["server",{"_index":1349,"title":{},"body":{"index.html":{}}}],["service",{"_index":304,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["service.name",{"_index":1132,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["service.service",{"_index":358,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["service.service.ts",{"_index":212,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"coverage.html":{}}}],["service.service.ts:103",{"_index":736,"title":{},"body":{"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["service.service.ts:114",{"_index":309,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:121",{"_index":831,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:126",{"_index":733,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:128",{"_index":223,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["service.service.ts:130",{"_index":320,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:140",{"_index":827,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:148",{"_index":738,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:152",{"_index":316,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:154",{"_index":829,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:170",{"_index":735,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:20",{"_index":230,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["service.service.ts:21",{"_index":226,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["service.service.ts:22",{"_index":228,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["service.service.ts:23",{"_index":729,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:24",{"_index":301,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EntityService.html":{}}}],["service.service.ts:30",{"_index":221,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["service.service.ts:38",{"_index":311,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:39",{"_index":734,"title":{},"body":{"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["service.service.ts:51",{"_index":313,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:53",{"_index":828,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:59",{"_index":731,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:66",{"_index":303,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:67",{"_index":826,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:81",{"_index":307,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{}}}],["service.service.ts:82",{"_index":830,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:95",{"_index":318,"title":{},"body":{"injectables/ApiService.html":{}}}],["servicename",{"_index":310,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["services/api",{"_index":357,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["services/endpoint",{"_index":721,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["services/entity",{"_index":817,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["services/error",{"_index":1026,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["set",{"_index":784,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["setstructure(value",{"_index":779,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["shadow",{"_index":872,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["showdialog",{"_index":137,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["showdialog(content",{"_index":153,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["showerror",{"_index":750,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["showerror(message",{"_index":765,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["showicons",{"_index":1226,"title":{},"body":{"components/SwitchComponent.html":{}}}],["shownotification",{"_index":1034,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["signalr",{"_index":213,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["signalr.httptransporttype.websockets",{"_index":244,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["signalr.hubconnection",{"_index":229,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["signalr.hubconnectionbuilder",{"_index":240,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["size",{"_index":424,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["sizing",{"_index":531,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/LoadingComponent.html":{}}}],["skipnegotiation",{"_index":242,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["slide",{"_index":1164,"title":{},"body":{"components/LoadingComponent.html":{}}}],["slider",{"_index":1250,"title":{},"body":{"components/SwitchComponent.html":{}}}],["slider:before",{"_index":1253,"title":{},"body":{"components/SwitchComponent.html":{}}}],["solid",{"_index":869,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/LoadingComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"index.html":{}}}],["space",{"_index":514,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{}}}],["speed",{"_index":1382,"title":{},"body":{"index.html":{}}}],["src/.../app.config.ts",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":381,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1266,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/data/components/alert",{"_index":10,"title":{},"body":{"components/AlertDeleteComponent.html":{},"coverage.html":{}}}],["src/app/data/components/api",{"_index":114,"title":{},"body":{"components/ApiDialogComponent.html":{},"coverage.html":{}}}],["src/app/data/components/back",{"_index":383,"title":{},"body":{"components/BackButtonComponent.html":{},"coverage.html":{}}}],["src/app/data/components/card",{"_index":428,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"coverage.html":{}}}],["src/app/data/components/endpoint",{"_index":685,"title":{},"body":{"components/EndpointDialogComponent.html":{},"coverage.html":{}}}],["src/app/data/components/entity",{"_index":744,"title":{},"body":{"components/EntityDialogComponent.html":{},"coverage.html":{}}}],["src/app/data/components/export",{"_index":907,"title":{},"body":{"components/ExportApiButtonComponent.html":{},"coverage.html":{}}}],["src/app/data/components/filter",{"_index":931,"title":{},"body":{"components/FilterByInputComponent.html":{},"coverage.html":{}}}],["src/app/data/components/header/header.component.ts",{"_index":977,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/data/components/header/header.component.ts:37",{"_index":989,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:46",{"_index":986,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:54",{"_index":990,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:63",{"_index":987,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:71",{"_index":995,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:85",{"_index":991,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:97",{"_index":992,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/icon",{"_index":1029,"title":{},"body":{"components/IconTrashComponent.html":{},"coverage.html":{}}}],["src/app/data/components/import",{"_index":1060,"title":{},"body":{"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["src/app/data/components/loading/loading.component.ts",{"_index":1148,"title":{},"body":{"components/LoadingComponent.html":{},"coverage.html":{}}}],["src/app/data/components/loading/loading.component.ts:29",{"_index":1153,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts",{"_index":1193,"title":{},"body":{"components/PaginationComponent.html":{},"coverage.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:102",{"_index":1214,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:60",{"_index":1211,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:68",{"_index":1210,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:76",{"_index":1208,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:83",{"_index":1212,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:91",{"_index":1217,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts",{"_index":1220,"title":{},"body":{"components/SwitchComponent.html":{},"coverage.html":{}}}],["src/app/data/components/switch/switch.component.ts:54",{"_index":1234,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts:61",{"_index":1235,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts:68",{"_index":1242,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts:77",{"_index":1240,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts:85",{"_index":1236,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts:96",{"_index":1237,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/pages/api",{"_index":1281,"title":{},"body":{"coverage.html":{}}}],["src/app/data/pages/card",{"_index":1285,"title":{},"body":{"coverage.html":{}}}],["src/app/data/pages/endpoint",{"_index":1288,"title":{},"body":{"coverage.html":{}}}],["src/app/data/pages/entity",{"_index":1291,"title":{},"body":{"coverage.html":{}}}],["src/app/data/pages/error",{"_index":841,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"coverage.html":{}}}],["src/app/data/pages/page",{"_index":1176,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/interceptors/http",{"_index":1014,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/interfaces/apiserviceshortstructure.ts",{"_index":1260,"title":{},"body":{"interfaces/apiServiceShortStructure.html":{},"coverage.html":{}}}],["src/app/interfaces/apiservicestructure.ts",{"_index":369,"title":{},"body":{"interfaces/ApiServiceStructure.html":{},"coverage.html":{}}}],["src/app/interfaces/endpoint.ts",{"_index":682,"title":{},"body":{"interfaces/Endpoint.html":{},"coverage.html":{}}}],["src/app/interfaces/entity.ts",{"_index":742,"title":{},"body":{"interfaces/Entity.html":{},"coverage.html":{}}}],["src/app/interfaces/entityshort.ts",{"_index":840,"title":{},"body":{"interfaces/EntityShort.html":{},"coverage.html":{}}}],["src/app/interfaces/filestatus.ts",{"_index":928,"title":{},"body":{"interfaces/FileStatus.html":{},"coverage.html":{}}}],["src/app/repositories/api",{"_index":346,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"coverage.html":{}}}],["src/app/repositories/endpoint",{"_index":698,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"coverage.html":{}}}],["src/app/repositories/entity",{"_index":796,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"coverage.html":{}}}],["src/app/services/api",{"_index":210,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/services/endpoint",{"_index":728,"title":{},"body":{"injectables/EndpointService.html":{},"coverage.html":{}}}],["src/app/services/entity",{"_index":824,"title":{},"body":{"injectables/EntityService.html":{},"coverage.html":{}}}],["src/app/services/error",{"_index":886,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["standalone",{"_index":934,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["start",{"_index":249,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"index.html":{}}}],["started",{"_index":1341,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1264,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":929,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["store",{"_index":1375,"title":{},"body":{"index.html":{}}}],["string",{"_index":268,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["structure",{"_index":743,"title":{},"body":{"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"interfaces/EntityShort.html":{}}}],["structure(value",{"_index":785,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["structureinputref",{"_index":747,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["styles/button.css",{"_index":474,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["styles/card.css",{"_index":473,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["styles/icon.css",{"_index":475,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{}}}],["styleurl",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{}}}],["styleurls",{"_index":26,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["sub",{"_index":632,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["subject",{"_index":235,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["submit",{"_index":138,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["submit(event",{"_index":158,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["subscribe",{"_index":194,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/ImportDialogComponent.html":{}}}],["subscription",{"_index":608,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["success",{"_index":494,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["such",{"_index":1370,"title":{},"body":{"index.html":{}}}],["suits",{"_index":1400,"title":{},"body":{"index.html":{}}}],["switch",{"_index":109,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["switch.component.css",{"_index":1228,"title":{},"body":{"components/SwitchComponent.html":{}}}],["switch.component.html",{"_index":1229,"title":{},"body":{"components/SwitchComponent.html":{}}}],["switch/switch.component",{"_index":464,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["switchcomponent",{"_index":108,"title":{"components/SwitchComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["switchmap",{"_index":1044,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["switchmap((response",{"_index":1054,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["table",{"_index":1307,"title":{},"body":{"coverage.html":{},"dependencies.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1306,"title":{},"body":{"coverage.html":{}}}],["taiga",{"_index":15,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"dependencies.html":{}}}],["takeuntil",{"_index":1045,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["takeuntil(this.router.events",{"_index":1058,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["targetinput",{"_index":147,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["targetinput.nativeelement.queryselector('input",{"_index":794,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["targetinput.nativeelement.queryselector('input').focus",{"_index":206,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["templateref",{"_index":154,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["templateurl",{"_index":28,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["test",{"_index":1387,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1394,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":1392,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1384,"title":{},"body":{"index.html":{}}}],["text",{"_index":511,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["textarea').focus",{"_index":795,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["this.alerts",{"_index":492,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EntityDialogComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["this.alerts.open",{"_index":1057,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["this.alerts.open(error.message",{"_index":341,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["this.alerts.open(message",{"_index":679,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.alertservice.open(`error",{"_index":894,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.apideleted.emit",{"_index":502,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.apiinfo",{"_index":486,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.apiinfo.isactive",{"_index":477,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.apiinfo.name",{"_index":484,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.apilistsubject.asobservable",{"_index":232,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.getvalue",{"_index":264,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.getvalue().map(apiservice",{"_index":283,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.next",{"_index":282,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.next(apilist",{"_index":259,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.next(currentlist",{"_index":266,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.next(initialdata",{"_index":285,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apiname",{"_index":615,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.apiservice.createapiservice(service",{"_index":362,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.createfullapiservice(service",{"_index":363,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.createfullapiservice(service).subscribe",{"_index":1131,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.apiservice.deleteapiservice(servicename",{"_index":365,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.getapilist",{"_index":360,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.getapistructurelist(name",{"_index":361,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.updateapiservice(oldname",{"_index":364,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.updateapiservicestatus(servicename",{"_index":366,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservicerepository",{"_index":479,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.apiservicerepository.deleteapiservice(this.apiinfo.name).subscribe",{"_index":501,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.apiservicerepository.getapistructurelist(this.apiinfo.name).subscribe",{"_index":912,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["this.baseurl}/apiendpoint/${apiservicename}/${entityname",{"_index":739,"title":{},"body":{"injectables/EndpointService.html":{}}}],["this.baseurl}/apiendpoint/${apiservicename}/${entityname}/${actionname",{"_index":740,"title":{},"body":{"injectables/EndpointService.html":{}}}],["this.baseurl}/apiendpoint/${servicename}/${entityname}/${endpoint}/${isactive",{"_index":741,"title":{},"body":{"injectables/EndpointService.html":{}}}],["this.baseurl}/apientity/${apiservicename}/${entityname",{"_index":835,"title":{},"body":{"injectables/EntityService.html":{}}}],["this.baseurl}/apientity/${servicename}/${entityname}/${isactive",{"_index":837,"title":{},"body":{"injectables/EntityService.html":{}}}],["this.baseurl}/apiservice/${encodeuricomponent",{"_index":338,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.baseurl}/apiservice/${encodeuricomponent(name",{"_index":332,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.baseurl}/apiservice/${encodeuricomponent(oldname",{"_index":335,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.baseurl}/apiservice/${encodeuricomponent(servicename",{"_index":336,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.buttonclick.emit",{"_index":997,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.cd.markforcheck",{"_index":491,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ImportDialogComponent.html":{}}}],["this.context.completewith(false",{"_index":1135,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.context.completewith(this.data",{"_index":191,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.context.data",{"_index":187,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.control.setvalue(currentfiles",{"_index":1143,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.control.value",{"_index":1140,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.control.value.filter(file",{"_index":1141,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.control.valuechanges.subscribe((files",{"_index":1096,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.controlname",{"_index":952,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.data.name",{"_index":205,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.data.name.trim",{"_index":186,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.data.route",{"_index":697,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["this.data.route.trim",{"_index":696,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["this.data.structure",{"_index":782,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["this.dialog",{"_index":485,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["this.dialog().subscribe",{"_index":998,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.dialogs.open(content",{"_index":192,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.endpointdeleted.emit(this.endpointinfo.route",{"_index":624,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.endpointinfo",{"_index":618,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.endpointinfo.isactive",{"_index":612,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.endpointinfo.route",{"_index":617,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.endpointrepositoryservice",{"_index":613,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.endpointservice.createendpoint(apiservicename",{"_index":723,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.endpointservice.deleteendpoint(apiservicename",{"_index":726,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.endpointservice.getendpointbyname(apiservicename",{"_index":724,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.endpointservice.getendpointlist(apiservicename",{"_index":722,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.endpointservice.updateendpoint(apiservicename",{"_index":725,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.endpointservice.updateendpointstatus(apiservicename",{"_index":727,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.entitydeleted.emit(this.entityinfo.name",{"_index":676,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.entityinfo",{"_index":669,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.entityinfo.isactive",{"_index":665,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.entityinfo.name",{"_index":616,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["this.entityrepositoryservice",{"_index":666,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.entityservice.createapientity(apiservicename",{"_index":820,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.entityservice.deleteapientity(apiservicename",{"_index":822,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.entityservice.getapientity(apiservicename",{"_index":819,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.entityservice.getapientitylist(apiservicename",{"_index":818,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.entityservice.updateapientity(apiservicename",{"_index":821,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.entityservice.updateentitystatus(servicename",{"_index":823,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.errorcode",{"_index":858,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["this.errorhandler.handleerror(error",{"_index":340,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["this.errormessage",{"_index":861,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["this.files",{"_index":1102,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.files.every(file",{"_index":1134,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.files.filter(f",{"_index":1105,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.files.filter(file",{"_index":1138,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.files.find(f",{"_index":1120,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.files.some(f",{"_index":1099,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.form.controls[this.controlname].valuechanges.subscribe(value",{"_index":967,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.form.get(this.controlname",{"_index":961,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.handleeditdialogdata(data",{"_index":670,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.handleendpointupdate(response",{"_index":621,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.handleendpointupdateerror(error",{"_index":622,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.handleentitydeletion",{"_index":672,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.handleentityupdate(response",{"_index":674,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.handleentityupdateerror(error",{"_index":675,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.handleerror",{"_index":668,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.handleerror(err",{"_index":331,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["this.handlesubmit",{"_index":790,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["this.hasfiles",{"_index":1104,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.hasvalue",{"_index":190,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.http",{"_index":328,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["this.hubconnection",{"_index":239,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.hubconnection.on('addservice",{"_index":262,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.hubconnection.on('recievemessage",{"_index":258,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.hubconnection.on('removeservice",{"_index":276,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.hubconnection.on('updateservice",{"_index":271,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.hubconnection.on('updatestatusservice",{"_index":281,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.invalidfalse.markastouched",{"_index":1244,"title":{},"body":{"components/SwitchComponent.html":{}}}],["this.invalidtrue.markastouched",{"_index":1243,"title":{},"body":{"components/SwitchComponent.html":{}}}],["this.iscansubmit",{"_index":787,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["this.isfeatureenabled",{"_index":1223,"title":{},"body":{"components/SwitchComponent.html":{}}}],["this.item.name",{"_index":1056,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["this.items",{"_index":966,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.items.filter(item",{"_index":964,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.itemsperpage",{"_index":1219,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.location",{"_index":476,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.location.back",{"_index":403,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["this.location.path(true",{"_index":400,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["this.oldname",{"_index":483,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{}}}],["this.processeddata.foreach(service",{"_index":1130,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.processeddata.length",{"_index":1128,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.processeddata.push(apiservicestructure",{"_index":1127,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.processeditdialogdata(data",{"_index":619,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.processjson(json",{"_index":1118,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.readfiles(newfiles",{"_index":1108,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.responsealert.emit(true",{"_index":1055,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["this.route.queryparams.subscribe((params",{"_index":857,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["this.router.navigate",{"_index":863,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["this.router.navigate(['/error",{"_index":904,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.router.navigate(['/page",{"_index":897,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.router.navigatebyurl",{"_index":404,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["this.router.url",{"_index":397,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["this.searchquery.emit(value",{"_index":963,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.showerror('json",{"_index":791,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["this.toggle.emit(this.value",{"_index":1245,"title":{},"body":{"components/SwitchComponent.html":{}}}],["this.updateendpoint(data",{"_index":620,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.updatefilestatus(file",{"_index":1117,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["throwerror",{"_index":323,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["throwerror(error",{"_index":344,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["thumb",{"_index":544,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["thumb:hover",{"_index":546,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["title",{"_index":379,"title":{},"body":{"components/AppComponent.html":{}}}],["toggle",{"_index":1233,"title":{},"body":{"components/SwitchComponent.html":{}}}],["tools",{"_index":1365,"title":{},"body":{"index.html":{}}}],["top",{"_index":556,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["totalitems",{"_index":1205,"title":{},"body":{"components/PaginationComponent.html":{}}}],["totalpages",{"_index":1207,"title":{},"body":{"components/PaginationComponent.html":{}}}],["track",{"_index":542,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["transform",{"_index":882,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["transition",{"_index":422,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["translatex",{"_index":1175,"title":{},"body":{"components/LoadingComponent.html":{}}}],["translatex(16.8px",{"_index":1259,"title":{},"body":{"components/SwitchComponent.html":{}}}],["translatex(70px",{"_index":1172,"title":{},"body":{"components/LoadingComponent.html":{}}}],["transport",{"_index":243,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["trash",{"_index":1031,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash'},{'name",{"_index":99,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["trash.component",{"_index":467,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["trash.component.css",{"_index":1049,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.css,../../styles/icon.css",{"_index":1032,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.html",{"_index":1033,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts",{"_index":1030,"title":{},"body":{"components/IconTrashComponent.html":{},"coverage.html":{}}}],["trash.component.ts:42",{"_index":1042,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts:50",{"_index":1039,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts:58",{"_index":1041,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts:66",{"_index":1040,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts:74",{"_index":1038,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts:98",{"_index":1043,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash/icon",{"_index":466,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{},"coverage.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["true",{"_index":184,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/SwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":398,"title":{},"body":{"components/BackButtonComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["tslib",{"_index":1336,"title":{},"body":{"dependencies.html":{}}}],["tui",{"_index":973,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["tuialertoptions",{"_index":47,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["tuialertservice",{"_index":300,"title":{},"body":{"injectables/ApiService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["tuiappearance",{"_index":433,"title":{},"body":{"components/CardApiComponent.html":{}}}],["tuiautofocus",{"_index":119,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["tuiavatar",{"_index":1062,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["tuibutton",{"_index":120,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["tuidatalistwrapper",{"_index":121,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["tuidialog",{"_index":463,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/HeaderComponent.html":{}}}],["tuidialog(apidialogcomponent",{"_index":456,"title":{},"body":{"components/CardApiComponent.html":{}}}],["tuidialog(endpointdialogcomponent",{"_index":604,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["tuidialog(entitydialogcomponent",{"_index":657,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["tuidialog(importdialogcomponent",{"_index":993,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tuidialogcontext",{"_index":180,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["tuidialogservice",{"_index":156,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["tuifilelike",{"_index":930,"title":{},"body":{"interfaces/FileStatus.html":{}}}],["tuifiles",{"_index":1063,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["tuiicon",{"_index":1094,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["tuiinputmodule",{"_index":122,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["tuiinputslidermodule",{"_index":1198,"title":{},"body":{"components/PaginationComponent.html":{}}}],["tuilink",{"_index":1064,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["tuipagination",{"_index":1199,"title":{},"body":{"components/PaginationComponent.html":{}}}],["tuipopover",{"_index":41,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["tuiroot",{"_index":374,"title":{},"body":{"components/AppComponent.html":{}}}],["tuiselectmodule",{"_index":123,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["tuislider",{"_index":124,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["tuiswitch",{"_index":1227,"title":{},"body":{"components/SwitchComponent.html":{}}}],["tuiswitchoptionsprovider",{"_index":1225,"title":{},"body":{"components/SwitchComponent.html":{}}}],["tuitextareamodule",{"_index":745,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["tuitextfield",{"_index":125,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["tuitextfieldcontrollermodule",{"_index":126,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/PaginationComponent.html":{}}}],["type",{"_index":45,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":686,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["typescript",{"_index":1194,"title":{},"body":{"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["ui",{"_index":16,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["ui/addon",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["ui/cdk",{"_index":46,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"dependencies.html":{}}}],["ui/core",{"_index":48,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{},"dependencies.html":{}}}],["ui/event",{"_index":1323,"title":{},"body":{"dependencies.html":{}}}],["ui/experimental",{"_index":1326,"title":{},"body":{"dependencies.html":{}}}],["ui/icons",{"_index":1327,"title":{},"body":{"dependencies.html":{}}}],["ui/kit",{"_index":181,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"dependencies.html":{}}}],["ui/layout",{"_index":1331,"title":{},"body":{"dependencies.html":{}}}],["ui/legacy",{"_index":182,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/PaginationComponent.html":{},"dependencies.html":{}}}],["ui/polymorpheus",{"_index":49,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["undefined",{"_index":53,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["unit",{"_index":1383,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":860,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["updateapientity",{"_index":802,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["updateapientity(apiservicename",{"_index":813,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["updateapientity(this.apiname",{"_index":673,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["updateapiservice",{"_index":295,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["updateapiservice(oldname",{"_index":317,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["updateapiservice(this.oldname",{"_index":489,"title":{},"body":{"components/CardApiComponent.html":{}}}],["updateapiservicestatus",{"_index":296,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["updateapiservicestatus(servicename",{"_index":319,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["updateapiservicestatus(this.apiinfo.name",{"_index":480,"title":{},"body":{"components/CardApiComponent.html":{}}}],["updateendpoint",{"_index":581,"title":{},"body":{"components/CardEndpointComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["updateendpoint(apiservicename",{"_index":717,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["updateendpoint(data",{"_index":602,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["updateendpointstatus",{"_index":614,"title":{},"body":{"components/CardEndpointComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["updateendpointstatus(apiservicename",{"_index":719,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["updateendpointstatus(servicename",{"_index":737,"title":{},"body":{"injectables/EndpointService.html":{}}}],["updateentitystatus",{"_index":803,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["updateentitystatus(servicename",{"_index":815,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["updateentitystatus(this.apiname",{"_index":667,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["updatefilestatus",{"_index":1074,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["updatefilestatus(file",{"_index":1088,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["updateservice",{"_index":270,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["updatestatusservice",{"_index":280,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["url",{"_index":395,"title":{},"body":{"components/BackButtonComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["use",{"_index":1389,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":1344,"title":{},"body":{"index.html":{}}}],["validators",{"_index":959,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["validators.pattern('^[a",{"_index":954,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["value",{"_index":36,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":788,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["value.replace(/[^a",{"_index":201,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["var",{"_index":59,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["variable",{"_index":1267,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1418,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1346,"title":{},"body":{"index.html":{},"properties.html":{}}}],["viewchild",{"_index":178,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["viewchild('descriptioninput",{"_index":163,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["viewchild('nameinput",{"_index":170,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["visit",{"_index":1409,"title":{},"body":{"index.html":{}}}],["void",{"_index":149,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["webkit",{"_index":536,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{}}}],["weight",{"_index":420,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["whenever",{"_index":1360,"title":{},"body":{"index.html":{}}}],["white",{"_index":408,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/SwitchComponent.html":{}}}],["width",{"_index":509,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["window.location.origin}/api",{"_index":321,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["window.location.origin}/hubs",{"_index":227,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["window.url.createobjecturl(blob",{"_index":919,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["window.url.revokeobjecturl(url",{"_index":925,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["withautomaticreconnect([1000",{"_index":245,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["withurl(`hubs/apilisthub",{"_index":241,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["word",{"_index":532,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["wrap",{"_index":533,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{}}}],["x",{"_index":529,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["y",{"_index":527,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["yes",{"_index":160,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["z0",{"_index":203,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["za",{"_index":202,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["zone.js",{"_index":1338,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AlertDeleteComponent.html":{"url":"components/AlertDeleteComponent.html","title":"component - AlertDeleteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AlertDeleteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/alert-delete/alert-delete.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент AlertDeleteComponent предназначен для отображения уведомления при выполнении действия удаления.\nИспользует компоненты Taiga UI для управления всплывающим окном уведомления и его опциями.\nЭтот компонент является частью системы уведомлений и используется для оповещения пользователей о действиях удаления.\nИнтегрируется с сервисом уведомлений Taiga UI для обеспечения единообразного пользовательского опыта.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alert-on-delete\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./alert-delete.component.css\n            \n\n\n\n            \n                templateUrl\n                ./alert-delete.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                context\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext, boolean>>()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/alert-delete/alert-delete.component.ts:38\n                        \n                    \n\n            \n                \n                    Контекст для компонента TuiPopover, который управляет опциями уведомления.\nЭтот контекст внедряется с использованием функции injectContext из Taiga UI.\nОн предоставляет необходимую конфигурацию для всплывающего окна уведомления.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport type { TuiPopover } from '@taiga-ui/cdk';\nimport type { TuiAlertOptions } from '@taiga-ui/core';\nimport { injectContext } from '@taiga-ui/polymorpheus';\n\n/**\n * Компонент AlertDeleteComponent предназначен для отображения уведомления при выполнении действия удаления.\n * Использует компоненты Taiga UI для управления всплывающим окном уведомления и его опциями.\n *\n * @remarks\n * Этот компонент является частью системы уведомлений и используется для оповещения пользователей о действиях удаления.\n * Интегрируется с сервисом уведомлений Taiga UI для обеспечения единообразного пользовательского опыта.\n *\n * @example\n * html\n * \n *\n */\n@Component({\n  selector: 'app-alert-on-delete',\n  imports: [CommonModule],\n  templateUrl: './alert-delete.component.html',\n  styleUrls: ['./alert-delete.component.css'], \n})\nexport class AlertDeleteComponent {\n  /**\n   * Контекст для компонента TuiPopover, который управляет опциями уведомления.\n   *\n   * @remarks\n   * Этот контекст внедряется с использованием функции injectContext из Taiga UI.\n   * Он предоставляет необходимую конфигурацию для всплывающего окна уведомления.\n   *\n   * @type {TuiPopover, boolean>}\n   * @default undefined\n   * @memberof AlertDeleteComponent\n   */\n  protected readonly context = injectContext, boolean>>();\n}\n\n    \n\n    \n        \n    {{ response ? 'Да' : 'Нет' }}\n\n    \n\n    \n                \n                    ./alert-delete.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ response ? \\'Да\\' : \\'Нет\\' }}'\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlertDeleteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ApiDialogComponent.html":{"url":"components/ApiDialogComponent.html","title":"component - ApiDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ApiDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/api-dialog/api-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент ApiDialogComponent предназначен для редактирования данных API через диалоговое окно.\nИспользует компоненты Taiga UI для создания интерактивного интерфейса.\nЭтот компонент предоставляет пользователю возможность редактировать данные API, такие как имя и описание,\nи отправлять изменения через диалоговое окно.\nИнтегрируется с сервисами Taiga UI для управления диалогами и вводом данных.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-api-edit-dialog\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            TuiAutoFocus\n                            TuiButton\n                            TuiDataListWrapper\n                            TuiInputModule\n                            TuiSelectModule\n                            TuiSlider\n                            TuiTextfield\n                            TuiTextfieldControllerModule\n                \n            \n\n            \n                styleUrls\n                ./api-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./api-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                context\n                            \n                            \n                                    \n                                descriptionInputRef\n                            \n                            \n                                    Private\n                                    Readonly\n                                dialogs\n                            \n                            \n                                    \n                                nameInputRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                moveFocus\n                            \n                            \n                                    Protected\n                                onInput\n                            \n                            \n                                    Protected\n                                showDialog\n                            \n                            \n                                    Protected\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasValue\n                                \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moveFocus\n                        \n                    \n                \n            \n            \n                \n                        \n                    moveFocus(targetInput: ElementRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/api-dialog/api-dialog.component.ts:173\n                        \n                    \n\n\n            \n                \n                        Перемещает фокус на указанное поле ввода.\nИспользуется для управления фокусом между полями ввода.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                targetInput\n                                            \n                                                        ElementRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСсылка на элемент ввода.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        onInput\n                        \n                    \n                \n            \n            \n                \n                        \n                    onInput(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/api-dialog/api-dialog.component.ts:156\n                        \n                    \n\n\n            \n                \n                        Обработчик ввода данных в поле имени.\nОчищает значение от недопустимых символов и обновляет данные API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСобытие ввода данных.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        showDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    showDialog(content: TemplateRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/api-dialog/api-dialog.component.ts:143\n                        \n                    \n\n\n            \n                \n                        Открывает диалоговое окно с заданным содержимым.\nИспользует сервис TuiDialogService для открытия диалога.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                        TemplateRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nШаблон содержимого диалогового окна.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        submit\n                        \n                    \n                \n            \n            \n                \n                        \n                    submit(event?: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/api-dialog/api-dialog.component.ts:125\n                        \n                    \n\n\n            \n                \n                        Обработчик отправки формы.\nПредотвращает стандартное поведение отправки формы и завершает диалог, если имя не пустое.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nСобытие отправки формы.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext\n    >()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/api-dialog/api-dialog.component.ts:90\n                        \n                    \n\n            \n                \n                    Контекст диалогового окна, содержащий данные API.\nВнедряется с использованием функции injectContext из Taiga UI.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        descriptionInputRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('descriptionInput', {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/api-dialog/api-dialog.component.ts:68\n                        \n                    \n\n            \n                \n                    Ссылка на элемент ввода описания.\nИспользуется для управления фокусом и значением поля ввода описания.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/api-dialog/api-dialog.component.ts:79\n                        \n                    \n\n            \n                \n                    Сервис для управления диалоговыми окнами.\nВнедряется с использованием Angular DI.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nameInputRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('nameInput', {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/api-dialog/api-dialog.component.ts:56\n                        \n                    \n\n            \n                \n                    Ссылка на элемент ввода имени.\nИспользуется для управления фокусом и значением поля ввода имени.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasValue\n                    \n                \n\n                \n                    \n                        gethasValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/api-dialog/api-dialog.component.ts:102\n                                \n                            \n                    \n                        \n                                Флаг, указывающий, есть ли значение в поле ввода имени.\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/api-dialog/api-dialog.component.ts:112\n                                \n                            \n                    \n                        \n                                Данные API, которые редактируются в диалоговом окне.\n\n\n                                \n                                \n                                \n                                    Returns :         apiServiceShortStructure\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ElementRef, TemplateRef } from '@angular/core';\nimport { Component, inject, ViewChild } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TuiAutoFocus } from '@taiga-ui/cdk';\nimport type { TuiDialogContext } from '@taiga-ui/core';\nimport { TuiButton, TuiDialogService, TuiTextfield } from '@taiga-ui/core';\nimport { TuiDataListWrapper, TuiSlider } from '@taiga-ui/kit';\nimport {\n  TuiInputModule,\n  TuiSelectModule,\n  TuiTextfieldControllerModule,\n} from '@taiga-ui/legacy';\nimport { injectContext } from '@taiga-ui/polymorpheus';\nimport { apiServiceShortStructure } from \"../../../interfaces/apiServiceShortStructure\";\n\n/**\n * Компонент ApiDialogComponent предназначен для редактирования данных API через диалоговое окно.\n * Использует компоненты Taiga UI для создания интерактивного интерфейса.\n *\n * @remarks\n * Этот компонент предоставляет пользователю возможность редактировать данные API, такие как имя и описание,\n * и отправлять изменения через диалоговое окно.\n * Интегрируется с сервисами Taiga UI для управления диалогами и вводом данных.\n *\n * @example\n * html\n * \n * \n */\n@Component({\n  selector: 'app-api-edit-dialog',\n  imports: [\n    FormsModule,\n    TuiAutoFocus,\n    TuiButton,\n    TuiDataListWrapper,\n    TuiInputModule,\n    TuiSelectModule,\n    TuiSlider,\n    TuiTextfield,\n    TuiTextfieldControllerModule,\n  ],\n  templateUrl: './api-dialog.component.html',\n  styleUrls: ['./api-dialog.component.css'],\n})\nexport class ApiDialogComponent {\n  /**\n   * Ссылка на элемент ввода имени.\n   *\n   * @remarks\n   * Используется для управления фокусом и значением поля ввода имени.\n   *\n   * @type {ElementRef}\n   * @memberof ApiDialogComponent\n   */\n  @ViewChild('nameInput', { read: ElementRef }) nameInputRef!: ElementRef;\n\n  /**\n   * Ссылка на элемент ввода описания.\n   *\n   * @remarks\n   * Используется для управления фокусом и значением поля ввода описания.\n   *\n   * @type {ElementRef}\n   * @memberof ApiDialogComponent\n   */\n  @ViewChild('descriptionInput', { read: ElementRef })\n  descriptionInputRef!: ElementRef;\n\n  /**\n   * Сервис для управления диалоговыми окнами.\n   *\n   * @remarks\n   * Внедряется с использованием Angular DI.\n   *\n   * @type {TuiDialogService}\n   * @memberof ApiDialogComponent\n   */\n  private readonly dialogs = inject(TuiDialogService);\n\n  /**\n   * Контекст диалогового окна, содержащий данные API.\n   *\n   * @remarks\n   * Внедряется с использованием функции injectContext из Taiga UI.\n   *\n   * @type {TuiDialogContext}\n   * @memberof ApiDialogComponent\n   */\n  public readonly context =\n    injectContext\n    >();\n\n  /**\n   * Флаг, указывающий, есть ли значение в поле ввода имени.\n   *\n   * @type {boolean}\n   * @returns {boolean} Возвращает true, если имя не пустое.\n   * @memberof ApiDialogComponent\n   */\n  protected get hasValue(): boolean {\n    return this.data.name.trim() !== '';\n  }\n\n  /**\n   * Данные API, которые редактируются в диалоговом окне.\n   *\n   * @type {apiServiceShortStructure}\n   * @memberof ApiDialogComponent\n   */\n  protected get data(): apiServiceShortStructure {\n    return this.context.data;\n  }\n\n  /**\n   * Обработчик отправки формы.\n   *\n   * @param event - Событие отправки формы.\n   * @remarks\n   * Предотвращает стандартное поведение отправки формы и завершает диалог, если имя не пустое.\n   *\n   * @memberof ApiDialogComponent\n   */\n  protected submit(event?: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n    if (this.hasValue) {\n      this.context.completeWith(this.data);\n    }\n  }\n\n  /**\n   * Открывает диалоговое окно с заданным содержимым.\n   *\n   * @param content - Шаблон содержимого диалогового окна.\n   * @remarks\n   * Использует сервис TuiDialogService для открытия диалога.\n   *\n   * @memberof ApiDialogComponent\n   */\n  protected showDialog(content: TemplateRef): void {\n    this.dialogs.open(content, { dismissible: true }).subscribe();\n  }\n\n  /**\n   * Обработчик ввода данных в поле имени.\n   *\n   * @param event - Событие ввода данных.\n   * @remarks\n   * Очищает значение от недопустимых символов и обновляет данные API.\n   *\n   * @memberof ApiDialogComponent\n   */\n  protected onInput(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    const value = input.value;\n    const cleanedValue = value.replace(/[^a-zA-Z0-9]/g, '');\n    input.value = cleanedValue;\n    this.data.name = cleanedValue;\n  }\n\n  /**\n   * Перемещает фокус на указанное поле ввода.\n   *\n   * @param targetInput - Ссылка на элемент ввода.\n   * @remarks\n   * Используется для управления фокусом между полями ввода.\n   *\n   * @memberof ApiDialogComponent\n   */\n  protected moveFocus(targetInput: ElementRef): void {\n    targetInput.nativeElement.querySelector('input').focus();\n  }\n}\n\n    \n\n    \n        \n  Имя API\n\n\n\n  Описание\n\n\n\n  \n    Отправить\n  \n\n\n    \n\n    \n                \n                    ./api-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Имя API  Описание      Отправить  '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ApiDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiHubServiceService.html":{"url":"injectables/ApiHubServiceService.html","title":"injectable - ApiHubServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiHubServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api-hub-service.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Сервис для взаимодействия с SignalR хабом для управления API сервисами.\nЭтот сервис управляет подключением к SignalR хабу и обрабатывает события, связанные с API сервисами.\nОн использует BehaviorSubject для управления состоянием списка API сервисов.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiListSubject\n                            \n                            \n                                    Private\n                                baseUrl\n                            \n                            \n                                    Private\n                                hubConnection\n                            \n                            \n                                ordersUpdated$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api-hub-service.service.ts:30\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeData\n                        \n                    \n                \n            \n            \n                \ninitializeData(initialData: apiServiceShortStructure[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-hub-service.service.ts:128\n                        \n                    \n\n\n            \n                \n                        Инициализирует данные списка API сервисов.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                initialData\n                                            \n                                                            apiServiceShortStructure[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНачальные данные списка API сервисов.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiListSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-hub-service.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/hubs`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-hub-service.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hubConnection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     signalR.HubConnection\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-hub-service.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ordersUpdated$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.apiListSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-hub-service.service.ts:30\n                        \n                    \n\n            \n                \n                    Наблюдаемый объект, содержащий обновленный список API сервисов.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Input, NgZone } from '@angular/core';\nimport * as signalR from '@microsoft/signalr';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { apiServiceShortStructure } from \"../interfaces/apiServiceShortStructure\";\n\n/**\n * Сервис для взаимодействия с SignalR хабом для управления API сервисами.\n *\n * @remarks\n * Этот сервис управляет подключением к SignalR хабу и обрабатывает события, связанные с API сервисами.\n * Он использует BehaviorSubject для управления состоянием списка API сервисов.\n *\n * @type {ApiHubServiceService}\n * @memberof Component\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiHubServiceService {\n  private hubConnection!: signalR.HubConnection;\n  private apiListSubject = new BehaviorSubject([]);\n  private baseUrl = `${window.location.origin}/hubs`;\n\n  /**\n   * Наблюдаемый объект, содержащий обновленный список API сервисов.\n   *\n   * @type {Observable}\n   * @memberof ApiHubServiceService\n   */\n  ordersUpdated$: Observable = this.apiListSubject.asObservable();\n\n  constructor() {\n    this.hubConnection = new signalR.HubConnectionBuilder()\n      .withUrl(`hubs/apilisthub`, {\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets\n      })\n      .withAutomaticReconnect([1000, 3000, 5000])\n      .build();\n\n    this.hubConnection\n      .start()\n      .then(() => console.log('Connected to SignalR hub'))\n      .catch(err => console.error('Error connecting to SignalR hub:', err));\n\n    /**\n     * Обработчик события получения списка API сервисов.\n     *\n     * @param {apiServiceShortStructure[]} apiList - Список API сервисов.\n     * @listens RecieveMessage\n     * @memberof ApiHubServiceService\n     */\n    this.hubConnection.on('RecieveMessage', (apiList: apiServiceShortStructure[]) => {\n      this.apiListSubject.next(apiList);\n      console.log(apiList);\n    });\n\n    /**\n     * Обработчик события добавления нового API сервиса.\n     *\n     * @param {apiServiceShortStructure} api - Новый API сервис.\n     * @listens AddService\n     * @memberof ApiHubServiceService\n     */\n    this.hubConnection.on('AddService', (api: apiServiceShortStructure) => {\n      const currentList = this.apiListSubject.getValue();\n      currentList.push(api);\n      this.apiListSubject.next(currentList);\n      console.log(currentList);\n    });\n\n    /**\n     * Обработчик события обновления существующего API сервиса.\n     *\n     * @param {string} oldName - Старое имя API сервиса.\n     * @param {apiServiceShortStructure} api - Обновленный API сервис.\n     * @listens UpdateService\n     * @memberof ApiHubServiceService\n     */\n    this.hubConnection.on('UpdateService', (oldName: string, api: apiServiceShortStructure) => {\n      const currentList = this.apiListSubject.getValue();\n      const index = currentList.findIndex((apiService: apiServiceShortStructure) => {\n        return apiService.name === oldName\n      });\n      currentList[index] = api;\n      this.apiListSubject.next(currentList);\n    });\n\n    /**\n     * Обработчик события удаления API сервиса.\n     *\n     * @param {string} name - Имя удаляемого API сервиса.\n     * @listens RemoveService\n     * @memberof ApiHubServiceService\n     */\n    this.hubConnection.on('RemoveService', (name: string) => {\n      const currentList = this.apiListSubject.getValue();\n      const index = currentList.findIndex((apiService: apiServiceShortStructure) => {\n        return apiService.name === name\n      });\n      currentList.splice(index, 1);\n      this.apiListSubject.next(currentList);\n    });\n\n    /**\n     * Обработчик события обновления статуса активности API сервиса.\n     *\n     * @param {string} name - Имя API сервиса.\n     * @param {boolean} isActive - Новый статус активности.\n     * @listens UpdateStatusService\n     * @memberof ApiHubServiceService\n     */\n    this.hubConnection.on('UpdateStatusService', (name: string, isActive: boolean) => {\n      this.apiListSubject.next(\n        this.apiListSubject.getValue().map(apiService =>\n          apiService.name === name ? { ...apiService, isActive } : apiService\n        )\n      );\n    });\n  }\n\n  /**\n   * Инициализирует данные списка API сервисов.\n   *\n   * @param {apiServiceShortStructure[]} initialData - Начальные данные списка API сервисов.\n   * @memberof ApiHubServiceService\n   */\n  initializeData(initialData: apiServiceShortStructure[]) {\n    this.apiListSubject.next(initialData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api-service.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Сервис для взаимодействия с API сервисами.\nЭтот сервис предоставляет методы для получения, создания, обновления и удаления API сервисов.\nОн использует HttpClient для выполнения HTTP-запросов и обрабатывает ошибки с помощью ErrorHandlerService.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createApiService\n                            \n                            \n                                createFullApiService\n                            \n                            \n                                deleteApiService\n                            \n                            \n                                getApiList\n                            \n                            \n                                getApiStructureList\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                updateApiService\n                            \n                            \n                                updateApiServiceStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorHandler: ErrorHandlerService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api-service.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createApiService\n                        \n                    \n                \n            \n            \n                \ncreateApiService(service: apiServiceShortStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:66\n                        \n                    \n\n\n            \n                \n                        Создает новый API сервис.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                service\n                                            \n                                                            apiServiceShortStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nКраткая структура API сервиса.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Наблюдаемый объект, содержащий созданный API сервис.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createFullApiService\n                        \n                    \n                \n            \n            \n                \ncreateFullApiService(service: ApiServiceStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:81\n                        \n                    \n\n\n            \n                \n                        Создает полный API сервис.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                service\n                                            \n                                                            ApiServiceStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nПолная структура API сервиса.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Наблюдаемый объект, указывающий на успешное создание.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteApiService\n                        \n                    \n                \n            \n            \n                \ndeleteApiService(serviceName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:114\n                        \n                    \n\n\n            \n                \n                        Удаляет API сервис по его имени.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Наблюдаемый объект, указывающий на успешное удаление.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiList\n                        \n                    \n                \n            \n            \n                \ngetApiList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:38\n                        \n                    \n\n\n            \n                \n                        Получает список всех API сервисов.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Наблюдаемый объект, содержащий список API сервисов.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiStructureList\n                        \n                    \n                \n            \n            \n                \ngetApiStructureList(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:51\n                        \n                    \n\n\n            \n                \n                        Получает структуру API сервиса по его имени.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Наблюдаемый объект, содержащий структуру API сервиса.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:152\n                        \n                    \n\n\n            \n                \n                        Обрабатывает ошибки HTTP-запросов.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОбъект ошибки HTTP.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Наблюдаемый объект, указывающий на ошибку.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiService\n                        \n                    \n                \n            \n            \n                \nupdateApiService(oldName: string, service: apiServiceShortStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:95\n                        \n                    \n\n\n            \n                \n                        Обновляет существующий API сервис.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                oldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСтарое имя API сервиса.\n\n\n                                            \n                                        \n                                        \n                                                service\n                                            \n                                                            apiServiceShortStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовая структура API сервиса.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Наблюдаемый объект, содержащий обновленный API сервис.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiServiceStatus\n                        \n                    \n                \n            \n            \n                \nupdateApiServiceStatus(serviceName: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:130\n                        \n                    \n\n\n            \n                \n                        Обновляет статус активности API сервиса.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовый статус активности.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Наблюдаемый объект, указывающий на успешное обновление статуса.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/api`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-service.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { ApiServiceStructure } from \"../interfaces/ApiServiceStructure\";\nimport { apiServiceShortStructure } from \"../interfaces/apiServiceShortStructure\";\nimport { ErrorHandlerService } from './error-handler.service';\n\n/**\n * Сервис для взаимодействия с API сервисами.\n *\n * @remarks\n * Этот сервис предоставляет методы для получения, создания, обновления и удаления API сервисов.\n * Он использует HttpClient для выполнения HTTP-запросов и обрабатывает ошибки с помощью ErrorHandlerService.\n *\n * @type {ApiService}\n * @memberof Component\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  private baseUrl = `${window.location.origin}/api`;\n\n  constructor(\n    private http: HttpClient,\n    private errorHandler: ErrorHandlerService,\n    private alerts: TuiAlertService\n  ) {}\n\n  /**\n   * Получает список всех API сервисов.\n   *\n   * @returns {Observable} Наблюдаемый объект, содержащий список API сервисов.\n   * @memberof ApiService\n   */\n  getApiList(): Observable {\n    return this.http\n      .get(`${this.baseUrl}/ApiService`)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  /**\n   * Получает структуру API сервиса по его имени.\n   *\n   * @param {string} name - Имя API сервиса.\n   * @returns {Observable} Наблюдаемый объект, содержащий структуру API сервиса.\n   * @memberof ApiService\n   */\n  getApiStructureList(name: string): Observable {\n    return this.http\n      .get(\n        `${this.baseUrl}/ApiService/${encodeURIComponent(name)}`\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  /**\n   * Создает новый API сервис.\n   *\n   * @param {apiServiceShortStructure} service - Краткая структура API сервиса.\n   * @returns {Observable} Наблюдаемый объект, содержащий созданный API сервис.\n   * @memberof ApiService\n   */\n  createApiService(\n    service: apiServiceShortStructure\n  ): Observable {\n    return this.http\n      .post(`${this.baseUrl}/ApiService`, service)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  /**\n   * Создает полный API сервис.\n   *\n   * @param {ApiServiceStructure} service - Полная структура API сервиса.\n   * @returns {Observable} Наблюдаемый объект, указывающий на успешное создание.\n   * @memberof ApiService\n   */\n  createFullApiService(service: ApiServiceStructure): Observable {\n    return this.http\n      .post(`${this.baseUrl}/ApiService`, service)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  /**\n   * Обновляет существующий API сервис.\n   *\n   * @param {string} oldName - Старое имя API сервиса.\n   * @param {apiServiceShortStructure} service - Новая структура API сервиса.\n   * @returns {Observable} Наблюдаемый объект, содержащий обновленный API сервис.\n   * @memberof ApiService\n   */\n  updateApiService(\n    oldName: string,\n    service: apiServiceShortStructure\n  ): Observable {\n    return this.http\n      .put(\n        `${this.baseUrl}/ApiService/${encodeURIComponent(oldName)}`,\n        service\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  /**\n   * Удаляет API сервис по его имени.\n   *\n   * @param {string} serviceName - Имя API сервиса.\n   * @returns {Observable} Наблюдаемый объект, указывающий на успешное удаление.\n   * @memberof ApiService\n   */\n  deleteApiService(serviceName: string): Observable {\n    return this.http\n      .delete(\n        `${this.baseUrl}/ApiService/${encodeURIComponent(serviceName)}`\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  /**\n   * Обновляет статус активности API сервиса.\n   *\n   * @param {string} serviceName - Имя API сервиса.\n   * @param {boolean} isActive - Новый статус активности.\n   * @returns {Observable} Наблюдаемый объект, указывающий на успешное обновление статуса.\n   * @memberof ApiService\n   */\n  updateApiServiceStatus(\n    serviceName: string,\n    isActive: boolean\n  ): Observable {\n    return this.http\n      .patch(\n        `${this.baseUrl}/ApiService/${encodeURIComponent(\n          serviceName\n        )}/${isActive}`,\n        null\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  /**\n   * Обрабатывает ошибки HTTP-запросов.\n   *\n   * @private\n   * @param {HttpErrorResponse} error - Объект ошибки HTTP.\n   * @returns {Observable} Наблюдаемый объект, указывающий на ошибку.\n   * @memberof ApiService\n   */\n  private handleError(error: HttpErrorResponse): Observable {\n    this.errorHandler.handleError(error);\n    this.alerts.open(error.message, { appearance: 'negative' }).subscribe();\n    return throwError(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiServiceRepositoryService.html":{"url":"injectables/ApiServiceRepositoryService.html","title":"injectable - ApiServiceRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiServiceRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/api-service-repository.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Сервис для управления API сервисами.\nЭтот сервис предоставляет методы для получения, создания, обновления и удаления API сервисов.\nОн взаимодействует с ApiService для выполнения операций.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createApiService\n                            \n                            \n                                createFullApiService\n                            \n                            \n                                deleteApiService\n                            \n                            \n                                getApiList\n                            \n                            \n                                getApiStructureList\n                            \n                            \n                                updateApiService\n                            \n                            \n                                updateApiServiceStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/api-service-repository.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createApiService\n                        \n                    \n                \n            \n            \n                \ncreateApiService(service: apiServiceShortStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:51\n                        \n                    \n\n\n            \n                \n                        Создает новый API сервис.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                service\n                                            \n                                                            apiServiceShortStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nКраткая структура API сервиса.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Наблюдаемый объект, содержащий созданный API сервис.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createFullApiService\n                        \n                    \n                \n            \n            \n                \ncreateFullApiService(service: ApiServiceStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Создает полный API сервис.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                service\n                                            \n                                                            ApiServiceStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nПолная структура API сервиса.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Наблюдаемый объект, указывающий на успешное создание.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteApiService\n                        \n                    \n                \n            \n            \n                \ndeleteApiService(serviceName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:90\n                        \n                    \n\n\n            \n                \n                        Удаляет API сервис по его имени.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Наблюдаемый объект, указывающий на успешное удаление.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiList\n                        \n                    \n                \n            \n            \n                \ngetApiList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Получает список всех API сервисов.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Наблюдаемый объект, содержащий список API сервисов.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiStructureList\n                        \n                    \n                \n            \n            \n                \ngetApiStructureList(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Получает структуру API сервиса по его имени.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Наблюдаемый объект, содержащий структуру API сервиса.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiService\n                        \n                    \n                \n            \n            \n                \nupdateApiService(oldName: string, service: apiServiceShortStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Обновляет существующий API сервис.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                oldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСтарое имя API сервиса.\n\n\n                                            \n                                        \n                                        \n                                                service\n                                            \n                                                            apiServiceShortStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовая структура API сервиса.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Наблюдаемый объект, содержащий обновленный API сервис.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiServiceStatus\n                        \n                    \n                \n            \n            \n                \nupdateApiServiceStatus(serviceName: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:102\n                        \n                    \n\n\n            \n                \n                        Обновляет статус активности API сервиса.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовый статус активности.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Наблюдаемый объект, указывающий на успешное обновление статуса.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiServiceStructure } from \"../interfaces/ApiServiceStructure\";\nimport { apiServiceShortStructure } from \"../interfaces/apiServiceShortStructure\";\nimport { ApiService } from '../services/api-service.service';\n\n/**\n * Сервис для управления API сервисами.\n *\n * @remarks\n * Этот сервис предоставляет методы для получения, создания, обновления и удаления API сервисов.\n * Он взаимодействует с `ApiService` для выполнения операций.\n *\n * @type {ApiServiceRepositoryService}\n * @memberof Component\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiServiceRepositoryService {\n  constructor(private apiService: ApiService) {}\n\n  /**\n   * Получает список всех API сервисов.\n   *\n   * @returns {Observable} Наблюдаемый объект, содержащий список API сервисов.\n   * @memberof ApiServiceRepositoryService\n   */\n  getApiList(): Observable {\n    return this.apiService.getApiList();\n  }\n\n  /**\n   * Получает структуру API сервиса по его имени.\n   *\n   * @param {string} name - Имя API сервиса.\n   * @returns {Observable} Наблюдаемый объект, содержащий структуру API сервиса.\n   * @memberof ApiServiceRepositoryService\n   */\n  getApiStructureList(name: string): Observable {\n    return this.apiService.getApiStructureList(name);\n  }\n\n  /**\n   * Создает новый API сервис.\n   *\n   * @param {apiServiceShortStructure} service - Краткая структура API сервиса.\n   * @returns {Observable} Наблюдаемый объект, содержащий созданный API сервис.\n   * @memberof ApiServiceRepositoryService\n   */\n  createApiService(\n    service: apiServiceShortStructure\n  ): Observable {\n    return this.apiService.createApiService(service);\n  }\n\n  /**\n   * Создает полный API сервис.\n   *\n   * @param {ApiServiceStructure} service - Полная структура API сервиса.\n   * @returns {Observable} Наблюдаемый объект, указывающий на успешное создание.\n   * @memberof ApiServiceRepositoryService\n   */\n  createFullApiService(service: ApiServiceStructure): Observable {\n    return this.apiService.createFullApiService(service);\n  }\n\n  /**\n   * Обновляет существующий API сервис.\n   *\n   * @param {string} oldName - Старое имя API сервиса.\n   * @param {apiServiceShortStructure} service - Новая структура API сервиса.\n   * @returns {Observable} Наблюдаемый объект, содержащий обновленный API сервис.\n   * @memberof ApiServiceRepositoryService\n   */\n  updateApiService(\n    oldName: string,\n    service: apiServiceShortStructure\n  ): Observable {\n    return this.apiService.updateApiService(oldName, service);\n  }\n\n  /**\n   * Удаляет API сервис по его имени.\n   *\n   * @param {string} serviceName - Имя API сервиса.\n   * @returns {Observable} Наблюдаемый объект, указывающий на успешное удаление.\n   * @memberof ApiServiceRepositoryService\n   */\n  deleteApiService(serviceName: string): Observable {\n    return this.apiService.deleteApiService(serviceName);\n  }\n\n  /**\n   * Обновляет статус активности API сервиса.\n   *\n   * @param {string} serviceName - Имя API сервиса.\n   * @param {boolean} isActive - Новый статус активности.\n   * @returns {Observable} Наблюдаемый объект, указывающий на успешное обновление статуса.\n   * @memberof ApiServiceRepositoryService\n   */\n  updateApiServiceStatus(\n    serviceName: string,\n    isActive: boolean\n  ): Observable {\n    return this.apiService.updateApiServiceStatus(serviceName, isActive);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiServiceStructure.html":{"url":"interfaces/ApiServiceStructure.html","title":"interface - ApiServiceStructure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiServiceStructure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/ApiServiceStructure.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс, представляющий полную структуру API сервиса.\nЭтот интерфейс расширяет apiServiceShortStructure, добавляя массив сущностей.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            entities\n                                        \n                                \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Описание сервиса.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entities\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entities:         Entity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Entity[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Массив сущностей, связанных с сервисом.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : false\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Флаг активности сервиса.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Название сервиса.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Entity } from \"./Entity\";\n\n/**\n * Интерфейс, представляющий полную структуру API сервиса.\n *\n * @remarks\n * Этот интерфейс расширяет `apiServiceShortStructure`, добавляя массив сущностей.\n *\n * @type {{ name: string, isActive: boolean, description: string, entities: Entity[] }}\n * @default { name: '', isActive: false, description: '', entities: [] }\n * @memberof Component\n */\nexport interface ApiServiceStructure {\n  /**\n   * Название сервиса.\n   * @type {string}\n   */\n  name: string;\n\n  /**\n   * Флаг активности сервиса.\n   * @type {boolean}\n   * @default false\n   */\n  isActive: boolean;\n\n  /**\n   * Описание сервиса.\n   * @type {string}\n   */\n  description: string;\n\n  /**\n   * Массив сущностей, связанных с сервисом.\n   * @type {Entity[]}\n   */\n  entities: Entity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                            TuiRoot\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ApiEasier'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { TuiRoot } from \"@taiga-ui/core\";\nimport { Component } from '@angular/core';\nimport { RouterModule, RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  imports: [\n    RouterOutlet, \n    TuiRoot, \n    RouterModule,\n  ],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  title = 'ApiEasier';\n}\n\n    \n\n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BackButtonComponent.html":{"url":"components/BackButtonComponent.html","title":"component - BackButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BackButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/back-button/back-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент BackButtonComponent предназначен для возврата пользователя на предыдущую страницу.\nИспользует Angular Router и Location для управления навигацией.\nЭтот компонент предоставляет функциональность кнопки \"Назад\", которая позволяет пользователю вернуться\nна предыдущую страницу или на главную страницу, если история навигации пуста.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-back-button\n            \n\n\n\n            \n                styleUrls\n                ./back-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./back-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(location: Location, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/back-button/back-button.component.ts:24\n                            \n                        \n\n                \n                    \n                            Конструктор компонента BackButtonComponent.\nВнедряет сервисы Location и Router для управления навигацией.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для работы с историей навигации.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для управления маршрутизацией.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/back-button/back-button.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Метод для возврата на предыдущую страницу.\nПроверяет текущий URL и предыдущий URL. Если предыдущий URL начинается с базового домена,\nвозвращает пользователя на предыдущую страницу. В противном случае перенаправляет на главную страницу.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n\n/**\n * Компонент BackButtonComponent предназначен для возврата пользователя на предыдущую страницу.\n * Использует Angular Router и Location для управления навигацией.\n *\n * @remarks\n * Этот компонент предоставляет функциональность кнопки \"Назад\", которая позволяет пользователю вернуться\n * на предыдущую страницу или на главную страницу, если история навигации пуста.\n *\n * @example\n * html\n * \n *\n */\n@Component({\n  selector: 'app-back-button',\n  imports: [],\n  templateUrl: './back-button.component.html',\n  styleUrls: ['./back-button.component.css'], // Исправлено с styleUrl на styleUrls\n})\nexport class BackButtonComponent {\n  /**\n   * Конструктор компонента BackButtonComponent.\n   *\n   * @param location - Сервис для работы с историей навигации.\n   * @param router - Сервис для управления маршрутизацией.\n   *\n   * @remarks\n   * Внедряет сервисы Location и Router для управления навигацией.\n   *\n   * @memberof BackButtonComponent\n   */\n  constructor(private location: Location, private router: Router) {}\n\n  /**\n   * Метод для возврата на предыдущую страницу.\n   *\n   * @remarks\n   * Проверяет текущий URL и предыдущий URL. Если предыдущий URL начинается с базового домена,\n   * возвращает пользователя на предыдущую страницу. В противном случае перенаправляет на главную страницу.\n   *\n   * @memberof BackButtonComponent\n   */\n  goBack(): void {\n    const currentUrl = this.router.url;\n    try {\n      const previousUrl = this.location.path(true);\n      const baseDomain = '/';\n      if (previousUrl.startsWith(baseDomain)) {\n        this.location.back();\n      } else {\n        this.router.navigateByUrl('/');\n      }\n    } catch (error) {\n      this.router.navigateByUrl('/');\n    }\n  }\n}\n\n    \n\n    \n        \n  Назад\n\n\n    \n\n    \n                \n                    ./back-button.component.css\n                \n                button {\n    background-color: white;\n    border: none;\n    padding: 0.625rem 1.25rem;\n    /* Относительные отступы */\n    margin: 0.625rem 0.625rem;\n    /* Относительные отступы */\n    border-radius: 0.3125rem;\n    /* Относительный радиус скругления */\n    cursor: pointer;\n    font-weight: bold;\n    transition: background-color 0.3s;\n    font-size: 1rem;\n    /* Относительный размер шрифта */\n}\n\nbutton:hover {\n    background-color: #e6e6e6;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Назад'\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BackButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardApiComponent.html":{"url":"components/CardApiComponent.html","title":"component - CardApiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardApiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/card-api/card-api.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент CardApiComponent предназначен для отображения и управления информацией о API.\nПозволяет редактировать, удалять и изменять состояние API.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует сервисы для взаимодействия с репозиторием API и управления состоянием.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-api\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            TuiAppearance\n                            TuiButton\n                            RouterModule\n                                SwitchComponent\n                                IconTrashComponent\n                                ExportApiButtonComponent\n                \n            \n\n            \n                styleUrls\n                ./card-api.component.css,../../styles/card.css,../../styles/button.css,../../styles/icon.css\n            \n\n\n\n            \n                templateUrl\n                ./card-api.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                dialog\n                            \n                            \n                                location\n                            \n                            \n                                oldName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onDeleteConfirmed\n                            \n                            \n                                onToggleChange\n                            \n                            \n                                openEditDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiDeleted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiServiceRepository: ApiServiceRepositoryService, cd: ChangeDetectorRef, alerts: TuiAlertService, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/card-api/card-api.component.ts:87\n                            \n                        \n\n                \n                    \n                            Конструктор компонента CardApiComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apiServiceRepository\n                                                  \n                                                        \n                                                                        ApiServiceRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для взаимодействия с репозиторием API.\n\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для управления изменением состояния.\n\n\n                                                        \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для отображения уведомлений.\n\n\n                                                        \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для работы с историей навигации.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        apiInfo\n                    \n                \n                \n                    \n                        Type :         apiServiceShortStructure\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-api/card-api.component.ts:65\n                            \n                        \n                \n                    \n                        Входной параметр для получения информации о API.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        apiDeleted\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-api/card-api.component.ts:73\n                            \n                        \n                \n                    \n                        Событие, которое вызывается при удалении API.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteConfirmed\n                        \n                    \n                \n            \n            \n                \nonDeleteConfirmed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-api/card-api.component.ts:191\n                        \n                    \n\n\n            \n                \n                        Обработчик подтверждения удаления API.\nУдаляет API из репозитория и уведомляет родительский компонент об удалении.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToggleChange\n                        \n                    \n                \n            \n            \n                \nonToggleChange(newState: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-api/card-api.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Обработчик изменения состояния переключателя.\nОбновляет состояние API и сохраняет изменения в репозитории.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовое состояние переключателя.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-api/card-api.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Открывает диалог для редактирования информации о API.\nСохраняет старое имя API и открывает диалог для редактирования.\nОбновляет информацию о API после закрытия диалога.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : tuiDialog(ApiDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-api/card-api.component.ts:84\n                        \n                    \n\n            \n                \n                    Диалог для редактирования информации о API.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Location\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-api/card-api.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oldName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-api/card-api.component.ts:75\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport {\n  TuiAppearance,\n  TuiButton,\n  tuiDialog,\n  TuiAlertService,\n} from '@taiga-ui/core';\nimport { RouterModule } from '@angular/router';\nimport { apiServiceShortStructure } from \"../../../interfaces/apiServiceShortStructure\";\nimport { SwitchComponent } from '../switch/switch.component';\nimport { ApiDialogComponent } from '../api-dialog/api-dialog.component';\nimport { Location } from '@angular/common';\nimport { IconTrashComponent } from '../icon-trash/icon-trash.component';\nimport { ApiServiceRepositoryService } from '../../../repositories/api-service-repository.service';\nimport { ExportApiButtonComponent } from '../export-api-button/export-api-button.component';\n\n/**\n * Компонент CardApiComponent предназначен для отображения и управления информацией о API.\n * Позволяет редактировать, удалять и изменять состояние API.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует сервисы для взаимодействия с репозиторием API и управления состоянием.\n *\n * @example\n * html\n * \n *\n */\n@Component({\n  selector: 'app-card-api',\n  imports: [\n    CommonModule,\n    TuiAppearance,\n    TuiButton,\n    RouterModule,\n    SwitchComponent,\n    IconTrashComponent,\n    ExportApiButtonComponent,\n  ],\n  templateUrl: './card-api.component.html',\n  styleUrls: [\n    './card-api.component.css',\n    '../../styles/card.css',\n    '../../styles/button.css',\n    '../../styles/icon.css',\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CardApiComponent {\n  /**\n   * Входной параметр для получения информации о API.\n   *\n   * @type {apiServiceShortStructure}\n   * @memberof CardApiComponent\n   */\n  @Input() apiInfo!: apiServiceShortStructure;\n\n  /**\n   * Событие, которое вызывается при удалении API.\n   *\n   * @type {EventEmitter}\n   * @memberof CardApiComponent\n   */\n  @Output() apiDeleted = new EventEmitter();\n\n  oldName: string = '';\n  location: Location;\n\n  /**\n   * Диалог для редактирования информации о API.\n   *\n   * @type {tuiDialog}\n   * @memberof CardApiComponent\n   */\n  private readonly dialog = tuiDialog(ApiDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  });\n\n  /**\n   * Конструктор компонента CardApiComponent.\n   *\n   * @param apiServiceRepository - Сервис для взаимодействия с репозиторием API.\n   * @param cd - Сервис для управления изменением состояния.\n   * @param alerts - Сервис для отображения уведомлений.\n   * @param location - Сервис для работы с историей навигации.\n   *\n   * @memberof CardApiComponent\n   */\n  constructor(\n    private apiServiceRepository: ApiServiceRepositoryService,\n    private cd: ChangeDetectorRef,\n    private alerts: TuiAlertService,\n    location: Location\n  ) {\n    this.location = location;\n  }\n\n  /**\n   * Обработчик изменения состояния переключателя.\n   *\n   * @param newState - Новое состояние переключателя.\n   * @remarks\n   * Обновляет состояние API и сохраняет изменения в репозитории.\n   *\n   * @memberof CardApiComponent\n   */\n  onToggleChange(newState: boolean) {\n    this.apiInfo.isActive = newState;\n    console.log('Состояние переключателя изменилось на:', newState);\n    this.apiServiceRepository\n      .updateApiServiceStatus(this.apiInfo.name, newState)\n      .subscribe({\n        next: (response) => {\n          console.log('Состояние сервиса обновлено:', response);\n        },\n        error: (error) => {\n          console.error('Ошибка при обновлении состояния сервиса:', error);\n        },\n      });\n  }\n\n  /**\n   * Открывает диалог для редактирования информации о API.\n   *\n   * @remarks\n   * Сохраняет старое имя API и открывает диалог для редактирования.\n   * Обновляет информацию о API после закрытия диалога.\n   *\n   * @memberof CardApiComponent\n   */\n  openEditDialog(): void {\n    this.oldName = this.apiInfo.name;\n    this.dialog({ ...this.apiInfo }).subscribe({\n      next: (data) => {\n        console.info(`Dialog emitted data = ${data} - ${this.apiInfo.name}}`);\n\n        this.apiServiceRepository\n          .updateApiService(this.oldName, data)\n          .subscribe({\n            next: (response) => {\n              console.log('API обновлена:', response);\n              this.apiInfo = data;\n              this.cd.markForCheck();\n              this.alerts\n                .open('API успешно обновлено', {\n                  appearance: 'success',\n                })\n                .subscribe();\n            },\n            error: (error) => {\n              if (error.status === 409) {\n                this.alerts\n                  .open('Ошибка: API с таким именем уже существует', {\n                    appearance: 'negative',\n                  })\n                  .subscribe();\n              } else {\n                this.alerts\n                  .open('Ошибка при обновлении API', {\n                    appearance: 'negative',\n                  })\n                  .subscribe();\n              }\n            },\n          });\n      },\n      complete: () => {\n        console.info('Dialog closed');\n      },\n    });\n  }\n\n  /**\n   * Обработчик подтверждения удаления API.\n   *\n   * @remarks\n   * Удаляет API из репозитория и уведомляет родительский компонент об удалении.\n   *\n   * @memberof CardApiComponent\n   */\n  onDeleteConfirmed(): void {\n    this.apiServiceRepository.deleteApiService(this.apiInfo.name).subscribe({\n      next: () => {\n        console.log(`Сервис \"${this.apiInfo.name}\" удален.`);\n        this.apiDeleted.emit();\n      },\n      error: (error) => {\n        console.error('Ошибка при удалении сервиса:', error);\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n    \n    \n    \n\n{{ apiInfo.name }}\n{{ apiInfo.description }}\n\n    К тестам\n    Детали\n    \n\n    \n\n    \n                \n                    ./card-api.component.css\n                \n                \n                \n                    ../../styles/card.css\n                \n                \nh3 {\n    margin: 0;\n    font-size: 24px;\n    color: #0056a6;\n    width: 65%; /* Ширина элемента */\n    text-overflow: ellipsis; /* Добавляем троеточие */\n    white-space: nowrap; /* Запрещаем перенос текста на новую строку */\n    overflow: hidden; /* Скрываем текст, который не помещается */\n    height: 2rem;\n}\n  \n  p {\n    margin: 10px 0;\n    color: #666;\n    font-size: 16px;\n    line-height: 1.5; /* Установите желаемую высоту строки */\n    height: calc(1.5em * 2); /* Высота равна трём строкам */\n    overflow-y: auto; /* Добавляем вертикальную прокрутку при необходимости */\n    overflow-x: hidden; /* Запрещаем горизонтальную прокрутку */\n    box-sizing: border-box; /* Включаем отступы и границы в размер элемента */\n    word-wrap: break-word; /* Перенос слов на новую строку, если они не помещаются */\n    white-space: normal; /* Разрешаем перенос текста на новую строку */\n}\n\n  /* Стилизация полосы прокрутки для WebKit-браузеров (Chrome, Safari, Edge) */\n  p::-webkit-scrollbar {\n    width: 8px; /* Ширина полосы прокрутки */\n  }\n\n  p::-webkit-scrollbar-track {\n    background: #f1f1f1; /* Цвет фона полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb {\n    background: #888; /* Цвет полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb:hover {\n    background: #555; /* Цвет полосы прокрутки при наведении */\n  }\n  \n.actions {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    flex-wrap: wrap;\n  }\n  \n.top-right {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    display: flex;\n    align-items: center;\n  }\n\n                \n                    ../../styles/button.css\n                \n                .primary-button {\n    background-color: #0056a6;\n    color: white;\n    border: none;\n    block-size: auto;\n    padding: 7px 13px;\n    border-radius: 5px;\n    cursor: pointer;\n    font-weight: bold;\n    transition: background-color 0.3s;\n    margin-left: 1rem;\n    margin-bottom: 1rem;\n  }\n  \n  .primary-button:hover {\n    background-color: #004080;\n  }\n                \n                    ../../styles/icon.css\n                \n                  \ni {\n    margin-right: 15px; /* 10px * 1.2 */\n    cursor: pointer;\n    color: #666;\n    transition: color 0.3s;\n    font-size: 20px; /* Увеличиваем размер шрифта на 20% */\n}\n\ni:hover {\n    color: #000;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ apiInfo.name }}{{ apiInfo.description }}    К тестам    Детали    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardApiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardEndpointComponent.html":{"url":"components/CardEndpointComponent.html","title":"component - CardEndpointComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardEndpointComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/card-endpoint/card-endpoint.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент CardEndpointComponent предназначен для отображения и управления информацией об эндпоинтах API.\nПозволяет редактировать, удалять и изменять состояние эндпоинтов.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует сервисы для взаимодействия с репозиторием эндпоинтов и управления состоянием.\nExample :html\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-endpoint\n            \n\n\n            \n                imports\n                \n                                SwitchComponent\n                                IconTrashComponent\n                            CommonModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./card-endpoint.component.css,../../styles/card.css,../../styles/icon.css\n            \n\n\n\n            \n                templateUrl\n                ./card-endpoint.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleEndpointUpdate\n                            \n                            \n                                    Private\n                                handleEndpointUpdateError\n                            \n                            \n                                onDeleteConfirmed\n                            \n                            \n                                onToggleChange\n                            \n                            \n                                openEditDialog\n                            \n                            \n                                    Private\n                                processEditDialogData\n                            \n                            \n                                    Private\n                                updateEndpoint\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiName\n                            \n                            \n                                endpointInfo\n                            \n                            \n                                entityInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                endpointDeleted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(endpointRepositoryService: EndpointRepositoryService, cd: ChangeDetectorRef, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:90\n                            \n                        \n\n                \n                    \n                            Конструктор компонента CardEndpointComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        endpointRepositoryService\n                                                  \n                                                        \n                                                                        EndpointRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для взаимодействия с репозиторием эндпоинтов.\n\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для управления изменением состояния.\n\n\n                                                        \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для отображения уведомлений.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        apiName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:71\n                            \n                        \n                \n                    \n                        Входной параметр для получения имени API.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        endpointInfo\n                    \n                \n                \n                    \n                        Type :         Endpoint\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:62\n                            \n                        \n                \n                    \n                        Входной параметр для получения информации об эндпоинте.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        entityInfo\n                    \n                \n                \n                    \n                        Type :         Entity\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:54\n                            \n                        \n                \n                    \n                        Входной параметр для получения информации о сущности.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        endpointDeleted\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:79\n                            \n                        \n                \n                    \n                        Событие, которое вызывается при удалении эндпоинта.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEndpointUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEndpointUpdate(response: Endpoint, data: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:192\n                        \n                    \n\n\n            \n                \n                        Обрабатывает успешное обновление эндпоинта.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОтвет от сервера.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовые данные эндпоинта.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEndpointUpdateError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEndpointUpdateError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:210\n                        \n                    \n\n\n            \n                \n                        Обрабатывает ошибку при обновлении эндпоинта.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОбъект ошибки.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteConfirmed\n                        \n                    \n                \n            \n            \n                \nonDeleteConfirmed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:235\n                        \n                    \n\n\n            \n                \n                        Обработчик подтверждения удаления эндпоинта.\nУдаляет эндпоинт из репозитория и уведомляет родительский компонент об удалении.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToggleChange\n                        \n                    \n                \n            \n            \n                \nonToggleChange(newState: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Обработчик изменения состояния переключателя.\nОбновляет состояние эндпоинта и сохраняет изменения в репозитории.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовое состояние переключателя.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:144\n                        \n                    \n\n\n            \n                \n                        Открывает диалог для редактирования информации об эндпоинте.\nОбновляет информацию об эндпоинте после закрытия диалога.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        processEditDialogData\n                        \n                    \n                \n            \n            \n                \n                        \n                    processEditDialogData(data: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:158\n                        \n                    \n\n\n            \n                \n                        Обрабатывает данные, полученные из диалога редактирования.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nДанные эндпоинта, полученные из диалога.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateEndpoint\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEndpoint(data: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Обновляет информацию об эндпоинте в репозитории.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовые данные эндпоинта.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : tuiDialog(EndpointDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:87\n                        \n                    \n\n            \n                \n                    Диалог для редактирования информации об эндпоинте.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { Endpoint } from \"../../../interfaces/Endpoint\";\nimport { Entity } from \"../../../interfaces/Entity\";\nimport { apiServiceShortStructure } from \"../../../interfaces/apiServiceShortStructure\";\nimport { Subscription } from 'rxjs';\nimport { SwitchComponent } from '../switch/switch.component';\nimport { IconTrashComponent } from '../icon-trash/icon-trash.component';\nimport { tuiDialog, TuiAlertService } from '@taiga-ui/core';\nimport { EndpointDialogComponent } from '../endpoint-dialog/endpoint-dialog.component';\nimport { EndpointRepositoryService } from '../../../repositories/endpoint-repository.service';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Компонент CardEndpointComponent предназначен для отображения и управления информацией об эндпоинтах API.\n * Позволяет редактировать, удалять и изменять состояние эндпоинтов.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует сервисы для взаимодействия с репозиторием эндпоинтов и управления состоянием.\n *\n * @example\n * html\n * \n * \n */\n@Component({\n  selector: 'app-card-endpoint',\n  imports: [SwitchComponent, IconTrashComponent, CommonModule, RouterModule],\n  templateUrl: './card-endpoint.component.html',\n  styleUrls: [\n    './card-endpoint.component.css',\n    '../../styles/card.css',\n    '../../styles/icon.css',\n  ],\n})\nexport class CardEndpointComponent {\n  /**\n   * Входной параметр для получения информации о сущности.\n   *\n   * @type {Entity}\n   * @memberof CardEndpointComponent\n   */\n  @Input() entityInfo!: Entity;\n\n  /**\n   * Входной параметр для получения информации об эндпоинте.\n   *\n   * @type {Endpoint}\n   * @memberof CardEndpointComponent\n   */\n  @Input() endpointInfo!: Endpoint;\n\n  /**\n   * Входной параметр для получения имени API.\n   *\n   * @type {string}\n   * @default ''\n   * @memberof CardEndpointComponent\n   */\n  @Input() apiName: string = '';\n\n  /**\n   * Событие, которое вызывается при удалении эндпоинта.\n   *\n   * @type {EventEmitter}\n   * @memberof CardEndpointComponent\n   */\n  @Output() endpointDeleted = new EventEmitter();\n\n  /**\n   * Диалог для редактирования информации об эндпоинте.\n   *\n   * @type {tuiDialog}\n   * @memberof CardEndpointComponent\n   */\n  private readonly dialog = tuiDialog(EndpointDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  });\n\n  /**\n   * Конструктор компонента CardEndpointComponent.\n   *\n   * @param endpointRepositoryService - Сервис для взаимодействия с репозиторием эндпоинтов.\n   * @param cd - Сервис для управления изменением состояния.\n   * @param alerts - Сервис для отображения уведомлений.\n   *\n   * @memberof CardEndpointComponent\n   */\n  constructor(\n    private endpointRepositoryService: EndpointRepositoryService,\n    private cd: ChangeDetectorRef,\n    private alerts: TuiAlertService\n  ) {}\n\n  /**\n   * Обработчик изменения состояния переключателя.\n   *\n   * @param newState - Новое состояние переключателя.\n   * @remarks\n   * Обновляет состояние эндпоинта и сохраняет изменения в репозитории.\n   *\n   * @memberof CardEndpointComponent\n   */\n  onToggleChange(newState: boolean): void {\n    this.endpointInfo.isActive = newState;\n    console.log('Состояние переключателя изменилось на:', newState);\n    this.endpointRepositoryService\n      .updateEndpointStatus(\n        this.apiName,\n        this.entityInfo.name,\n        this.endpointInfo.route,\n        newState\n      )\n      .subscribe({\n        next: (response) => {\n          console.log('Состояние сервиса обновлено:', response);\n        },\n        error: (error) => {\n          console.error('Ошибка при обновлении состояния сервиса:', error);\n        },\n      });\n  }\n\n  /**\n   * Открывает диалог для редактирования информации об эндпоинте.\n   *\n   * @remarks\n   * Обновляет информацию об эндпоинте после закрытия диалога.\n   *\n   * @memberof CardEndpointComponent\n   */\n  openEditDialog(): void {\n    this.dialog({ ...this.endpointInfo }).subscribe({\n      next: (data) => this.processEditDialogData(data),\n      complete: () => console.info('Dialog closed'),\n    });\n  }\n\n  /**\n   * Обрабатывает данные, полученные из диалога редактирования.\n   *\n   * @param data - Данные эндпоинта, полученные из диалога.\n   * @private\n   * @memberof CardEndpointComponent\n   */\n  private processEditDialogData(data: Endpoint): void {\n    console.info(`Dialog emitted data = ${data} - ${this.apiName}`);\n    this.updateEndpoint(data);\n  }\n\n  /**\n   * Обновляет информацию об эндпоинте в репозитории.\n   *\n   * @param data - Новые данные эндпоинта.\n   * @private\n   * @memberof CardEndpointComponent\n   */\n  private updateEndpoint(data: Endpoint): void {\n    this.endpointRepositoryService\n      .updateEndpoint(\n        this.apiName,\n        this.entityInfo.name,\n        this.endpointInfo.route,\n        data\n      )\n      .subscribe({\n        next: (response) => this.handleEndpointUpdate(response, data),\n        error: (error) => this.handleEndpointUpdateError(error),\n      });\n  }\n\n  /**\n   * Обрабатывает успешное обновление эндпоинта.\n   *\n   * @param response - Ответ от сервера.\n   * @param data - Новые данные эндпоинта.\n   * @private\n   * @memberof CardEndpointComponent\n   */\n  private handleEndpointUpdate(response: Endpoint, data: Endpoint): void {\n    console.log('Эндпоинт обновлен:', response);\n    this.endpointInfo = data;\n    this.cd.markForCheck();\n    this.alerts\n      .open('Эндпоинт успешно обновлен', {\n        appearance: 'success',\n      })\n      .subscribe();\n  }\n\n  /**\n   * Обрабатывает ошибку при обновлении эндпоинта.\n   *\n   * @param error - Объект ошибки.\n   * @private\n   * @memberof CardEndpointComponent\n   */\n  private handleEndpointUpdateError(error: any): void {\n    if (error.status === 409) {\n      this.alerts\n        .open('Ошибка: Эндпоинт с таким именем уже существует', {\n          appearance: 'negative',\n        })\n        .subscribe();\n    } else {\n      this.alerts\n        .open('Ошибка при обновлении эндпоинта', {\n          appearance: 'negative',\n        })\n        .subscribe();\n    }\n    console.error('Ошибка при обновлении эндпоинта:', error);\n  }\n\n  /**\n   * Обработчик подтверждения удаления эндпоинта.\n   *\n   * @remarks\n   * Удаляет эндпоинт из репозитория и уведомляет родительский компонент об удалении.\n   *\n   * @memberof CardEndpointComponent\n   */\n  onDeleteConfirmed(): void {\n    this.endpointRepositoryService\n      .deleteEndpoint(\n        this.apiName,\n        this.entityInfo.name,\n        this.endpointInfo.route\n      )\n      .subscribe({\n        next: () => {\n          console.log(`Действие \"${this.endpointInfo.route}\" удалено.`);\n          this.endpointDeleted.emit(this.endpointInfo.route);\n        },\n        error: (error) => {\n          console.error('Ошибка при удалении действия:', error);\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n    \n      \n      \n      \n    \n    {{ endpointInfo.route }}\n    Тип: {{ endpointInfo.type }}\n  \n  \n    \n\n    \n                \n                    ./card-endpoint.component.css\n                \n                \n                \n                    ../../styles/card.css\n                \n                \nh3 {\n    margin: 0;\n    font-size: 24px;\n    color: #0056a6;\n    width: 65%; /* Ширина элемента */\n    text-overflow: ellipsis; /* Добавляем троеточие */\n    white-space: nowrap; /* Запрещаем перенос текста на новую строку */\n    overflow: hidden; /* Скрываем текст, который не помещается */\n    height: 2rem;\n}\n  \n  p {\n    margin: 10px 0;\n    color: #666;\n    font-size: 16px;\n    line-height: 1.5; /* Установите желаемую высоту строки */\n    height: calc(1.5em * 2); /* Высота равна трём строкам */\n    overflow-y: auto; /* Добавляем вертикальную прокрутку при необходимости */\n    overflow-x: hidden; /* Запрещаем горизонтальную прокрутку */\n    box-sizing: border-box; /* Включаем отступы и границы в размер элемента */\n    word-wrap: break-word; /* Перенос слов на новую строку, если они не помещаются */\n    white-space: normal; /* Разрешаем перенос текста на новую строку */\n}\n\n  /* Стилизация полосы прокрутки для WebKit-браузеров (Chrome, Safari, Edge) */\n  p::-webkit-scrollbar {\n    width: 8px; /* Ширина полосы прокрутки */\n  }\n\n  p::-webkit-scrollbar-track {\n    background: #f1f1f1; /* Цвет фона полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb {\n    background: #888; /* Цвет полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb:hover {\n    background: #555; /* Цвет полосы прокрутки при наведении */\n  }\n  \n.actions {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    flex-wrap: wrap;\n  }\n  \n.top-right {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    display: flex;\n    align-items: center;\n  }\n\n                \n                    ../../styles/icon.css\n                \n                  \ni {\n    margin-right: 15px; /* 10px * 1.2 */\n    cursor: pointer;\n    color: #666;\n    transition: color 0.3s;\n    font-size: 20px; /* Увеличиваем размер шрифта на 20% */\n}\n\ni:hover {\n    color: #000;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ endpointInfo.route }}    Тип: {{ endpointInfo.type }}    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardEndpointComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardEntityComponent.html":{"url":"components/CardEntityComponent.html","title":"component - CardEntityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardEntityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/card-entity/card-entity.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент CardEntityComponent предназначен для отображения и управления информацией о сущностях API.\nПозволяет редактировать, удалять и изменять состояние сущностей.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует сервисы для взаимодействия с репозиторием сущностей и управления состоянием.\nExample :html\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-entity\n            \n\n\n            \n                imports\n                \n                                IconTrashComponent\n                                SwitchComponent\n                            CommonModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./card-entity.component.css,../../styles/card.css,../../styles/button.css,../../styles/icon.css\n            \n\n\n\n            \n                templateUrl\n                ./card-entity.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                dialog\n                            \n                            \n                                    Private\n                                loading\n                            \n                            \n                                    Private\n                                oldName\n                            \n                            \n                                    Private\n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleEditDialogData\n                            \n                            \n                                    Private\n                                handleEntityDeletion\n                            \n                            \n                                    Private\n                                handleEntityUpdate\n                            \n                            \n                                    Private\n                                handleEntityUpdateError\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                onDeleteConfirmed\n                            \n                            \n                                onToggleChange\n                            \n                            \n                                openEditDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiName\n                            \n                            \n                                entityInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                entityDeleted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cd: ChangeDetectorRef, entityRepositoryService: EntityRepositoryService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/card-entity/card-entity.component.ts:85\n                            \n                        \n\n                \n                    \n                            Конструктор компонента CardEntityComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для управления изменением состояния.\n\n\n                                                        \n                                                \n                                                \n                                                        entityRepositoryService\n                                                  \n                                                        \n                                                                        EntityRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для взаимодействия с репозиторием сущностей.\n\n\n                                                        \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для отображения уведомлений.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        apiName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-entity/card-entity.component.ts:62\n                            \n                        \n                \n                    \n                        Входной параметр для получения имени API.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        entityInfo\n                    \n                \n                \n                    \n                        Type :         Entity\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-entity/card-entity.component.ts:53\n                            \n                        \n                \n                    \n                        Входной параметр для получения информации о сущности.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        entityDeleted\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-entity/card-entity.component.ts:70\n                            \n                        \n                \n                    \n                        Событие, которое вызывается при удалении сущности.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEditDialogData\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEditDialogData(data: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:164\n                        \n                    \n\n\n            \n                \n                        Обрабатывает данные, полученные из диалога редактирования.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nДанные сущности, полученные из диалога.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEntityDeletion\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEntityDeletion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:207\n                        \n                    \n\n\n            \n                \n                        Обрабатывает удаление сущности.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEntityUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEntityUpdate(response: Entity, data: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:181\n                        \n                    \n\n\n            \n                \n                        Обрабатывает успешное обновление сущности.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОтвет от сервера.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовые данные сущности.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEntityUpdateError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEntityUpdateError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:197\n                        \n                    \n\n\n            \n                \n                        Обрабатывает ошибку при обновлении сущности.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОбъект ошибки.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(message: string, error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:220\n                        \n                    \n\n\n            \n                \n                        Обрабатывает ошибки и отображает уведомления.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСообщение об ошибке.\n\n\n                                            \n                                        \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОбъект ошибки.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteConfirmed\n                        \n                    \n                \n            \n            \n                \nonDeleteConfirmed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:147\n                        \n                    \n\n\n            \n                \n                        Обработчик подтверждения удаления сущности.\nУдаляет сущность из репозитория и уведомляет родительский компонент об удалении.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToggleChange\n                        \n                    \n                \n            \n            \n                \nonToggleChange(newState: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:111\n                        \n                    \n\n\n            \n                \n                        Обработчик изменения состояния переключателя.\nОбновляет состояние сущности и сохраняет изменения в репозитории.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовое состояние переключателя.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:131\n                        \n                    \n\n\n            \n                \n                        Открывает диалог для редактирования информации о сущности.\nОбновляет информацию о сущности после закрытия диалога.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : tuiDialog(EntityDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-entity/card-entity.component.ts:82\n                        \n                    \n\n            \n                \n                    Диалог для редактирования информации о сущности.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-entity/card-entity.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        oldName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-entity/card-entity.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-entity/card-entity.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { Entity } from \"../../../interfaces/Entity\";\nimport { RouterModule } from '@angular/router';\nimport { IconTrashComponent } from '../icon-trash/icon-trash.component';\nimport { SwitchComponent } from '../switch/switch.component';\nimport { Subscription } from 'rxjs';\nimport { tuiDialog, TuiAlertService } from '@taiga-ui/core';\nimport { EntityDialogComponent } from '../entity-dialog/entity-dialog.component';\nimport { CommonModule } from '@angular/common';\nimport { EntityRepositoryService } from '../../../repositories/entity-repository.service';\n\n/**\n * Компонент CardEntityComponent предназначен для отображения и управления информацией о сущностях API.\n * Позволяет редактировать, удалять и изменять состояние сущностей.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует сервисы для взаимодействия с репозиторием сущностей и управления состоянием.\n *\n * @example\n * html\n * \n * \n * \n */\n@Component({\n  selector: 'app-card-entity',\n  imports: [IconTrashComponent, SwitchComponent, CommonModule, RouterModule],\n  templateUrl: './card-entity.component.html',\n  styleUrls: [\n    './card-entity.component.css',\n    '../../styles/card.css',\n    '../../styles/button.css',\n    '../../styles/icon.css',\n  ],\n})\nexport class CardEntityComponent {\n  /**\n   * Входной параметр для получения информации о сущности.\n   *\n   * @type {Entity}\n   * @memberof CardEntityComponent\n   */\n  @Input() entityInfo!: Entity;\n\n  /**\n   * Входной параметр для получения имени API.\n   *\n   * @type {string}\n   * @default ''\n   * @memberof CardEntityComponent\n   */\n  @Input() apiName: string = '';\n\n  /**\n   * Событие, которое вызывается при удалении сущности.\n   *\n   * @type {EventEmitter}\n   * @memberof CardEntityComponent\n   */\n  @Output() entityDeleted = new EventEmitter();\n\n  private oldName: string = '';\n  private sub: Subscription | null = null;\n  private loading: boolean = false;\n\n  /**\n   * Диалог для редактирования информации о сущности.\n   *\n   * @type {tuiDialog}\n   * @memberof CardEntityComponent\n   */\n  private readonly dialog = tuiDialog(EntityDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  });\n\n  /**\n   * Конструктор компонента CardEntityComponent.\n   *\n   * @param cd - Сервис для управления изменением состояния.\n   * @param entityRepositoryService - Сервис для взаимодействия с репозиторием сущностей.\n   * @param alerts - Сервис для отображения уведомлений.\n   *\n   * @memberof CardEntityComponent\n   */\n  constructor(\n    private cd: ChangeDetectorRef,\n    private entityRepositoryService: EntityRepositoryService,\n    private alerts: TuiAlertService\n  ) {}\n\n  /**\n   * Обработчик изменения состояния переключателя.\n   *\n   * @param newState - Новое состояние переключателя.\n   * @remarks\n   * Обновляет состояние сущности и сохраняет изменения в репозитории.\n   *\n   * @memberof CardEntityComponent\n   */\n  onToggleChange(newState: boolean): void {\n    this.entityInfo.isActive = newState;\n    this.entityRepositoryService\n      .updateEntityStatus(this.apiName, this.entityInfo.name, newState)\n      .subscribe({\n        next: (response) =>\n          console.log('Состояние сервиса обновлено:', response),\n        error: (error) =>\n          this.handleError('Ошибка при обновлении состояния сервиса', error),\n      });\n  }\n\n  /**\n   * Открывает диалог для редактирования информации о сущности.\n   *\n   * @remarks\n   * Обновляет информацию о сущности после закрытия диалога.\n   *\n   * @memberof CardEntityComponent\n   */\n  openEditDialog(): void {\n    this.oldName = this.entityInfo.name;\n    this.dialog({ ...this.entityInfo }).subscribe({\n      next: (data) => this.handleEditDialogData(data),\n      complete: () => console.info('Dialog closed'),\n    });\n  }\n\n  /**\n   * Обработчик подтверждения удаления сущности.\n   *\n   * @remarks\n   * Удаляет сущность из репозитория и уведомляет родительский компонент об удалении.\n   *\n   * @memberof CardEntityComponent\n   */\n  onDeleteConfirmed(): void {\n    this.entityRepositoryService\n      .deleteApiEntity(this.apiName, this.entityInfo.name)\n      .subscribe({\n        next: () => this.handleEntityDeletion(),\n        error: (error) =>\n          this.handleError('Ошибка при удалении сущности', error),\n      });\n  }\n\n  /**\n   * Обрабатывает данные, полученные из диалога редактирования.\n   *\n   * @param data - Данные сущности, полученные из диалога.\n   * @private\n   * @memberof CardEntityComponent\n   */\n  private handleEditDialogData(data: Entity): void {\n    this.entityRepositoryService\n      .updateApiEntity(this.apiName, this.oldName, data)\n      .subscribe({\n        next: (response) => this.handleEntityUpdate(response, data),\n        error: (error) => this.handleEntityUpdateError(error),\n      });\n  }\n\n  /**\n   * Обрабатывает успешное обновление сущности.\n   *\n   * @param response - Ответ от сервера.\n   * @param data - Новые данные сущности.\n   * @private\n   * @memberof CardEntityComponent\n   */\n  private handleEntityUpdate(response: Entity, data: Entity): void {\n    console.log('Сущность обновлена:', response);\n    this.entityInfo = data;\n    this.cd.markForCheck();\n    this.alerts\n      .open('Сущность успешно обновлена', { appearance: 'success' })\n      .subscribe();\n  }\n\n  /**\n   * Обрабатывает ошибку при обновлении сущности.\n   *\n   * @param error - Объект ошибки.\n   * @private\n   * @memberof CardEntityComponent\n   */\n  private handleEntityUpdateError(error: any): void {\n    this.handleError('Ошибка при обновлении сущности', error);\n  }\n\n  /**\n   * Обрабатывает удаление сущности.\n   *\n   * @private\n   * @memberof CardEntityComponent\n   */\n  private handleEntityDeletion(): void {\n    console.log(`Сущность \"${this.entityInfo.name}\" удалена.`);\n    this.entityDeleted.emit(this.entityInfo.name);\n  }\n\n  /**\n   * Обрабатывает ошибки и отображает уведомления.\n   *\n   * @param message - Сообщение об ошибке.\n   * @param error - Объект ошибки.\n   * @private\n   * @memberof CardEntityComponent\n   */\n  private handleError(message: string, error: any): void {\n    console.error(message, error);\n    if (error.status === 409) {\n      this.alerts\n        .open(`${message}: Сущность с таким именем уже существует`, {\n          appearance: 'negative',\n        })\n        .subscribe();\n    } else {\n      this.alerts.open(message, { appearance: 'negative' }).subscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n    \n    \n    \n  \n  {{ entityInfo.name }}\n  Структура \n    @if(entityInfo.structure == null){\n      отсутствует\n    }\n    @else{\n      есть\n    }\n  \n  \n    Детали\n  \n  \n    \n\n    \n                \n                    ./card-entity.component.css\n                \n                \n                \n                    ../../styles/card.css\n                \n                \nh3 {\n    margin: 0;\n    font-size: 24px;\n    color: #0056a6;\n    width: 65%; /* Ширина элемента */\n    text-overflow: ellipsis; /* Добавляем троеточие */\n    white-space: nowrap; /* Запрещаем перенос текста на новую строку */\n    overflow: hidden; /* Скрываем текст, который не помещается */\n    height: 2rem;\n}\n  \n  p {\n    margin: 10px 0;\n    color: #666;\n    font-size: 16px;\n    line-height: 1.5; /* Установите желаемую высоту строки */\n    height: calc(1.5em * 2); /* Высота равна трём строкам */\n    overflow-y: auto; /* Добавляем вертикальную прокрутку при необходимости */\n    overflow-x: hidden; /* Запрещаем горизонтальную прокрутку */\n    box-sizing: border-box; /* Включаем отступы и границы в размер элемента */\n    word-wrap: break-word; /* Перенос слов на новую строку, если они не помещаются */\n    white-space: normal; /* Разрешаем перенос текста на новую строку */\n}\n\n  /* Стилизация полосы прокрутки для WebKit-браузеров (Chrome, Safari, Edge) */\n  p::-webkit-scrollbar {\n    width: 8px; /* Ширина полосы прокрутки */\n  }\n\n  p::-webkit-scrollbar-track {\n    background: #f1f1f1; /* Цвет фона полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb {\n    background: #888; /* Цвет полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb:hover {\n    background: #555; /* Цвет полосы прокрутки при наведении */\n  }\n  \n.actions {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    flex-wrap: wrap;\n  }\n  \n.top-right {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    display: flex;\n    align-items: center;\n  }\n\n                \n                    ../../styles/button.css\n                \n                .primary-button {\n    background-color: #0056a6;\n    color: white;\n    border: none;\n    block-size: auto;\n    padding: 7px 13px;\n    border-radius: 5px;\n    cursor: pointer;\n    font-weight: bold;\n    transition: background-color 0.3s;\n    margin-left: 1rem;\n    margin-bottom: 1rem;\n  }\n  \n  .primary-button:hover {\n    background-color: #004080;\n  }\n                \n                    ../../styles/icon.css\n                \n                  \ni {\n    margin-right: 15px; /* 10px * 1.2 */\n    cursor: pointer;\n    color: #666;\n    transition: color 0.3s;\n    font-size: 20px; /* Увеличиваем размер шрифта на 20% */\n}\n\ni:hover {\n    color: #000;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ entityInfo.name }}  Структура     @if(entityInfo.structure == null){      отсутствует    }    @else{      есть    }        Детали    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardEntityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Endpoint.html":{"url":"interfaces/Endpoint.html","title":"interface - Endpoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Endpoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/Endpoint.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс, представляющий конечную точку (endpoint).\nЭтот интерфейс используется для описания маршрута, типа и статуса активности конечной точки.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            route\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : false\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Флаг активности конечной точки.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Маршрут конечной точки.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Тип конечной точки (например, GET, POST).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Endpoint {\n  /**\n   * Маршрут конечной точки.\n   * @type {string}\n   */\n  route: string;\n\n  /**\n   * Тип конечной точки (например, GET, POST).\n   * @type {string}\n   */\n  type: string;\n\n  /**\n   * Флаг активности конечной точки.\n   * @type {boolean}\n   * @default false\n   */\n  isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EndpointDialogComponent.html":{"url":"components/EndpointDialogComponent.html","title":"component - EndpointDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EndpointDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент EndpointDialogComponent предназначен для отображения диалогового окна редактирования эндпоинта.\nПозволяет пользователю вводить и изменять данные эндпоинта, такие как маршрут и тип запроса.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует сервисы для управления диалоговыми окнами и вводом данных.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-endpoint-dialog\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            TuiAutoFocus\n                            TuiButton\n                            TuiDataListWrapper\n                            TuiInputModule\n                            TuiSelectModule\n                            TuiSlider\n                            TuiTextfield\n                            TuiTextfieldControllerModule\n                \n            \n\n            \n                styleUrls\n                ./endpoint-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./endpoint-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                context\n                            \n                            \n                                    Private\n                                    Readonly\n                                dialogs\n                            \n                            \n                                    Readonly\n                                types\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                onInput\n                            \n                            \n                                    Protected\n                                showDialog\n                            \n                            \n                                    Protected\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasValue\n                                \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        onInput\n                        \n                    \n                \n            \n            \n                \n                        \n                    onInput(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:129\n                        \n                    \n\n\n            \n                \n                        Обработчик ввода данных в поле маршрута.\nОчищает значение от недопустимых символов и обновляет данные эндпоинта.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСобытие ввода данных.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        showDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    showDialog(content: TemplateRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Открывает диалоговое окно с заданным содержимым.\nИспользует сервис TuiDialogService для открытия диалога.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                        TemplateRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nШаблон содержимого диалогового окна.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        submit\n                        \n                    \n                \n            \n            \n                \n                        \n                    submit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:98\n                        \n                    \n\n\n            \n                \n                        Обработчик отправки формы.\nПредотвращает стандартное поведение отправки формы и завершает диалог, если маршрут не пустой.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext>()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:67\n                        \n                    \n\n            \n                \n                    Контекст диалогового окна, содержащий данные эндпоинта.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:51\n                        \n                    \n\n            \n                \n                    Сервис для управления диалоговыми окнами.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        types\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['get', 'post', 'put', 'delete', 'getbyindex']\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:59\n                        \n                    \n\n            \n                \n                    Список доступных типов запросов для эндпоинта.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasValue\n                    \n                \n\n                \n                    \n                        gethasValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:76\n                                \n                            \n                    \n                        \n                                Флаг, указывающий, есть ли значение в поле маршрута.\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:86\n                                \n                            \n                    \n                        \n                                Данные эндпоинта, которые редактируются в диалоговом окне.\n\n\n                                \n                                \n                                \n                                    Returns :         Endpoint\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import type { TemplateRef } from '@angular/core';\nimport { Component, inject } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TuiAutoFocus } from '@taiga-ui/cdk';\nimport type { TuiDialogContext } from '@taiga-ui/core';\nimport { TuiButton, TuiDialogService, TuiTextfield } from '@taiga-ui/core';\nimport { TuiDataListWrapper, TuiSlider } from '@taiga-ui/kit';\nimport {\n  TuiInputModule,\n  TuiSelectModule,\n  TuiTextfieldControllerModule,\n} from '@taiga-ui/legacy';\nimport { injectContext } from '@taiga-ui/polymorpheus';\nimport { Endpoint } from \"../../../interfaces/Endpoint\";\n\n/**\n * Компонент EndpointDialogComponent предназначен для отображения диалогового окна редактирования эндпоинта.\n * Позволяет пользователю вводить и изменять данные эндпоинта, такие как маршрут и тип запроса.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует сервисы для управления диалоговыми окнами и вводом данных.\n *\n * @example\n * html\n * \n */\n@Component({\n  selector: 'app-endpoint-dialog',\n  imports: [\n    FormsModule,\n    TuiAutoFocus,\n    TuiButton,\n    TuiDataListWrapper,\n    TuiInputModule,\n    TuiSelectModule,\n    TuiSlider,\n    TuiTextfield,\n    TuiTextfieldControllerModule,\n  ],\n  templateUrl: './endpoint-dialog.component.html',\n  styleUrls: ['./endpoint-dialog.component.css'],\n})\nexport class EndpointDialogComponent {\n  /**\n   * Сервис для управления диалоговыми окнами.\n   *\n   * @type {TuiDialogService}\n   * @memberof EndpointDialogComponent\n   */\n  private readonly dialogs = inject(TuiDialogService);\n\n  /**\n   * Список доступных типов запросов для эндпоинта.\n   *\n   * @type {string[]}\n   * @memberof EndpointDialogComponent\n   */\n  readonly types: string[] = ['get', 'post', 'put', 'delete', 'getbyindex'];\n\n  /**\n   * Контекст диалогового окна, содержащий данные эндпоинта.\n   *\n   * @type {TuiDialogContext}\n   * @memberof EndpointDialogComponent\n   */\n  public readonly context = injectContext>();\n\n  /**\n   * Флаг, указывающий, есть ли значение в поле маршрута.\n   *\n   * @type {boolean}\n   * @returns {boolean} Возвращает true, если маршрут не пустой.\n   * @memberof EndpointDialogComponent\n   */\n  protected get hasValue(): boolean {\n    return this.data.route.trim() !== '';\n  }\n\n  /**\n   * Данные эндпоинта, которые редактируются в диалоговом окне.\n   *\n   * @type {Endpoint}\n   * @memberof EndpointDialogComponent\n   */\n  protected get data(): Endpoint {\n    return this.context.data;\n  }\n\n  /**\n   * Обработчик отправки формы.\n   *\n   * @remarks\n   * Предотвращает стандартное поведение отправки формы и завершает диалог, если маршрут не пустой.\n   *\n   * @memberof EndpointDialogComponent\n   */\n  protected submit(): void {\n    if (event) {\n      event.preventDefault();\n    }\n    if (this.hasValue) {\n      this.context.completeWith(this.data);\n    }\n  }\n\n  /**\n   * Открывает диалоговое окно с заданным содержимым.\n   *\n   * @param content - Шаблон содержимого диалогового окна.\n   * @remarks\n   * Использует сервис TuiDialogService для открытия диалога.\n   *\n   * @memberof EndpointDialogComponent\n   */\n  protected showDialog(content: TemplateRef): void {\n    this.dialogs.open(content, { dismissible: true }).subscribe();\n  }\n\n  /**\n   * Обработчик ввода данных в поле маршрута.\n   *\n   * @param event - Событие ввода данных.\n   * @remarks\n   * Очищает значение от недопустимых символов и обновляет данные эндпоинта.\n   *\n   * @memberof EndpointDialogComponent\n   */\n  protected onInput(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    const value = input.value;\n    const cleanedValue = value.replace(/[^a-zA-Z0-9]/g, '');\n    input.value = cleanedValue;\n    this.data.route = cleanedValue;\n  }\n}\n\n    \n\n    \n        \n  Имя эндпоинта\n\n\n\n  Тип\n  \n\n\n\n  \n    Отправить\n  \n\n\n    \n\n    \n                \n                    ./endpoint-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Имя эндпоинта  Тип        Отправить  '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EndpointDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EndpointRepositoryService.html":{"url":"injectables/EndpointRepositoryService.html","title":"injectable - EndpointRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EndpointRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/endpoint-repository.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Сервис для управления конечными точками (endpoints).\nЭтот сервис предоставляет методы для получения, создания, обновления и удаления конечных точек.\nОн взаимодействует с EndpointService для выполнения операций.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEndpoint\n                            \n                            \n                                deleteEndpoint\n                            \n                            \n                                getEndpointByName\n                            \n                            \n                                getEndpointList\n                            \n                            \n                                updateEndpoint\n                            \n                            \n                                updateEndpointStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(endpointService: EndpointService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/endpoint-repository.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        endpointService\n                                                  \n                                                        \n                                                                        EndpointService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createEndpoint\n                        \n                    \n                \n            \n            \n                \ncreateEndpoint(apiServiceName: string, entityName: string, endpoint: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Создает новую конечную точку для указанного API сервиса и сущности.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя сущности.\n\n\n                                            \n                                        \n                                        \n                                                endpoint\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСтруктура новой конечной точки.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Наблюдаемый объект, содержащий созданную конечную точку.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEndpoint\n                        \n                    \n                \n            \n            \n                \ndeleteEndpoint(apiServiceName: string, entityName: string, endpointName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:84\n                        \n                    \n\n\n            \n                \n                        Удаляет конечную точку по её имени для указанного API сервиса и сущности.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя сущности.\n\n\n                                            \n                                        \n                                        \n                                                endpointName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя конечной точки.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Наблюдаемый объект, указывающий на успешное удаление.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEndpointByName\n                        \n                    \n                \n            \n            \n                \ngetEndpointByName(apiServiceName: string, entityName: string, endpointName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Получает конечную точку по её имени для указанного API сервиса и сущности.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя сущности.\n\n\n                                            \n                                        \n                                        \n                                                endpointName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя конечной точки.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Наблюдаемый объект, содержащий конечную точку.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEndpointList\n                        \n                    \n                \n            \n            \n                \ngetEndpointList(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:31\n                        \n                    \n\n\n            \n                \n                        Получает список конечных точек для указанного API сервиса и сущности.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя сущности.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Наблюдаемый объект, содержащий список конечных точек.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEndpoint\n                        \n                    \n                \n            \n            \n                \nupdateEndpoint(apiServiceName: string, entityName: string, endpointName: string, endpoint: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:71\n                        \n                    \n\n\n            \n                \n                        Обновляет существующую конечную точку для указанного API сервиса и сущности.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя сущности.\n\n\n                                            \n                                        \n                                        \n                                                endpointName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя конечной точки.\n\n\n                                            \n                                        \n                                        \n                                                endpoint\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовая структура конечной точки.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Наблюдаемый объект, содержащий обновленную конечную точку.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEndpointStatus\n                        \n                    \n                \n            \n            \n                \nupdateEndpointStatus(apiServiceName: string, entityName: string, endpointName: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:98\n                        \n                    \n\n\n            \n                \n                        Обновляет статус активности конечной точки.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя сущности.\n\n\n                                            \n                                        \n                                        \n                                                endpointName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя конечной точки.\n\n\n                                            \n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовый статус активности.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Наблюдаемый объект, указывающий на успешное обновление статуса.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EndpointService as EndpointService } from '../services/endpoint-service.service';\nimport { Endpoint as Endpoint } from \"../interfaces/Endpoint\";\nimport { Observable } from 'rxjs';\n\n/**\n * Сервис для управления конечными точками (endpoints).\n *\n * @remarks\n * Этот сервис предоставляет методы для получения, создания, обновления и удаления конечных точек.\n * Он взаимодействует с `EndpointService` для выполнения операций.\n *\n * @type {EndpointRepositoryService}\n * @memberof Component\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class EndpointRepositoryService {\n\n  constructor(private endpointService: EndpointService) { }\n\n  /**\n   * Получает список конечных точек для указанного API сервиса и сущности.\n   *\n   * @param {string} apiServiceName - Имя API сервиса.\n   * @param {string} entityName - Имя сущности.\n   * @returns {Observable} Наблюдаемый объект, содержащий список конечных точек.\n   * @memberof EndpointRepositoryService\n   */\n  getEndpointList(apiServiceName: string, entityName: string): Observable {\n    return this.endpointService.getEndpointList(apiServiceName, entityName);\n  }\n\n  /**\n   * Создает новую конечную точку для указанного API сервиса и сущности.\n   *\n   * @param {string} apiServiceName - Имя API сервиса.\n   * @param {string} entityName - Имя сущности.\n   * @param {Endpoint} endpoint - Структура новой конечной точки.\n   * @returns {Observable} Наблюдаемый объект, содержащий созданную конечную точку.\n   * @memberof EndpointRepositoryService\n   */\n  createEndpoint(apiServiceName: string, entityName: string, endpoint: Endpoint): Observable {\n    return this.endpointService.createEndpoint(apiServiceName, entityName, endpoint);\n  }\n\n  /**\n   * Получает конечную точку по её имени для указанного API сервиса и сущности.\n   *\n   * @param {string} apiServiceName - Имя API сервиса.\n   * @param {string} entityName - Имя сущности.\n   * @param {string} endpointName - Имя конечной точки.\n   * @returns {Observable} Наблюдаемый объект, содержащий конечную точку.\n   * @memberof EndpointRepositoryService\n   */\n  getEndpointByName(apiServiceName: string, entityName: string, endpointName: string): Observable {\n    return this.endpointService.getEndpointByName(apiServiceName, entityName, endpointName);\n  }\n\n  /**\n   * Обновляет существующую конечную точку для указанного API сервиса и сущности.\n   *\n   * @param {string} apiServiceName - Имя API сервиса.\n   * @param {string} entityName - Имя сущности.\n   * @param {string} endpointName - Имя конечной точки.\n   * @param {Endpoint} endpoint - Новая структура конечной точки.\n   * @returns {Observable} Наблюдаемый объект, содержащий обновленную конечную точку.\n   * @memberof EndpointRepositoryService\n   */\n  updateEndpoint(apiServiceName: string, entityName: string, endpointName: string, endpoint: Endpoint): Observable {\n    return this.endpointService.updateEndpoint(apiServiceName, entityName, endpointName, endpoint);\n  }\n\n  /**\n   * Удаляет конечную точку по её имени для указанного API сервиса и сущности.\n   *\n   * @param {string} apiServiceName - Имя API сервиса.\n   * @param {string} entityName - Имя сущности.\n   * @param {string} endpointName - Имя конечной точки.\n   * @returns {Observable} Наблюдаемый объект, указывающий на успешное удаление.\n   * @memberof EndpointRepositoryService\n   */\n  deleteEndpoint(apiServiceName: string, entityName: string, endpointName: string): Observable {\n    return this.endpointService.deleteEndpoint(apiServiceName, entityName, endpointName);\n  }\n\n  /**\n   * Обновляет статус активности конечной точки.\n   *\n   * @param {string} apiServiceName - Имя API сервиса.\n   * @param {string} entityName - Имя сущности.\n   * @param {string} endpointName - Имя конечной точки.\n   * @param {boolean} isActive - Новый статус активности.\n   * @returns {Observable} Наблюдаемый объект, указывающий на успешное обновление статуса.\n   * @memberof EndpointRepositoryService\n   */\n  updateEndpointStatus(apiServiceName: string, entityName: string, endpointName: string, isActive: boolean): Observable {\n    return this.endpointService.updateEndpointStatus(apiServiceName, entityName, endpointName, isActive);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EndpointService.html":{"url":"injectables/EndpointService.html","title":"injectable - EndpointService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EndpointService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/endpoint-service.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Сервис для управления конечными точками (endpoints).\nЭтот сервис предоставляет методы для получения, создания, обновления и удаления конечных точек.\nОн использует HttpClient для выполнения HTTP-запросов и обрабатывает ошибки с помощью ErrorHandlerService.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEndpoint\n                            \n                            \n                                deleteEndpoint\n                            \n                            \n                                getEndpointByName\n                            \n                            \n                                getEndpointList\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                updateEndpoint\n                            \n                            \n                                updateEndpointStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorHandler: ErrorHandlerService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/endpoint-service.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createEndpoint\n                        \n                    \n                \n            \n            \n                \ncreateEndpoint(apiServiceName: string, entityName: string, action: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Создает новую конечную точку для указанного API сервиса и сущности.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя сущности.\n\n\n                                            \n                                        \n                                        \n                                                action\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСтруктура новой конечной точки.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Наблюдаемый объект, содержащий созданную конечную точку.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEndpoint\n                        \n                    \n                \n            \n            \n                \ndeleteEndpoint(apiServiceName: string, entityName: string, actionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:126\n                        \n                    \n\n\n            \n                \n                        Удаляет конечную точку по её имени для указанного API сервиса и сущности.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя сущности.\n\n\n                                            \n                                        \n                                        \n                                                actionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя конечной точки.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Наблюдаемый объект, указывающий на успешное удаление.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEndpointByName\n                        \n                    \n                \n            \n            \n                \ngetEndpointByName(apiServiceName: string, entityName: string, actionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:81\n                        \n                    \n\n\n            \n                \n                        Получает конечную точку по её имени для указанного API сервиса и сущности.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя сущности.\n\n\n                                            \n                                        \n                                        \n                                                actionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя конечной точки.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Наблюдаемый объект, содержащий конечную точку.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEndpointList\n                        \n                    \n                \n            \n            \n                \ngetEndpointList(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Получает список конечных точек для указанного API сервиса и сущности.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя сущности.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Наблюдаемый объект, содержащий список конечных точек.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:170\n                        \n                    \n\n\n            \n                \n                        Обрабатывает ошибки HTTP-запросов.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОбъект ошибки HTTP.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Наблюдаемый объект, указывающий на ошибку.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEndpoint\n                        \n                    \n                \n            \n            \n                \nupdateEndpoint(apiServiceName: string, entityName: string, actionName: string, action: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Обновляет существующую конечную точку для указанного API сервиса и сущности.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя сущности.\n\n\n                                            \n                                        \n                                        \n                                                actionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя конечной точки.\n\n\n                                            \n                                        \n                                        \n                                                action\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовая структура конечной точки.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Наблюдаемый объект, содержащий обновленную конечную точку.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEndpointStatus\n                        \n                    \n                \n            \n            \n                \nupdateEndpointStatus(serviceName: string, entityName: string, endpoint: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:148\n                        \n                    \n\n\n            \n                \n                        Обновляет статус активности конечной точки.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя сущности.\n\n\n                                            \n                                        \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя конечной точки.\n\n\n                                            \n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовый статус активности.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Наблюдаемый объект, указывающий на успешное обновление статуса.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/api`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/endpoint-service.service.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Endpoint } from \"../interfaces/Endpoint\";\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { ErrorHandlerService } from './error-handler.service';\n\n/**\n * Сервис для управления конечными точками (endpoints).\n *\n * @remarks\n * Этот сервис предоставляет методы для получения, создания, обновления и удаления конечных точек.\n * Он использует HttpClient для выполнения HTTP-запросов и обрабатывает ошибки с помощью ErrorHandlerService.\n *\n * @type {EndpointService}\n * @memberof Component\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class EndpointService {\n  private baseUrl = `${window.location.origin}/api`;\n\n  constructor(\n    private http: HttpClient,\n    private errorHandler: ErrorHandlerService,\n    private alerts: TuiAlertService\n  ) {}\n\n  /**\n   * Получает список конечных точек для указанного API сервиса и сущности.\n   *\n   * @param {string} apiServiceName - Имя API сервиса.\n   * @param {string} entityName - Имя сущности.\n   * @returns {Observable} Наблюдаемый объект, содержащий список конечных точек.\n   * @memberof EndpointService\n   */\n  getEndpointList(\n    apiServiceName: string,\n    entityName: string\n  ): Observable {\n    return this.http\n      .get(\n        `${this.baseUrl}/ApiEndpoint/${apiServiceName}/${entityName}`\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  /**\n   * Создает новую конечную точку для указанного API сервиса и сущности.\n   *\n   * @param {string} apiServiceName - Имя API сервиса.\n   * @param {string} entityName - Имя сущности.\n   * @param {Endpoint} action - Структура новой конечной точки.\n   * @returns {Observable} Наблюдаемый объект, содержащий созданную конечную точку.\n   * @memberof EndpointService\n   */\n  createEndpoint(\n    apiServiceName: string,\n    entityName: string,\n    action: Endpoint\n  ): Observable {\n    return this.http\n      .post(\n        `${this.baseUrl}/ApiEndpoint/${apiServiceName}/${entityName}`,\n        action\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  /**\n   * Получает конечную точку по её имени для указанного API сервиса и сущности.\n   *\n   * @param {string} apiServiceName - Имя API сервиса.\n   * @param {string} entityName - Имя сущности.\n   * @param {string} actionName - Имя конечной точки.\n   * @returns {Observable} Наблюдаемый объект, содержащий конечную точку.\n   * @memberof EndpointService\n   */\n  getEndpointByName(\n    apiServiceName: string,\n    entityName: string,\n    actionName: string\n  ): Observable {\n    return this.http\n      .get(\n        `${this.baseUrl}/ApiEndpoint/${apiServiceName}/${entityName}/${actionName}`\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  /**\n   * Обновляет существующую конечную точку для указанного API сервиса и сущности.\n   *\n   * @param {string} apiServiceName - Имя API сервиса.\n   * @param {string} entityName - Имя сущности.\n   * @param {string} actionName - Имя конечной точки.\n   * @param {Endpoint} action - Новая структура конечной точки.\n   * @returns {Observable} Наблюдаемый объект, содержащий обновленную конечную точку.\n   * @memberof EndpointService\n   */\n  updateEndpoint(\n    apiServiceName: string,\n    entityName: string,\n    actionName: string,\n    action: Endpoint\n  ): Observable {\n    return this.http\n      .put(\n        `${this.baseUrl}/ApiEndpoint/${apiServiceName}/${entityName}/${actionName}`,\n        action\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  /**\n   * Удаляет конечную точку по её имени для указанного API сервиса и сущности.\n   *\n   * @param {string} apiServiceName - Имя API сервиса.\n   * @param {string} entityName - Имя сущности.\n   * @param {string} actionName - Имя конечной точки.\n   * @returns {Observable} Наблюдаемый объект, указывающий на успешное удаление.\n   * @memberof EndpointService\n   */\n  deleteEndpoint(\n    apiServiceName: string,\n    entityName: string,\n    actionName: string\n  ): Observable {\n    return this.http\n      .delete(\n        `${this.baseUrl}/ApiEndpoint/${apiServiceName}/${entityName}/${actionName}`\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  /**\n   * Обновляет статус активности конечной точки.\n   *\n   * @param {string} serviceName - Имя API сервиса.\n   * @param {string} entityName - Имя сущности.\n   * @param {string} endpoint - Имя конечной точки.\n   * @param {boolean} isActive - Новый статус активности.\n   * @returns {Observable} Наблюдаемый объект, указывающий на успешное обновление статуса.\n   * @memberof EndpointService\n   */\n  updateEndpointStatus(\n    serviceName: string,\n    entityName: string,\n    endpoint: string,\n    isActive: boolean\n  ): Observable {\n    return this.http\n      .patch(\n        `${this.baseUrl}/ApiEndpoint/${serviceName}/${entityName}/${endpoint}/${isActive}`,\n        null\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  /**\n   * Обрабатывает ошибки HTTP-запросов.\n   *\n   * @private\n   * @param {HttpErrorResponse} error - Объект ошибки HTTP.\n   * @returns {Observable} Наблюдаемый объект, указывающий на ошибку.\n   * @memberof EndpointService\n   */\n  private handleError(error: HttpErrorResponse): Observable {\n    this.errorHandler.handleError(error);\n    this.alerts.open(error.message, { appearance: 'negative' }).subscribe();\n    return throwError(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Entity.html":{"url":"interfaces/Entity.html","title":"interface - Entity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Entity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/Entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс, представляющий сущность.\nЭтот интерфейс используется для описания сущности, включая её структуру и связанные конечные точки.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            endpoints\n                                        \n                                \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            structure\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endpoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endpoints:         Endpoint[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Endpoint[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Массив конечных точек, связанных с сущностью.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : false\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Флаг активности сущности.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Название сущности.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        structure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        structure:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Структура сущности.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Endpoint } from \"./Endpoint\";\n\n/**\n * Интерфейс, представляющий сущность.\n *\n * @remarks\n * Этот интерфейс используется для описания сущности, включая её структуру и связанные конечные точки.\n *\n * @type {{ name: string, isActive: boolean, structure: any, endpoints: Endpoint[] }}\n * @default { name: '', isActive: false, structure: {}, endpoints: [] }\n * @memberof Component\n */\nexport interface Entity {\n  /**\n   * Название сущности.\n   * @type {string}\n   */\n  name: string;\n\n  /**\n   * Флаг активности сущности.\n   * @type {boolean}\n   * @default false\n   */\n  isActive: boolean;\n\n  /**\n   * Структура сущности.\n   * @type {any}\n   */\n  structure: any;\n\n  /**\n   * Массив конечных точек, связанных с сущностью.\n   * @type {Endpoint[]}\n   */\n  endpoints: Endpoint[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EntityDialogComponent.html":{"url":"components/EntityDialogComponent.html","title":"component - EntityDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EntityDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/entity-dialog/entity-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент EntityDialogComponent предназначен для отображения диалогового окна редактирования сущности.\nПозволяет пользователю вводить и изменять данные сущности, такие как имя и структура.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует сервисы для управления диалоговыми окнами и вводом данных.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-entity-edit-dialog\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            TuiAutoFocus\n                            TuiButton\n                            TuiDataListWrapper\n                            TuiInputModule\n                            TuiSelectModule\n                            TuiSlider\n                            TuiTextfield\n                            TuiTextfieldControllerModule\n                            TuiTextareaModule\n                \n            \n\n            \n                styleUrls\n                ./entity-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./entity-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                alerts\n                            \n                            \n                                    Public\n                                    Readonly\n                                context\n                            \n                            \n                                    Private\n                                    Readonly\n                                dialogs\n                            \n                            \n                                    Private\n                                isCanSubmit\n                            \n                            \n                                    \n                                nameInputRef\n                            \n                            \n                                    \n                                structureInputRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                handleKeyboardEvent\n                            \n                            \n                                    Protected\n                                handleSubmit\n                            \n                            \n                                    Protected\n                                moveFocus\n                            \n                            \n                                    Protected\n                                onInput\n                            \n                            \n                                    Protected\n                                showDialog\n                            \n                            \n                                    Private\n                                showError\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:keydown\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasValue\n                                \n                                \n                                    data\n                                \n                                \n                                    structure\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:keydown\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:keydown(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Обработчик событий клавиатуры.\nОбрабатывает нажатия клавиш \"Enter\" и \"Escape\".\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСобытие клавиатуры.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleKeyboardEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleKeyboardEvent(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Обработчик событий клавиатуры.\nОбрабатывает нажатия клавиш \"Enter\" и \"Escape\".\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСобытие клавиатуры.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        handleSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:194\n                        \n                    \n\n\n            \n                \n                        Обработчик отправки формы.\nПроверяет корректность данных и завершает диалог, если данные валидны.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moveFocus\n                        \n                    \n                \n            \n            \n                \n                        \n                    moveFocus(targetInput: ElementRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:263\n                        \n                    \n\n\n            \n                \n                        Перемещает фокус на указанное поле ввода.\nИспользуется для управления фокусом между полями ввода.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                targetInput\n                                            \n                                                        ElementRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСсылка на элемент ввода.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        onInput\n                        \n                    \n                \n            \n            \n                \n                        \n                    onInput(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:246\n                        \n                    \n\n\n            \n                \n                        Обработчик ввода данных в поле имени.\nОчищает значение от недопустимых символов и обновляет данные сущности.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСобытие ввода данных.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        showDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    showDialog(content: TemplateRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:216\n                        \n                    \n\n\n            \n                \n                        Открывает диалоговое окно с заданным содержимым.\nИспользует сервис TuiDialogService для открытия диалога.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                        TemplateRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nШаблон содержимого диалогового окна.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showError\n                        \n                    \n                \n            \n            \n                \n                        \n                    showError(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:227\n                        \n                    \n\n\n            \n                \n                        Отображает сообщение об ошибке.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСообщение об ошибке.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:91\n                        \n                    \n\n            \n                \n                    Сервис для отображения уведомлений.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext>()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:108\n                        \n                    \n\n            \n                \n                    Контекст диалогового окна, содержащий данные сущности.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:83\n                        \n                    \n\n            \n                \n                    Сервис для управления диалоговыми окнами.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isCanSubmit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:100\n                        \n                    \n\n            \n                \n                    Флаг, указывающий, можно ли отправить данные.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nameInputRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('nameInput', {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:66\n                        \n                    \n\n            \n                \n                    Ссылка на элемент ввода имени.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        structureInputRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('descriptionInput', {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:75\n                        \n                    \n\n            \n                \n                    Ссылка на элемент ввода структуры.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasValue\n                    \n                \n\n                \n                    \n                        gethasValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:117\n                                \n                            \n                    \n                        \n                                Флаг, указывающий, есть ли значение в поле имени.\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:127\n                                \n                            \n                    \n                        \n                                Данные сущности, которые редактируются в диалоговом окне.\n\n\n                                \n                                \n                                \n                                    Returns :         Entity\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        structure\n                    \n                \n\n                \n                    \n                        getstructure()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:138\n                                \n                            \n                    \n                        \n                                Возвращает структуру сущности в формате JSON.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setstructure(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:154\n                                \n                            \n                    \n                        \n                                Устанавливает структуру сущности из строки JSON.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nСтрока JSON для установки структуры.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import type { TemplateRef } from '@angular/core';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  HostListener,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TuiAutoFocus } from '@taiga-ui/cdk';\nimport type { TuiDialogContext } from '@taiga-ui/core';\nimport {\n  TuiButton,\n  TuiDialogService,\n  TuiTextfield,\n  TuiAlertService,\n} from '@taiga-ui/core';\nimport { TuiDataListWrapper, TuiSlider } from '@taiga-ui/kit';\nimport { TuiTextareaModule } from '@taiga-ui/legacy';\nimport {\n  TuiInputModule,\n  TuiSelectModule,\n  TuiTextfieldControllerModule,\n} from '@taiga-ui/legacy';\nimport { injectContext } from '@taiga-ui/polymorpheus';\nimport { Entity } from \"../../../interfaces/Entity\";\n\n/**\n * Компонент EntityDialogComponent предназначен для отображения диалогового окна редактирования сущности.\n * Позволяет пользователю вводить и изменять данные сущности, такие как имя и структура.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует сервисы для управления диалоговыми окнами и вводом данных.\n *\n * @example\n * html\n * \n */\n@Component({\n  selector: 'app-entity-edit-dialog',\n  imports: [\n    FormsModule,\n    TuiAutoFocus,\n    TuiButton,\n    TuiDataListWrapper,\n    TuiInputModule,\n    TuiSelectModule,\n    TuiSlider,\n    TuiTextfield,\n    TuiTextfieldControllerModule,\n    TuiTextareaModule,\n  ],\n  templateUrl: './entity-dialog.component.html',\n  styleUrls: ['./entity-dialog.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EntityDialogComponent {\n  /**\n   * Ссылка на элемент ввода имени.\n   *\n   * @type {ElementRef}\n   * @memberof EntityDialogComponent\n   */\n  @ViewChild('nameInput', { read: ElementRef }) nameInputRef!: ElementRef;\n\n  /**\n   * Ссылка на элемент ввода структуры.\n   *\n   * @type {ElementRef}\n   * @memberof EntityDialogComponent\n   */\n  @ViewChild('descriptionInput', { read: ElementRef })\n  structureInputRef!: ElementRef;\n\n  /**\n   * Сервис для управления диалоговыми окнами.\n   *\n   * @type {TuiDialogService}\n   * @memberof EntityDialogComponent\n   */\n  private readonly dialogs = inject(TuiDialogService);\n\n  /**\n   * Сервис для отображения уведомлений.\n   *\n   * @type {TuiAlertService}\n   * @memberof EntityDialogComponent\n   */\n  private readonly alerts = inject(TuiAlertService);\n\n  /**\n   * Флаг, указывающий, можно ли отправить данные.\n   *\n   * @type {boolean}\n   * @default true\n   * @memberof EntityDialogComponent\n   */\n  private isCanSubmit: boolean = true;\n\n  /**\n   * Контекст диалогового окна, содержащий данные сущности.\n   *\n   * @type {TuiDialogContext}\n   * @memberof EntityDialogComponent\n   */\n  public readonly context = injectContext>();\n\n  /**\n   * Флаг, указывающий, есть ли значение в поле имени.\n   *\n   * @type {boolean}\n   * @returns {boolean} Возвращает true, если имя не пустое.\n   * @memberof EntityDialogComponent\n   */\n  protected get hasValue(): boolean {\n    return this.data.name.trim() !== '';\n  }\n\n  /**\n   * Данные сущности, которые редактируются в диалоговом окне.\n   *\n   * @type {Entity}\n   * @memberof EntityDialogComponent\n   */\n  protected get data(): Entity {\n    return this.context.data;\n  }\n\n  /**\n   * Возвращает структуру сущности в формате JSON.\n   *\n   * @type {string}\n   * @returns {string} Структура сущности в формате JSON.\n   * @memberof EntityDialogComponent\n   */\n  protected get structure(): string {\n    try {\n      if (this.data.structure == null) return '';\n      return JSON.stringify(this.data.structure, null, 2);\n    } catch (error) {\n      console.error('Ошибка при преобразовании структуры в JSON:', error);\n      return '';\n    }\n  }\n\n  /**\n   * Устанавливает структуру сущности из строки JSON.\n   *\n   * @param value - Строка JSON для установки структуры.\n   * @memberof EntityDialogComponent\n   */\n  protected set structure(value: string) {\n    try {\n      this.data.structure = JSON.parse(value);\n      this.isCanSubmit = true;\n    } catch {\n      if (value.length === 0) {\n        this.data.structure = null;\n        this.isCanSubmit = true;\n        return;\n      }\n      this.isCanSubmit = false;\n    }\n  }\n\n  /**\n   * Обработчик событий клавиатуры.\n   *\n   * @param event - Событие клавиатуры.\n   * @remarks\n   * Обрабатывает нажатия клавиш \"Enter\" и \"Escape\".\n   *\n   * @memberof EntityDialogComponent\n   */\n  @HostListener('document:keydown', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent): void {\n    if (event.key === 'Enter') {\n      this.handleSubmit();\n    } else if (event.key === 'Escape') {\n      // Обработка нажатия клавиши \"Escape\"\n    }\n  }\n\n  /**\n   * Обработчик отправки формы.\n   *\n   * @remarks\n   * Проверяет корректность данных и завершает диалог, если данные валидны.\n   *\n   * @memberof EntityDialogComponent\n   */\n  protected handleSubmit(): void {\n    if (!this.isCanSubmit) {\n      this.showError('JSON не правильной структуры');\n      return;\n    }\n    if (event) {\n      event.preventDefault();\n    }\n    if (this.hasValue) {\n      this.context.completeWith(this.data);\n    }\n  }\n\n  /**\n   * Открывает диалоговое окно с заданным содержимым.\n   *\n   * @param content - Шаблон содержимого диалогового окна.\n   * @remarks\n   * Использует сервис TuiDialogService для открытия диалога.\n   *\n   * @memberof EntityDialogComponent\n   */\n  protected showDialog(content: TemplateRef): void {\n    this.dialogs.open(content, { dismissible: true }).subscribe();\n  }\n\n  /**\n   * Отображает сообщение об ошибке.\n   *\n   * @param message - Сообщение об ошибке.\n   * @private\n   * @memberof EntityDialogComponent\n   */\n  private showError(message: string): void {\n    this.alerts\n      .open(message, {\n        label: 'Ошибка',\n        appearance: 'negative',\n        autoClose: 5000,\n      })\n      .subscribe();\n  }\n\n  /**\n   * Обработчик ввода данных в поле имени.\n   *\n   * @param event - Событие ввода данных.\n   * @remarks\n   * Очищает значение от недопустимых символов и обновляет данные сущности.\n   *\n   * @memberof EntityDialogComponent\n   */\n  protected onInput(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    const value = input.value;\n    const cleanedValue = value.replace(/[^a-zA-Z0-9]/g, '');\n    input.value = cleanedValue;\n    this.data.name = cleanedValue;\n  }\n\n  /**\n   * Перемещает фокус на указанное поле ввода.\n   *\n   * @param targetInput - Ссылка на элемент ввода.\n   * @remarks\n   * Используется для управления фокусом между полями ввода.\n   *\n   * @memberof EntityDialogComponent\n   */\n  protected moveFocus(targetInput: ElementRef): void {\n    targetInput.nativeElement.querySelector('input, textarea').focus();\n  }\n}\n\n    \n\n    \n        \n    \n      Имя сущности\n    \n    \n  \n    \n      Структура\n    \n  \n    \n      \n        Отправить\n      \n    \n  \n  \n    \n\n    \n                \n                    ./entity-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Имя сущности                    Структура                        Отправить              '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EntityDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EntityRepositoryService.html":{"url":"injectables/EntityRepositoryService.html","title":"injectable - EntityRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EntityRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/entity-repository.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Сервис для управления сущностями.\nЭтот сервис предоставляет методы для получения, создания, обновления и удаления сущностей.\nОн взаимодействует с EntityService для выполнения операций.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createApiEntity\n                            \n                            \n                                deleteApiEntity\n                            \n                            \n                                getApiEntity\n                            \n                            \n                                getApiEntityList\n                            \n                            \n                                updateApiEntity\n                            \n                            \n                                updateEntityStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entityService: EntityService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/entity-repository.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entityService\n                                                  \n                                                        \n                                                                        EntityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createApiEntity\n                        \n                    \n                \n            \n            \n                \ncreateApiEntity(apiServiceName: string, entity: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:54\n                        \n                    \n\n\n            \n                \n                        Создает новую сущность для указанного API сервиса.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                        \n                                                entity\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСтруктура новой сущности.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Наблюдаемый объект, содержащий созданную сущность.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteApiEntity\n                        \n                    \n                \n            \n            \n                \ndeleteApiEntity(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:79\n                        \n                    \n\n\n            \n                \n                        Удаляет сущность по её имени для указанного API сервиса.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя сущности.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Наблюдаемый объект, указывающий на успешное удаление.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiEntity\n                        \n                    \n                \n            \n            \n                \ngetApiEntity(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Получает сущность по её имени для указанного API сервиса.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя сущности.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Наблюдаемый объект, содержащий сущность.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiEntityList\n                        \n                    \n                \n            \n            \n                \ngetApiEntityList(apiServiceName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:30\n                        \n                    \n\n\n            \n                \n                        Получает список сущностей для указанного API сервиса.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Наблюдаемый объект, содержащий список сущностей.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiEntity\n                        \n                    \n                \n            \n            \n                \nupdateApiEntity(apiServiceName: string, entityName: string, entity: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:67\n                        \n                    \n\n\n            \n                \n                        Обновляет существующую сущность для указанного API сервиса.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя сущности.\n\n\n                                            \n                                        \n                                        \n                                                entity\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовая структура сущности.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Наблюдаемый объект, содержащий обновленную сущность.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEntityStatus\n                        \n                    \n                \n            \n            \n                \nupdateEntityStatus(serviceName: string, entityName: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:92\n                        \n                    \n\n\n            \n                \n                        Обновляет статус активности сущности.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя сущности.\n\n\n                                            \n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовый статус активности.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Наблюдаемый объект, указывающий на успешное обновление статуса.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityService } from '../services/entity-service.service';\nimport { Observable } from 'rxjs';\nimport { Entity } from \"../interfaces/Entity\";\n\n/**\n * Сервис для управления сущностями.\n *\n * @remarks\n * Этот сервис предоставляет методы для получения, создания, обновления и удаления сущностей.\n * Он взаимодействует с `EntityService` для выполнения операций.\n *\n * @type {EntityRepositoryService}\n * @memberof Component\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class EntityRepositoryService {\n\n  constructor(private entityService: EntityService) { }\n\n  /**\n   * Получает список сущностей для указанного API сервиса.\n   *\n   * @param {string} apiServiceName - Имя API сервиса.\n   * @returns {Observable} Наблюдаемый объект, содержащий список сущностей.\n   * @memberof EntityRepositoryService\n   */\n  getApiEntityList(apiServiceName: string): Observable {\n    return this.entityService.getApiEntityList(apiServiceName);\n  }\n\n  /**\n   * Получает сущность по её имени для указанного API сервиса.\n   *\n   * @param {string} apiServiceName - Имя API сервиса.\n   * @param {string} entityName - Имя сущности.\n   * @returns {Observable} Наблюдаемый объект, содержащий сущность.\n   * @memberof EntityRepositoryService\n   */\n  getApiEntity(apiServiceName: string, entityName: string): Observable {\n    return this.entityService.getApiEntity(apiServiceName, entityName);\n  }\n\n  /**\n   * Создает новую сущность для указанного API сервиса.\n   *\n   * @param {string} apiServiceName - Имя API сервиса.\n   * @param {Entity} entity - Структура новой сущности.\n   * @returns {Observable} Наблюдаемый объект, содержащий созданную сущность.\n   * @memberof EntityRepositoryService\n   */\n  createApiEntity(apiServiceName: string, entity: Entity): Observable {\n    return this.entityService.createApiEntity(apiServiceName, entity);\n  }\n\n  /**\n   * Обновляет существующую сущность для указанного API сервиса.\n   *\n   * @param {string} apiServiceName - Имя API сервиса.\n   * @param {string} entityName - Имя сущности.\n   * @param {Entity} entity - Новая структура сущности.\n   * @returns {Observable} Наблюдаемый объект, содержащий обновленную сущность.\n   * @memberof EntityRepositoryService\n   */\n  updateApiEntity(apiServiceName: string, entityName: string, entity: Entity): Observable {\n    return this.entityService.updateApiEntity(apiServiceName, entityName, entity);\n  }\n\n  /**\n   * Удаляет сущность по её имени для указанного API сервиса.\n   *\n   * @param {string} apiServiceName - Имя API сервиса.\n   * @param {string} entityName - Имя сущности.\n   * @returns {Observable} Наблюдаемый объект, указывающий на успешное удаление.\n   * @memberof EntityRepositoryService\n   */\n  deleteApiEntity(apiServiceName: string, entityName: string): Observable {\n    return this.entityService.deleteApiEntity(apiServiceName, entityName);\n  }\n\n  /**\n   * Обновляет статус активности сущности.\n   *\n   * @param {string} serviceName - Имя API сервиса.\n   * @param {string} entityName - Имя сущности.\n   * @param {boolean} isActive - Новый статус активности.\n   * @returns {Observable} Наблюдаемый объект, указывающий на успешное обновление статуса.\n   * @memberof EntityRepositoryService\n   */\n  updateEntityStatus(serviceName: string, entityName: string, isActive: boolean): Observable {\n    return this.entityService.updateEntityStatus(serviceName, entityName, isActive);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EntityService.html":{"url":"injectables/EntityService.html","title":"injectable - EntityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/entity-service.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Сервис для управления сущностями API.\nЭтот сервис предоставляет методы для получения, создания, обновления и удаления сущностей API.\nОн использует HttpClient для выполнения HTTP-запросов и обрабатывает ошибки с помощью ErrorHandlerService.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createApiEntity\n                            \n                            \n                                deleteApiEntity\n                            \n                            \n                                getAllApiServices\n                            \n                            \n                                getApiEntity\n                            \n                            \n                                getApiEntityList\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                updateApiEntity\n                            \n                            \n                                updateEntityStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorHandler: ErrorHandlerService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/entity-service.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createApiEntity\n                        \n                    \n                \n            \n            \n                \ncreateApiEntity(apiServiceName: string, entity: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:67\n                        \n                    \n\n\n            \n                \n                        Создает новую сущность для указанного API сервиса.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                        \n                                                entity\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСтруктура новой сущности.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Наблюдаемый объект, содержащий созданную сущность.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteApiEntity\n                        \n                    \n                \n            \n            \n                \ndeleteApiEntity(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Удаляет сущность по её имени для указанного API сервиса.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя сущности.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Наблюдаемый объект, указывающий на успешное удаление.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllApiServices\n                        \n                    \n                \n            \n            \n                \ngetAllApiServices()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:140\n                        \n                    \n\n\n            \n                \n                        Получает список всех API сервисов.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Наблюдаемый объект, содержащий список API сервисов.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiEntity\n                        \n                    \n                \n            \n            \n                \ngetApiEntity(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Получает сущность по её имени для указанного API сервиса.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя сущности.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Наблюдаемый объект, содержащий сущность.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiEntityList\n                        \n                    \n                \n            \n            \n                \ngetApiEntityList(apiServiceName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Получает список сущностей для указанного API сервиса.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Наблюдаемый объект, содержащий список сущностей.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:154\n                        \n                    \n\n\n            \n                \n                        Обрабатывает ошибки HTTP-запросов.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОбъект ошибки HTTP.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Наблюдаемый объект, указывающий на ошибку.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiEntity\n                        \n                    \n                \n            \n            \n                \nupdateApiEntity(apiServiceName: string, entityName: string, entity: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Обновляет существующую сущность для указанного API сервиса.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя сущности.\n\n\n                                            \n                                        \n                                        \n                                                entity\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовая структура сущности.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Наблюдаемый объект, содержащий обновленную сущность.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEntityStatus\n                        \n                    \n                \n            \n            \n                \nupdateEntityStatus(serviceName: string, entityName: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:121\n                        \n                    \n\n\n            \n                \n                        Обновляет статус активности сущности.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя API сервиса.\n\n\n                                            \n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя сущности.\n\n\n                                            \n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовый статус активности.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Наблюдаемый объект, указывающий на успешное обновление статуса.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/api`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/entity-service.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Entity } from \"../interfaces/Entity\";\nimport { apiServiceShortStructure } from \"../interfaces/apiServiceShortStructure\";\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { ErrorHandlerService } from './error-handler.service';\n\n/**\n * Сервис для управления сущностями API.\n *\n * @remarks\n * Этот сервис предоставляет методы для получения, создания, обновления и удаления сущностей API.\n * Он использует HttpClient для выполнения HTTP-запросов и обрабатывает ошибки с помощью ErrorHandlerService.\n *\n * @type {EntityService}\n * @memberof Component\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class EntityService {\n  private baseUrl = `${window.location.origin}/api`;\n\n  constructor(\n    private http: HttpClient,\n    private errorHandler: ErrorHandlerService,\n    private alerts: TuiAlertService\n  ) {}\n\n  /**\n   * Получает список сущностей для указанного API сервиса.\n   *\n   * @param {string} apiServiceName - Имя API сервиса.\n   * @returns {Observable} Наблюдаемый объект, содержащий список сущностей.\n   * @memberof EntityService\n   */\n  getApiEntityList(apiServiceName: string): Observable {\n    return this.http\n      .get(`${this.baseUrl}/ApiEntity/${apiServiceName}`)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  /**\n   * Получает сущность по её имени для указанного API сервиса.\n   *\n   * @param {string} apiServiceName - Имя API сервиса.\n   * @param {string} entityName - Имя сущности.\n   * @returns {Observable} Наблюдаемый объект, содержащий сущность.\n   * @memberof EntityService\n   */\n  getApiEntity(apiServiceName: string, entityName: string): Observable {\n    return this.http\n      .get(`${this.baseUrl}/ApiEntity/${apiServiceName}/${entityName}`)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  /**\n   * Создает новую сущность для указанного API сервиса.\n   *\n   * @param {string} apiServiceName - Имя API сервиса.\n   * @param {Entity} entity - Структура новой сущности.\n   * @returns {Observable} Наблюдаемый объект, содержащий созданную сущность.\n   * @memberof EntityService\n   */\n  createApiEntity(apiServiceName: string, entity: Entity): Observable {\n    return this.http\n      .post(`${this.baseUrl}/ApiEntity/${apiServiceName}`, entity)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  /**\n   * Обновляет существующую сущность для указанного API сервиса.\n   *\n   * @param {string} apiServiceName - Имя API сервиса.\n   * @param {string} entityName - Имя сущности.\n   * @param {Entity} entity - Новая структура сущности.\n   * @returns {Observable} Наблюдаемый объект, содержащий обновленную сущность.\n   * @memberof EntityService\n   */\n  updateApiEntity(\n    apiServiceName: string,\n    entityName: string,\n    entity: Entity\n  ): Observable {\n    return this.http\n      .put(\n        `${this.baseUrl}/ApiEntity/${apiServiceName}/${entityName}`,\n        entity\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  /**\n   * Удаляет сущность по её имени для указанного API сервиса.\n   *\n   * @param {string} apiServiceName - Имя API сервиса.\n   * @param {string} entityName - Имя сущности.\n   * @returns {Observable} Наблюдаемый объект, указывающий на успешное удаление.\n   * @memberof EntityService\n   */\n  deleteApiEntity(\n    apiServiceName: string,\n    entityName: string\n  ): Observable {\n    return this.http\n      .delete(`${this.baseUrl}/ApiEntity/${apiServiceName}/${entityName}`)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  /**\n   * Обновляет статус активности сущности.\n   *\n   * @param {string} serviceName - Имя API сервиса.\n   * @param {string} entityName - Имя сущности.\n   * @param {boolean} isActive - Новый статус активности.\n   * @returns {Observable} Наблюдаемый объект, указывающий на успешное обновление статуса.\n   * @memberof EntityService\n   */\n  updateEntityStatus(\n    serviceName: string,\n    entityName: string,\n    isActive: boolean\n  ): Observable {\n    return this.http\n      .patch(\n        `${this.baseUrl}/ApiEntity/${serviceName}/${entityName}/${isActive}`,\n        null\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  /**\n   * Получает список всех API сервисов.\n   *\n   * @returns {Observable} Наблюдаемый объект, содержащий список API сервисов.\n   * @memberof EntityService\n   */\n  getAllApiServices(): Observable {\n    return this.http\n      .get(`${this.baseUrl}/ApiServices`)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  /**\n   * Обрабатывает ошибки HTTP-запросов.\n   *\n   * @private\n   * @param {HttpErrorResponse} error - Объект ошибки HTTP.\n   * @returns {Observable} Наблюдаемый объект, указывающий на ошибку.\n   * @memberof EntityService\n   */\n  private handleError(error: HttpErrorResponse): Observable {\n    this.errorHandler.handleError(error);\n    this.alerts.open(error.message, { appearance: 'negative' }).subscribe();\n    return throwError(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityShort.html":{"url":"interfaces/EntityShort.html","title":"interface - EntityShort","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EntityShort\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/EntityShort.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс, представляющий краткую информацию о сущности.\nЭтот интерфейс используется для описания основных характеристик сущности.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            structure\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : false\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Флаг активности сущности.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Название сущности.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        structure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        structure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Структура сущности в виде строки.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface EntityShort {\n  /**\n   * Название сущности.\n   * @type {string}\n   */\n  name: string;\n\n  /**\n   * Флаг активности сущности.\n   * @type {boolean}\n   * @default false\n   */\n  isActive: boolean;\n\n  /**\n   * Структура сущности в виде строки.\n   * @type {string}\n   */\n  structure: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorDisplayComponent.html":{"url":"components/ErrorDisplayComponent.html","title":"component - ErrorDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/pages/error-display/error-display.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент ErrorDisplayComponent отвечает за отображение страницы с ошибкой.\nОн получает код ошибки и сообщение об ошибке из параметров маршрута и отображает их пользователю.\nЭтот компонент используется для отображения информации об ошибках, которые произошли в приложении.\nОн предоставляет пользователю возможность вернуться на главную страницу.\nExample :HTML:\n```html\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-display\n            \n\n\n            \n                imports\n                \n                            TuiButton\n                \n            \n\n            \n                styleUrls\n                ./error-display.component.css\n            \n\n\n\n            \n                templateUrl\n                ./error-display.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorCode\n                            \n                            \n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/pages/error-display/error-display.component.ts:37\n                            \n                        \n\n                \n                    \n                            Конструктор компонента.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nАктивированный маршрут для получения параметров маршрута.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nРоутер для навигации между представлениями.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/error-display/error-display.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Метод для возврата на главную страницу.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/error-display/error-display.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Метод жизненного цикла, который вызывается при инициализации компонента.\nПолучает параметры маршрута и устанавливает код ошибки и сообщение об ошибке.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/error-display/error-display.component.ts:30\n                        \n                    \n\n            \n                \n                    Код ошибки.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/error-display/error-display.component.ts:37\n                        \n                    \n\n            \n                \n                    Сообщение об ошибке.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TuiButton } from '@taiga-ui/core';\n\n/**\n * Компонент ErrorDisplayComponent отвечает за отображение страницы с ошибкой.\n * Он получает код ошибки и сообщение об ошибке из параметров маршрута и отображает их пользователю.\n *\n * @remarks\n * Этот компонент используется для отображения информации об ошибках, которые произошли в приложении.\n * Он предоставляет пользователю возможность вернуться на главную страницу.\n *\n * @example\n * HTML:\n * ```html\n * \n */\n@Component({\n  selector: 'app-error-display',\n  imports: [TuiButton],\n  templateUrl: './error-display.component.html',\n  styleUrls: ['./error-display.component.css'],\n})\nexport class ErrorDisplayComponent implements OnInit {\n  /**\n   * Код ошибки.\n   * @type {string}\n   * @memberof ErrorDisplayComponent\n   */\n  errorCode!: string;\n\n  /**\n   * Сообщение об ошибке.\n   * @type {string}\n   * @memberof ErrorDisplayComponent\n   */\n  errorMessage!: string;\n\n  /**\n   * Конструктор компонента.\n   * @param {ActivatedRoute} route - Активированный маршрут для получения параметров маршрута.\n   * @param {Router} router - Роутер для навигации между представлениями.\n   */\n  constructor(private route: ActivatedRoute, private router: Router) {}\n\n  /**\n   * Метод жизненного цикла, который вызывается при инициализации компонента.\n   * Получает параметры маршрута и устанавливает код ошибки и сообщение об ошибке.\n   *\n   * @memberof ErrorDisplayComponent\n   */\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      this.errorCode = params['code'] || 'Unknown Error';\n      this.errorMessage =\n        params['message'] || 'Произошла непредвиденная ошибка.';\n    });\n  }\n\n  /**\n   * Метод для возврата на главную страницу.\n   *\n   * @memberof ErrorDisplayComponent\n   */\n  goBack(): void {\n    this.router.navigate(['/']);\n  }\n}\n\n    \n\n    \n        \n    {{ errorCode }}\n    {{ errorMessage }}\n    \n      Go Back\n    \n  \n  \n    \n\n    \n                \n                    ./error-display.component.css\n                \n                .error-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  background-color: #f9f9f9;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  max-width: 400px;\n  margin: 50px auto;\n}\n\nh1 {\n  margin: 0;\n  font-size: 36px;\n  color: #d9534f; /* Цвет для заголовка ошибки */\n}\n\nh3 {\n  margin: 0;\n  font-size: 24px;\n  color: #0056a6;\n  width: 65%;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  height: 2rem;\n}\n\np {\n  margin: 10px 0;\n  color: #666;\n  font-size: 16px;\n  line-height: 1.5;\n  height: calc(1.5em * 2);\n  overflow-y: auto;\n  overflow-x: hidden;\n  box-sizing: border-box;\n  word-wrap: break-word;\n  white-space: normal;\n}\n\n.primary-button {\n  background-color: #0056a6;\n  color: white;\n  border: 2px solid #0056a6; /* Добавлена граница */\n  padding: 10px 15px;\n  border-radius: 5px;\n  cursor: pointer;\n  font-weight: bold;\n  transition: background-color 0.3s, transform 0.2s, border-color 0.3s; /* Добавлено изменение цвета границы */\n  margin-left: 1rem;\n  margin-bottom: 1rem;\n}\n\n.primary-button:hover {\n  background-color: #004080;\n  border-color: #003366; /* Изменение цвета границы при наведении */\n  transform: scale(1.05); /* Увеличение кнопки при наведении */\n}\n\n.actions {\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n.top-right {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  display: flex;\n  align-items: center;\n}\n\n/* Стилизация полосы прокрутки для WebKit-браузеров */\np::-webkit-scrollbar {\n  width: 8px;\n}\n\np::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 10px;\n}\n\np::-webkit-scrollbar-thumb {\n  background: #888;\n  border-radius: 10px;\n}\n\np::-webkit-scrollbar-thumb:hover {\n  background: #555;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ errorCode }}    {{ errorMessage }}          Go Back        '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/error-handler.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Сервис для обработки ошибок HTTP-запросов.\nЭтот сервис предоставляет метод для обработки ошибок, возникающих при выполнении HTTP-запросов.\nОн анализирует статус ошибки и выполняет соответствующие действия, такие как отображение сообщений об ошибках\nи перенаправление пользователя на страницы ошибок.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, alertService: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/error-handler.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/error-handler.service.ts:30\n                        \n                    \n\n\n            \n                \n                        Обрабатывает ошибки HTTP-запросов.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОбъект ошибки HTTP.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { TuiAlertService } from '@taiga-ui/core';\n\n/**\n * Сервис для обработки ошибок HTTP-запросов.\n *\n * @remarks\n * Этот сервис предоставляет метод для обработки ошибок, возникающих при выполнении HTTP-запросов.\n * Он анализирует статус ошибки и выполняет соответствующие действия, такие как отображение сообщений об ошибках\n * и перенаправление пользователя на страницы ошибок.\n *\n * @type {ErrorHandlerService}\n * @memberof Component\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHandlerService {\n  constructor(private router: Router, private alertService: TuiAlertService) {}\n\n  /**\n   * Обрабатывает ошибки HTTP-запросов.\n   *\n   * @param {HttpErrorResponse} error - Объект ошибки HTTP.\n   * @returns {void}\n   * @memberof ErrorHandlerService\n   */\n  handleError(error: HttpErrorResponse): void {\n    let errorMessage = 'Произошла ошибка при обработке запроса';\n    let errorCode = error.status || 'Unknown';\n\n    switch (error.status) {\n      case 400:\n        errorMessage = 'Неверный запрос. Проверьте данные и попробуйте снова. 🤦‍♂️';\n        this.alertService.open(`Error ${errorCode}: ${errorMessage}`).subscribe();\n        break;\n      case 404:\n        errorMessage = 'Страница не найдена. Возможно, она была удалена или перемещена. 🕵️‍♂️';\n        this.router.navigate(['/page-not-found']);\n        return;\n      case 408:\n        errorMessage = 'Время ожидания запроса истекло. Попробуйте еще раз. ⏳';\n        break;\n      case 500:\n        errorMessage = 'Внутренняя ошибка сервера. Мы уже работаем над этим! 🛠️';\n        break;\n      case 502:\n        errorMessage = 'Плохой шлюз. Сервер недоступен. Попробуйте позже. 🌐';\n        break;\n      case 503:\n        errorMessage = 'Сервис временно недоступен. Мы на ремонте! 🔧';\n        break;\n      case 504:\n        errorMessage = 'Время ожидания ответа от сервера истекло. Попробуйте еще раз. ⏰';\n        break;\n      default:\n        errorMessage = `Неизвестная ошибка: ${errorMessage}. Код: ${errorCode}. 🤷‍♂️`;\n        break;\n    }\n\n    // Переход на страницу ошибки для всех остальных случаев\n    this.router.navigate(['/error'], {\n      queryParams: { code: errorCode, message: errorMessage },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExportApiButtonComponent.html":{"url":"components/ExportApiButtonComponent.html","title":"component - ExportApiButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExportApiButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/export-api-button/export-api-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент ExportApiButtonComponent предназначен для экспорта структуры API в формате JSON.\nПозволяет пользователю скачать структуру API в виде файла.\nЭтот компонент интегрируется с сервисом репозитория API для получения структуры API.\nИспользует Taiga UI для создания интерактивного интерфейса.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-export-api-button\n            \n\n\n            \n                imports\n                \n                            TuiButton\n                \n            \n\n            \n                styleUrls\n                ./export-api-button.component.css,../../styles/button.css\n            \n\n\n\n            \n                templateUrl\n                ./export-api-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiInfo\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiServiceRepository: ApiServiceRepositoryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/export-api-button/export-api-button.component.ts:32\n                            \n                        \n\n                \n                    \n                            Конструктор компонента ExportApiButtonComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apiServiceRepository\n                                                  \n                                                        \n                                                                        ApiServiceRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для взаимодействия с репозиторием API.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        apiInfo\n                    \n                \n                \n                    \n                        Type :         apiServiceShortStructure\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/export-api-button/export-api-button.component.ts:32\n                            \n                        \n                \n                    \n                        Входной параметр для получения информации о API.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/export-api-button/export-api-button.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Обработчик нажатия на кнопку экспорта.\nПолучает структуру API из репозитория и инициирует скачивание файла JSON.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { TuiButton } from '@taiga-ui/core';\nimport { ApiServiceStructure } from \"../../../interfaces/ApiServiceStructure\";\nimport { apiServiceShortStructure } from \"../../../interfaces/apiServiceShortStructure\";\nimport { ApiServiceRepositoryService } from '../../../repositories/api-service-repository.service';\n\n/**\n * Компонент ExportApiButtonComponent предназначен для экспорта структуры API в формате JSON.\n * Позволяет пользователю скачать структуру API в виде файла.\n *\n * @remarks\n * Этот компонент интегрируется с сервисом репозитория API для получения структуры API.\n * Использует Taiga UI для создания интерактивного интерфейса.\n *\n * @example\n * html\n * \n */\n@Component({\n  selector: 'app-export-api-button',\n  imports: [TuiButton],\n  templateUrl: './export-api-button.component.html',\n  styleUrls: ['./export-api-button.component.css', '../../styles/button.css'],\n})\nexport class ExportApiButtonComponent {\n  /**\n   * Входной параметр для получения информации о API.\n   *\n   * @type {apiServiceShortStructure}\n   * @memberof ExportApiButtonComponent\n   */\n  @Input() apiInfo!: apiServiceShortStructure;\n\n  /**\n   * Конструктор компонента ExportApiButtonComponent.\n   *\n   * @param apiServiceRepository - Сервис для взаимодействия с репозиторием API.\n   *\n   * @memberof ExportApiButtonComponent\n   */\n  constructor(private apiServiceRepository: ApiServiceRepositoryService) {}\n\n  /**\n   * Обработчик нажатия на кнопку экспорта.\n   *\n   * @remarks\n   * Получает структуру API из репозитория и инициирует скачивание файла JSON.\n   *\n   * @memberof ExportApiButtonComponent\n   */\n  onClick(): void {\n    this.apiServiceRepository.getApiStructureList(this.apiInfo.name).subscribe({\n      next: (data: ApiServiceStructure) => {\n        const { name, ...dataWithoutName } = data;\n        const jsonString = JSON.stringify(dataWithoutName, null, 2);\n\n        const blob = new Blob([jsonString], { type: 'application/json' });\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = `${data.name}.json`;\n        a.click();\n        window.URL.revokeObjectURL(url);\n      },\n      error: (error) => {\n        console.log(error);\n      },\n    });\n  }\n}\n\n    \n\n    \n        Экспортировать\n    \n\n    \n                \n                    ./export-api-button.component.css\n                \n                \n                \n                    ../../styles/button.css\n                \n                .primary-button {\n    background-color: #0056a6;\n    color: white;\n    border: none;\n    block-size: auto;\n    padding: 7px 13px;\n    border-radius: 5px;\n    cursor: pointer;\n    font-weight: bold;\n    transition: background-color 0.3s;\n    margin-left: 1rem;\n    margin-bottom: 1rem;\n  }\n  \n  .primary-button:hover {\n    background-color: #004080;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Экспортировать'\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExportApiButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileStatus.html":{"url":"interfaces/FileStatus.html","title":"interface - FileStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/FileStatus.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс, представляющий статус файла.\nЭтот интерфейс используется для описания состояния файла, включая статус загрузки и сообщение об ошибке.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errorMessage\n                                        \n                                \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Сообщение об ошибке.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     TuiFileLike\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TuiFileLike\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Объект файла.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \"loading\" | \"normal\" | \"error\" | \"success\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"loading\" | \"normal\" | \"error\" | \"success\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Статус файла.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import type { TuiFileLike } from '@taiga-ui/kit';\n\n/**\n * Интерфейс, представляющий статус файла.\n *\n * @remarks\n * Этот интерфейс используется для описания состояния файла, включая статус загрузки и сообщение об ошибке.\n *\n * @type {{ file: TuiFileLike, status: 'loading' | 'normal' | 'error' | 'success', errorMessage: string }}\n * @default { file: {}, status: 'normal', errorMessage: '' }\n * @memberof Component\n */\nexport interface FileStatus {\n  /**\n   * Объект файла.\n   * @type {TuiFileLike}\n   */\n  file: TuiFileLike;\n\n  /**\n   * Статус файла.\n   * @type {'loading' | 'normal' | 'error' | 'success'}\n   */\n  status: 'loading' | 'normal' | 'error' | 'success';\n\n  /**\n   * Сообщение об ошибке.\n   * @type {string}\n   */\n  errorMessage: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterByInputComponent.html":{"url":"components/FilterByInputComponent.html","title":"component - FilterByInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FilterByInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/filter-by-input/filter-by-input.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент FilterByInputComponent предназначен для фильтрации элементов на основе ввода пользователя.\nПозволяет пользователю вводить текст для поиска и фильтрации списка элементов.\nЭтот компонент использует реактивные формы Angular для управления вводом и фильтрацией данных.\nИнтегрируется с Taiga UI для создания интерактивного интерфейса.\nExample :html\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter-by-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            TuiDataListWrapper\n                            TuiInputModule\n                \n            \n\n            \n                styleUrls\n                ./filter-by-input.component.css\n            \n\n\n\n            \n                templateUrl\n                ./filter-by-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onKeyPress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                controlName\n                            \n                            \n                                items\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                searchQuery\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filteredItems\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:97\n                            \n                        \n\n                \n                    \n                            Конструктор компонента FilterByInputComponent.\nПодписывается на изменения значения контрола формы и вызывает событие searchQuery.\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        controlName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'search'\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:53\n                            \n                        \n                \n                    \n                        Имя контрола формы.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:62\n                            \n                        \n                \n                    \n                        Список элементов для фильтрации.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Search'\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:44\n                            \n                        \n                \n                    \n                        Метка для поля ввода.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        searchQuery\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:70\n                            \n                        \n                \n                    \n                        Событие, которое вызывается при изменении поискового запроса.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onKeyPress\n                        \n                    \n                \n            \n            \n                \nonKeyPress(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Обработчик нажатия клавиш.\nПредотвращает ввод недопустимых символов.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСобытие нажатия клавиши.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    [this.controlName]: new FormControl('', [Validators.pattern('^[a-zA-Z0-9]*$')]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:78\n                        \n                    \n\n            \n                \n                    Реактивная форма для управления вводом.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filteredItems\n                    \n                \n\n                \n                    \n                        getfilteredItems()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:89\n                                \n                            \n                    \n                        \n                                Возвращает отфильтрованные элементы на основе введенного значения.\n\n\n                                \n                                \n                                \n                                    Returns :     string[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { TuiDataListWrapper } from '@taiga-ui/kit';\nimport { TuiInputModule } from '@taiga-ui/legacy';\n\n/**\n * Компонент FilterByInputComponent предназначен для фильтрации элементов на основе ввода пользователя.\n * Позволяет пользователю вводить текст для поиска и фильтрации списка элементов.\n *\n * @remarks\n * Этот компонент использует реактивные формы Angular для управления вводом и фильтрацией данных.\n * Интегрируется с Taiga UI для создания интерактивного интерфейса.\n *\n * @example\n * html\n * \n * \n\n */\n@Component({\n  selector: 'app-filter-by-input',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    TuiDataListWrapper,\n    TuiInputModule,\n  ],\n  templateUrl: './filter-by-input.component.html',\n  styleUrls: ['./filter-by-input.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilterByInputComponent {\n  /**\n   * Метка для поля ввода.\n   *\n   * @type {string}\n   * @default 'Search'\n   * @memberof FilterByInputComponent\n   */\n  @Input() label: string = 'Search';\n\n  /**\n   * Имя контрола формы.\n   *\n   * @type {string}\n   * @default 'search'\n   * @memberof FilterByInputComponent\n   */\n  @Input() controlName: string = 'search';\n\n  /**\n   * Список элементов для фильтрации.\n   *\n   * @type {string[]}\n   * @default []\n   * @memberof FilterByInputComponent\n   */\n  @Input() items: string[] = [];\n\n  /**\n   * Событие, которое вызывается при изменении поискового запроса.\n   *\n   * @type {EventEmitter}\n   * @memberof FilterByInputComponent\n   */\n  @Output() searchQuery = new EventEmitter();\n\n  /**\n   * Реактивная форма для управления вводом.\n   *\n   * @type {FormGroup}\n   * @memberof FilterByInputComponent\n   */\n  form = new FormGroup({\n    [this.controlName]: new FormControl('', [Validators.pattern('^[a-zA-Z0-9]*$')]),\n  });\n\n  /**\n   * Возвращает отфильтрованные элементы на основе введенного значения.\n   *\n   * @type {string[]}\n   * @returns {string[]} Отфильтрованные элементы.\n   * @memberof FilterByInputComponent\n   */\n  get filteredItems(): string[] {\n    const control = this.form.get(this.controlName);\n    if (control) {\n      const value = control.value ?? '';\n      this.searchQuery.emit(value);\n      return this.items.filter(item => item.includes(value));\n    }\n    return this.items;\n  }\n\n  /**\n   * Конструктор компонента FilterByInputComponent.\n   *\n   * @remarks\n   * Подписывается на изменения значения контрола формы и вызывает событие searchQuery.\n   *\n   * @memberof FilterByInputComponent\n   */\n  constructor() {\n    this.form.controls[this.controlName].valueChanges.subscribe(value => {\n      this.searchQuery.emit(value ?? '');\n    });\n  }\n\n  /**\n   * Обработчик нажатия клавиш.\n   *\n   * @param event - Событие нажатия клавиши.\n   * @remarks\n   * Предотвращает ввод недопустимых символов.\n   *\n   * @memberof FilterByInputComponent\n   */\n  onKeyPress(event: KeyboardEvent): void {\n    const inputChar = event.key;\n    const allowedChars = /^[a-zA-Z0-9]$/;\n    if (!allowedChars.test(inputChar) && !event.ctrlKey && !event.metaKey) {\n      event.preventDefault();\n    }\n  }\n}\n\n    \n\n    \n        \n    \n      {{ label }}\n      \n    \n  \n  \n    \n\n    \n                \n                    ./filter-by-input.component.css\n                \n                tui-input {\n    min-width: 300px;\n    max-width: 50%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ label }}              '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterByInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент HeaderComponent предназначен для отображения заголовка страницы с логотипом и кнопкой.\nПозволяет пользователю выполнять действия, такие как возврат на предыдущую страницу или импорт данных.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует диалоговые окна для выполнения операций импорта.\nExample :html\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n            \n                imports\n                \n                                BackButtonComponent\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Click\n                            \n                            \n                                Import\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonText\n                            \n                            \n                                isApiPage\n                            \n                            \n                                logoUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/header/header.component.ts:46\n                            \n                        \n                \n                    \n                        Текст кнопки в заголовке.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isApiPage\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/header/header.component.ts:63\n                            \n                        \n                \n                    \n                        Флаг, указывающий, является ли текущая страница страницей API.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        logoUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://www.titan2.ru/images/temp/logo__ru.jpg\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/header/header.component.ts:37\n                            \n                        \n                \n                    \n                        URL логотипа для отображения в заголовке.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        buttonClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/header/header.component.ts:54\n                            \n                        \n                \n                    \n                        Событие, которое вызывается при нажатии на кнопку.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Click\n                        \n                    \n                \n            \n            \n                \nClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/header/header.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Обработчик нажатия на кнопку.\nВызывает событие buttonClick для уведомления родительского компонента о нажатии.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Import\n                        \n                    \n                \n            \n            \n                \nImport()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/header/header.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Открывает диалоговое окно для импорта данных.\nИспользует сервис tuiDialog для отображения диалогового окна.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : tuiDialog(ImportDialogComponent, {\n    closeable: true,\n    dismissible: true,\n    label: \"Импортировать\",\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/header/header.component.ts:71\n                        \n                    \n\n            \n                \n                    Диалог для импорта данных.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { BackButtonComponent } from '../back-button/back-button.component';\nimport { CommonModule } from '@angular/common';\nimport { tuiDialog } from '@taiga-ui/core';\nimport { ImportDialogComponent } from '../import-dialog/import-dialog.component';\n\n/**\n * Компонент HeaderComponent предназначен для отображения заголовка страницы с логотипом и кнопкой.\n * Позволяет пользователю выполнять действия, такие как возврат на предыдущую страницу или импорт данных.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует диалоговые окна для выполнения операций импорта.\n *\n * @example\n * html\n * \n * \n */\n@Component({\n  selector: 'app-header',\n  imports: [BackButtonComponent, CommonModule],\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'], // Исправлено с styleUrl на styleUrls\n})\nexport class HeaderComponent {\n  /**\n   * URL логотипа для отображения в заголовке.\n   *\n   * @type {string}\n   * @default \"https://www.titan2.ru/images/temp/logo__ru.jpg\"\n   * @memberof HeaderComponent\n   */\n  @Input() logoUrl: string = \"https://www.titan2.ru/images/temp/logo__ru.jpg\";\n\n  /**\n   * Текст кнопки в заголовке.\n   *\n   * @type {string}\n   * @default ''\n   * @memberof HeaderComponent\n   */\n  @Input() buttonText: string = '';\n\n  /**\n   * Событие, которое вызывается при нажатии на кнопку.\n   *\n   * @type {EventEmitter}\n   * @memberof HeaderComponent\n   */\n  @Output() buttonClick: EventEmitter = new EventEmitter();\n\n  /**\n   * Флаг, указывающий, является ли текущая страница страницей API.\n   *\n   * @type {boolean}\n   * @default false\n   * @memberof HeaderComponent\n   */\n  @Input() isApiPage: boolean = false;\n\n  /**\n   * Диалог для импорта данных.\n   *\n   * @type {tuiDialog}\n   * @memberof HeaderComponent\n   */\n  private readonly dialog = tuiDialog(ImportDialogComponent, {\n    closeable: true,\n    dismissible: true,\n    label: \"Импортировать\",\n  });\n\n  /**\n   * Обработчик нажатия на кнопку.\n   *\n   * @remarks\n   * Вызывает событие buttonClick для уведомления родительского компонента о нажатии.\n   *\n   * @memberof HeaderComponent\n   */\n  Click(): void {\n    this.buttonClick.emit();\n  }\n\n  /**\n   * Открывает диалоговое окно для импорта данных.\n   *\n   * @remarks\n   * Использует сервис tuiDialog для отображения диалогового окна.\n   *\n   * @memberof HeaderComponent\n   */\n  Import(): void {\n    this.dialog().subscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    @if(isApiPage){\n      Импортировать\n    }\n    @if(buttonText != ''){\n      {{ buttonText }}\n    }\n    \n  \n\n    \n\n    \n                \n                    ./header.component.css\n                \n                .header {\n    background-color: #0056a6;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n.header a{\n    height: 4rem;\n}\n\n.header a {\n    outline: none; /* Убирает стандартное выделение */\n}\n\n.header a img{\n    height: 4rem;\n}\n\n.header button {\n    background-color: white;\n    border: none;\n    padding: 0.625rem 1.25rem;\n    /* Относительные отступы */\n    margin: 0.625rem 0.5rem;\n    /* Относительные отступы */\n    border-radius: 0.3125rem;\n    /* Относительный радиус скругления */\n    cursor: pointer;\n    font-weight: bold;\n    transition: background-color 0.3s;\n    font-size: 1rem;\n    /* Относительный размер шрифта */\n}\n\n.header button:hover {\n    background-color: #e6e6e6;\n}\n\n@media only screen and (max-width: 768px) {\n    .header {\n        display: flex;  \n        justify-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n    }\n\n    .header a{\n        width: -webkit-fill-available;\n        height: auto;\n    }\n\n    .header a img{\n        width: -webkit-fill-available;\n        height: auto;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              @if(isApiPage){      Импортировать    }    @if(buttonText != \\'\\'){      {{ buttonText }}    }      '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpErrorInterceptor.html":{"url":"interceptors/HttpErrorInterceptor.html","title":"interceptor - HttpErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interceptors/http-error.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерсептор HttpErrorInterceptor перехватывает HTTP-запросы и обрабатывает ошибки,\nвозникающие в процессе выполнения запросов. Он использует сервис ErrorHandlerService\nдля обработки ошибок и TuiAlertService для отображения уведомлений об ошибках.\nЭтот интерсептор позволяет централизованно обрабатывать ошибки HTTP-запросов,\nчто упрощает управление ошибками в приложении. Он автоматически показывает\nуведомления об ошибках пользователю и может быть настроен для выполнения\nдополнительных действий при возникновении ошибок.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorHandler: ErrorHandlerService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/interceptors/http-error.interceptor.ts:24\n                            \n                        \n\n                \n                    \n                            Конструктор интерсептора.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для обработки ошибок.\n\n\n                                                        \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис уведомлений для отображения уведомлений об ошибках.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/interceptors/http-error.interceptor.ts:39\n                        \n                    \n\n\n            \n                \n                        Метод перехвата HTTP-запросов.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nHTTP-запрос.\n\n\n                                            \n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nHTTP-обработчик.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \nНаблюдаемый объект с HTTP-событиями.\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { ErrorHandlerService } from '../services/error-handler.service';\n\n/**\n * Интерсептор HttpErrorInterceptor перехватывает HTTP-запросы и обрабатывает ошибки,\n * возникающие в процессе выполнения запросов. Он использует сервис ErrorHandlerService\n * для обработки ошибок и TuiAlertService для отображения уведомлений об ошибках.\n *\n * @remarks\n * Этот интерсептор позволяет централизованно обрабатывать ошибки HTTP-запросов,\n * что упрощает управление ошибками в приложении. Он автоматически показывает\n * уведомления об ошибках пользователю и может быть настроен для выполнения\n * дополнительных действий при возникновении ошибок.\n *\n */\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n  /**\n   * Конструктор интерсептора.\n   * @param {ErrorHandlerService} errorHandler - Сервис для обработки ошибок.\n   * @param {TuiAlertService} alerts - Сервис уведомлений для отображения уведомлений об ошибках.\n   */\n  constructor(private errorHandler: ErrorHandlerService, private alerts: TuiAlertService) {}\n\n  /**\n   * Метод перехвата HTTP-запросов.\n   * @param {HttpRequest} req - HTTP-запрос.\n   * @param {HttpHandler} next - HTTP-обработчик.\n   * @returns {Observable>} - Наблюдаемый объект с HTTP-событиями.\n   * @memberof HttpErrorInterceptor\n   */\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        this.errorHandler.handleError(error);\n        this.alerts.open(error.message, { appearance: 'negative' }).subscribe();\n        return throwError(error);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconTrashComponent.html":{"url":"components/IconTrashComponent.html","title":"component - IconTrashComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IconTrashComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/icon-trash/icon-trash.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент IconTrashComponent предназначен для отображения иконки корзины и управления удалением элементов.\nПозволяет пользователю подтверждать удаление элементов с помощью уведомлений.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует сервисы для управления уведомлениями и маршрутизацией.\nExample :html\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-icon-trash\n            \n\n\n\n            \n                styleUrls\n                ./icon-trash.component.css,../../styles/icon.css\n            \n\n\n\n            \n                templateUrl\n                ./icon-trash.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                showNotification\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiInfo\n                            \n                            \n                                endpointInfo\n                            \n                            \n                                entityInfo\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                responseAlert\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alerts: TuiAlertService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/icon-trash/icon-trash.component.ts:74\n                            \n                        \n\n                \n                    \n                            Конструктор компонента IconTrashComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для отображения уведомлений.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для управления маршрутизацией.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        apiInfo\n                    \n                \n                \n                    \n                        Type :         apiServiceShortStructure\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/icon-trash/icon-trash.component.ts:50\n                            \n                        \n                \n                    \n                        Информация об API, связанная с элементом.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        endpointInfo\n                    \n                \n                \n                    \n                        Type :         Endpoint\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/icon-trash/icon-trash.component.ts:66\n                            \n                        \n                \n                    \n                        Информация об эндпоинте, связанная с элементом.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        entityInfo\n                    \n                \n                \n                    \n                        Type :         EntityShort\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/icon-trash/icon-trash.component.ts:58\n                            \n                        \n                \n                    \n                        Информация о сущности, связанная с элементом.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/icon-trash/icon-trash.component.ts:42\n                            \n                        \n                \n                    \n                        Элемент, который будет удален.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        responseAlert\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/icon-trash/icon-trash.component.ts:74\n                            \n                        \n                \n                    \n                        Событие, которое вызывается при подтверждении удаления элемента.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        showNotification\n                        \n                    \n                \n            \n            \n                \n                        \n                    showNotification()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/icon-trash/icon-trash.component.ts:98\n                        \n                    \n\n\n            \n                \n                        Отображает уведомление для подтверждения удаления элемента.\nИспользует сервис TuiAlertService для отображения уведомлений.\nПодписывается на события маршрутизации для автоматического закрытия уведомлений.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { switchMap, takeUntil } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { PolymorpheusComponent } from '@taiga-ui/polymorpheus';\nimport { AlertDeleteComponent } from '../alert-delete/alert-delete.component';\nimport { Endpoint } from \"../../../interfaces/Endpoint\";\nimport { apiServiceShortStructure } from \"../../../interfaces/apiServiceShortStructure\";\nimport { EntityShort } from \"../../../interfaces/EntityShort\";\n\n/**\n * Компонент IconTrashComponent предназначен для отображения иконки корзины и управления удалением элементов.\n * Позволяет пользователю подтверждать удаление элементов с помощью уведомлений.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует сервисы для управления уведомлениями и маршрутизацией.\n *\n * @example\n * html\n * \n * \n */\n@Component({\n  selector: 'app-icon-trash',\n  imports: [],\n  templateUrl: './icon-trash.component.html',\n  styleUrls: ['./icon-trash.component.css', '../../styles/icon.css'],\n})\nexport class IconTrashComponent {\n  /**\n   * Элемент, который будет удален.\n   *\n   * @type {any}\n   * @memberof IconTrashComponent\n   */\n  @Input() item: any;\n\n  /**\n   * Информация об API, связанная с элементом.\n   *\n   * @type {apiServiceShortStructure}\n   * @memberof IconTrashComponent\n   */\n  @Input() apiInfo!: apiServiceShortStructure;\n\n  /**\n   * Информация о сущности, связанная с элементом.\n   *\n   * @type {EntityShort}\n   * @memberof IconTrashComponent\n   */\n  @Input() entityInfo!: EntityShort;\n\n  /**\n   * Информация об эндпоинте, связанная с элементом.\n   *\n   * @type {Endpoint}\n   * @memberof IconTrashComponent\n   */\n  @Input() endpointInfo!: Endpoint;\n\n  /**\n   * Событие, которое вызывается при подтверждении удаления элемента.\n   *\n   * @type {EventEmitter}\n   * @memberof IconTrashComponent\n   */\n  @Output() responseAlert = new EventEmitter();\n\n  /**\n   * Конструктор компонента IconTrashComponent.\n   *\n   * @param alerts - Сервис для отображения уведомлений.\n   * @param router - Сервис для управления маршрутизацией.\n   *\n   * @memberof IconTrashComponent\n   */\n  constructor(\n    private alerts: TuiAlertService,\n    private router: Router,\n  ) {}\n\n  /**\n   * Отображает уведомление для подтверждения удаления элемента.\n   *\n   * @remarks\n   * Использует сервис TuiAlertService для отображения уведомлений.\n   * Подписывается на события маршрутизации для автоматического закрытия уведомлений.\n   *\n   * @memberof IconTrashComponent\n   */\n  protected showNotification(): void {\n    const notification = this.alerts\n      .open(new PolymorpheusComponent(AlertDeleteComponent), {\n        label: 'Вы уверены, что хотите удалить?',\n        appearance: 'negative',\n        autoClose: 0,\n      })\n      .pipe(\n        switchMap((response) => {\n          if (response) {\n            this.responseAlert.emit(true);\n            console.log(`Удаление карточки: ${this.item.name}`);\n            return this.alerts.open(`Карточка \"${this.item.name}\" удалена.`, { label: 'Успех' });\n          } else {\n            return this.alerts.open(`Удаление карточки \"${this.item.name}\" отменено.`, { label: 'Информация' });\n          }\n        }),\n        takeUntil(this.router.events),\n      );\n\n    notification.subscribe();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./icon-trash.component.css\n                \n                \n                \n                    ../../styles/icon.css\n                \n                  \ni {\n    margin-right: 15px; /* 10px * 1.2 */\n    cursor: pointer;\n    color: #666;\n    transition: color 0.3s;\n    font-size: 20px; /* Увеличиваем размер шрифта на 20% */\n}\n\ni:hover {\n    color: #000;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IconTrashComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImportDialogComponent.html":{"url":"components/ImportDialogComponent.html","title":"component - ImportDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ImportDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/import-dialog/import-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент ImportDialogComponent предназначен для импорта данных API через диалоговое окно.\nПозволяет пользователю загружать файлы и обрабатывать их содержимое для создания новых API сервисов.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует реактивные формы для управления загрузкой файлов и обработки данных.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-import-dialog\n            \n\n\n            \n                imports\n                \n                            NgIf\n                            ReactiveFormsModule\n                            TuiAvatar\n                            TuiFiles\n                            TuiLink\n                            NgFor\n                            TuiButton\n                \n            \n\n            \n                styleUrls\n                ./import-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./import-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                context\n                            \n                            \n                                    Protected\n                                    Readonly\n                                control\n                            \n                            \n                                    Protected\n                                files\n                            \n                            \n                                    Protected\n                                hasFiles\n                            \n                            \n                                    Protected\n                                processedData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getFileStatus\n                            \n                            \n                                    Protected\n                                getFileStatusText\n                            \n                            \n                                    Private\n                                processJson\n                            \n                            \n                                    Private\n                                readFiles\n                            \n                            \n                                    Protected\n                                removeFile\n                            \n                            \n                                    Protected\n                                submit\n                            \n                            \n                                    Private\n                                updateFileStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cd: ChangeDetectorRef, apiService: ApiServiceRepositoryService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:71\n                            \n                        \n\n                \n                    \n                            Конструктор компонента ImportDialogComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для управления изменением состояния.\n\n\n                                                        \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiServiceRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для взаимодействия с репозиторием API.\n\n\n                                                        \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для отображения уведомлений.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getFileStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFileStatus(file: FileStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:172\n                        \n                    \n\n\n            \n                \n                        Возвращает текущий статус файла.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            FileStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nФайл, для которого нужно получить статус.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     \"loading\" | \"normal\" | \"error\"\n\n                        \n                            \n                                Статус файла.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getFileStatusText\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFileStatusText(file: FileStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:150\n                        \n                    \n\n\n            \n                \n                        Возвращает текстовое описание статуса файла.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            FileStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nФайл, для которого нужно получить статус.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Текстовое описание статуса файла.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        processJson\n                        \n                    \n                \n            \n            \n                \n                        \n                    processJson(json: any, fileName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:193\n                        \n                    \n\n\n            \n                \n                        Обрабатывает JSON данные из файла.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                json\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nJSON данные для обработки.\n\n\n                                            \n                                        \n                                        \n                                                fileName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя файла.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    readFiles(files: File[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:108\n                        \n                    \n\n\n            \n                \n                        Читает содержимое загруженных файлов.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСписок файлов для чтения.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        removeFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeFile(fileToRemove: FileStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:260\n                        \n                    \n\n\n            \n                \n                        Удаляет файл из списка загруженных.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fileToRemove\n                                            \n                                                            FileStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nФайл, который нужно удалить.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        submit\n                        \n                    \n                \n            \n            \n                \n                        \n                    submit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:213\n                        \n                    \n\n\n            \n                \n                        Отправляет обработанные данные на сервер.\nОбновляет статус файлов и отображает уведомления о результатах отправки.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateFileStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateFileStatus(file: File, status: \"loading\" | \"normal\" | \"error\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:134\n                        \n                    \n\n\n            \n                \n                        Обновляет статус файла.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nФайл, статус которого нужно обновить.\n\n\n                                            \n                                        \n                                        \n                                                status\n                                            \n                                                        \"loading\" | \"normal\" | \"error\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовый статус файла.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext>()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:71\n                        \n                    \n\n            \n                \n                    Контекст диалогового окна.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        control\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl([])\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:38\n                        \n                    \n\n            \n                \n                    Контрол для управления загрузкой файлов.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileStatus[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:46\n                        \n                    \n\n            \n                \n                    Список загруженных файлов с их статусами.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        hasFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:55\n                        \n                    \n\n            \n                \n                    Флаг, указывающий, есть ли загруженные файлы.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        processedData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiServiceStructure[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:63\n                        \n                    \n\n            \n                \n                    Массив для хранения обработанных данных API.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { NgIf, NgFor } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, ChangeDetectorRef } from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { TuiIcon, TuiLink, TuiButton, TuiAlertService } from '@taiga-ui/core';\nimport { TuiAvatar, TuiFiles } from '@taiga-ui/kit';\nimport { ApiServiceStructure } from \"../../../interfaces/ApiServiceStructure\";\nimport { ApiServiceRepositoryService } from '../../../repositories/api-service-repository.service';\nimport { TuiDialogContext } from '@taiga-ui/core';\nimport { injectContext } from '@taiga-ui/polymorpheus';\nimport { FileStatus } from '../../../interfaces/FileStatus';\n\n/**\n * Компонент ImportDialogComponent предназначен для импорта данных API через диалоговое окно.\n * Позволяет пользователю загружать файлы и обрабатывать их содержимое для создания новых API сервисов.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует реактивные формы для управления загрузкой файлов и обработки данных.\n *\n * @example\n * html\n * \n */\n@Component({\n  selector: 'app-import-dialog',\n  imports: [NgIf, ReactiveFormsModule, TuiAvatar, TuiFiles, TuiLink, NgFor, TuiButton],\n  templateUrl: './import-dialog.component.html',\n  styleUrls: ['./import-dialog.component.css'], // Исправлено с styleUrl на styleUrls\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ImportDialogComponent {\n  /**\n   * Контрол для управления загрузкой файлов.\n   *\n   * @type {FormControl}\n   * @memberof ImportDialogComponent\n   */\n  protected readonly control = new FormControl([]);\n\n  /**\n   * Список загруженных файлов с их статусами.\n   *\n   * @type {FileStatus[]}\n   * @memberof ImportDialogComponent\n   */\n  protected files: FileStatus[] = [];\n\n  /**\n   * Флаг, указывающий, есть ли загруженные файлы.\n   *\n   * @type {boolean}\n   * @default false\n   * @memberof ImportDialogComponent\n   */\n  protected hasFiles = false;\n\n  /**\n   * Массив для хранения обработанных данных API.\n   *\n   * @type {ApiServiceStructure[]}\n   * @memberof ImportDialogComponent\n   */\n  protected processedData: ApiServiceStructure[] = [];\n\n  /**\n   * Контекст диалогового окна.\n   *\n   * @type {TuiDialogContext}\n   * @memberof ImportDialogComponent\n   */\n  private readonly context = injectContext>();\n\n  /**\n   * Конструктор компонента ImportDialogComponent.\n   *\n   * @param cd - Сервис для управления изменением состояния.\n   * @param apiService - Сервис для взаимодействия с репозиторием API.\n   * @param alerts - Сервис для отображения уведомлений.\n   *\n   * @memberof ImportDialogComponent\n   */\n  constructor(\n    private cd: ChangeDetectorRef,\n    private apiService: ApiServiceRepositoryService,\n    private readonly alerts: TuiAlertService\n  ) {\n    this.control.valueChanges.subscribe((files) => {\n      if (files) {\n        // Обновляем только новые файлы\n        const newFiles = files.filter(file => !this.files.some(f => f.file.name === file.name));\n        this.files = [\n          ...this.files,\n          ...newFiles.map(file => ({ file, status: 'loading' as const, errorMessage: '' }))\n        ];\n        this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n        this.readFiles(newFiles);\n      }\n    });\n  }\n\n  /**\n   * Читает содержимое загруженных файлов.\n   *\n   * @param files - Список файлов для чтения.\n   * @private\n   * @memberof ImportDialogComponent\n   */\n  private readFiles(files: File[]): void {\n    files.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = (e: ProgressEvent) => {\n        const text = e.target?.result as string;\n        try {\n          const json = JSON.parse(text);\n          this.updateFileStatus(file, 'normal');\n          this.processJson(json, file.name);\n        } catch (error) {\n          console.error('Ошибка при чтении JSON файла:', error);\n          this.updateFileStatus(file, 'error');\n        }\n      };\n      reader.readAsText(file);\n    });\n  }\n\n  /**\n   * Обновляет статус файла.\n   *\n   * @param file - Файл, статус которого нужно обновить.\n   * @param status - Новый статус файла.\n   * @private\n   * @memberof ImportDialogComponent\n   */\n  private updateFileStatus(file: File, status: 'loading' | 'normal' | 'error'): void {\n    const fileStatus = this.files.find(f => f.file.name === file.name);\n    if (fileStatus) {\n      fileStatus.status = status;\n      this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n      this.cd.markForCheck();\n    }\n  }\n\n  /**\n   * Возвращает текстовое описание статуса файла.\n   *\n   * @param file - Файл, для которого нужно получить статус.\n   * @returns {string} Текстовое описание статуса файла.\n   * @memberof ImportDialogComponent\n   */\n  protected getFileStatusText(file: FileStatus): string {\n    switch (file.status) {\n      case 'loading':\n        return 'Файл на проверке';\n      case 'normal':\n        return 'Файл проверен';\n      case 'error':\n        return 'Ошибка загрузки файла';\n      case 'success':\n        return 'Файл загружен';\n      default:\n        return '';\n    }\n  }\n\n  /**\n   * Возвращает текущий статус файла.\n   *\n   * @param file - Файл, для которого нужно получить статус.\n   * @returns {'loading' | 'normal' | 'error'} Статус файла.\n   * @memberof ImportDialogComponent\n   */\n  protected getFileStatus(file: FileStatus): 'loading' | 'normal' | 'error' {\n    switch (file.status) {\n      case 'loading':\n        return 'loading';\n      case 'normal':\n        return 'normal';\n      case 'error':\n        return 'error';\n      case 'success':\n        return 'normal';\n    }\n  }\n\n  /**\n   * Обрабатывает JSON данные из файла.\n   *\n   * @param json - JSON данные для обработки.\n   * @param fileName - Имя файла.\n   * @private\n   * @memberof ImportDialogComponent\n   */\n  private processJson(json: any, fileName: string): void {\n    const name = fileName.replace(/\\.[^/.]+$/, \"\");\n    const apiServiceStructure: ApiServiceStructure = {\n      name: name,\n      isActive: json.isActive || false,\n      description: json.description || '',\n      entities: json.entities || []\n    };\n    this.processedData.push(apiServiceStructure);\n    console.log('Обработанный JSON:', apiServiceStructure);\n  }\n\n  /**\n   * Отправляет обработанные данные на сервер.\n   *\n   * @remarks\n   * Обновляет статус файлов и отображает уведомления о результатах отправки.\n   *\n   * @memberof ImportDialogComponent\n   */\n  protected submit(): void {\n    if (this.processedData.length > 0) {\n      this.files.filter(f => f.status == 'normal').forEach(file => file.status = 'loading');\n      this.cd.markForCheck();\n\n      this.processedData.forEach(service => {\n        this.apiService.createFullApiService(service).subscribe({\n          next: (response) => {\n            console.log('Сервис успешно создан:', response);\n            const file = this.files.find(f => f.file.name === service.name + '.json');\n            if (file) {\n              file.status = 'success';\n              file.errorMessage = '';\n              this.cd.markForCheck();\n            }\n            this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n            if (this.files.every(file => file.status == 'success')) {\n              this.alerts\n                .open('Файлы успешно загружены', {\n                  appearance: 'success',\n                })\n                .subscribe();\n              this.context.completeWith(false);\n            }\n          },\n          error: (response) => {\n            const file = this.files.find(f => f.file.name === service.name + '.json');\n            if (file) {\n              file.status = 'error';\n              file.errorMessage = `Ошибка при создании сервиса: ${response.error}`;\n              this.cd.markForCheck();\n            }\n            this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n          }\n        });\n      });\n    } else {\n      console.warn('Нет данных для отправки.');\n    }\n  }\n\n  /**\n   * Удаляет файл из списка загруженных.\n   *\n   * @param fileToRemove - Файл, который нужно удалить.\n   * @memberof ImportDialogComponent\n   */\n  protected removeFile(fileToRemove: FileStatus): void {\n    this.files = this.files.filter(file => file !== fileToRemove);\n    this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n\n    const currentFiles = this.control.value ? this.control.value.filter(file => file !== fileToRemove.file) : [];\n    this.control.setValue(currentFiles);\n\n    this.cd.markForCheck();\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n            \n            \n                Файлы готовы к загрузке!\n                \n                \n            \n        \n        \n            \n                \n                \n                    Перетащите файлы сюда или\n                    кликните для загрузки\n                \n            \n        \n    \n\n\n\n    \n        {{ getFileStatusText(file) }}\n        {{ file.errorMessage }}\n        \n    \n\n\n\n    \n        Отправить\n    \n\n\n    \n\n    \n                \n                    ./import-dialog.component.css\n                \n                .content {\n    display: flex;\n    block-size: 10rem;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 1rem;\n}\n\nbutton[tuiIconButton] {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    color: red; /* Красный цвет для кнопки удаления */\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        Файлы готовы к загрузке!                                                                                                                            Перетащите файлы сюда или                    кликните для загрузки                                                    {{ getFileStatusText(file) }}        {{ file.errorMessage }}                        Отправить    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImportDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingComponent.html":{"url":"components/LoadingComponent.html","title":"component - LoadingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoadingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/loading/loading.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент LoadingComponent предназначен для отображения анимации загрузки с изображением.\nИспользуется для индикации процесса загрузки данных или выполнения операций.\nЭтот компонент отображает статическое изображение, которое может быть заменено на анимацию или другой индикатор загрузки.\nПодходит для использования в различных частях приложения, где требуется показать пользователю, что выполняется загрузка.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading\n            \n\n\n\n            \n                styleUrls\n                ./loading.component.css\n            \n\n\n\n            \n                templateUrl\n                ./loading.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"assets/dora.png\"\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/loading/loading.component.ts:29\n                        \n                    \n\n            \n                \n                    Путь к изображению, отображаемому во время загрузки.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Компонент LoadingComponent предназначен для отображения анимации загрузки с изображением.\n * Используется для индикации процесса загрузки данных или выполнения операций.\n *\n * @remarks\n * Этот компонент отображает статическое изображение, которое может быть заменено на анимацию или другой индикатор загрузки.\n * Подходит для использования в различных частях приложения, где требуется показать пользователю, что выполняется загрузка.\n *\n * @example\n * html\n * \n */\n@Component({\n  selector: 'app-loading',\n  imports: [],\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.css'], // Исправлено с styleUrl на styleUrls\n})\nexport class LoadingComponent {\n  /**\n   * Путь к изображению, отображаемому во время загрузки.\n   *\n   * @type {string}\n   * @default \"assets/dora.png\"\n   * @memberof LoadingComponent\n   */\n  path: string = \"assets/dora.png\";\n}\n\n    \n\n    \n        \n    \n\n    \n\n    \n                \n                    ./loading.component.css\n                \n                .loading {\n    display: flex;\n    justify-content: center; \n    align-items: center;    \n    height: 100vh;\n}\n\n.loader {\n    width: 100px;\n    height: 46px;\n    position: relative;\n    border-bottom: 8px solid #0056a6; /* Увеличиваем толщину линии */\n    border-top: 8px solid #0056a6;    /* Увеличиваем толщину линии */\n    box-sizing: border-box;\n}\n\n.loader:before, .loader:after {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    top: -20px;\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    background: #fff;\n    border: 8px solid #0056a6; /* Увеличиваем толщину линии */\n    box-sizing: border-box;\n    animation: slide 1s infinite ease-in-out alternate;\n}\n\n.loader:after {\n    top: 20px;\n    animation-direction: alternate-reverse;\n}\n\n@keyframes slide {\n    0%, 20% { transform: translateX(70px); }\n    80%, 100% { transform: translateX(-1px); }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/pages/page-not-found/page-not-found.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент PageNotFoundComponent отвечает за отображение страницы \"Страница не найдена\" (404).\nОн предоставляет пользователю информацию о том, что запрашиваемая страница не существует.\nЭтот компонент используется для отображения сообщения об ошибке 404, когда пользователь пытается получить доступ к несуществующей странице.\nОн может быть настроен для отображения дополнительной информации или предложений по навигации.\nExample :HTML:\n```html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            TuiButton\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./page-not-found.component.css\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TuiButton } from '@taiga-ui/core';\n\n/**\n * Компонент PageNotFoundComponent отвечает за отображение страницы \"Страница не найдена\" (404).\n * Он предоставляет пользователю информацию о том, что запрашиваемая страница не существует.\n *\n * @remarks\n * Этот компонент используется для отображения сообщения об ошибке 404, когда пользователь пытается получить доступ к несуществующей странице.\n * Он может быть настроен для отображения дополнительной информации или предложений по навигации.\n *\n * @example\n * HTML:\n * ```html\n * \n */\n@Component({\n  selector: 'app-page-not-found',\n  imports: [\n    CommonModule,\n    TuiButton,\n    RouterModule,\n  ],\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css'],\n})\nexport class PageNotFoundComponent {\n}\n\n    \n\n    \n        \n\n\n\n    \n    \n\n\n\n    \n        \n            Ой!🙈🍌\n            Страница не найдена\n            \n            На главную\n        \n    \n\n\n\n    \n\n    \n                \n                    ./page-not-found.component.css\n                \n                html, body {\n    height: 100%;\n    margin: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.cc {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n}\n\n.container {\n    text-align: center;\n    padding: 40px;\n    border-radius: 15px;\n    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\n    max-width: 400px;\n    width: 100%;\n    background-color: #fff; /* Фон контейнера */\n}\n\n/* Стили для заголовков */\nh1 {\n    color: #333;\n    font-size: 2em;\n    margin: 15px 0;\n}\n\n/* Стили для изображения */\nimg {\n    width: 300px;\n    height: 300px;\n    border-radius: 15px;\n    margin: 25px 0;\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n}\n\n/* Стили для кнопки */\nbutton {\n    background-color: #007BFF;\n    color: #fff;\n    border: none;\n    padding: 15px 30px;\n    font-size: 1.2em;\n    border-radius: 7px;\n    cursor: pointer;\n    transition: background-color 0.3s, transform 0.3s;\n}\n\nbutton:hover {\n    background-color: #0056b3;\n    transform: scale(1.05);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Ой!🙈🍌            Страница не найдена                        На главную            '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaginationComponent.html":{"url":"components/PaginationComponent.html","title":"component - PaginationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PaginationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/pagination/pagination.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент PaginationComponent предназначен для управления пагинацией в Angular-приложениях.\nОн предоставляет удобный интерфейс для навигации по страницам с данными.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует реактивные формы для управления состоянием пагинации.\nExample :HTML:\n```html\n\nExample :TypeScript:\n```typescript\nonPageChange(page: number): void {\n  console.log('Текущая страница:', page);\n}\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pagination\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            TuiInputSliderModule\n                            TuiPagination\n                            TuiTextfieldControllerModule\n                \n            \n\n            \n                styleUrls\n                ./pagination.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pagination.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToPage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                itemsPerPage\n                            \n                            \n                                totalItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    totalPages\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentPage\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/pagination/pagination.component.ts:76\n                            \n                        \n                \n                    \n                        Текущая страница.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        itemsPerPage\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 16\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/pagination/pagination.component.ts:68\n                            \n                        \n                \n                    \n                        Количество элементов на одной странице.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        totalItems\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/pagination/pagination.component.ts:60\n                            \n                        \n                \n                    \n                        Общее количество элементов.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        pageChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/pagination/pagination.component.ts:83\n                            \n                        \n                \n                    \n                        Событие, которое срабатывает при изменении страницы.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToPage\n                        \n                    \n                \n            \n            \n                \ngoToPage(page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/pagination/pagination.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Переходит на указанную страницу.\nExample :goToPage(2); // Переходит на вторую страницу.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНомер страницы, на которую нужно перейти.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        totalPages\n                    \n                \n\n                \n                    \n                        gettotalPages()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/pagination/pagination.component.ts:91\n                                \n                            \n                    \n                        \n                                Возвращает общее количество страниц.\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TuiPagination } from '@taiga-ui/kit';\nimport {\n  TuiInputSliderModule,\n  TuiTextfieldControllerModule,\n} from '@taiga-ui/legacy';\n\n/**\n * Компонент PaginationComponent предназначен для управления пагинацией в Angular-приложениях.\n * Он предоставляет удобный интерфейс для навигации по страницам с данными.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует реактивные формы для управления состоянием пагинации.\n *\n * @example\n * HTML:\n * ```html\n * \n * \n * ```\n *\n * TypeScript:\n * ```typescript\n * onPageChange(page: number): void {\n *   console.log('Текущая страница:', page);\n * }\n * ```\n */\n@Component({\n  selector: 'app-pagination',\n  imports: [\n    FormsModule,\n    TuiInputSliderModule,\n    TuiPagination,\n    TuiTextfieldControllerModule,\n  ],\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaginationComponent {\n  /**\n   * Общее количество элементов.\n   * @type {number}\n   * @default 0\n   * @memberof PaginationComponent\n   */\n  @Input() totalItems: number = 0;\n\n  /**\n   * Количество элементов на одной странице.\n   * @type {number}\n   * @default 16\n   * @memberof PaginationComponent\n   */\n  @Input() itemsPerPage: number = 16;\n\n  /**\n   * Текущая страница.\n   * @type {number}\n   * @default 1\n   * @memberof PaginationComponent\n   */\n  @Input() currentPage: number = 1;\n\n  /**\n   * Событие, которое срабатывает при изменении страницы.\n   * @type {EventEmitter}\n   * @memberof PaginationComponent\n   */\n  @Output() pageChange = new EventEmitter();\n\n  /**\n   * Возвращает общее количество страниц.\n   * @readonly\n   * @type {number}\n   * @memberof PaginationComponent\n   */\n  get totalPages(): number {\n    return Math.ceil(this.totalItems / this.itemsPerPage);\n  }\n\n  /**\n   * Переходит на указанную страницу.\n   * @param {number} page - Номер страницы, на которую нужно перейти.\n   * @memberof PaginationComponent\n   * @example\n   * goToPage(2); // Переходит на вторую страницу.\n   */\n  goToPage(page: number): void {\n    if (page >= 1 && page \n    \n\n    \n        Page {{ currentPage }}\n\n\n\n    \n\n    \n                \n                    ./pagination.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Page {{ currentPage }}'\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaginationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SwitchComponent.html":{"url":"components/SwitchComponent.html","title":"component - SwitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SwitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/switch/switch.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент SwitchComponent представляет собой переключатель, который позволяет пользователю включать или выключать определенную функцию.\nОн интегрируется с Taiga UI для создания стилизованного и интерактивного интерфейса.\nЭтот компонент использует реактивные формы для управления состоянием переключателя.\nПоддерживает валидацию и может быть настроен для отображения иконки и изменения внешнего вида.\nExample :HTML:\n```html\nExample :TypeScript:\n```typescript\nisFeatureEnabled: boolean = false;\n\nonToggle(value: boolean): void {\n  this.isFeatureEnabled = value;\n  console.log('Функция переключена:', value);\n}\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            tuiSwitchOptionsProvider({ showIcons: false, appearance: () =>  })\n                \n            \n\n\n            \n                selector\n                app-switch\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiSwitch\n                \n            \n\n            \n                styleUrls\n                ./switch.component.css\n            \n\n\n\n            \n                templateUrl\n                ./switch.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                invalidFalse\n                            \n                            \n                                    Protected\n                                    Readonly\n                                invalidTrue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                onToggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/switch/switch.component.ts:54\n                            \n                        \n                \n                    \n                        Значение переключателя.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/switch/switch.component.ts:61\n                            \n                        \n                \n                    \n                        Событие, которое срабатывает при переключении состояния.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/switch/switch.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Инициализация компонента.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToggle\n                        \n                    \n                \n            \n            \n                \nonToggle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/switch/switch.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Обработчик события переключения.\nExample :onToggle(); // Вызывает событие toggle с текущим значением переключателя.\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        invalidFalse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(false, () => ({\n    invalid: true,\n  }))\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/switch/switch.component.ts:77\n                        \n                    \n\n            \n                \n                    Контрол для валидации состояния переключателя (ложь).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        invalidTrue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(true, () => ({\n    invalid: true,\n  }))\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/switch/switch.component.ts:68\n                        \n                    \n\n            \n                \n                    Контроль для валидации состояния переключателя (истина).\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  OnInit,\n} from '@angular/core';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TuiSwitch, tuiSwitchOptionsProvider } from '@taiga-ui/kit';\n\n/**\n * Компонент SwitchComponent представляет собой переключатель, который позволяет пользователю включать или выключать определенную функцию.\n * Он интегрируется с Taiga UI для создания стилизованного и интерактивного интерфейса.\n *\n * @remarks\n * Этот компонент использует реактивные формы для управления состоянием переключателя.\n * Поддерживает валидацию и может быть настроен для отображения иконки и изменения внешнего вида.\n *\n * @example\n * HTML:\n * ```html\n * \n * ```\n *\n * TypeScript:\n * ```typescript\n * isFeatureEnabled: boolean = false;\n *\n * onToggle(value: boolean): void {\n *   this.isFeatureEnabled = value;\n *   console.log('Функция переключена:', value);\n * }\n * ```\n */\n@Component({\n  selector: 'app-switch',\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, TuiSwitch],\n  templateUrl: './switch.component.html',\n  styleUrls: ['./switch.component.css'],\n  providers: [\n    tuiSwitchOptionsProvider({ showIcons: false, appearance: () => 'primary' }),\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SwitchComponent implements OnInit {\n  /**\n   * Значение переключателя.\n   * @type {boolean}\n   * @default false\n   * @memberof SwitchComponent\n   */\n  @Input() value: boolean = false;\n\n  /**\n   * Событие, которое срабатывает при переключении состояния.\n   * @type {EventEmitter}\n   * @memberof SwitchComponent\n   */\n  @Output() toggle: EventEmitter = new EventEmitter();\n\n  /**\n   * Контроль для валидации состояния переключателя (истина).\n   * @type {FormControl}\n   * @memberof SwitchComponent\n   */\n  protected readonly invalidTrue = new FormControl(true, () => ({\n    invalid: true,\n  }));\n\n  /**\n   * Контрол для валидации состояния переключателя (ложь).\n   * @type {FormControl}\n   * @memberof SwitchComponent\n   */\n  protected readonly invalidFalse = new FormControl(false, () => ({\n    invalid: true,\n  }));\n\n  /**\n   * Инициализация компонента.\n   * @memberof SwitchComponent\n   */\n  public ngOnInit(): void {\n    this.invalidTrue.markAsTouched();\n    this.invalidFalse.markAsTouched();\n  }\n\n  /**\n   * Обработчик события переключения.\n   * @memberof SwitchComponent\n   * @example\n   * onToggle(); // Вызывает событие toggle с текущим значением переключателя.\n   */\n  onToggle(): void {\n    this.toggle.emit(this.value);\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./switch.component.css\n                \n                .switch {\n    position: relative;\n    display: inline-block;\n    width: 40.8px; /* 34px * 1.2 */\n    height: 24px;  /* 20px * 1.2 */\n}\n\n.switch input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n}\n\n.slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #f44336;\n    transition: .4s;\n    border-radius: 34px; /* Можно оставить без изменений, если не хотите менять форму */\n}\n\n.slider:before {\n    position: absolute;\n    content: \"\";\n    height: 16.8px; /* 14px * 1.2 */\n    width: 16.8px;  /* 14px * 1.2 */\n    left: 4px;      /* 3px * 1.2 */\n    bottom: 4px;    /* 3px * 1.2 */\n    background-color: white;\n    transition: .4s;\n    border-radius: 50%;\n}\n\ninput:checked + .slider {\n    background-color: #4caf50;\n}\n\ninput:checked + .slider:before {\n    transform: translateX(16.8px); /* 14px * 1.2 */\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SwitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/apiServiceShortStructure.html":{"url":"interfaces/apiServiceShortStructure.html","title":"interface - apiServiceShortStructure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  apiServiceShortStructure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/apiServiceShortStructure.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс, представляющий краткую структуру API сервиса.\nЭтот интерфейс используется для описания основных характеристик API сервиса.\nОн включает в себя имя сервиса, его статус активности и краткое описание.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Описание сервиса.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : false\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Флаг активности сервиса.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Название сервиса.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface apiServiceShortStructure {\n  /**\n   * Название сервиса.\n   * @type {string}\n   */\n  name: string;\n\n  /**\n   * Флаг активности сервиса.\n   * @type {boolean}\n   * @default false\n   */\n  isActive: boolean;\n\n  /**\n   * Описание сервиса.\n   * @type {string}\n   */\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/components/alert-delete/alert-delete.component.ts\n            \n            component\n            AlertDeleteComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/data/components/api-dialog/api-dialog.component.ts\n            \n            component\n            ApiDialogComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/data/components/back-button/back-button.component.ts\n            \n            component\n            BackButtonComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/data/components/card-api/card-api.component.ts\n            \n            component\n            CardApiComponent\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/data/components/card-endpoint/card-endpoint.component.ts\n            \n            component\n            CardEndpointComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/data/components/card-entity/card-entity.component.ts\n            \n            component\n            CardEntityComponent\n            \n                82 %\n                (14/17)\n            \n        \n        \n            \n                \n                src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts\n            \n            component\n            EndpointDialogComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/data/components/entity-dialog/entity-dialog.component.ts\n            \n            component\n            EntityDialogComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/data/components/export-api-button/export-api-button.component.ts\n            \n            component\n            ExportApiButtonComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/data/components/filter-by-input/filter-by-input.component.ts\n            \n            component\n            FilterByInputComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/data/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/data/components/icon-trash/icon-trash.component.ts\n            \n            component\n            IconTrashComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/data/components/import-dialog/import-dialog.component.ts\n            \n            component\n            ImportDialogComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/data/components/loading/loading.component.ts\n            \n            component\n            LoadingComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/data/components/pagination/pagination.component.ts\n            \n            component\n            PaginationComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/data/components/switch/switch.component.ts\n            \n            component\n            SwitchComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts\n            \n            component\n            ApiEndpointListComponent\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                src/app/data/pages/card-api-list/card-api-list.component.ts\n            \n            component\n            CardApiListComponent\n            \n                100 %\n                (45/45)\n            \n        \n        \n            \n                \n                src/app/data/pages/endpoint-card-list/endpoint-card-list.component.ts\n            \n            component\n            EndpointCardListComponent\n            \n                100 %\n                (24/24)\n            \n        \n        \n            \n                \n                src/app/data/pages/entity-card-list/entity-card-list.component.ts\n            \n            component\n            EntityCardListComponent\n            \n                100 %\n                (34/34)\n            \n        \n        \n            \n                \n                src/app/data/pages/error-display/error-display.component.ts\n            \n            component\n            ErrorDisplayComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/data/pages/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/interceptors/http-error.interceptor.ts\n            \n            interceptor\n            HttpErrorInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/ApiServiceStructure.ts\n            \n            interface\n            ApiServiceStructure\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/Endpoint.ts\n            \n            interface\n            Endpoint\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/Entity.ts\n            \n            interface\n            Entity\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/EntityShort.ts\n            \n            interface\n            EntityShort\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/FileStatus.ts\n            \n            interface\n            FileStatus\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/apiServiceShortStructure.ts\n            \n            interface\n            apiServiceShortStructure\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/repositories/api-service-repository.service.ts\n            \n            injectable\n            ApiServiceRepositoryService\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/repositories/endpoint-repository.service.ts\n            \n            injectable\n            EndpointRepositoryService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/repositories/entity-repository.service.ts\n            \n            injectable\n            EntityRepositoryService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/services/api-hub-service.service.ts\n            \n            injectable\n            ApiHubServiceService\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/services/api-service.service.ts\n            \n            injectable\n            ApiService\n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                src/app/services/endpoint-service.service.ts\n            \n            injectable\n            EndpointService\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/services/entity-service.service.ts\n            \n            injectable\n            EntityService\n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                src/app/services/error-handler.service.ts\n            \n            injectable\n            ErrorHandlerService\n            \n                66 %\n                (2/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^19.1.0\n        \n            @angular/common : ^19.1.0\n        \n            @angular/compiler : ^19.1.0\n        \n            @angular/core : ^19.1.0\n        \n            @angular/forms : ^19.1.0\n        \n            @angular/platform-browser : ^19.1.0\n        \n            @angular/platform-browser-dynamic : ^19.1.0\n        \n            @angular/router : ^19.1.0\n        \n            @microsoft/signalr : ^8.0.7\n        \n            @taiga-ui/addon-charts : ^4.21.0\n        \n            @taiga-ui/addon-commerce : ^4.21.0\n        \n            @taiga-ui/addon-doc : ^4.21.0\n        \n            @taiga-ui/addon-mobile : ^4.21.0\n        \n            @taiga-ui/addon-table : ^4.21.0\n        \n            @taiga-ui/cdk : ^4.21.0\n        \n            @taiga-ui/core : ^4.21.0\n        \n            @taiga-ui/event-plugins : ^4.0.2\n        \n            @taiga-ui/experimental : ^4.21.0\n        \n            @taiga-ui/icons : ^4.22.0\n        \n            @taiga-ui/icons-fontawesome : ^4.22.0\n        \n            @taiga-ui/icons-material : ^4.22.0\n        \n            @taiga-ui/kit : ^4.21.0\n        \n            @taiga-ui/layout : ^4.21.0\n        \n            @taiga-ui/legacy : ^4.24.0\n        \n            jszip : ^3.10.1\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nApiEasier\nThis project was generated using Angular CLI version 19.1.3.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    23 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideHttpClient(),\n    { provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true },\n    provideAnimations(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(APP_ROUTES),\n    NG_EVENT_PLUGINS,\n  ],\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
