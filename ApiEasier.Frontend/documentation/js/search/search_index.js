var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AlertDeleteComponent.html",[0,0.037,1,0.683]],["body/components/AlertDeleteComponent.html",[0,0.058,1,1.272,2,0.948,3,0.205,4,0.175,5,0.8,6,0.855,7,0.8,8,0.8,9,0.175,10,3.993,11,3.517,12,2.943,13,0.748,14,0.026,15,1.056,16,1.975,17,1.086,18,1.322,19,0.8,20,1.616,21,1.616,22,1.482,23,3.161,24,1.086,25,2.767,26,1.16,27,5.352,28,1.086,29,4.716,30,0.175,31,0.652,32,2.767,33,2.08,34,3.265,35,0.948,36,0.8,37,3.66,38,1.002,39,0.442,40,3.476,41,5.739,42,0.534,43,1.446,44,0.368,45,0.27,46,2.12,47,3.476,48,0.748,49,1.946,50,1.16,51,0.278,52,0.404,53,3.476,54,0.913,55,2.64,56,0.8,57,1.086,58,0.8,59,1.322,60,0.8,61,0.363,62,0.8,63,0.698,64,1.153,65,1.086,66,1.322,67,0.748,68,0.801,69,1.322,70,0.698,71,0.8,72,0.698,73,0.8,74,1.086,75,0.698,76,1.332,77,0.8,78,0.748,79,0.698,80,0.8,81,0.698,82,0.8,83,0.748,84,0.698,85,0.748,86,0.706,87,0.698,88,0.698,89,0.562,90,0.8,91,0.698,92,0.698,93,0.8,94,0.8,95,0.698,96,0.8,97,0.698,98,0.8,99,0.8,100,0.698,101,0.698,102,0.8,103,0.698,104,0.748,105,0.8,106,0.698,107,0.8,108,0.698,109,0.748,110,0.748,111,0.8,112,0.017,113,0.017]],["title/components/ApiDialogComponent.html",[0,0.037,63,0.683]],["body/components/ApiDialogComponent.html",[0,0.045,1,0.449,2,0.688,3,0.132,4,0.113,5,0.515,6,0.55,7,0.515,8,0.515,9,0.113,13,1.084,14,0.026,15,0.996,16,1.695,17,0.789,18,1.075,19,0.515,20,1.547,21,1.547,22,0.515,24,0.789,26,0.843,28,0.789,30,0.113,31,0.473,32,3.259,33,2.065,34,2.541,35,0.688,36,0.959,37,3.072,38,0.875,39,0.759,42,0.524,44,0.363,45,0.315,46,1.363,48,0.737,49,1.251,50,1.439,51,0.202,52,0.26,54,1.568,56,0.515,57,0.789,58,0.515,59,1.075,60,0.515,61,0.409,62,0.515,63,1.289,64,1.34,65,1.075,66,1.075,67,0.481,68,0.624,69,1.075,70,0.449,71,0.515,72,0.449,73,0.515,74,0.789,75,0.449,76,1.143,77,0.515,78,0.481,79,0.449,80,0.515,81,0.449,82,0.515,83,0.481,84,0.449,85,0.481,86,0.513,87,0.449,88,0.449,89,0.361,90,0.515,91,0.449,92,0.449,93,0.515,94,0.515,95,0.449,96,0.515,97,0.449,98,0.515,99,0.515,100,0.449,101,0.449,102,0.515,103,0.449,104,0.481,105,0.515,106,0.449,107,0.515,108,0.449,109,0.481,110,0.481,111,0.515,112,0.012,113,0.012,114,5.141,115,4.528,116,1.363,117,1.642,118,2.541,119,3.106,120,1.997,121,2.792,122,2.792,123,3.106,124,3.106,125,3.106,126,2.792,127,2.792,128,2.296,129,2.792,130,4.165,131,1.094,132,3.106,133,3.527,134,0.554,135,2.9,136,2.554,137,2.554,138,2.554,139,2.09,140,3.106,141,2.153,142,2.9,143,5.338,144,2.235,145,0.875,146,0.875,147,2.9,148,0.894,149,1.499,150,2.554,151,4.07,152,2.235,153,2.554,154,3.482,155,2.235,156,3.482,157,1.246,158,3.425,159,2.235,160,2.235,161,2.235,162,2.9,163,2.9,164,3.953,165,2.235,166,2.554,167,2.235,168,2.09,169,3.425,170,2.9,171,2.235,172,1.667,173,2.235,174,1.667,175,2.235,176,1.698,177,1.667,178,1.892,179,1.071,180,2.296,181,0.997,182,1.251,183,0.997,184,1.332,185,0.96,186,1.892,187,1.667,188,1.59,189,1.498,190,1.667,191,1.667,192,1.667,193,1.155,194,0.869,195,1.858,196,0.761,197,1.667,198,1.667,199,2.554,200,3.106,201,1.667,202,1.498,203,1.498,204,1.667,205,1.892,206,2.235]],["title/injectables/ApiHubServiceService.html",[207,0.836,208,2.533]],["body/injectables/ApiHubServiceService.html",[3,0.241,4,0.206,9,0.206,14,0.026,30,0.292,31,0.725,35,1.164,36,1.334,38,0.764,39,0.822,42,0.528,44,0.433,45,0.292,51,0.241,52,0.475,61,0.487,64,1.164,112,0.019,113,0.019,131,1.769,134,0.848,145,0.764,146,0.764,148,0.66,149,1.072,176,2.45,183,1.82,184,1.586,185,1.47,195,2.821,196,1.39,207,1.29,208,3.91,209,1.82,210,4.908,211,5.702,212,2.49,213,5.793,214,3.883,215,5.793,216,5.793,217,5.243,218,1.425,219,5.243,220,5.243,221,4.081,222,4.081,223,1.973,224,5.793,225,4.081,226,5.243,227,4.081,228,5.243,229,4.081,230,2.777,231,5.243,232,4.081,233,5.793,234,3.455,235,4.081,236,1.484,237,1.956,238,1.82,239,5.243,240,4.081,241,4.081,242,4.081,243,4.081,244,4.081,245,4.081,246,4.081,247,3.455,248,3.455,249,3.455,250,4.081,251,4.081,252,4.081,253,4.081,254,4.081,255,4.081,256,4.081,257,4.081,258,4.081,259,4.081,260,5.793,261,5.793,262,4.081,263,5.793,264,4.081,265,4.081,266,3.199,267,0.937,268,5.243,269,5.793,270,4.081,271,4.081,272,4.081,273,3.455,274,4.081,275,1.786,276,4.081,277,4.081,278,2.936,279,4.081]],["title/injectables/ApiService.html",[207,0.836,278,1.902]],["body/injectables/ApiService.html",[3,0.217,4,0.185,9,0.185,14,0.026,15,0.594,23,2.464,30,0.185,31,0.677,35,0.739,36,0.846,38,1.031,39,0.847,42,0.57,44,0.39,45,0.329,48,0.791,51,0.217,52,0.428,61,0.508,89,0.792,112,0.018,113,0.018,131,1.734,134,0.792,145,1.221,146,1.221,148,1.055,176,2.335,183,1.639,185,1.828,194,1.429,207,1.205,209,1.639,210,5.013,212,2.242,214,3.69,218,1.205,230,3.32,236,1.337,237,1.762,238,1.639,266,2.987,267,1.095,275,2,278,2.741,280,4.662,281,4.145,282,4.145,283,4.971,284,4.145,285,2.987,286,4.662,287,4.662,288,2.741,289,4.378,290,3.69,291,3.035,292,2.29,293,2.282,294,4.896,295,3.651,296,3.112,297,3.675,298,3.696,299,4.145,300,2.815,301,3.675,302,4.145,303,3.675,304,3.582,305,3.675,306,4.145,307,3.675,308,3.282,309,4.102,310,3.675,311,3.112,312,3.675,313,3.112,314,3.675,315,3.651,316,2.242,317,2.464,318,2.464,319,2.464,320,1.639,321,1.173,322,2.242,323,2.464,324,4.787,325,3.675,326,4.787,327,4.787,328,3.675,329,4.896,330,2.464,331,3.675,332,3.675,333,2.741,334,3.675,335,2.058,336,2.464,337,2.464,338,1.429,339,1.639,340,2.464]],["title/injectables/ApiServiceRepositoryService.html",[207,0.836,341,1.902]],["body/injectables/ApiServiceRepositoryService.html",[3,0.245,4,0.21,9,0.21,14,0.026,30,0.21,38,1.094,39,0.85,42,0.549,44,0.44,45,0.333,51,0.245,52,0.483,61,0.515,112,0.019,113,0.019,134,0.858,145,1.238,146,1.238,148,1.069,176,2.403,183,1.852,185,1.853,207,1.304,209,1.852,218,1.022,230,3.344,236,1.51,237,1.991,238,1.852,266,3.234,267,1.115,275,2.096,278,3.64,280,4.945,281,4.489,282,4.489,283,5.21,284,4.489,286,4.945,287,4.945,296,3.516,298,3.917,299,4.489,300,2.95,302,4.489,304,3.563,306,4.489,311,3.516,313,3.516,322,2.533,341,2.969,342,5.72,343,2.783,344,4.152,345,4.152,346,3.096,347,4.152,348,4.152,349,3.096,350,3.096,351,4.152,352,4.152,353,4.152,354,3.096,355,1.991,356,4.152,357,4.152,358,4.152,359,4.152,360,4.152,361,4.152,362,4.152]],["title/interfaces/ApiServiceStructure.html",[300,1.629,363,1.157]],["body/interfaces/ApiServiceStructure.html",[3,0.307,4,0.262,9,0.262,13,1.431,14,0.025,30,0.262,31,0.84,38,1.208,42,0.449,45,0.335,51,0.307,61,0.512,86,1.014,112,0.022,113,0.022,267,1.11,275,2.264,300,2.916,363,1.77,364,2.686,365,4.399,366,5.629]],["title/components/AppComponent.html",[0,0.037,70,0.683]],["body/components/AppComponent.html",[0,0.065,1,0.864,2,1.089,3,0.254,4,0.217,5,0.99,7,0.99,8,0.99,9,0.217,14,0.026,15,0.695,18,1.248,19,0.99,20,1.642,21,1.642,22,0.99,24,1.248,28,1.248,30,0.217,31,0.749,35,0.864,36,0.99,39,0.546,42,0.538,44,0.456,45,0.217,48,0.925,51,0.32,52,0.5,56,0.99,57,1.248,58,0.99,59,1.435,60,0.99,61,0.417,62,0.99,63,0.864,64,1.252,65,1.248,66,1.435,67,0.925,68,0.889,69,1.435,70,1.252,71,0.99,72,0.864,73,0.99,74,1.248,75,0.864,76,1.412,77,0.99,78,0.925,79,0.864,80,0.99,81,0.864,82,0.99,83,0.925,84,0.864,85,0.925,86,0.812,87,0.864,88,0.864,89,0.695,90,0.99,91,0.864,92,0.864,93,0.99,94,0.99,95,0.864,96,0.99,97,0.864,98,0.99,99,0.99,100,0.864,101,0.864,102,0.99,103,0.864,104,0.925,105,0.99,106,0.864,107,0.99,108,0.864,109,0.925,110,0.925,111,0.99,112,0.019,113,0.019,238,2.417,267,0.695,321,1.372,367,3.639,368,5.935,369,5.935,370,3.621,371,5.419,372,3.306,373,5.419,374,5.935,375,4.588,376,4.298]],["title/components/BackButtonComponent.html",[0,0.037,72,0.683]],["body/components/BackButtonComponent.html",[0,0.055,1,0.632,2,0.885,3,0.186,4,0.159,5,0.725,6,0.774,7,0.725,8,0.725,9,0.159,13,0.948,14,0.026,17,1.014,18,1.267,19,0.725,20,1.603,21,1.603,22,0.725,24,0.725,26,1.25,28,1.014,30,0.159,39,0.56,42,0.475,43,1.309,44,0.334,45,0.159,50,1.25,51,0.26,52,0.366,54,1.157,56,0.725,57,1.014,58,0.725,59,1.267,60,0.725,61,0.391,62,0.725,63,0.632,64,1.106,65,1.014,66,1.267,67,0.677,68,0.761,69,1.267,70,0.632,71,0.725,72,1.3,73,1.447,74,1.014,75,0.632,76,1.292,77,0.725,78,0.677,79,0.632,80,0.725,81,0.632,82,0.725,83,0.677,84,0.632,85,0.677,86,0.659,87,0.632,88,0.632,89,0.712,90,0.725,91,0.632,92,0.632,93,0.725,94,0.725,95,0.632,96,0.725,97,0.632,98,0.725,99,0.725,100,0.632,101,0.632,102,0.725,103,0.632,104,0.677,105,0.725,106,0.632,107,0.725,108,0.632,109,0.677,110,0.677,111,0.725,112,0.016,113,0.016,131,0.827,134,0.712,145,0.59,146,0.59,148,0.509,149,1.157,168,2.687,188,1.5,195,2.266,218,0.774,320,2.944,321,1.005,355,1.509,372,1.92,377,4.301,378,3.788,379,2.347,380,5.538,381,2.626,382,4.301,383,3.729,384,4.659,385,3.147,386,3.147,387,3.147,388,4.475,389,3.147,390,3.147,391,2.347,392,3.147,393,3.147,394,3.147,395,3.147,396,3.147,397,4.404,398,2.347,399,2.113,400,1.975,401,1.509,402,1.832,403,1.762,404,1.627,405,4.301,406,2.665,407,1.404,408,1.309,409,2.665,410,1.309,411,1.309,412,1.964,413,1.762,414,1.762,415,1.309,416,1.404,417,1.309,418,1.627,419,1.627,420,2.665]],["title/components/CardApiComponent.html",[0,0.037,75,0.683]],["body/components/CardApiComponent.html",[0,0.042,1,0.397,2,0.625,3,0.117,4,0.1,5,0.455,6,0.486,7,0.455,8,0.455,9,0.1,13,0.829,14,0.026,15,0.623,16,0.993,17,0.717,18,1.006,19,0.455,20,1.523,21,1.523,22,0.455,24,0.717,25,1.991,26,0.766,28,0.717,30,0.1,31,0.43,33,1.497,35,0.625,36,0.717,38,0.721,39,0.716,42,0.516,43,1.295,44,0.209,45,0.284,48,0.425,50,1.075,51,0.227,52,0.23,54,1.388,55,2.447,56,0.455,57,0.717,58,0.455,59,1.006,60,0.455,61,0.336,62,0.455,63,0.625,64,1.373,65,0.717,66,1.006,67,0.425,68,0.577,69,1.006,70,0.397,71,0.455,72,0.397,73,0.455,74,0.717,75,1.248,76,1.306,77,0.455,78,0.425,79,0.397,80,0.455,81,0.397,82,0.455,83,0.425,84,0.397,85,0.425,86,0.466,87,0.397,88,0.397,89,0.911,90,0.455,91,0.878,92,0.397,93,0.455,94,0.455,95,0.397,96,0.455,97,0.878,98,0.717,99,0.455,100,0.397,101,0.397,102,0.455,103,0.397,104,0.425,105,0.455,106,0.397,107,0.455,108,0.878,109,0.425,110,0.425,111,0.455,112,0.011,113,0.011,115,1.473,117,1.846,120,1.846,131,1.327,134,0.503,141,2.457,145,0.583,146,0.583,148,0.623,149,1.249,157,0.718,176,1.589,183,0.881,184,1.21,188,1.619,193,1.609,194,1.963,196,1.06,218,0.766,223,0.673,266,2.349,267,0.503,292,1.818,293,1.698,298,1.106,321,0.63,338,1.497,339,1.388,341,2.447,370,2.349,380,5.2,381,1.021,399,2.101,400,2.19,401,1.846,402,1.978,403,1.106,404,1.021,407,2.12,408,1.602,410,1.295,411,1.295,412,1.949,413,1.106,414,1.106,415,1.295,416,1.388,417,1.818,418,1.609,419,1.021,421,3.866,422,4.883,423,1.672,424,1.743,425,1.743,426,3.851,427,1.975,428,3.112,429,3.258,430,2.321,431,3.258,432,1.388,433,2.872,434,1.492,435,3.851,436,1.672,437,2.929,438,2.929,439,1.975,440,3.26,441,1.975,442,2.095,443,1.975,444,1.975,445,2.321,446,1.975,447,3.545,448,1.975,449,3.112,450,1.609,451,1.975,452,1.975,453,1.975,454,1.106,455,1.492,456,2.086,457,1.473,458,1.324,459,1.205,460,1.473,461,1.473,462,1.205,463,1.473,464,1.672,465,3.112,466,2.321,467,2.321,468,2.086,469,1.975,470,1.975,471,1.991,472,3.112,473,1.975,474,2.447,475,2.086,476,1.672,477,3.851,478,1.473,479,3.112,480,1.672,481,1.672,482,1.975,483,1.975,484,1.324,485,2.156,486,1.975,487,1.205,488,1.324,489,1.473,490,1.899,491,1.324,492,1.473,493,1.473,494,1.975,495,1.975,496,3.112,497,3.112,498,1.324,499,1.06,500,1.205,501,1.609,502,1.388,503,1.324,504,1.106,505,2.929,506,1.324,507,1.899,508,1.324,509,2.086,510,1.846,511,1.324,512,3.186,513,2.61,514,1.899,515,1.324,516,1.324,517,1.324,518,1.324,519,1.106,520,1.324,521,1.743,522,1.324,523,1.609,524,1.205,525,2.086,526,2.349,527,1.205,528,1.106,529,2.9,530,1.473,531,1.473,532,1.473,533,2.929,534,1.205,535,1.324,536,1.324,537,1.324,538,1.324,539,1.324,540,1.324,541,1.324,542,1.388,543,2.095,544,0.947,545,1.205,546,1.492,547,1.388,548,1.492,549,1.609,550,1.991,551,1.021,552,1.021,553,1.899,554,1.205,555,1.324,556,1.473,557,1.205,558,1.106,559,1.106,560,1.324,561,1.106,562,1.205,563,1.021,564,1.205,565,1.324,566,1.324]],["title/components/CardEndpointComponent.html",[0,0.037,79,0.683]],["body/components/CardEndpointComponent.html",[0,0.04,1,0.362,2,0.581,3,0.106,4,0.091,5,0.415,6,0.443,7,0.415,8,0.415,9,0.091,13,1.097,14,0.026,15,0.586,16,0.923,17,0.666,18,0.955,19,0.415,20,1.503,21,1.503,22,0.415,24,0.666,25,1.873,26,0.711,28,0.666,30,0.091,31,0.4,33,1.408,35,0.728,36,0.666,38,0.679,39,0.754,42,0.512,43,0.749,44,0.191,45,0.307,48,0.388,50,1.02,51,0.171,52,0.21,54,1.558,55,2.715,56,0.415,57,0.666,58,0.415,59,0.955,60,0.415,61,0.408,62,0.415,63,0.362,64,1.064,65,0.666,66,0.955,67,0.388,68,0.963,69,0.955,70,0.362,71,0.415,72,0.362,73,0.415,74,0.666,75,0.362,76,1.276,77,0.415,78,0.388,79,1.285,80,0.415,81,0.362,82,0.415,83,0.388,84,0.581,85,0.388,86,0.726,87,0.362,88,0.362,89,0.944,90,0.415,91,0.362,92,0.362,93,0.415,94,0.415,95,0.362,96,0.415,97,0.833,98,0.666,99,0.415,100,0.362,101,0.362,102,0.415,103,0.362,104,0.388,105,0.415,106,0.362,107,0.415,108,0.833,109,0.388,110,0.388,111,0.415,112,0.01,113,0.01,117,1.737,131,1.69,134,0.468,141,3.108,145,0.908,146,0.908,148,0.824,149,1.58,157,0.655,176,0.655,183,0.803,184,1.124,188,1.862,193,1.495,194,1.981,196,1.412,218,0.711,223,0.613,236,0.655,267,0.586,292,1.725,293,1.612,320,0.803,321,0.575,338,1.408,339,1.29,370,2.21,399,1.507,400,1.765,401,1.386,402,1.507,407,1.616,408,1.203,410,0.749,411,0.749,412,1.616,415,0.749,416,0.803,417,1.507,421,4.03,429,3.092,430,2.156,431,3.092,432,1.29,434,1.386,437,2.78,438,2.78,442,1.988,445,2.156,447,3.387,450,1.495,455,1.386,456,1.938,457,1.343,458,1.207,459,1.099,460,1.343,462,1.099,466,2.156,468,1.938,471,2.144,474,2.322,475,2.428,478,1.343,480,1.525,481,1.525,484,1.207,485,2.028,487,1.099,488,1.207,489,1.343,490,2.21,491,1.207,492,1.343,493,1.343,498,1.207,499,0.985,500,1.099,501,0.931,502,1.29,503,1.207,504,1.008,505,2.78,506,1.207,507,1.764,508,1.207,509,1.938,510,1.737,511,1.207,512,3.044,513,2.507,514,1.764,515,1.207,516,1.207,517,1.207,518,1.207,519,1.008,520,1.207,521,1.008,522,1.207,523,1.495,524,1.099,525,1.938,526,2.21,527,1.099,528,1.008,529,2.771,530,1.343,531,1.343,532,1.343,533,2.78,534,1.099,535,1.207,536,1.207,537,1.207,538,1.207,539,1.207,540,1.207,541,1.207,542,1.29,543,1.988,544,0.863,545,1.099,546,1.386,547,1.29,548,1.386,549,1.495,550,1.873,551,0.931,552,0.931,561,1.008,562,1.099,563,0.931,564,1.099,565,1.207,566,1.207,567,5.09,568,1.525,569,1.801,570,2.891,571,2.891,572,2.891,573,2.891,574,2.701,575,3.067,576,3.067,577,2.701,578,3.622,579,1.801,580,3.415,581,1.801,582,1.801,583,1.801,584,1.801,585,1.801,586,2.891,587,1.801,588,2.891,589,1.801,590,1.801,591,1.801,592,1.801,593,2.891,594,1.801,595,2.891,596,1.801,597,2.891,598,1.801,599,1.099,600,1.099,601,1.525,602,1.343,603,1.801,604,2.891,605,1.801,606,3.622,607,1.343,608,4.147,609,3.067,610,4.147,611,2.891,612,1.801,613,1.801,614,1.801,615,1.801,616,1.343,617,1.801,618,2.891,619,2.891]],["title/components/CardEntityComponent.html",[0,0.037,81,0.683]],["body/components/CardEntityComponent.html",[0,0.039,1,0.349,2,0.564,3,0.102,4,0.088,5,0.4,6,0.427,7,0.4,8,0.4,9,0.088,13,1.08,14,0.026,15,0.572,16,0.896,17,0.646,18,0.935,19,0.4,20,1.495,21,1.495,22,0.4,24,0.646,25,1.827,26,0.691,28,0.646,30,0.088,31,0.388,33,1.374,35,0.958,36,1.026,38,0.835,39,0.775,42,0.489,43,0.722,44,0.184,45,0.308,48,0.374,50,0.999,51,0.166,52,0.202,54,1.543,55,2.67,56,0.4,57,0.646,58,0.4,59,0.935,60,0.4,61,0.402,62,0.4,63,0.349,64,1.05,65,0.646,66,0.935,67,0.374,68,0.529,69,0.935,70,0.349,71,0.4,72,0.349,73,0.4,74,0.646,75,0.349,76,1.264,77,0.4,78,0.374,79,0.349,80,0.4,81,1.277,82,0.4,83,0.374,84,0.349,85,0.374,86,0.931,87,0.564,88,0.349,89,0.997,90,0.4,91,0.349,92,0.349,93,0.4,94,0.4,95,0.349,96,0.4,97,0.816,98,0.646,99,0.4,100,0.349,101,0.349,102,0.4,103,0.349,104,0.374,105,0.4,106,0.349,107,0.4,108,0.816,109,0.374,110,0.374,111,0.4,112,0.01,113,0.01,117,1.694,131,1.764,134,0.454,141,2.866,145,0.893,146,0.893,148,0.845,149,1.603,157,0.631,184,1.091,188,1.888,193,1.451,194,1.951,196,1.204,218,0.691,223,0.591,236,0.631,266,2.156,267,0.845,285,1.712,292,1.689,293,1.578,321,0.554,335,2.67,338,1.374,339,1.252,370,2.156,381,0.897,399,1.984,400,2.098,401,1.694,402,1.854,403,0.972,404,0.897,407,1.988,408,1.47,410,1.168,411,1.168,412,1.811,413,0.972,414,0.972,415,1.168,416,1.252,417,1.689,418,1.451,419,0.897,421,4.131,429,3.027,430,2.093,431,3.027,432,1.252,434,1.346,437,2.369,438,2.721,442,1.946,445,2.093,447,3.027,450,1.451,455,1.346,456,1.881,457,1.294,458,1.163,459,1.059,460,1.294,462,1.059,466,2.093,467,2.093,468,1.881,471,1.827,474,2.273,476,2.376,478,1.294,484,1.163,485,1.572,487,1.059,488,1.163,489,1.294,490,1.059,491,1.163,492,1.294,493,1.294,498,1.163,499,0.956,500,1.059,501,1.451,502,1.252,503,1.163,504,0.972,505,2.721,506,1.163,507,1.712,508,1.163,509,1.881,510,1.694,511,1.163,512,2.988,513,2.465,514,1.712,515,1.163,516,1.163,517,1.163,518,1.163,519,0.972,520,1.163,521,1.572,522,1.163,523,1.451,524,1.059,525,1.881,526,2.156,527,1.059,528,0.972,529,2.719,530,1.294,531,1.294,532,1.294,533,2.721,534,1.059,535,1.163,536,1.163,537,1.163,538,1.163,539,1.163,540,1.163,541,1.163,542,1.252,543,1.946,544,0.832,545,1.059,546,1.346,547,1.252,548,1.346,549,1.451,550,1.827,551,0.897,552,0.897,553,1.712,554,1.059,555,1.163,556,1.294,557,1.059,558,0.972,559,0.972,560,1.163,561,0.972,562,1.059,563,0.897,564,1.059,565,1.163,566,1.163,575,2.992,577,2.635,600,1.059,601,2.992,609,3.437,620,5.218,621,1.469,622,1.735,623,2.807,624,2.369,625,3.533,626,2.807,627,4.059,628,2.807,629,2.807,630,3.533,631,1.469,632,3.502,633,1.735,634,1.735,635,1.735,636,1.735,637,2.807,638,1.735,639,1.735,640,2.807,641,1.735,642,2.807,643,1.735,644,2.807,645,1.735,646,2.093,647,1.735,648,1.735,649,1.735,650,2.807,651,1.735,652,1.712,653,1.735,654,1.735,655,1.735,656,1.294,657,1.735,658,2.807,659,1.735,660,3.533,661,1.735,662,3.533,663,2.807,664,1.735,665,1.735,666,1.735,667,1.735,668,1.735,669,1.735,670,1.735,671,1.735,672,1.735,673,1.735,674,2.807,675,2.807]],["title/interfaces/Endpoint.html",[68,0.509,363,1.157]],["body/interfaces/Endpoint.html",[3,0.312,4,0.267,9,0.267,14,0.025,30,0.267,31,0.849,38,1.217,45,0.351,51,0.312,68,0.92,112,0.022,113,0.022,267,1.114,275,2.277,363,1.802,364,2.736,676,4.48,677,5.661]],["title/components/EndpointDialogComponent.html",[0,0.037,84,0.683]],["body/components/EndpointDialogComponent.html",[0,0.049,1,0.515,2,0.763,3,0.151,4,0.129,5,0.59,6,0.631,7,0.59,8,0.59,9,0.129,13,0.974,14,0.026,15,0.962,16,1.212,17,0.875,18,1.152,19,0.59,20,1.571,21,1.571,22,0.59,23,2.546,24,0.875,26,0.935,28,0.875,30,0.129,31,0.525,32,3.242,33,2.362,34,2.761,35,0.909,36,1.152,37,2.761,38,0.937,39,0.756,42,0.541,44,0.403,45,0.312,46,1.564,48,0.818,49,1.435,50,1.231,51,0.224,52,0.298,54,1.563,56,0.59,57,0.875,58,0.59,59,1.152,60,0.59,61,0.385,62,0.59,63,0.515,64,1.006,65,0.875,66,1.152,67,0.552,68,0.969,69,1.152,70,0.515,71,0.59,72,0.515,73,0.59,74,0.875,75,0.515,76,1.204,77,0.59,78,0.552,79,0.515,80,0.59,81,0.515,82,0.59,83,0.552,84,1.3,85,0.552,86,0.569,87,0.515,88,0.515,89,0.415,90,0.59,91,0.515,92,0.515,93,0.59,94,0.59,95,0.515,96,0.59,97,0.515,98,0.59,99,0.59,100,0.515,101,0.515,102,0.59,103,0.515,104,0.552,105,0.59,106,0.515,107,0.59,108,0.515,109,0.552,110,0.552,111,0.59,112,0.014,113,0.014,116,1.564,117,1.821,118,2.761,119,3.374,120,2.169,121,3.033,122,3.033,123,3.374,124,3.374,125,3.374,126,3.033,127,3.033,128,2.546,129,3.033,131,1.189,132,3.374,134,0.614,136,2.832,137,2.832,138,3.731,139,2.317,140,3.374,141,2.339,145,0.711,146,0.711,148,0.905,149,1.47,150,2.832,151,3.751,153,2.832,154,3.731,156,3.731,157,1.381,166,2.832,172,1.911,174,1.911,177,1.911,179,1.229,180,2.546,181,1.143,182,1.435,184,1.476,185,1.065,187,1.911,188,1.294,189,1.718,190,1.911,191,1.911,192,1.911,193,1.325,194,0.996,195,2.018,196,0.873,197,1.911,198,1.911,199,2.832,200,3.374,201,1.911,202,1.718,203,1.718,204,1.911,267,0.732,330,2.546,599,1.564,602,4.53,678,5.144,679,4.525,680,2.563,681,2.563,682,2.563,683,2.563,684,2.563,685,3.216,686,3.798,687,2.563,688,2.563,689,2.563,690,2.563,691,2.563]],["title/injectables/EndpointRepositoryService.html",[207,0.836,580,2.277]],["body/injectables/EndpointRepositoryService.html",[3,0.234,4,0.2,9,0.2,14,0.026,30,0.2,38,1.071,39,0.831,42,0.522,44,0.421,45,0.33,51,0.234,52,0.462,61,0.503,68,1.043,112,0.019,113,0.019,134,0.833,145,1.225,146,1.225,148,1.039,185,1.801,207,1.267,209,1.77,218,0.976,230,3.3,236,1.443,237,1.903,238,1.77,267,1.165,275,2.06,343,2.66,346,2.959,349,2.959,350,2.959,354,2.959,355,1.903,574,3.84,580,3.452,599,2.421,607,3.84,616,3.84,692,5.613,693,4.36,694,4.36,695,4.36,696,3.968,697,4.383,698,3.36,699,4.36,700,4.746,701,4.306,702,4.36,703,6.962,704,3.36,705,4.36,706,4.36,707,4.36,708,3.36,709,5.149,710,3.36,711,3.968,712,3.968,713,3.968,714,3.968,715,3.968,716,3.968,717,3.968]],["title/injectables/EndpointService.html",[207,0.836,697,2.277]],["body/injectables/EndpointService.html",[3,0.208,4,0.178,9,0.178,14,0.026,15,0.57,23,2.362,30,0.178,31,0.658,35,0.708,36,0.811,38,1.01,39,0.832,42,0.558,44,0.374,45,0.326,48,0.759,51,0.208,52,0.41,61,0.497,68,0.991,89,0.77,112,0.017,113,0.017,131,1.72,134,0.77,145,1.21,146,1.21,148,1.027,185,1.781,194,1.37,207,1.171,209,1.572,212,2.15,214,3.613,218,1.171,230,3.279,236,1.282,237,1.69,238,1.572,267,1.16,275,1.836,285,2.904,288,2.628,289,4.304,290,3.613,291,2.984,292,2.242,293,2.244,295,3.55,304,2.904,308,3.191,309,4.036,315,3.55,316,2.15,317,2.362,318,2.362,319,2.362,320,1.572,321,1.125,323,2.362,324,4.633,326,4.633,327,4.633,330,2.362,333,2.628,335,1.973,336,2.362,337,2.362,338,1.37,339,1.572,340,2.362,574,4.02,599,2.15,607,4.02,616,4.02,685,2.984,693,4.564,694,4.564,695,4.564,697,3.191,699,2.984,700,4.636,701,4.435,702,2.984,705,2.984,706,2.984,707,2.984,718,5.602,719,4.76,720,6.459,721,3.524,722,6.545,723,3.524,724,3.524,725,3.524,726,3.524,727,3.524,728,3.524,729,3.524,730,4.76,731,5.39,732,3.524]],["title/interfaces/Entity.html",[86,0.509,363,1.157]],["body/interfaces/Entity.html",[3,0.308,4,0.263,9,0.263,14,0.025,30,0.263,31,0.842,38,1.21,42,0.45,45,0.336,51,0.308,61,0.512,68,1.015,86,0.913,112,0.022,113,0.022,267,1.045,275,2.267,363,1.777,364,2.697,733,4.416,734,6.656,735,4.964]],["title/components/EntityDialogComponent.html",[0,0.037,87,0.683]],["body/components/EntityDialogComponent.html",[0,0.041,1,0.383,2,0.608,3,0.113,4,0.096,5,0.439,6,0.469,7,0.439,8,0.439,9,0.096,13,1.164,14,0.026,15,0.901,16,0.966,17,0.697,18,0.987,19,0.439,20,1.516,21,1.516,22,0.439,24,0.697,26,0.745,28,0.697,30,0.096,31,0.418,32,3.218,33,2.166,34,2.297,35,0.939,36,1.201,37,2.297,38,0.977,39,0.798,42,0.512,44,0.321,45,0.324,46,1.164,48,0.652,49,1.068,50,1.224,51,0.179,52,0.222,54,1.636,56,0.439,57,0.697,58,0.439,59,0.987,60,0.439,61,0.429,62,0.439,63,0.383,64,0.861,65,0.987,66,0.987,67,0.411,68,0.564,69,0.987,70,0.383,71,0.439,72,0.383,73,0.439,74,0.697,75,0.383,76,1.071,77,0.439,78,0.411,79,0.383,80,0.439,81,0.383,82,0.439,83,0.411,84,0.383,85,0.411,86,0.901,87,1.305,88,0.383,89,0.609,90,0.439,91,0.383,92,0.383,93,0.439,94,0.439,95,0.383,96,0.439,97,0.383,98,0.439,99,0.439,100,0.383,101,0.383,102,0.439,103,0.383,104,0.411,105,0.439,106,0.383,107,0.439,108,0.383,109,0.411,110,0.411,111,0.439,112,0.011,113,0.011,116,1.164,117,1.452,118,2.297,119,2.807,120,1.805,121,2.523,122,2.523,123,2.807,124,2.807,125,2.807,126,2.523,127,2.523,128,2.03,129,2.523,131,1.58,132,2.807,133,3.187,134,0.49,135,2.564,136,2.258,137,2.258,139,1.847,140,2.807,141,1.946,142,2.564,143,5.16,145,0.977,146,0.977,147,2.564,148,0.959,149,1.58,150,2.258,151,3.973,153,2.258,154,3.196,156,3.196,157,1.101,162,3.187,163,2.564,164,3.629,166,2.258,170,2.564,172,1.423,174,1.423,177,1.423,178,1.615,179,0.915,180,2.03,181,0.851,182,1.695,184,2.027,185,1.462,186,1.615,187,1.423,188,1.694,189,1.279,190,1.423,191,1.423,192,1.423,193,0.986,194,1.177,195,1.679,196,0.65,197,1.423,198,1.423,199,2.258,200,2.807,201,1.423,202,1.279,203,1.279,204,1.423,205,1.615,247,1.615,267,0.923,292,1.566,293,1.177,335,2.108,338,0.742,339,0.851,391,2.258,398,2.258,424,1.695,425,1.695,450,0.986,454,1.068,475,1.279,485,1.068,499,0.65,519,1.068,600,1.164,646,2.258,652,1.164,656,4.721,735,2.807,736,5.361,737,3.764,738,3.764,739,3.764,740,3.028,741,4.286,742,3.028,743,3.028,744,3.028,745,1.908,746,1.908,747,3.629,748,3.028,749,4.286,750,4.674,751,3.028,752,3.028,753,1.908,754,1.908,755,1.908,756,1.908,757,3.028,758,1.908,759,3.028,760,1.908,761,1.615,762,1.908,763,1.908,764,1.908,765,1.908,766,1.908,767,1.908,768,1.908,769,1.908,770,4.034,771,1.908,772,1.908,773,1.908,774,3.764,775,1.908,776,1.908,777,1.908,778,1.908,779,4.286,780,1.908,781,2.564,782,1.908,783,1.908,784,1.908,785,1.615,786,1.908,787,1.908]],["title/injectables/EntityRepositoryService.html",[207,0.836,632,2.277]],["body/injectables/EntityRepositoryService.html",[3,0.245,4,0.209,9,0.209,14,0.026,30,0.209,38,1.093,39,0.84,42,0.531,44,0.44,45,0.333,51,0.245,52,0.483,61,0.508,86,1.044,112,0.019,113,0.019,134,0.857,145,1.237,146,1.237,148,1.051,185,1.822,207,1.304,209,1.85,218,1.021,230,3.319,236,1.509,237,1.989,238,1.85,267,1.156,275,2.095,304,2.531,343,2.78,346,3.093,349,3.093,350,3.093,354,3.093,355,1.989,600,2.531,632,3.551,698,3.512,700,4.689,701,4.26,704,3.512,708,3.512,710,3.512,788,5.664,789,4.486,790,4.486,791,4.486,792,4.486,793,4.486,794,4.486,795,4.148,796,4.357,797,4.486,798,4.486,799,4.486,800,4.486,801,4.486,802,4.486,803,4.148,804,4.148,805,4.148,806,4.148,807,4.148,808,4.148,809,4.148]],["title/injectables/EntityService.html",[207,0.836,796,2.277]],["body/injectables/EntityService.html",[3,0.211,4,0.181,9,0.181,14,0.026,15,0.579,30,0.181,31,0.665,35,0.72,36,0.824,38,1.018,39,0.843,42,0.573,44,0.38,45,0.327,48,0.771,51,0.211,52,0.417,61,0.499,86,1.026,89,0.778,112,0.017,113,0.017,131,1.725,134,0.778,145,1.214,146,1.214,148,1.049,176,1.302,183,1.597,185,1.818,194,1.392,207,1.184,209,1.597,212,2.184,214,3.642,218,1.184,230,3.311,236,1.302,237,1.717,238,1.597,267,1.146,275,1.851,285,2.935,288,2.67,289,4.332,290,3.642,291,3.004,292,2.261,293,2.258,295,3.588,300,1.717,304,2.935,308,3.225,309,4.084,315,3.588,316,2.184,317,2.4,318,2.4,319,2.4,320,1.597,321,1.143,322,2.184,323,2.4,324,4.755,326,4.755,327,4.755,330,2.4,333,2.67,335,2.005,336,2.4,337,2.4,338,1.392,339,1.597,340,2.4,600,2.184,700,4.519,701,4.274,789,4.074,790,4.601,791,4.074,792,4.074,793,4.601,794,4.601,796,3.225,797,4.074,798,3.032,799,4.074,800,4.074,801,3.032,802,3.032,810,5.667,811,5.81,812,4.811,813,3.581,814,3.581,815,3.581,816,3.581,817,3.581,818,3.581,819,3.581,820,3.581,821,3.581,822,3.581,823,3.581,824,3.581,825,3.581,826,3.581,827,3.581]],["title/interfaces/EntityShort.html",[363,1.157,828,2.277]],["body/interfaces/EntityShort.html",[3,0.312,4,0.267,9,0.267,14,0.025,30,0.267,31,0.849,38,1.217,45,0.328,51,0.312,61,0.515,112,0.022,113,0.022,267,1.114,275,2.277,363,1.802,364,2.736,735,4.986,828,4.12,829,4.48]],["title/components/ErrorDisplayComponent.html",[0,0.037,88,0.683]],["body/components/ErrorDisplayComponent.html",[0,0.05,1,0.524,2,0.773,3,0.154,4,0.131,5,0.6,6,0.641,7,0.6,8,0.6,9,0.131,13,0.828,14,0.026,15,0.422,17,0.885,18,1.296,19,0.6,20,1.574,21,1.574,22,0.6,24,0.885,26,0.946,28,0.885,30,0.131,31,0.531,39,0.684,42,0.436,44,0.276,45,0.271,48,0.561,50,0.641,51,0.227,52,0.303,54,1.325,56,0.6,57,0.885,58,0.6,59,1.162,60,0.6,61,0.352,62,0.6,63,0.524,64,1.014,65,0.885,66,1.162,67,0.561,68,0.684,69,1.162,70,0.524,71,0.6,72,0.524,73,1.052,74,0.885,75,0.524,76,1.212,77,0.6,78,0.561,79,0.524,80,0.6,81,0.524,82,0.6,83,0.561,84,0.524,85,0.561,86,0.576,87,0.524,88,1.247,89,1.004,90,0.6,91,0.524,92,0.524,93,0.6,94,0.6,95,0.524,96,0.6,97,0.524,98,0.6,99,0.6,100,0.524,101,0.524,102,0.6,103,0.524,104,0.561,105,0.6,106,0.524,107,0.6,108,0.524,109,0.561,110,0.561,111,0.6,112,0.014,113,0.014,120,2.191,131,0.685,134,0.622,145,0.488,146,0.488,148,0.622,149,1.325,157,1.399,188,1.31,218,0.641,267,0.911,320,2.722,321,0.832,355,1.249,381,1.347,384,4.271,399,2.422,400,2.412,401,2.191,402,2.538,404,1.988,407,2.511,408,2.099,410,1.084,411,1.084,412,2.25,413,1.459,414,1.459,415,1.084,416,1.715,417,1.901,418,1.988,419,1.347,498,1.747,499,1.918,500,1.59,501,2.362,502,2.038,503,1.747,504,1.459,505,3.381,506,1.747,507,2.346,508,1.747,509,2.577,510,2.191,511,1.747,512,3.606,513,3.01,514,1.59,515,1.747,516,1.747,517,1.747,518,1.747,519,1.459,520,1.747,521,2.153,522,1.747,523,2.362,524,1.59,525,2.577,526,2.788,527,1.59,528,1.459,529,3.282,533,3.381,534,2.346,535,1.747,536,1.747,537,1.747,538,1.747,539,1.747,540,1.747,541,1.747,542,2.4,543,2.699,544,1.844,545,1.59,546,2.191,547,2.038,548,2.419,549,1.988,550,1.988,551,1.347,552,1.347,553,2.346,557,1.59,558,1.459,559,1.459,560,1.747,561,1.459,563,1.347,677,3.869,830,4.767,831,4.767,832,2.207,833,2.867,834,3.869,835,4.569,836,3.845,837,4.555,838,3.606,839,4.271,840,2.606,841,5.38,842,3.845,843,2.606,844,2.606,845,2.606,846,2.606,847,2.606,848,2.606,849,2.207,850,2.606,851,2.606,852,2.606,853,3.845,854,2.207,855,1.747,856,1.943,857,2.207,858,3.256,859,2.606,860,2.606,861,1.943,862,3.256,863,1.943,864,1.943,865,1.747,866,2.207,867,2.606,868,2.207,869,2.606,870,2.606,871,2.577,872,2.606,873,2.606,874,2.207]],["title/injectables/ErrorHandlerService.html",[207,0.836,291,1.756]],["body/injectables/ErrorHandlerService.html",[3,0.25,4,0.214,9,0.214,14,0.026,15,0.686,30,0.214,35,0.852,39,0.683,42,0.535,44,0.449,45,0.271,48,0.913,51,0.25,52,0.493,61,0.413,89,0.686,109,0.913,112,0.019,113,0.019,131,1.114,134,0.869,145,1.006,146,1.006,148,0.686,149,1.411,185,1.189,207,1.322,209,1.891,218,1.043,237,2.033,238,1.891,285,3.278,291,2.777,293,2.41,308,3.601,309,3.783,316,2.586,320,2.916,321,1.353,355,2.033,488,3.601,527,4.051,646,3.162,837,5.25,838,4.608,849,3.59,875,4.993,876,3.59,877,4.24,878,5.897,879,4.24,880,4.24,881,5.621,882,4.24,883,4.24,884,4.24,885,3.59,886,4.24,887,3.59,888,4.24,889,4.24,890,4.24,891,4.24,892,4.24,893,4.24,894,4.24,895,3.59]],["title/components/ExportApiButtonComponent.html",[0,0.037,91,0.683]],["body/components/ExportApiButtonComponent.html",[0,0.055,1,0.632,2,0.884,3,0.186,4,0.159,5,0.724,6,0.774,7,0.724,8,0.724,9,0.159,13,0.947,14,0.026,15,0.821,16,1.405,17,1.013,18,1.267,19,0.724,20,1.603,21,1.603,22,0.724,24,1.013,26,1.083,28,1.013,30,0.159,39,0.645,42,0.518,44,0.333,45,0.278,48,0.677,50,1.083,51,0.377,52,0.366,54,1.334,56,0.724,57,1.013,58,0.724,59,1.267,60,0.724,61,0.423,62,0.724,63,0.632,64,1.416,65,1.013,66,1.267,67,0.677,68,0.76,69,1.267,70,0.632,71,0.724,72,0.632,73,0.724,74,1.013,75,0.632,76,1.291,77,0.724,78,0.677,79,0.632,80,0.724,81,0.632,82,0.724,83,0.677,84,0.632,85,0.677,86,0.659,87,0.632,88,0.632,89,0.821,90,0.724,91,1.314,92,0.632,93,0.724,94,0.724,95,0.632,96,0.724,97,0.632,98,0.724,99,0.724,100,0.632,101,0.632,102,0.724,103,0.632,104,0.677,105,0.724,106,0.632,107,0.724,108,0.632,109,0.677,110,0.677,111,0.724,112,0.016,113,0.016,120,2.435,134,0.712,141,2.276,145,0.589,146,0.589,148,0.509,149,1.156,176,2.001,183,1.403,188,1.071,195,2.583,196,1.499,218,0.774,223,1.071,298,1.761,300,2.11,322,1.919,335,1.761,341,3.08,355,1.508,379,2.345,381,2.625,382,3.727,383,3.727,388,3.282,399,2.113,400,2.138,401,1.508,402,1.831,403,1.761,404,1.626,407,1.963,408,1.308,410,1.308,411,1.308,412,1.403,413,1.761,414,1.761,415,1.308,416,1.403,417,1.308,418,2.276,419,1.626,432,1.963,433,3.787,436,2.663,440,4.299,461,2.345,462,1.919,463,4.102,467,3.282,474,1.761,501,1.626,519,1.761,521,1.761,553,2.685,554,1.919,555,2.108,556,2.345,557,1.919,558,1.761,559,1.761,560,2.108,770,4.102,896,4.657,897,3.145,898,5.5,899,4.402,900,3.145,901,3.145,902,3.145,903,3.145,904,3.145,905,3.145,906,3.145,907,3.145,908,3.145,909,3.145,910,3.145,911,3.145,912,3.145,913,3.145,914,3.145,915,3.145]],["title/interfaces/FileStatus.html",[363,1.157,916,2.277]],["body/interfaces/FileStatus.html",[3,0.302,4,0.259,9,0.341,14,0.026,15,0.829,30,0.259,31,0.834,42,0.442,45,0.334,51,0.302,89,1.037,112,0.022,113,0.022,181,2.285,267,1.037,363,1.745,364,2.649,487,3.911,528,3.589,624,4.297,838,4.436,916,4.043,917,4.338,918,5.603,919,6.618]],["title/components/FilterByInputComponent.html",[0,0.037,92,0.683]],["body/components/FilterByInputComponent.html",[0,0.051,1,0.55,2,0.801,3,0.161,4,0.138,5,0.63,6,0.673,7,0.63,8,0.63,9,0.138,13,0.858,14,0.026,15,0.835,16,1.272,17,0.917,18,1.189,19,0.63,20,1.582,21,1.582,22,0.63,24,0.917,26,0.98,28,0.917,30,0.138,31,0.551,35,1.188,36,1.263,39,0.77,42,0.474,44,0.29,45,0.321,50,1.156,51,0.235,52,0.318,54,1.592,56,0.63,57,0.917,58,0.63,59,1.189,60,0.63,61,0.362,62,0.63,63,0.55,64,1.037,65,0.917,66,1.189,67,0.589,68,0.704,69,1.189,70,0.55,71,0.63,72,0.55,73,0.63,74,0.917,75,0.55,76,1.233,77,0.63,78,0.589,79,0.55,80,0.63,81,0.55,82,0.63,83,0.589,84,0.55,85,0.589,86,0.597,87,0.55,88,0.55,89,0.442,90,0.63,91,0.55,92,1.333,93,1.395,94,0.63,95,0.55,96,0.63,97,0.55,98,0.63,99,0.63,100,0.55,101,0.55,102,0.63,103,0.55,104,0.589,105,0.63,106,0.55,107,0.63,108,0.55,109,0.589,110,0.589,111,0.63,112,0.014,113,0.014,121,3.15,122,3.15,134,0.644,139,2.431,145,0.512,146,0.512,148,0.76,149,1.047,151,2.67,168,2.431,179,1.311,181,1.22,182,1.532,184,1.549,185,1.117,188,0.932,189,1.833,195,2.303,196,2.014,202,3.15,203,3.15,218,1.156,223,1.869,267,1.05,424,2.231,425,2.231,432,1.777,434,1.91,442,2.475,450,2.837,454,1.532,455,1.91,502,1.777,547,2.096,747,3.979,781,2.316,865,1.833,920,5.231,921,5.231,922,2.316,923,3.984,924,3.504,925,4.699,926,3.984,927,4.699,928,3.984,929,4.699,930,5.487,931,4.699,932,2.735,933,5.727,934,2.735,935,2.735,936,2.735,937,2.735,938,3.984,939,2.735,940,5.162,941,3.984,942,3.504,943,3.984,944,4.699,945,2.735,946,2.735,947,2.735,948,2.735,949,3.373,950,2.735,951,2.735,952,3.984,953,2.735,954,2.735,955,2.735,956,2.735,957,2.735,958,2.735,959,2.735,960,2.735,961,2.735,962,2.735,963,2.735,964,2.316,965,2.04]],["title/components/HeaderComponent.html",[0,0.037,95,0.683]],["body/components/HeaderComponent.html",[0,0.05,1,0.534,2,0.784,3,0.157,4,0.134,5,0.612,6,0.653,7,0.612,8,0.612,9,0.134,13,0.572,14,0.026,15,0.747,16,1.244,17,0.898,18,1.172,19,0.612,20,1.577,21,1.577,22,0.612,24,0.898,25,2.389,26,1.137,28,0.898,30,0.134,31,0.539,33,1.796,35,1.177,36,1.172,38,0.865,39,0.744,42,0.546,43,1.105,44,0.282,45,0.309,48,0.572,50,1.137,51,0.23,52,0.309,54,1.539,56,0.612,57,0.898,58,0.612,59,1.172,60,0.612,61,0.3,62,0.612,63,0.534,64,1.139,65,0.898,66,1.172,67,0.572,68,0.692,69,1.172,70,0.534,71,0.612,72,1.023,73,0.898,74,0.898,75,0.534,76,1.22,77,0.612,78,0.572,79,0.534,80,0.612,81,0.534,82,0.612,83,0.572,84,0.534,85,0.572,86,0.584,87,0.534,88,0.534,89,0.43,90,0.612,91,0.534,92,0.534,93,0.612,94,0.612,95,1.297,96,0.612,97,0.534,98,0.612,99,0.612,100,0.784,101,0.534,102,0.612,103,0.534,104,0.572,105,0.612,106,0.534,107,0.612,108,0.534,109,0.572,110,0.572,111,0.612,112,0.014,113,0.014,117,2.215,131,1.214,134,0.631,148,0.631,149,1.337,157,1.418,184,1.979,193,2.016,196,1.734,223,0.905,267,0.917,372,1.62,378,1.981,381,1.373,388,2.908,399,2.118,400,1.979,401,1.273,402,1.622,403,2.183,404,1.373,405,3.301,406,2.249,407,1.185,408,1.105,409,2.249,410,1.105,411,1.105,412,1.739,413,1.487,414,1.487,415,1.105,416,1.185,417,1.105,418,1.373,419,1.373,420,2.249,432,1.739,434,1.869,442,2.6,450,2.016,455,1.869,456,3.412,458,1.78,464,2.249,499,1.574,501,1.373,502,2.061,507,1.62,510,2.441,521,2.183,523,1.373,526,2.379,529,2.379,542,1.739,543,2.215,544,1.869,546,1.869,547,1.739,548,2.215,557,1.62,652,2.819,861,1.981,862,2.249,863,1.981,864,1.981,865,1.78,966,2.249,967,6.32,968,4.62,969,3.899,970,5.091,971,5.422,972,4.62,973,4.62,974,5.422,975,2.656,976,2.656,977,4.62,978,2.656,979,2.656,980,2.656,981,2.656,982,3.899,983,3.899,984,2.656,985,1.981,986,2.656,987,2.656,988,3.899,989,3.899,990,2.656,991,3.899,992,2.656,993,3.301,994,2.656,995,2.656,996,2.656,997,2.656,998,3.899,999,3.301]],["title/interceptors/HttpErrorInterceptor.html",[1000,2.876,1001,2.277]],["body/interceptors/HttpErrorInterceptor.html",[3,0.28,4,0.24,9,0.24,14,0.026,15,0.768,30,0.24,39,0.733,42,0.587,44,0.503,45,0.291,48,1.022,51,0.28,52,0.553,61,0.444,112,0.021,113,0.021,131,1.248,134,0.932,145,1.08,146,1.08,148,0.768,185,1.616,194,1.846,207,1.418,218,1.168,230,2.975,236,1.727,290,3.864,291,3.337,292,2.582,293,2.509,309,3.517,316,2.897,317,3.183,318,3.183,319,3.183,320,2.118,321,1.516,323,3.183,336,3.183,337,3.183,338,1.846,339,2.118,340,3.183,355,2.277,474,3.475,833,3.541,1001,3.864,1002,4.749,1003,5.255,1004,4.021,1005,5.764,1006,4.749,1007,4.749,1008,5.764,1009,6.454,1010,6.454,1011,4.749,1012,4.749,1013,4.749,1014,5.764,1015,4.749,1016,4.749,1017,4.749]],["title/components/IconTrashComponent.html",[0,0.037,97,0.683]],["body/components/IconTrashComponent.html",[0,0.052,1,0.813,2,0.813,3,0.165,4,0.141,5,0.643,6,0.687,7,0.643,8,0.643,9,0.141,11,2.084,13,0.871,14,0.026,15,0.843,16,1.291,17,0.932,18,1.201,19,0.643,20,1.585,21,1.585,22,0.932,24,0.643,26,0.996,28,0.932,30,0.141,32,2.459,39,0.756,42,0.544,44,0.296,45,0.322,48,0.601,49,1.564,50,0.996,51,0.239,52,0.325,54,1.563,55,1.564,56,0.643,57,0.932,58,0.643,59,1.201,60,0.643,61,0.366,62,0.643,63,0.561,64,1.159,65,0.932,66,1.201,67,0.601,68,0.891,69,1.201,70,0.561,71,0.643,72,0.561,73,0.643,74,0.932,75,0.561,76,1.242,77,0.643,78,0.601,79,0.561,80,0.643,81,0.561,82,0.643,83,0.601,84,0.561,85,0.601,86,0.606,87,0.561,88,0.561,89,0.452,90,0.643,91,0.561,92,0.561,93,0.643,94,0.643,95,0.561,96,0.643,97,1.329,98,1.403,99,0.643,100,0.561,101,0.561,102,0.643,103,0.561,104,0.601,105,0.643,106,0.561,107,0.643,108,0.561,109,0.601,110,0.601,111,0.643,112,0.015,113,0.015,131,1.063,134,0.654,145,0.523,146,0.523,148,0.452,149,1.063,176,1.896,183,1.246,185,1.134,188,1.378,195,1.246,196,1.885,218,0.996,223,0.952,236,1.016,292,1.979,293,2.243,320,2.718,321,0.892,338,1.086,339,1.246,400,1.849,407,1.246,410,1.162,411,1.162,412,1.246,415,1.162,416,1.246,417,1.162,432,1.805,433,3.547,434,1.94,442,2.5,450,2.459,455,1.94,459,3.718,468,2.712,471,1.444,485,1.564,499,0.952,513,1.444,514,1.705,550,1.444,561,1.564,562,1.705,563,1.444,564,1.705,565,1.873,566,1.873,576,4.027,577,3.547,599,1.705,785,2.366,828,3.495,1018,5.16,1019,2.366,1020,4.046,1021,2.794,1022,4.046,1023,5.214,1024,4.756,1025,4.756,1026,2.794,1027,4.046,1028,2.794,1029,2.794,1030,2.794,1031,2.794,1032,2.794,1033,2.794,1034,2.794,1035,2.794,1036,2.794,1037,2.794,1038,4.046,1039,2.794,1040,2.794,1041,2.794,1042,2.794,1043,2.794,1044,2.794,1045,4.756,1046,4.046,1047,2.794,1048,2.794]],["title/components/ImportDialogComponent.html",[0,0.037,100,0.683]],["body/components/ImportDialogComponent.html",[0,0.039,1,0.356,2,0.574,3,0.105,4,0.089,5,0.408,6,0.436,7,0.408,8,0.408,9,0.32,13,1.17,14,0.026,15,0.779,16,0.912,17,0.658,18,0.947,19,0.408,20,1.5,21,1.5,22,0.408,24,0.658,26,0.882,28,0.658,30,0.089,31,0.395,32,3.352,33,1.969,34,2.188,35,1.018,36,1.038,37,2.188,38,0.332,39,0.751,42,0.539,43,0.738,44,0.188,45,0.302,48,0.615,49,0.993,50,0.703,51,0.169,52,0.206,54,1.552,55,2.008,56,0.408,57,0.658,58,0.408,59,0.947,60,0.408,61,0.447,62,0.408,63,0.356,64,1.168,65,0.658,66,0.947,67,0.382,68,0.537,69,0.947,70,0.356,71,0.408,72,0.356,73,0.408,74,0.658,75,0.356,76,1.037,77,0.408,78,0.382,79,0.356,80,0.408,81,0.356,82,0.408,83,0.382,84,0.356,85,0.382,86,0.428,87,0.356,88,0.356,89,0.981,90,0.408,91,0.356,92,0.356,93,0.408,94,0.408,95,0.356,96,0.408,97,0.356,98,0.408,99,0.408,100,1.282,101,0.356,102,0.408,103,0.356,104,0.382,105,0.408,106,0.356,107,0.408,108,0.356,109,0.772,110,0.382,111,0.408,112,0.01,113,0.01,116,1.082,117,1.369,120,1.719,127,2.404,128,1.915,131,1.64,134,0.462,138,3.066,145,0.949,146,0.949,148,0.88,149,1.467,157,1.039,179,0.85,180,1.915,181,0.791,185,1.525,188,1.943,194,0.689,195,2.545,218,0.703,223,1.221,267,0.819,275,0.604,278,2.302,292,1.71,293,1.598,298,0.993,300,2.428,322,1.082,338,0.689,341,2.302,366,1.502,372,1.082,391,1.323,398,1.323,400,0.689,417,0.738,418,0.917,424,1.599,425,1.599,437,2.404,438,2.756,454,0.993,461,1.323,462,1.082,471,1.477,474,0.993,475,1.189,484,3.021,485,0.993,487,2.75,490,1.082,499,1.64,504,0.993,513,1.477,528,3.195,542,0.791,543,1.369,544,0.85,546,0.85,547,0.791,548,1.369,549,0.917,550,0.917,551,0.917,552,0.917,554,1.082,624,3.825,631,1.502,652,2.508,761,1.502,770,4.255,838,1.189,855,1.189,856,1.323,881,4.46,916,4.065,918,4.078,924,2.674,942,3.066,949,3.036,985,4.467,1049,5.072,1050,3.586,1051,3.586,1052,3.586,1053,3.586,1054,3.586,1055,4.078,1056,3.586,1057,3.586,1058,2.856,1059,2.856,1060,2.856,1061,2.856,1062,2.856,1063,2.856,1064,2.856,1065,2.856,1066,1.774,1067,4.111,1068,1.774,1069,2.856,1070,4.111,1071,1.774,1072,2.856,1073,2.856,1074,1.774,1075,3.586,1076,1.774,1077,2.856,1078,1.774,1079,1.774,1080,1.774,1081,1.774,1082,1.774,1083,1.774,1084,1.774,1085,1.774,1086,1.774,1087,1.774,1088,1.774,1089,4.111,1090,3.586,1091,3.586,1092,1.774,1093,4.507,1094,4.816,1095,4.816,1096,4.507,1097,1.774,1098,1.774,1099,1.774,1100,1.774,1101,1.774,1102,1.774,1103,1.774,1104,1.774,1105,1.774,1106,2.856,1107,1.774,1108,1.774,1109,3.586,1110,1.774,1111,4.816,1112,1.774,1113,1.774,1114,1.774,1115,1.774,1116,1.774,1117,1.774,1118,1.774,1119,1.774,1120,1.774,1121,2.856,1122,4.111,1123,1.774,1124,1.774,1125,1.774,1126,1.774,1127,1.774,1128,1.774,1129,1.774,1130,1.774,1131,1.774,1132,1.774,1133,1.774,1134,1.774,1135,1.774,1136,1.774]],["title/components/LoadingComponent.html",[0,0.037,101,0.683]],["body/components/LoadingComponent.html",[0,0.058,1,0.687,2,0.937,3,0.202,4,0.173,5,0.787,6,0.841,7,0.787,8,0.787,9,0.173,13,0.736,14,0.026,17,1.074,18,1.313,19,0.787,20,1.614,21,1.614,22,0.787,24,0.787,26,1.306,28,1.074,30,0.173,31,0.645,35,0.937,36,0.787,39,0.435,42,0.403,44,0.363,45,0.235,50,0.841,51,0.275,52,0.398,54,0.898,56,0.787,57,1.074,58,0.787,59,1.313,60,0.787,61,0.359,62,0.787,63,0.687,64,1.146,65,1.074,66,1.313,67,0.736,68,0.795,69,1.313,70,0.687,71,0.787,72,0.687,73,0.787,74,1.074,75,0.687,76,1.325,77,0.787,78,0.736,79,0.687,80,0.787,81,0.687,82,0.787,83,0.736,84,0.687,85,0.736,86,0.698,87,0.687,88,0.687,89,0.553,90,0.787,91,0.687,92,0.687,93,0.787,94,0.787,95,0.687,96,0.787,97,0.687,98,0.787,99,0.787,100,0.687,101,1.266,102,0.787,103,0.687,104,0.736,105,0.787,106,0.687,107,0.787,108,0.687,109,0.736,110,0.736,111,0.787,112,0.017,113,0.017,157,1.696,267,0.858,372,2.086,399,1.423,402,2.562,408,1.423,499,1.589,501,2.744,502,2.08,510,2.545,523,2.947,524,2.845,534,3.238,542,1.525,543,1.64,544,1.64,546,1.64,547,1.525,548,2.236,549,2.744,551,2.411,552,1.768,558,1.915,559,1.915,563,2.411,564,2.086,624,3.558,855,2.292,857,2.895,858,4.494,871,3.126,965,2.55,1137,2.895,1138,5.307,1139,4.664,1140,5.307,1141,5.307,1142,3.42,1143,3.42,1144,3.42,1145,3.42,1146,3.42,1147,2.895,1148,3.42,1149,4.664,1150,4.664,1151,2.895,1152,4.664,1153,4.664,1154,3.42,1155,3.42,1156,3.42,1157,3.42,1158,4.664,1159,3.42,1160,3.42,1161,3.42,1162,2.895,1163,2.55,1164,3.42]],["title/components/PageNotFoundComponent.html",[0,0.037,103,0.683]],["body/components/PageNotFoundComponent.html",[0,0.057,1,0.667,2,0.919,3,0.196,4,0.168,5,0.765,6,0.817,7,0.765,8,0.765,9,0.168,13,0.715,14,0.026,15,0.537,17,1.053,18,1.44,19,0.765,20,1.61,21,1.61,22,0.765,24,1.053,25,2.702,26,1.125,28,1.053,42,0.51,43,1.382,44,0.352,48,0.715,50,0.817,51,0.27,52,0.386,56,0.765,57,1.053,58,0.765,59,1.297,60,0.765,61,0.352,62,0.765,63,0.667,64,1.132,65,1.053,66,1.297,67,0.715,68,0.783,69,1.297,70,0.667,71,0.765,72,0.667,73,0.765,74,1.053,75,0.667,76,1.314,77,0.765,78,0.715,79,0.667,80,0.765,81,0.667,82,0.765,83,0.715,84,0.667,85,0.715,86,0.685,87,0.667,88,0.667,89,0.537,90,0.765,91,0.667,92,0.667,93,0.765,94,0.765,95,0.667,96,0.765,97,0.667,98,0.765,99,0.765,100,0.667,101,0.667,102,0.765,103,1.226,104,1.371,105,0.765,106,0.667,107,0.765,108,0.667,109,0.715,110,0.715,111,0.765,112,0.016,113,0.016,120,2.506,157,1.663,321,1.06,370,3.189,381,1.717,399,2.343,400,2.372,402,2.343,403,1.86,404,2.363,407,2.332,408,2.175,410,1.382,411,1.382,412,2.039,415,1.382,416,2.039,417,1.902,419,1.717,499,2.202,502,2.332,504,1.86,510,2.192,513,1.717,523,2.363,542,2.039,543,2.506,544,2.192,546,2.506,547,2.039,548,2.831,555,2.226,561,3.306,854,2.812,855,2.226,856,2.477,861,3.409,863,3.409,864,2.477,865,2.226,866,2.812,868,2.812,871,3.064,874,2.812,885,4.768,887,3.87,964,3.87,993,2.812,1151,3.87,1163,3.409,1165,2.812,1166,2.812,1167,2.812,1168,5.227,1169,4.571,1170,3.321,1171,3.321,1172,3.321,1173,3.87,1174,3.321,1175,3.321,1176,3.321,1177,3.321,1178,3.321,1179,3.321,1180,3.321,1181,3.321]],["title/components/PaginationComponent.html",[0,0.037,106,0.683]],["body/components/PaginationComponent.html",[0,0.055,1,0.613,2,0.866,3,0.18,4,0.154,5,0.702,6,0.75,7,0.702,8,0.702,9,0.154,13,0.927,14,0.026,15,0.878,16,1.375,17,1.318,18,1.368,19,0.702,20,1.598,21,1.598,22,0.702,24,0.992,26,1.06,28,0.992,30,0.154,33,1.186,35,1.194,36,1.15,39,0.755,42,0.494,44,0.323,45,0.324,50,0.75,51,0.254,52,0.355,54,1.561,56,0.702,57,0.992,58,0.702,59,1.249,60,0.702,61,0.384,62,0.702,63,0.613,64,1.09,65,0.992,66,1.249,67,0.656,68,0.748,69,1.249,70,0.613,71,0.702,72,0.613,73,0.702,74,0.992,75,0.613,76,1.279,77,0.702,78,0.656,79,0.613,80,0.702,81,0.613,82,0.702,83,0.656,84,0.613,85,0.656,86,0.645,87,0.613,88,0.613,89,0.493,90,0.702,91,0.613,92,0.613,93,0.702,94,0.702,95,0.613,96,0.702,97,0.613,98,0.702,99,0.702,100,0.613,101,0.613,102,0.702,103,0.613,104,1.365,105,0.702,106,1.319,107,0.702,108,0.613,109,0.656,110,0.656,111,0.702,112,0.015,113,0.015,118,3.047,126,3.347,134,0.697,139,2.628,145,0.571,146,0.571,148,0.697,149,1.426,168,2.628,179,1.462,181,1.36,182,1.708,185,0.855,188,1.039,196,1.848,223,1.039,273,4.595,424,2.412,425,2.412,432,1.921,434,2.065,442,2.602,454,1.708,455,2.065,471,2.227,499,1.701,1182,2.582,1183,4.595,1184,4.307,1185,6.8,1186,4.307,1187,4.994,1188,4.994,1189,4.994,1190,4.307,1191,4.307,1192,5.724,1193,4.994,1194,4.994,1195,4.994,1196,4.994,1197,3.05,1198,4.994,1199,3.05,1200,3.05,1201,3.05,1202,4.307,1203,3.05,1204,4.307,1205,3.05,1206,3.05,1207,3.05,1208,3.05]],["title/components/SwitchComponent.html",[0,0.037,108,0.683]],["body/components/SwitchComponent.html",[0,0.051,1,0.538,2,0.789,3,0.158,4,0.135,5,0.617,6,0.659,7,0.617,8,0.617,9,0.135,13,0.577,14,0.026,15,0.751,16,1.252,17,1.253,18,1.309,19,0.617,20,1.578,21,1.578,22,0.617,24,0.903,25,2.401,26,0.965,28,0.903,30,0.135,31,0.542,32,2.939,33,2.21,35,1.027,36,1.438,38,1.1,39,0.723,42,0.47,43,1.114,44,0.284,45,0.287,50,0.659,51,0.232,52,0.312,54,1.494,56,0.617,57,0.903,58,0.617,59,1.177,60,0.617,61,0.302,62,0.617,63,0.538,64,1.027,65,0.903,66,1.177,67,0.577,68,0.695,69,1.177,70,0.538,71,0.617,72,0.538,73,0.617,74,0.903,75,0.538,76,1.224,77,0.617,78,0.577,79,0.538,80,0.617,81,0.538,82,0.617,83,0.577,84,0.538,85,0.577,86,0.588,87,0.538,88,0.538,89,0.433,90,0.617,91,0.538,92,0.538,93,0.617,94,0.617,95,0.538,96,0.617,97,0.538,98,0.617,99,0.617,100,0.538,101,0.538,102,0.617,103,0.538,104,0.577,105,0.617,106,0.538,107,0.617,108,1.287,109,1.171,110,0.577,111,0.617,112,0.014,113,0.014,118,2.833,129,3.112,134,0.635,148,0.635,149,1.494,157,0.974,179,1.284,181,1.195,184,1.987,196,1.581,223,1.853,338,1.525,399,1.932,400,1.805,401,1.284,402,1.632,408,1.632,410,1.114,411,1.114,415,1.632,424,2.197,425,2.197,432,1.75,434,1.881,442,2.609,454,1.5,455,1.881,471,2.029,499,2.001,500,1.634,502,2.071,510,2.226,542,1.195,549,1.385,550,1.385,551,2.401,552,2.029,553,1.634,554,1.634,558,2.197,559,2.197,562,3.583,563,1.385,652,3.583,833,2.926,834,3.931,839,4.328,871,1.796,924,3.462,942,3.462,965,1.998,1147,2.268,1173,3.322,1183,4.328,1209,2.268,1210,3.924,1211,3.924,1212,3.924,1213,3.322,1214,4.643,1215,3.924,1216,4.643,1217,4.643,1218,3.924,1219,4.643,1220,4.643,1221,5.685,1222,5.441,1223,2.679,1224,2.679,1225,2.679,1226,2.679,1227,3.924,1228,5.112,1229,2.679,1230,3.924,1231,2.679,1232,2.679,1233,2.679,1234,2.679,1235,2.679,1236,2.679,1237,3.924,1238,2.679,1239,3.924,1240,2.679,1241,3.924,1242,3.924,1243,3.924,1244,4.643,1245,3.924,1246,3.924,1247,2.679,1248,2.679]],["title/interfaces/apiServiceShortStructure.html",[176,1.235,363,1.157]],["body/interfaces/apiServiceShortStructure.html",[3,0.312,4,0.267,9,0.267,13,1.439,14,0.025,30,0.267,31,0.849,38,1.217,45,0.328,51,0.312,61,0.515,112,0.022,113,0.022,176,2.235,267,1.114,275,2.277,363,1.802,364,2.736,1249,4.48]],["title/coverage.html",[1250,3.931]],["body/coverage.html",[0,0.077,1,0.794,9,0.199,10,3.344,11,2.945,12,3.344,14,0.026,45,0.199,63,0.794,64,1.213,67,0.85,68,0.854,70,0.794,72,0.794,75,0.794,76,1.3,78,0.85,79,0.794,81,0.794,83,0.85,84,0.794,85,0.85,86,0.591,87,0.794,88,0.794,91,0.794,92,0.794,95,0.794,97,0.794,100,0.794,101,0.794,103,0.794,106,0.794,108,0.794,112,0.018,113,0.018,114,3.344,115,2.945,116,3.684,176,1.436,207,1.629,208,2.945,210,3.828,211,3.344,212,3.684,223,1.345,278,2.211,291,2.042,298,2.211,300,1.893,341,2.211,342,3.344,343,3.823,363,2.185,365,3.344,367,3.344,377,3.344,378,2.945,379,3.828,421,3.823,422,3.344,423,3.344,459,2.409,463,2.945,499,2.377,567,3.344,568,3.344,580,2.647,602,2.945,620,3.344,621,3.344,632,2.647,656,2.945,676,3.344,678,3.344,692,3.344,697,2.647,718,3.344,733,3.344,736,3.344,788,3.344,796,2.647,810,3.344,828,2.647,829,3.344,830,3.344,831,3.344,832,3.344,875,3.344,876,3.344,896,3.344,916,2.647,917,3.344,920,3.344,921,3.344,922,3.344,966,3.344,985,2.945,1000,3.344,1001,2.647,1003,3.344,1004,3.344,1018,3.344,1019,3.344,1049,3.344,1137,3.344,1162,3.344,1163,5.242,1165,3.344,1166,3.344,1167,3.344,1182,3.344,1209,3.344,1249,3.344,1250,3.344,1251,3.949,1252,3.949,1253,3.949,1254,3.949,1255,3.344,1256,3.949,1257,3.344,1258,3.949,1259,5.133,1260,3.949,1261,3.949,1262,3.949,1263,5.703,1264,3.949,1265,3.949,1266,5.133,1267,3.949,1268,5.703,1269,5.133,1270,3.949,1271,3.949,1272,6.038,1273,3.949,1274,3.949,1275,3.949,1276,3.949,1277,3.949,1278,3.949,1279,3.949,1280,3.949,1281,3.949,1282,3.949,1283,3.949,1284,5.133,1285,5.133,1286,6.038,1287,3.949,1288,5.133,1289,3.949,1290,5.133,1291,3.949,1292,3.949,1293,3.344]],["title/dependencies.html",[1294,2.399,1295,3.461]],["body/dependencies.html",[14,0.026,15,1.147,43,2.016,44,0.514,46,2.956,48,1.043,112,0.021,113,0.021,179,2.323,181,2.162,182,2.714,234,4.103,236,1.763,321,1.547,1293,4.103,1295,4.103,1296,4.846,1297,6.889,1298,4.846,1299,5.835,1300,4.94,1301,4.846,1302,4.846,1303,6.649,1304,4.846,1305,6.973,1306,4.846,1307,4.846,1308,4.846,1309,4.846,1310,4.846,1311,4.846,1312,4.846,1313,6.261,1314,6.261,1315,4.846,1316,4.846,1317,4.846,1318,4.846,1319,4.846,1320,4.846,1321,4.846,1322,4.846,1323,4.846,1324,4.846,1325,4.846]],["title/index.html",[30,0.143,1326,2.833,1327,2.833]],["body/index.html",[0,0.067,2,0.943,4,0.237,14,0.021,17,1.543,35,1.15,104,1.01,110,1.01,112,0.021,113,0.021,168,3.922,223,1.599,248,5.228,249,3.974,375,3.974,490,2.864,491,3.146,545,4.089,895,4.846,999,3.974,1055,3.974,1300,3.974,1328,6.174,1329,4.694,1330,5.723,1331,6.59,1332,3.974,1333,4.694,1334,5.723,1335,6.174,1336,4.694,1337,6.59,1338,6.703,1339,4.694,1340,5.723,1341,4.694,1342,4.694,1343,5.723,1344,4.694,1345,4.694,1346,4.694,1347,4.694,1348,5.723,1349,4.694,1350,4.694,1351,4.694,1352,6.174,1353,4.694,1354,4.694,1355,4.694,1356,4.694,1357,4.694,1358,4.694,1359,4.694,1360,4.694,1361,4.694,1362,4.694,1363,4.694,1364,4.694,1365,4.694,1366,4.694,1367,4.694,1368,4.694,1369,5.723,1370,6.174,1371,4.694,1372,4.694,1373,4.694,1374,4.694,1375,4.694,1376,4.694,1377,6.174,1378,4.694,1379,4.694,1380,5.723,1381,4.694,1382,4.694,1383,4.694,1384,4.694,1385,4.694,1386,4.694,1387,4.694,1388,4.694,1389,4.694,1390,4.694,1391,4.694,1392,4.694,1393,4.694,1394,4.694,1395,4.694,1396,3.5,1397,4.694]],["title/modules.html",[1398,3.931]],["body/modules.html",[14,0.023,112,0.023,113,0.023,1398,4.728]],["title/overview.html",[1396,3.462]],["body/overview.html",[2,1.113,14,0.023,112,0.023,113,0.023,209,2.47,364,2.863,1396,4.13,1399,5.538,1400,5.538,1401,5.538]],["title/properties.html",[31,0.565,1294,2.399]],["body/properties.html",[14,0.024,31,0.769,112,0.023,113,0.023,1332,4.709,1402,5.561]],["title/miscellaneous/variables.html",[1403,2.399,1404,3.461]],["body/miscellaneous/variables.html",[14,0.025,30,0.269,35,1.073,36,1.23,45,0.269,112,0.022,113,0.022,184,2.402,1001,3.58,1213,4.522,1255,4.522,1257,5.232,1403,4.522,1404,4.522,1405,5.34,1406,5.34,1407,5.34,1408,5.34,1409,5.34,1410,5.34,1411,5.34,1412,5.34,1413,5.34,1414,5.34,1415,5.34,1416,5.34]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":499,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1402,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":864,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["0.15.0",{"_index":1325,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":1174,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["0.2s",{"_index":872,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["0.3125rem",{"_index":409,"title":{},"body":{"components/BackButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["0.3s",{"_index":416,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["0.5rem",{"_index":994,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0.625rem",{"_index":405,"title":{},"body":{"components/BackButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["0/1",{"_index":1258,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1291,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1290,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1254,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1284,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1286,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1285,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1289,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1288,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1287,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":566,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{}}}],["003366",{"_index":873,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["004080",{"_index":560,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["0056a6",{"_index":501,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{}}}],["0056b3",{"_index":1181,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["007bff",{"_index":1178,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["1",{"_index":273,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"components/PaginationComponent.html":{}}}],["1.2",{"_index":562,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{},"components/SwitchComponent.html":{}}}],["1.25rem",{"_index":406,"title":{},"body":{"components/BackButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["1.2em",{"_index":1180,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["1.5",{"_index":517,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["1/1",{"_index":1283,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1163,"title":{},"body":{"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["100px",{"_index":1145,"title":{},"body":{"components/LoadingComponent.html":{}}}],["100vh",{"_index":1143,"title":{},"body":{"components/LoadingComponent.html":{}}}],["10px",{"_index":513,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["10rem",{"_index":1133,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["13px",{"_index":556,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["14/14",{"_index":1263,"title":{},"body":{"coverage.html":{}}}],["14/17",{"_index":1265,"title":{},"body":{"coverage.html":{}}}],["14px",{"_index":1244,"title":{},"body":{"components/SwitchComponent.html":{}}}],["15px",{"_index":561,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["16",{"_index":1198,"title":{},"body":{"components/PaginationComponent.html":{}}}],["16.8px",{"_index":1243,"title":{},"body":{"components/SwitchComponent.html":{}}}],["16px",{"_index":515,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["19.1.0",{"_index":1297,"title":{},"body":{"dependencies.html":{}}}],["19.1.3",{"_index":1333,"title":{},"body":{"index.html":{}}}],["19/19",{"_index":1273,"title":{},"body":{"coverage.html":{}}}],["1px",{"_index":857,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/LoadingComponent.html":{}}}],["1rem",{"_index":418,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{}}}],["1s",{"_index":1154,"title":{},"body":{"components/LoadingComponent.html":{}}}],["2",{"_index":519,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["2.3.0",{"_index":1323,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1259,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":564,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{}}}],["20px",{"_index":563,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["23",{"_index":1399,"title":{},"body":{"overview.html":{}}}],["24/24",{"_index":1279,"title":{},"body":{"coverage.html":{}}}],["24px",{"_index":500,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/SwitchComponent.html":{}}}],["25px",{"_index":1177,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["2em",{"_index":1176,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["2px",{"_index":862,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{}}}],["2rem",{"_index":511,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["3.10.1",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1261,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":246,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["300px",{"_index":964,"title":{},"body":{"components/FilterByInputComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["30px",{"_index":1179,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["32px",{"_index":1150,"title":{},"body":{"components/LoadingComponent.html":{}}}],["333",{"_index":1175,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["34/34",{"_index":1282,"title":{},"body":{"coverage.html":{}}}],["34px",{"_index":1237,"title":{},"body":{"components/SwitchComponent.html":{}}}],["36px",{"_index":869,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["3px",{"_index":1245,"title":{},"body":{"components/SwitchComponent.html":{}}}],["4.0.2",{"_index":1311,"title":{},"body":{"dependencies.html":{}}}],["4.21.0",{"_index":1305,"title":{},"body":{"dependencies.html":{}}}],["4.22.0",{"_index":1314,"title":{},"body":{"dependencies.html":{}}}],["4.24.0",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1267,"title":{},"body":{"coverage.html":{}}}],["40.8px",{"_index":1236,"title":{},"body":{"components/SwitchComponent.html":{}}}],["400",{"_index":882,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["400px",{"_index":866,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["404",{"_index":885,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/PageNotFoundComponent.html":{}}}],["408",{"_index":888,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["409",{"_index":489,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["40px",{"_index":1172,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["45/45",{"_index":1276,"title":{},"body":{"coverage.html":{}}}],["46px",{"_index":1146,"title":{},"body":{"components/LoadingComponent.html":{}}}],["4caf50",{"_index":1247,"title":{},"body":{"components/SwitchComponent.html":{}}}],["4px",{"_index":1173,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["4rem",{"_index":991,"title":{},"body":{"components/HeaderComponent.html":{}}}],["4s",{"_index":1241,"title":{},"body":{"components/SwitchComponent.html":{}}}],["50",{"_index":965,"title":{},"body":{"components/FilterByInputComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["500",{"_index":889,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["5000",{"_index":247,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"components/EntityDialogComponent.html":{}}}],["502",{"_index":890,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["503",{"_index":891,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["504",{"_index":892,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["50px",{"_index":867,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["555",{"_index":540,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["5px",{"_index":557,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["6",{"_index":1401,"title":{},"body":{"overview.html":{}}}],["6/6",{"_index":1269,"title":{},"body":{"coverage.html":{}}}],["65",{"_index":503,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["666",{"_index":514,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/IconTrashComponent.html":{}}}],["7.8.0",{"_index":1321,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1266,"title":{},"body":{"coverage.html":{}}}],["768px",{"_index":997,"title":{},"body":{"components/HeaderComponent.html":{}}}],["7px",{"_index":555,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["8",{"_index":1400,"title":{},"body":{"overview.html":{}}}],["8.0.7",{"_index":1302,"title":{},"body":{"dependencies.html":{}}}],["8/10",{"_index":1262,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":1268,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1162,"title":{},"body":{"components/LoadingComponent.html":{},"coverage.html":{}}}],["82",{"_index":1264,"title":{},"body":{"coverage.html":{}}}],["888",{"_index":538,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["8px",{"_index":534,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/LoadingComponent.html":{}}}],["9",{"_index":944,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["9/9",{"_index":1260,"title":{},"body":{"coverage.html":{}}}],["9]/g",{"_index":204,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["a.click",{"_index":913,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["a.download",{"_index":911,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["a.href",{"_index":910,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["absolute",{"_index":552,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["accessors",{"_index":139,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/PaginationComponent.html":{}}}],["action",{"_index":720,"title":{},"body":{"injectables/EndpointService.html":{}}}],["actionname",{"_index":722,"title":{},"body":{"injectables/EndpointService.html":{}}}],["actions",{"_index":541,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["activatedroute",{"_index":841,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["actual_component",{"_index":111,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["additional",{"_index":1388,"title":{},"body":{"index.html":{}}}],["alert",{"_index":22,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["alertdeletecomponent",{"_index":1,"title":{"components/AlertDeleteComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["alerts",{"_index":292,"title":{},"body":{"injectables/ApiService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["alertservice",{"_index":878,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["align",{"_index":546,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["allowedchars",{"_index":958,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["allowedchars.test(inputchar",{"_index":959,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["alternate",{"_index":1158,"title":{},"body":{"components/LoadingComponent.html":{}}}],["angular",{"_index":168,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/BackButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/PaginationComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":1296,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":43,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":316,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["angular/compiler",{"_index":1298,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":44,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":179,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1299,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":321,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":1152,"title":{},"body":{"components/LoadingComponent.html":{}}}],["api",{"_index":64,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["api'},{'name",{"_index":77,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["api.component.css",{"_index":465,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.css,../../styles/card.css,../../styles/button.css,../../styles/icon.css",{"_index":427,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.html",{"_index":428,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts",{"_index":423,"title":{},"body":{"components/CardApiComponent.html":{},"coverage.html":{}}}],["api.component.ts:117",{"_index":446,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:141",{"_index":448,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:191",{"_index":444,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:65",{"_index":441,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:73",{"_index":443,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:75",{"_index":453,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:76",{"_index":452,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:84",{"_index":451,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:87",{"_index":439,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api/card",{"_index":422,"title":{},"body":{"components/CardApiComponent.html":{},"coverage.html":{}}}],["apideleted",{"_index":435,"title":{},"body":{"components/CardApiComponent.html":{}}}],["apidialogcomponent",{"_index":63,"title":{"components/ApiDialogComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["apieasier",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["apiendpointlistcomponent",{"_index":67,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["apihubserviceservice",{"_index":208,"title":{"injectables/ApiHubServiceService.html":{}},"body":{"injectables/ApiHubServiceService.html":{},"coverage.html":{}}}],["apiinfo",{"_index":433,"title":{},"body":{"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/IconTrashComponent.html":{}}}],["apiinfo.description",{"_index":497,"title":{},"body":{"components/CardApiComponent.html":{}}}],["apiinfo.name",{"_index":496,"title":{},"body":{"components/CardApiComponent.html":{}}}],["apilist",{"_index":256,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["apilistsubject",{"_index":213,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["apiname",{"_index":575,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["apiservice",{"_index":278,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["apiservice.name",{"_index":269,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["apiservicename",{"_index":701,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["apiservicerepository",{"_index":440,"title":{},"body":{"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["apiservicerepositoryservice",{"_index":341,"title":{"injectables/ApiServiceRepositoryService.html":{}},"body":{"injectables/ApiServiceRepositoryService.html":{},"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["apiserviceshortstructure",{"_index":176,"title":{"interfaces/apiServiceShortStructure.html":{}},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"injectables/EntityService.html":{},"components/ExportApiButtonComponent.html":{},"components/IconTrashComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{}}}],["apiservicestructure",{"_index":300,"title":{"interfaces/ApiServiceStructure.html":{}},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"injectables/EntityService.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["app",{"_index":21,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["app.component.css",{"_index":373,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":371,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":70,"title":{"components/AppComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1257,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appearance",{"_index":338,"title":{},"body":{"injectables/ApiService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["application",{"_index":1343,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":907,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["applicationconfig",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arguments",{"_index":745,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["artifacts",{"_index":1362,"title":{},"body":{"index.html":{}}}],["assets/dora.png",{"_index":1141,"title":{},"body":{"components/LoadingComponent.html":{}}}],["auto",{"_index":521,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["autoclose",{"_index":785,"title":{},"body":{"components/EntityDialogComponent.html":{},"components/IconTrashComponent.html":{}}}],["automatically",{"_index":1344,"title":{},"body":{"index.html":{}}}],["available",{"_index":999,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["back",{"_index":73,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["backbuttoncomponent",{"_index":72,"title":{"components/BackButtonComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["background",{"_index":399,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["basedomain",{"_index":394,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["baseurl",{"_index":214,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["behaviorsubject",{"_index":224,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["between",{"_index":990,"title":{},"body":{"components/HeaderComponent.html":{}}}],["blob",{"_index":905,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["blob([jsonstring",{"_index":906,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["block",{"_index":554,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["body",{"_index":1170,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["bold",{"_index":414,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["boolean",{"_index":38,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["border",{"_index":402,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["bottom",{"_index":559,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["box",{"_index":523,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["break",{"_index":527,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["browser",{"_index":1300,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["build",{"_index":248,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"index.html":{}}}],["buildthis",{"_index":1359,"title":{},"body":{"index.html":{}}}],["button",{"_index":381,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["button'},{'name",{"_index":74,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["button.component",{"_index":464,"title":{},"body":{"components/CardApiComponent.html":{},"components/HeaderComponent.html":{}}}],["button.component.css",{"_index":382,"title":{},"body":{"components/BackButtonComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["button.component.css,../../styles/button.css",{"_index":897,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["button.component.html",{"_index":383,"title":{},"body":{"components/BackButtonComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["button.component.ts",{"_index":379,"title":{},"body":{"components/BackButtonComponent.html":{},"components/ExportApiButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:24",{"_index":386,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["button.component.ts:32",{"_index":899,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["button.component.ts:47",{"_index":387,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["button.component.ts:51",{"_index":900,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["button/back",{"_index":378,"title":{},"body":{"components/BackButtonComponent.html":{},"components/HeaderComponent.html":{},"coverage.html":{}}}],["button/export",{"_index":463,"title":{},"body":{"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{},"coverage.html":{}}}],["button:hover",{"_index":419,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["button[tuiiconbutton",{"_index":1135,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["buttonclick",{"_index":974,"title":{},"body":{"components/HeaderComponent.html":{}}}],["buttontext",{"_index":971,"title":{},"body":{"components/HeaderComponent.html":{}}}],["calc(1.5em",{"_index":518,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["card",{"_index":76,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["cardapicomponent",{"_index":75,"title":{"components/CardApiComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["cardapilistcomponent",{"_index":78,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["cardendpointcomponent",{"_index":79,"title":{"components/CardEndpointComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["cardentitycomponent",{"_index":81,"title":{"components/CardEntityComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["case",{"_index":881,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/ImportDialogComponent.html":{}}}],["catch",{"_index":398,"title":{},"body":{"components/BackButtonComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["catch(err",{"_index":251,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["catcherror",{"_index":318,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["catcherror((error",{"_index":1017,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["cc",{"_index":1171,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["cd",{"_index":437,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ImportDialogComponent.html":{}}}],["center",{"_index":548,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["changedetection",{"_index":424,"title":{},"body":{"components/CardApiComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["changedetectionstrategy",{"_index":454,"title":{},"body":{"components/CardApiComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":425,"title":{},"body":{"components/CardApiComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["changedetectorref",{"_index":438,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ImportDialogComponent.html":{}}}],["charts",{"_index":1304,"title":{},"body":{"dependencies.html":{}}}],["choose",{"_index":1384,"title":{},"body":{"index.html":{}}}],["chrome",{"_index":530,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["class",{"_index":52,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["cleanedvalue",{"_index":200,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["cli",{"_index":1331,"title":{},"body":{"index.html":{}}}],["click",{"_index":970,"title":{},"body":{"components/HeaderComponent.html":{}}}],["closeable",{"_index":983,"title":{},"body":{"components/HeaderComponent.html":{}}}],["closed",{"_index":493,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["code",{"_index":895,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["color",{"_index":400,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["column",{"_index":856,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["come",{"_index":1382,"title":{},"body":{"index.html":{}}}],["command",{"_index":1377,"title":{},"body":{"index.html":{}}}],["commerce",{"_index":1306,"title":{},"body":{"dependencies.html":{}}}],["commonmodule",{"_index":25,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["compile",{"_index":1360,"title":{},"body":{"index.html":{}}}],["complete",{"_index":491,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"index.html":{}}}],["component",{"_index":0,"title":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":60,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"index.html":{},"overview.html":{}}}],["connecting",{"_index":253,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["console.error",{"_index":475,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["console.error('error",{"_index":252,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["console.error(message",{"_index":671,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["console.info('dialog",{"_index":492,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["console.info(`dialog",{"_index":480,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{}}}],["console.log",{"_index":471,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["console.log('api",{"_index":483,"title":{},"body":{"components/CardApiComponent.html":{}}}],["console.log('connected",{"_index":250,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["console.log(apilist",{"_index":258,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["console.log(currentlist",{"_index":264,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["console.log(error",{"_index":915,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["console.warn",{"_index":1126,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["const",{"_index":195,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"components/BackButtonComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["constructor",{"_index":218,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["constructor(alerts",{"_index":1026,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["constructor(apiservice",{"_index":344,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["constructor(apiservicerepository",{"_index":436,"title":{},"body":{"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["constructor(cd",{"_index":631,"title":{},"body":{"components/CardEntityComponent.html":{},"components/ImportDialogComponent.html":{}}}],["constructor(endpointrepositoryservice",{"_index":579,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["constructor(endpointservice",{"_index":696,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["constructor(entityservice",{"_index":795,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["constructor(errorhandler",{"_index":1006,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["constructor(http",{"_index":288,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["constructor(location",{"_index":385,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["constructor(private",{"_index":355,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["constructor(route",{"_index":840,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["constructor(router",{"_index":877,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["container",{"_index":854,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["content",{"_index":157,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["context",{"_index":34,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["control",{"_index":949,"title":{},"body":{"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{}}}],["control.value",{"_index":951,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["controlname",{"_index":929,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["coverage",{"_index":1250,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createapientity",{"_index":789,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["createapientity(apiservicename",{"_index":797,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["createapiservice",{"_index":280,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["createapiservice(service",{"_index":296,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["createendpoint",{"_index":693,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["createendpoint(apiservicename",{"_index":699,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["createfullapiservice",{"_index":281,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["createfullapiservice(service",{"_index":299,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["currentfiles",{"_index":1128,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["currentlist",{"_index":260,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["currentlist.findindex((apiservice",{"_index":268,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["currentlist.push(api",{"_index":262,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["currentlist.splice(index",{"_index":272,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["currentlist[index",{"_index":270,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["currentpage",{"_index":1192,"title":{},"body":{"components/PaginationComponent.html":{}}}],["currenturl",{"_index":389,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["cursor",{"_index":410,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["d9534f",{"_index":870,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["data",{"_index":141,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["data.name}.json",{"_index":912,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["datawithoutname",{"_index":902,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["decorators",{"_index":162,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["default",{"_index":35,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":39,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["delete",{"_index":23,"title":{},"body":{"components/AlertDeleteComponent.html":{},"injectables/ApiService.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{}}}],["delete'},{'name",{"_index":62,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["delete(`${this.baseurl}/apientity/${apiservicename}/${entityname",{"_index":825,"title":{},"body":{"injectables/EntityService.html":{}}}],["delete.component",{"_index":1036,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["delete.component.css",{"_index":27,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["delete.component.html",{"_index":29,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["delete.component.ts",{"_index":12,"title":{},"body":{"components/AlertDeleteComponent.html":{},"coverage.html":{}}}],["delete.component.ts:38",{"_index":40,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["delete/alert",{"_index":11,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/IconTrashComponent.html":{},"coverage.html":{}}}],["deleteapientity",{"_index":790,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["deleteapientity(apiservicename",{"_index":798,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["deleteapientity(this.apiname",{"_index":665,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["deleteapiservice",{"_index":282,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["deleteapiservice(servicename",{"_index":302,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["deleteendpoint",{"_index":616,"title":{},"body":{"components/CardEndpointComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["deleteendpoint(apiservicename",{"_index":702,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["dependencies",{"_index":1295,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"interfaces/ApiServiceStructure.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["descriptioninputref",{"_index":130,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["detailed",{"_index":1393,"title":{},"body":{"index.html":{}}}],["development",{"_index":1334,"title":{},"body":{"index.html":{}}}],["di",{"_index":169,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog",{"_index":117,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{}}}],["dialog'},{'name",{"_index":66,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["dialog.component",{"_index":458,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/HeaderComponent.html":{}}}],["dialog.component.css",{"_index":127,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["dialog.component.html",{"_index":128,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["dialog.component.ts",{"_index":116,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:100",{"_index":763,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:102",{"_index":173,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:108",{"_index":761,"title":{},"body":{"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:112",{"_index":175,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:116",{"_index":681,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:117",{"_index":766,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:125",{"_index":159,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:127",{"_index":767,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:129",{"_index":680,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:134",{"_index":1078,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:138",{"_index":769,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:143",{"_index":155,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:150",{"_index":1068,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:154",{"_index":772,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:156",{"_index":152,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:172",{"_index":1066,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:173",{"_index":144,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:178",{"_index":748,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:193",{"_index":1071,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:194",{"_index":753,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:213",{"_index":1076,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:216",{"_index":756,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:227",{"_index":758,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:246",{"_index":755,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:260",{"_index":1074,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:263",{"_index":754,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:38",{"_index":1079,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:46",{"_index":1080,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:51",{"_index":684,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:55",{"_index":1081,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:56",{"_index":171,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:59",{"_index":687,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:63",{"_index":1082,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:66",{"_index":764,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:67",{"_index":683,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:68",{"_index":165,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:71",{"_index":1064,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:75",{"_index":765,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:76",{"_index":688,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:79",{"_index":167,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:83",{"_index":762,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:86",{"_index":689,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:90",{"_index":161,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:91",{"_index":760,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:98",{"_index":682,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog/api",{"_index":115,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"coverage.html":{}}}],["dialog/endpoint",{"_index":602,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/EndpointDialogComponent.html":{},"coverage.html":{}}}],["dialog/entity",{"_index":656,"title":{},"body":{"components/CardEntityComponent.html":{},"components/EntityDialogComponent.html":{},"coverage.html":{}}}],["dialog/import",{"_index":985,"title":{},"body":{"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["dialogs",{"_index":132,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["direction",{"_index":855,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["directive",{"_index":58,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["directives",{"_index":110,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"index.html":{}}}],["directory",{"_index":1364,"title":{},"body":{"index.html":{}}}],["dismissible",{"_index":193,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/HeaderComponent.html":{}}}],["display",{"_index":542,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["display'},{'name",{"_index":90,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["display.component.css",{"_index":835,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display.component.html",{"_index":836,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display.component.ts",{"_index":832,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"coverage.html":{}}}],["display.component.ts:30",{"_index":845,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display.component.ts:37",{"_index":842,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display.component.ts:52",{"_index":844,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display.component.ts:65",{"_index":843,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display/error",{"_index":831,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"coverage.html":{}}}],["dist",{"_index":1363,"title":{},"body":{"index.html":{}}}],["doc",{"_index":1307,"title":{},"body":{"dependencies.html":{}}}],["document.createelement('a",{"_index":909,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["document:keydown",{"_index":744,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["document:keydown(event",{"_index":746,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["documentation",{"_index":1251,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["dynamic",{"_index":1301,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1102,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["e.target?.result",{"_index":1104,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["e0e0e0",{"_index":859,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["e2e",{"_index":1379,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":1381,"title":{},"body":{"index.html":{}}}],["e6e6e6",{"_index":420,"title":{},"body":{"components/BackButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["ease",{"_index":1156,"title":{},"body":{"components/LoadingComponent.html":{}}}],["edge",{"_index":532,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["edit",{"_index":65,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["element",{"_index":57,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["elementref",{"_index":143,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["ellipsis",{"_index":506,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["emitted",{"_index":481,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{}}}],["end",{"_index":545,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"index.html":{}}}],["endpoint",{"_index":68,"title":{"interfaces/Endpoint.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["endpoint'},{'name",{"_index":80,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["endpoint.component.css",{"_index":604,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.css,../../styles/card.css,../../styles/icon.css",{"_index":569,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.html",{"_index":570,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts",{"_index":568,"title":{},"body":{"components/CardEndpointComponent.html":{},"coverage.html":{}}}],["endpoint.component.ts:116",{"_index":591,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:144",{"_index":592,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:158",{"_index":594,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:170",{"_index":596,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:192",{"_index":587,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:210",{"_index":589,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:235",{"_index":590,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:54",{"_index":584,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:62",{"_index":583,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:71",{"_index":582,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:79",{"_index":585,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:87",{"_index":598,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:90",{"_index":581,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint/card",{"_index":567,"title":{},"body":{"components/CardEndpointComponent.html":{},"coverage.html":{}}}],["endpointcardlistcomponent",{"_index":83,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["endpointdeleted",{"_index":578,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpointdialogcomponent",{"_index":84,"title":{"components/EndpointDialogComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["endpointinfo",{"_index":576,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/IconTrashComponent.html":{}}}],["endpointinfo.route",{"_index":618,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpointinfo.type",{"_index":619,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpointname",{"_index":703,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["endpointrepositoryservice",{"_index":580,"title":{"injectables/EndpointRepositoryService.html":{}},"body":{"components/CardEndpointComponent.html":{},"injectables/EndpointRepositoryService.html":{},"coverage.html":{}}}],["endpoints",{"_index":734,"title":{},"body":{"interfaces/Entity.html":{}}}],["endpointservice",{"_index":697,"title":{"injectables/EndpointService.html":{}},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"coverage.html":{}}}],["enter",{"_index":749,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["entities",{"_index":366,"title":{},"body":{"interfaces/ApiServiceStructure.html":{},"components/ImportDialogComponent.html":{}}}],["entity",{"_index":86,"title":{"interfaces/Entity.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["entity'},{'name",{"_index":82,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["entity.component.css",{"_index":658,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.css,../../styles/card.css,../../styles/button.css,../../styles/icon.css",{"_index":622,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.html",{"_index":623,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts",{"_index":621,"title":{},"body":{"components/CardEntityComponent.html":{},"coverage.html":{}}}],["entity.component.ts:111",{"_index":648,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:131",{"_index":649,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:147",{"_index":647,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:164",{"_index":638,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:181",{"_index":641,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:197",{"_index":643,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:207",{"_index":639,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:220",{"_index":645,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:53",{"_index":635,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:62",{"_index":634,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:70",{"_index":636,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:72",{"_index":654,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:73",{"_index":655,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:74",{"_index":653,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:82",{"_index":651,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:85",{"_index":633,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity/card",{"_index":620,"title":{},"body":{"components/CardEntityComponent.html":{},"coverage.html":{}}}],["entitycardlistcomponent",{"_index":85,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["entitydeleted",{"_index":630,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entitydialogcomponent",{"_index":87,"title":{"components/EntityDialogComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["entityinfo",{"_index":577,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{}}}],["entityinfo.name",{"_index":674,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entityname",{"_index":700,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["entityrepositoryservice",{"_index":632,"title":{"injectables/EntityRepositoryService.html":{}},"body":{"components/CardEntityComponent.html":{},"injectables/EntityRepositoryService.html":{},"coverage.html":{}}}],["entityservice",{"_index":796,"title":{"injectables/EntityService.html":{}},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"coverage.html":{}}}],["entityshort",{"_index":828,"title":{"interfaces/EntityShort.html":{}},"body":{"interfaces/EntityShort.html":{},"components/IconTrashComponent.html":{},"coverage.html":{}}}],["err",{"_index":254,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["error",{"_index":89,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["error.interceptor.ts",{"_index":1004,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["error.interceptor.ts:12",{"_index":1007,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error.interceptor.ts:16",{"_index":1011,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error.status",{"_index":488,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["errorcode",{"_index":837,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["errordisplaycomponent",{"_index":88,"title":{"components/ErrorDisplayComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["errorhandler",{"_index":290,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["errorhandlerservice",{"_index":291,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["errormessage",{"_index":838,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["errormessage}`).subscribe",{"_index":884,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["escape",{"_index":750,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["event",{"_index":151,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["event.ctrlkey",{"_index":960,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["event.key",{"_index":781,"title":{},"body":{"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["event.metakey",{"_index":961,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["event.preventdefault",{"_index":189,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["event.target",{"_index":197,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["eventcoalescing",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":442,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["example",{"_index":17,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"index.html":{}}}],["execute",{"_index":1371,"title":{},"body":{"index.html":{}}}],["export",{"_index":51,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["exportapibuttoncomponent",{"_index":91,"title":{"components/ExportApiButtonComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["f.file.name",{"_index":1089,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["f.status",{"_index":1095,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["f1f1f1",{"_index":536,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["f44336",{"_index":1240,"title":{},"body":{"components/SwitchComponent.html":{}}}],["f9f9f9",{"_index":860,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["false",{"_index":652,"title":{},"body":{"components/CardEntityComponent.html":{},"components/EntityDialogComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["fff",{"_index":1151,"title":{},"body":{"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{}}}],["file.errormessage",{"_index":1122,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["file.name",{"_index":1090,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["file.status",{"_index":1111,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["filename",{"_index":1070,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["filename.replace",{"_index":1112,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["filereader",{"_index":1100,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["files",{"_index":1055,"title":{},"body":{"components/ImportDialogComponent.html":{},"index.html":{}}}],["files.filter(file",{"_index":1087,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["files.foreach(file",{"_index":1098,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["filestatus",{"_index":916,"title":{"interfaces/FileStatus.html":{}},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["filestatus.status",{"_index":1110,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["filetoremove",{"_index":1075,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["filetoremove.file",{"_index":1131,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["fill",{"_index":998,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filter",{"_index":93,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["filterbyinputcomponent",{"_index":92,"title":{"components/FilterByInputComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["filtereditems",{"_index":931,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["flex",{"_index":543,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["following",{"_index":1376,"title":{},"body":{"index.html":{}}}],["font",{"_index":412,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["fontawesome",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["form",{"_index":927,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["formcontrol",{"_index":942,"title":{},"body":{"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["formcontrol(false",{"_index":1227,"title":{},"body":{"components/SwitchComponent.html":{}}}],["formcontrol(true",{"_index":1230,"title":{},"body":{"components/SwitchComponent.html":{}}}],["formgroup",{"_index":940,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["formsmodule",{"_index":118,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["found",{"_index":887,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/PageNotFoundComponent.html":{}}}],["found'},{'name",{"_index":105,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["found.component.css",{"_index":1168,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.html",{"_index":1169,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1167,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found/page",{"_index":1166,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["framework",{"_index":1383,"title":{},"body":{"index.html":{}}}],["gap",{"_index":1134,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["generate",{"_index":1352,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1329,"title":{},"body":{"index.html":{}}}],["get(`${this.baseurl}/apientity/${apiservicename",{"_index":821,"title":{},"body":{"injectables/EntityService.html":{}}}],["get(`${this.baseurl}/apientity/${apiservicename}/${entityname",{"_index":822,"title":{},"body":{"injectables/EntityService.html":{}}}],["get(`${this.baseurl}/apiservice",{"_index":325,"title":{},"body":{"injectables/ApiService.html":{}}}],["get(`${this.baseurl}/apiservices",{"_index":827,"title":{},"body":{"injectables/EntityService.html":{}}}],["getallapiservices",{"_index":811,"title":{},"body":{"injectables/EntityService.html":{}}}],["getapientity",{"_index":791,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["getapientity(apiservicename",{"_index":799,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["getapientitylist",{"_index":792,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["getapientitylist(apiservicename",{"_index":800,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["getapilist",{"_index":283,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["getapistructurelist",{"_index":284,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["getapistructurelist(name",{"_index":306,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["getbyindex",{"_index":686,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["getdata",{"_index":174,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["getendpointbyname",{"_index":694,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["getendpointbyname(apiservicename",{"_index":705,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["getendpointlist",{"_index":695,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["getendpointlist(apiservicename",{"_index":706,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["getfilestatus",{"_index":1058,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["getfilestatus(file",{"_index":1065,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["getfilestatustext",{"_index":1059,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["getfilestatustext(file",{"_index":1067,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["getfiltereditems",{"_index":946,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["gethasvalue",{"_index":172,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["getstructure",{"_index":768,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["getting",{"_index":1326,"title":{"index.html":{}},"body":{}}],["gettotalpages",{"_index":1205,"title":{},"body":{"components/PaginationComponent.html":{}}}],["go",{"_index":853,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["goback",{"_index":384,"title":{},"body":{"components/BackButtonComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["gotopage",{"_index":1191,"title":{},"body":{"components/PaginationComponent.html":{}}}],["gotopage(2",{"_index":1204,"title":{},"body":{"components/PaginationComponent.html":{}}}],["gotopage(page",{"_index":1202,"title":{},"body":{"components/PaginationComponent.html":{}}}],["h1",{"_index":868,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["h3",{"_index":498,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["handleeditdialogdata",{"_index":626,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleeditdialogdata(data",{"_index":637,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleendpointupdate",{"_index":571,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["handleendpointupdate(response",{"_index":586,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["handleendpointupdateerror",{"_index":572,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["handleendpointupdateerror(error",{"_index":588,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["handleentitydeletion",{"_index":627,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleentityupdate",{"_index":628,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleentityupdate(response",{"_index":640,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleentityupdateerror",{"_index":629,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleentityupdateerror(error",{"_index":642,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleerror",{"_index":285,"title":{},"body":{"injectables/ApiService.html":{},"components/CardEntityComponent.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{}}}],["handleerror(error",{"_index":308,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{}}}],["handleerror(message",{"_index":644,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handlekeyboardevent",{"_index":740,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["handlekeyboardevent(event",{"_index":751,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["handler.service",{"_index":323,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["handler.service.ts",{"_index":876,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:12",{"_index":880,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:9",{"_index":879,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handlesubmit",{"_index":741,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["hasfiles",{"_index":1056,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["hasvalue",{"_index":140,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["header",{"_index":967,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":96,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["header.component.css",{"_index":968,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":969,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":95,"title":{"components/HeaderComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["height",{"_index":510,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["helpbuilding",{"_index":1358,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":509,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["hostlistener",{"_index":773,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["hostlistener('document:keydown",{"_index":752,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["hostlisteners",{"_index":743,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["html",{"_index":18,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["htmlinputelement",{"_index":198,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["http",{"_index":295,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["http://localhost:4200",{"_index":1342,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":289,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["httperrorinterceptor",{"_index":1001,"title":{"interceptors/HttpErrorInterceptor.html":{}},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httperrorresponse",{"_index":309,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["httpevent",{"_index":1013,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["httphandler",{"_index":1010,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["httpinterceptor",{"_index":1014,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["httprequest",{"_index":1009,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["https://www.titan2.ru/images/temp/logo__ru.jpg",{"_index":977,"title":{},"body":{"components/HeaderComponent.html":{}}}],["hub",{"_index":211,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"coverage.html":{}}}],["hubconnection",{"_index":215,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["i:hover",{"_index":565,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{}}}],["icon",{"_index":98,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["icontrashcomponent",{"_index":97,"title":{"components/IconTrashComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["identifier",{"_index":1252,"title":{},"body":{"coverage.html":{}}}],["if(buttontext",{"_index":989,"title":{},"body":{"components/HeaderComponent.html":{}}}],["if(entityinfo.structure",{"_index":675,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["if(isapipage",{"_index":988,"title":{},"body":{"components/HeaderComponent.html":{}}}],["img",{"_index":993,"title":{},"body":{"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["implements",{"_index":833,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/SwitchComponent.html":{}}}],["import",{"_index":42,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["importdialogcomponent",{"_index":100,"title":{"components/ImportDialogComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["imports",{"_index":24,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["includes",{"_index":1349,"title":{},"body":{"index.html":{}}}],["including",{"_index":1392,"title":{},"body":{"index.html":{}}}],["index",{"_index":30,"title":{"index.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":1155,"title":{},"body":{"components/LoadingComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["information",{"_index":1391,"title":{},"body":{"index.html":{}}}],["initialdata",{"_index":222,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["initializedata",{"_index":217,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["initializedata(initialdata",{"_index":220,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["inject",{"_index":177,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["inject(tuialertservice",{"_index":759,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["inject(tuidialogservice",{"_index":166,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["injectable",{"_index":207,"title":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{}},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["injectables",{"_index":209,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"overview.html":{}}}],["injectcontext",{"_index":37,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["inline",{"_index":1235,"title":{},"body":{"components/SwitchComponent.html":{}}}],["input",{"_index":196,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["input'},{'name",{"_index":94,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["input.component.css",{"_index":925,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.html",{"_index":926,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts",{"_index":922,"title":{},"body":{"components/FilterByInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:122",{"_index":939,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:44",{"_index":936,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:53",{"_index":934,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:62",{"_index":935,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:70",{"_index":937,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:78",{"_index":945,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:89",{"_index":947,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:97",{"_index":932,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.value",{"_index":199,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["input/filter",{"_index":921,"title":{},"body":{"components/FilterByInputComponent.html":{},"coverage.html":{}}}],["input:checked",{"_index":1246,"title":{},"body":{"components/SwitchComponent.html":{}}}],["inputchar",{"_index":957,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["inputs",{"_index":432,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["intercept",{"_index":1005,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["intercept(req",{"_index":1008,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["interceptor",{"_index":1000,"title":{"interceptors/HttpErrorInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":1002,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["interface",{"_index":363,"title":{"interfaces/ApiServiceStructure.html":{},"interfaces/Endpoint.html":{},"interfaces/Entity.html":{},"interfaces/EntityShort.html":{},"interfaces/FileStatus.html":{},"interfaces/apiServiceShortStructure.html":{}},"body":{"interfaces/ApiServiceStructure.html":{},"interfaces/Endpoint.html":{},"interfaces/Entity.html":{},"interfaces/EntityShort.html":{},"interfaces/FileStatus.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{}}}],["interfaces",{"_index":364,"title":{},"body":{"interfaces/ApiServiceStructure.html":{},"interfaces/Endpoint.html":{},"interfaces/Entity.html":{},"interfaces/EntityShort.html":{},"interfaces/FileStatus.html":{},"interfaces/apiServiceShortStructure.html":{},"overview.html":{}}}],["interfaces/apiserviceshortstructure",{"_index":183,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"injectables/EntityService.html":{},"components/ExportApiButtonComponent.html":{},"components/IconTrashComponent.html":{}}}],["interfaces/apiservicestructure",{"_index":322,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EntityService.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{}}}],["interfaces/endpoint",{"_index":599,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/IconTrashComponent.html":{}}}],["interfaces/entity",{"_index":600,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["interfaces/entityshort",{"_index":1037,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["interfaces/filestatus",{"_index":1084,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["invalid",{"_index":1228,"title":{},"body":{"components/SwitchComponent.html":{}}}],["invalidfalse",{"_index":1219,"title":{},"body":{"components/SwitchComponent.html":{}}}],["invalidtrue",{"_index":1220,"title":{},"body":{"components/SwitchComponent.html":{}}}],["isactive",{"_index":275,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"interfaces/Endpoint.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ImportDialogComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["isapipage",{"_index":972,"title":{},"body":{"components/HeaderComponent.html":{}}}],["iscansubmit",{"_index":738,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["isfeatureenabled",{"_index":1210,"title":{},"body":{"components/SwitchComponent.html":{}}}],["item",{"_index":1024,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["item.includes(value",{"_index":954,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["items",{"_index":547,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["itemsperpage",{"_index":1193,"title":{},"body":{"components/PaginationComponent.html":{}}}],["json",{"_index":770,"title":{},"body":{"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{}}}],["json.description",{"_index":1114,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["json.entities",{"_index":1115,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["json.isactive",{"_index":1113,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["json.parse(text",{"_index":1105,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["json.parse(value",{"_index":778,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["json.stringify(datawithoutname",{"_index":904,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["json.stringify(this.data.structure",{"_index":775,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["jsonstring",{"_index":903,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["jszip",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":544,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["karma",{"_index":1372,"title":{},"body":{"index.html":{}}}],["keyboardevent",{"_index":747,"title":{},"body":{"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["keyframes",{"_index":1160,"title":{},"body":{"components/LoadingComponent.html":{}}}],["label",{"_index":450,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{}}}],["left",{"_index":558,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["legend",{"_index":56,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["line",{"_index":516,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["list",{"_index":1354,"title":{},"body":{"index.html":{}}}],["list'},{'name",{"_index":69,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["list.component.ts",{"_index":1272,"title":{},"body":{"coverage.html":{}}}],["list/api",{"_index":1271,"title":{},"body":{"coverage.html":{}}}],["list/card",{"_index":1275,"title":{},"body":{"coverage.html":{}}}],["list/endpoint",{"_index":1278,"title":{},"body":{"coverage.html":{}}}],["list/entity",{"_index":1281,"title":{},"body":{"coverage.html":{}}}],["loader",{"_index":1144,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loader:after",{"_index":1149,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loader:before",{"_index":1148,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading",{"_index":624,"title":{},"body":{"components/CardEntityComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{}}}],["loading'},{'name",{"_index":102,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["loading.component.css",{"_index":1138,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading.component.html",{"_index":1139,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loadingcomponent",{"_index":101,"title":{"components/LoadingComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["local",{"_index":1336,"title":{},"body":{"index.html":{}}}],["location",{"_index":380,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{}}}],["logourl",{"_index":973,"title":{},"body":{"components/HeaderComponent.html":{}}}],["margin",{"_index":407,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["matching",{"_index":113,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["math.ceil(this.totalitems",{"_index":1207,"title":{},"body":{"components/PaginationComponent.html":{}}}],["max",{"_index":865,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["media",{"_index":995,"title":{},"body":{"components/HeaderComponent.html":{}}}],["memberof",{"_index":54,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["message",{"_index":646,"title":{},"body":{"components/CardEntityComponent.html":{},"components/EntityDialogComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["metadata",{"_index":19,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["methods",{"_index":134,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["microsoft/signalr",{"_index":234,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"dependencies.html":{}}}],["min",{"_index":963,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["miscellaneous",{"_index":1403,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mobile",{"_index":1308,"title":{},"body":{"dependencies.html":{}}}],["modify",{"_index":1347,"title":{},"body":{"index.html":{}}}],["modules",{"_index":1398,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":1390,"title":{},"body":{"index.html":{}}}],["movefocus",{"_index":135,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["movefocus(targetinput",{"_index":142,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["multi",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":61,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["namefor",{"_index":1353,"title":{},"body":{"index.html":{}}}],["nameinputref",{"_index":133,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["navigate",{"_index":1341,"title":{},"body":{"index.html":{}}}],["needs",{"_index":1387,"title":{},"body":{"index.html":{}}}],["negative",{"_index":339,"title":{},"body":{"injectables/ApiService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{}}}],["new",{"_index":223,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{},"index.html":{}}}],["newfiles",{"_index":1086,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["newfiles.map(file",{"_index":1092,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["newstate",{"_index":447,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["next",{"_index":474,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/ImportDialogComponent.html":{}}}],["next.handle(req).pipe",{"_index":1016,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["ng",{"_index":1338,"title":{},"body":{"index.html":{}}}],["ng_event_plugins",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngfor",{"_index":1054,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["ngif",{"_index":1050,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["ngoninit",{"_index":839,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/SwitchComponent.html":{}}}],["ngzone",{"_index":232,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["none",{"_index":403,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["normal",{"_index":528,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["normal').foreach(file",{"_index":1118,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["normal').length",{"_index":1096,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["notification",{"_index":1039,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["notification.subscribe",{"_index":1048,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["nowrap",{"_index":508,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["null",{"_index":335,"title":{},"body":{"injectables/ApiService.html":{},"components/CardEntityComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"components/ExportApiButtonComponent.html":{}}}],["number",{"_index":1185,"title":{},"body":{"components/PaginationComponent.html":{}}}],["observable",{"_index":230,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["oldname",{"_index":266,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{}}}],["onclick",{"_index":898,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["ondeleteconfirmed",{"_index":429,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["one",{"_index":1385,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":834,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/SwitchComponent.html":{}}}],["oninput",{"_index":136,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["oninput(event",{"_index":150,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["onkeypress",{"_index":928,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["onkeypress(event",{"_index":938,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["onpagechange(page",{"_index":1184,"title":{},"body":{"components/PaginationComponent.html":{}}}],["ontoggle",{"_index":1221,"title":{},"body":{"components/SwitchComponent.html":{}}}],["ontoggle(value",{"_index":1211,"title":{},"body":{"components/SwitchComponent.html":{}}}],["ontogglechange",{"_index":430,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["ontogglechange(newstate",{"_index":445,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["opacity",{"_index":1238,"title":{},"body":{"components/SwitchComponent.html":{}}}],["open",{"_index":490,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ImportDialogComponent.html":{},"index.html":{}}}],["open('api",{"_index":486,"title":{},"body":{"components/CardApiComponent.html":{}}}],["open(`${message",{"_index":672,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["open(message",{"_index":784,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["open(new",{"_index":1040,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["openeditdialog",{"_index":431,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["optimizes",{"_index":1366,"title":{},"body":{"index.html":{}}}],["optional",{"_index":146,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{}}}],["ordersupdated",{"_index":216,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["out",{"_index":1157,"title":{},"body":{"components/LoadingComponent.html":{}}}],["outline",{"_index":992,"title":{},"body":{"components/HeaderComponent.html":{}}}],["output",{"_index":455,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["outputs",{"_index":434,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["overflow",{"_index":505,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["overview",{"_index":1396,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":512,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["package",{"_index":1294,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":404,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["page",{"_index":104,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"index.html":{}}}],["pagechange",{"_index":1195,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagenotfoundcomponent",{"_index":103,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["pagination",{"_index":1186,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination'},{'name",{"_index":107,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["pagination.component.css",{"_index":1189,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.component.html",{"_index":1190,"title":{},"body":{"components/PaginationComponent.html":{}}}],["paginationcomponent",{"_index":106,"title":{"components/PaginationComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["param",{"_index":188,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{}}}],["parameters",{"_index":145,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{}}}],["params['code",{"_index":848,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["params['message",{"_index":851,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["patch",{"_index":333,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["path",{"_index":1140,"title":{},"body":{"components/LoadingComponent.html":{}}}],["performance",{"_index":1367,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":1042,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["pipe(catcherror((err",{"_index":326,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["pipes",{"_index":1357,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":1310,"title":{},"body":{"dependencies.html":{}}}],["pointer",{"_index":411,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["polymorpheuscomponent",{"_index":1035,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["polymorpheuscomponent(alertdeletecomponent",{"_index":1041,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["position",{"_index":551,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["post",{"_index":685,"title":{},"body":{"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{}}}],["post(`${this.baseurl}/apientity/${apiservicename",{"_index":823,"title":{},"body":{"injectables/EntityService.html":{}}}],["post(`${this.baseurl}/apiservice",{"_index":329,"title":{},"body":{"injectables/ApiService.html":{}}}],["powerful",{"_index":1350,"title":{},"body":{"index.html":{}}}],["previousurl",{"_index":392,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["previousurl.startswith(basedomain",{"_index":395,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["primary",{"_index":553,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/SwitchComponent.html":{}}}],["private",{"_index":131,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["processeddata",{"_index":1057,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["processeditdialogdata",{"_index":573,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["processeditdialogdata(data",{"_index":593,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["processjson",{"_index":1060,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["processjson(json",{"_index":1069,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["production",{"_index":1365,"title":{},"body":{"index.html":{}}}],["progressevent",{"_index":1103,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["project",{"_index":1328,"title":{},"body":{"index.html":{}}}],["properties",{"_index":31,"title":{"properties.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"properties.html":{}}}],["protected",{"_index":32,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["provide",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":237,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{}}}],["providehttpclient",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(app_routes",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1213,"title":{},"body":{"components/SwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":129,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["put",{"_index":330,"title":{},"body":{"injectables/ApiService.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["queryparams",{"_index":894,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["radius",{"_index":408,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["reactiveformsmodule",{"_index":924,"title":{},"body":{"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["read",{"_index":164,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["reader",{"_index":1099,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["reader.onload",{"_index":1101,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["reader.readastext(file",{"_index":1108,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["readfiles",{"_index":1061,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["readfiles(files",{"_index":1072,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["readonly",{"_index":33,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["red",{"_index":1136,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["reference",{"_index":1397,"title":{},"body":{"index.html":{}}}],["references",{"_index":1394,"title":{},"body":{"index.html":{}}}],["relative",{"_index":1147,"title":{},"body":{"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["reload",{"_index":1345,"title":{},"body":{"index.html":{}}}],["remarks",{"_index":50,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["removefile",{"_index":1062,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["removefile(filetoremove",{"_index":1073,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["repositories/api",{"_index":461,"title":{},"body":{"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{}}}],["repositories/endpoint",{"_index":603,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["repositories/entity",{"_index":657,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["repository.service",{"_index":462,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{}}}],["repository.service.ts",{"_index":343,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{},"coverage.html":{}}}],["repository.service.ts:10",{"_index":345,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:13",{"_index":349,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:17",{"_index":350,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:21",{"_index":346,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:25",{"_index":708,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:27",{"_index":347,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:29",{"_index":704,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:31",{"_index":351,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:33",{"_index":710,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:38",{"_index":348,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:42",{"_index":352,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:9",{"_index":698,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["req",{"_index":1012,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["resources",{"_index":1389,"title":{},"body":{"index.html":{}}}],["response",{"_index":55,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["response.error",{"_index":1125,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["responsealert",{"_index":1025,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["results",{"_index":112,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":185,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"components/FilterByInputComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{}}}],["returns",{"_index":148,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["reverse",{"_index":1159,"title":{},"body":{"components/LoadingComponent.html":{}}}],["rgba(0",{"_index":863,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["right",{"_index":550,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["root",{"_index":238,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/AppComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{}}}],["root'},{'name",{"_index":71,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["route",{"_index":677,"title":{},"body":{"interfaces/Endpoint.html":{},"components/ErrorDisplayComponent.html":{}}}],["router",{"_index":320,"title":{},"body":{"injectables/ApiService.html":{},"components/BackButtonComponent.html":{},"components/CardEndpointComponent.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{}}}],["routermodule",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["routeroutlet",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1337,"title":{},"body":{"index.html":{}}}],["runner",{"_index":1374,"title":{},"body":{"index.html":{}}}],["running",{"_index":1340,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":236,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":319,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["safari",{"_index":531,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["scaffolding",{"_index":1348,"title":{},"body":{"index.html":{}}}],["scale(1.05",{"_index":874,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["schematics",{"_index":1355,"title":{},"body":{"index.html":{}}}],["screen",{"_index":996,"title":{},"body":{"components/HeaderComponent.html":{}}}],["scrollbar",{"_index":533,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["search",{"_index":933,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["searchquery",{"_index":930,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["selector",{"_index":20,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["serveonce",{"_index":1339,"title":{},"body":{"index.html":{}}}],["server",{"_index":1335,"title":{},"body":{"index.html":{}}}],["service",{"_index":298,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["service.name",{"_index":1121,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["service.service",{"_index":354,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["service.service.ts",{"_index":212,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"coverage.html":{}}}],["service.service.ts:10",{"_index":229,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["service.service.ts:11",{"_index":225,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["service.service.ts:12",{"_index":227,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["service.service.ts:13",{"_index":219,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["service.service.ts:14",{"_index":719,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:15",{"_index":294,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:16",{"_index":812,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:22",{"_index":725,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:23",{"_index":305,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:24",{"_index":817,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:29",{"_index":307,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:30",{"_index":816,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:33",{"_index":721,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:36",{"_index":813,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:37",{"_index":297,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:42",{"_index":819,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:45",{"_index":301,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:46",{"_index":724,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:51",{"_index":312,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:55",{"_index":814,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:58",{"_index":727,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:63",{"_index":303,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:64",{"_index":820,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:67",{"_index":221,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["service.service.ts:71",{"_index":314,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:72",{"_index":723,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:77",{"_index":815,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:83",{"_index":818,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:84",{"_index":729,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:85",{"_index":310,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:98",{"_index":726,"title":{},"body":{"injectables/EndpointService.html":{}}}],["servicename",{"_index":304,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["services/api",{"_index":353,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["services/endpoint",{"_index":711,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["services/entity",{"_index":803,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["services/error",{"_index":1015,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["set",{"_index":776,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["setstructure(value",{"_index":771,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["shadow",{"_index":861,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["showdialog",{"_index":137,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["showdialog(content",{"_index":153,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["showerror",{"_index":742,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["showerror(message",{"_index":757,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["showicons",{"_index":1215,"title":{},"body":{"components/SwitchComponent.html":{}}}],["shownotification",{"_index":1023,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["signalr",{"_index":233,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["signalr.httptransporttype.websockets",{"_index":244,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["signalr.hubconnection",{"_index":228,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["signalr.hubconnectionbuilder",{"_index":240,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["size",{"_index":417,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["sizing",{"_index":524,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/LoadingComponent.html":{}}}],["skipnegotiation",{"_index":242,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["slide",{"_index":1153,"title":{},"body":{"components/LoadingComponent.html":{}}}],["slider",{"_index":1239,"title":{},"body":{"components/SwitchComponent.html":{}}}],["slider:before",{"_index":1242,"title":{},"body":{"components/SwitchComponent.html":{}}}],["solid",{"_index":858,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/LoadingComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"index.html":{}}}],["space",{"_index":507,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{}}}],["speed",{"_index":1368,"title":{},"body":{"index.html":{}}}],["src/.../app.config.ts",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":376,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1255,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/data/components/alert",{"_index":10,"title":{},"body":{"components/AlertDeleteComponent.html":{},"coverage.html":{}}}],["src/app/data/components/api",{"_index":114,"title":{},"body":{"components/ApiDialogComponent.html":{},"coverage.html":{}}}],["src/app/data/components/back",{"_index":377,"title":{},"body":{"components/BackButtonComponent.html":{},"coverage.html":{}}}],["src/app/data/components/card",{"_index":421,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"coverage.html":{}}}],["src/app/data/components/endpoint",{"_index":678,"title":{},"body":{"components/EndpointDialogComponent.html":{},"coverage.html":{}}}],["src/app/data/components/entity",{"_index":736,"title":{},"body":{"components/EntityDialogComponent.html":{},"coverage.html":{}}}],["src/app/data/components/export",{"_index":896,"title":{},"body":{"components/ExportApiButtonComponent.html":{},"coverage.html":{}}}],["src/app/data/components/filter",{"_index":920,"title":{},"body":{"components/FilterByInputComponent.html":{},"coverage.html":{}}}],["src/app/data/components/header/header.component.ts",{"_index":966,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/data/components/header/header.component.ts:37",{"_index":978,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:46",{"_index":975,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:54",{"_index":979,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:63",{"_index":976,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:71",{"_index":984,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:85",{"_index":980,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:97",{"_index":981,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/icon",{"_index":1018,"title":{},"body":{"components/IconTrashComponent.html":{},"coverage.html":{}}}],["src/app/data/components/import",{"_index":1049,"title":{},"body":{"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["src/app/data/components/loading/loading.component.ts",{"_index":1137,"title":{},"body":{"components/LoadingComponent.html":{},"coverage.html":{}}}],["src/app/data/components/loading/loading.component.ts:29",{"_index":1142,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts",{"_index":1182,"title":{},"body":{"components/PaginationComponent.html":{},"coverage.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:102",{"_index":1203,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:60",{"_index":1200,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:68",{"_index":1199,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:76",{"_index":1197,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:83",{"_index":1201,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:91",{"_index":1206,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts",{"_index":1209,"title":{},"body":{"components/SwitchComponent.html":{},"coverage.html":{}}}],["src/app/data/components/switch/switch.component.ts:54",{"_index":1223,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts:61",{"_index":1224,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts:68",{"_index":1231,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts:77",{"_index":1229,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts:85",{"_index":1225,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts:96",{"_index":1226,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/pages/api",{"_index":1270,"title":{},"body":{"coverage.html":{}}}],["src/app/data/pages/card",{"_index":1274,"title":{},"body":{"coverage.html":{}}}],["src/app/data/pages/endpoint",{"_index":1277,"title":{},"body":{"coverage.html":{}}}],["src/app/data/pages/entity",{"_index":1280,"title":{},"body":{"coverage.html":{}}}],["src/app/data/pages/error",{"_index":830,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"coverage.html":{}}}],["src/app/data/pages/page",{"_index":1165,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/interceptors/http",{"_index":1003,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/interfaces/apiserviceshortstructure.ts",{"_index":1249,"title":{},"body":{"interfaces/apiServiceShortStructure.html":{},"coverage.html":{}}}],["src/app/interfaces/apiservicestructure.ts",{"_index":365,"title":{},"body":{"interfaces/ApiServiceStructure.html":{},"coverage.html":{}}}],["src/app/interfaces/endpoint.ts",{"_index":676,"title":{},"body":{"interfaces/Endpoint.html":{},"coverage.html":{}}}],["src/app/interfaces/entity.ts",{"_index":733,"title":{},"body":{"interfaces/Entity.html":{},"coverage.html":{}}}],["src/app/interfaces/entityshort.ts",{"_index":829,"title":{},"body":{"interfaces/EntityShort.html":{},"coverage.html":{}}}],["src/app/interfaces/filestatus.ts",{"_index":917,"title":{},"body":{"interfaces/FileStatus.html":{},"coverage.html":{}}}],["src/app/repositories/api",{"_index":342,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"coverage.html":{}}}],["src/app/repositories/endpoint",{"_index":692,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"coverage.html":{}}}],["src/app/repositories/entity",{"_index":788,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"coverage.html":{}}}],["src/app/services/api",{"_index":210,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/services/endpoint",{"_index":718,"title":{},"body":{"injectables/EndpointService.html":{},"coverage.html":{}}}],["src/app/services/entity",{"_index":810,"title":{},"body":{"injectables/EntityService.html":{},"coverage.html":{}}}],["src/app/services/error",{"_index":875,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["standalone",{"_index":923,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["start",{"_index":249,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"index.html":{}}}],["started",{"_index":1327,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1253,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":918,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["store",{"_index":1361,"title":{},"body":{"index.html":{}}}],["string",{"_index":267,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["structure",{"_index":735,"title":{},"body":{"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"interfaces/EntityShort.html":{}}}],["structure(value",{"_index":777,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["structureinputref",{"_index":739,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["styles/button.css",{"_index":467,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["styles/card.css",{"_index":466,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["styles/icon.css",{"_index":468,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{}}}],["styleurl",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{}}}],["styleurls",{"_index":26,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["sub",{"_index":625,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["subject",{"_index":235,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["submit",{"_index":138,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["submit(event",{"_index":158,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["subscribe",{"_index":194,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/ImportDialogComponent.html":{}}}],["subscription",{"_index":601,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["success",{"_index":487,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["such",{"_index":1356,"title":{},"body":{"index.html":{}}}],["suits",{"_index":1386,"title":{},"body":{"index.html":{}}}],["switch",{"_index":109,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["switch.component.css",{"_index":1217,"title":{},"body":{"components/SwitchComponent.html":{}}}],["switch.component.html",{"_index":1218,"title":{},"body":{"components/SwitchComponent.html":{}}}],["switch/switch.component",{"_index":457,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["switchcomponent",{"_index":108,"title":{"components/SwitchComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["switchmap",{"_index":1033,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["switchmap((response",{"_index":1043,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["table",{"_index":1293,"title":{},"body":{"coverage.html":{},"dependencies.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1292,"title":{},"body":{"coverage.html":{}}}],["taiga",{"_index":15,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"dependencies.html":{}}}],["takeuntil",{"_index":1034,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["takeuntil(this.router.events",{"_index":1047,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["targetinput",{"_index":147,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["targetinput.nativeelement.queryselector('input",{"_index":786,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["targetinput.nativeelement.queryselector('input').focus",{"_index":206,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["templateref",{"_index":154,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["templateurl",{"_index":28,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["test",{"_index":1373,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1380,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":1378,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1370,"title":{},"body":{"index.html":{}}}],["text",{"_index":504,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["textarea').focus",{"_index":787,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["this.alerts",{"_index":485,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EntityDialogComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["this.alerts.open",{"_index":1046,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["this.alerts.open(error.message",{"_index":337,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["this.alerts.open(message",{"_index":673,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.alertservice.open(`error",{"_index":883,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.apideleted.emit",{"_index":495,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.apiinfo",{"_index":479,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.apiinfo.isactive",{"_index":470,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.apiinfo.name",{"_index":477,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.apilistsubject.asobservable",{"_index":231,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.getvalue",{"_index":261,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.getvalue().map(apiservice",{"_index":277,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.next",{"_index":276,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.next(apilist",{"_index":257,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.next(currentlist",{"_index":263,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.next(initialdata",{"_index":279,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apiname",{"_index":608,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.apiservice.createapiservice(service",{"_index":358,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.createfullapiservice(service",{"_index":359,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.createfullapiservice(service).subscribe",{"_index":1120,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.apiservice.deleteapiservice(servicename",{"_index":361,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.getapilist",{"_index":356,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.getapistructurelist(name",{"_index":357,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.updateapiservice(oldname",{"_index":360,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.updateapiservicestatus(servicename",{"_index":362,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservicerepository",{"_index":472,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.apiservicerepository.deleteapiservice(this.apiinfo.name).subscribe",{"_index":494,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.apiservicerepository.getapistructurelist(this.apiinfo.name).subscribe",{"_index":901,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["this.baseurl}/apiendpoint/${apiservicename}/${entityname",{"_index":730,"title":{},"body":{"injectables/EndpointService.html":{}}}],["this.baseurl}/apiendpoint/${apiservicename}/${entityname}/${actionname",{"_index":731,"title":{},"body":{"injectables/EndpointService.html":{}}}],["this.baseurl}/apiendpoint/${servicename}/${entityname}/${endpoint}/${isactive",{"_index":732,"title":{},"body":{"injectables/EndpointService.html":{}}}],["this.baseurl}/apientity/${apiservicename}/${entityname",{"_index":824,"title":{},"body":{"injectables/EntityService.html":{}}}],["this.baseurl}/apientity/${servicename}/${entityname}/${isactive",{"_index":826,"title":{},"body":{"injectables/EntityService.html":{}}}],["this.baseurl}/apiservice/${encodeuricomponent",{"_index":334,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.baseurl}/apiservice/${encodeuricomponent(name",{"_index":328,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.baseurl}/apiservice/${encodeuricomponent(oldname",{"_index":331,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.baseurl}/apiservice/${encodeuricomponent(servicename",{"_index":332,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.buttonclick.emit",{"_index":986,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.cd.markforcheck",{"_index":484,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ImportDialogComponent.html":{}}}],["this.context.completewith(false",{"_index":1124,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.context.completewith(this.data",{"_index":191,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.context.data",{"_index":187,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.control.setvalue(currentfiles",{"_index":1132,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.control.value",{"_index":1129,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.control.value.filter(file",{"_index":1130,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.control.valuechanges.subscribe((files",{"_index":1085,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.controlname",{"_index":941,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.data.name",{"_index":205,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.data.name.trim",{"_index":186,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.data.route",{"_index":691,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["this.data.route.trim",{"_index":690,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["this.data.structure",{"_index":774,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["this.dialog",{"_index":478,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["this.dialog().subscribe",{"_index":987,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.dialogs.open(content",{"_index":192,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.endpointdeleted.emit(this.endpointinfo.route",{"_index":617,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.endpointinfo",{"_index":611,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.endpointinfo.isactive",{"_index":605,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.endpointinfo.route",{"_index":610,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.endpointrepositoryservice",{"_index":606,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.endpointservice.createendpoint(apiservicename",{"_index":713,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.endpointservice.deleteendpoint(apiservicename",{"_index":716,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.endpointservice.getendpointbyname(apiservicename",{"_index":714,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.endpointservice.getendpointlist(apiservicename",{"_index":712,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.endpointservice.updateendpoint(apiservicename",{"_index":715,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.endpointservice.updateendpointstatus(apiservicename",{"_index":717,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.entitydeleted.emit(this.entityinfo.name",{"_index":670,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.entityinfo",{"_index":663,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.entityinfo.isactive",{"_index":659,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.entityinfo.name",{"_index":609,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["this.entityrepositoryservice",{"_index":660,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.entityservice.createapientity(apiservicename",{"_index":806,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.entityservice.deleteapientity(apiservicename",{"_index":808,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.entityservice.getapientity(apiservicename",{"_index":805,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.entityservice.getapientitylist(apiservicename",{"_index":804,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.entityservice.updateapientity(apiservicename",{"_index":807,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.entityservice.updateentitystatus(servicename",{"_index":809,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.errorcode",{"_index":847,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["this.errorhandler.handleerror(error",{"_index":336,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["this.errormessage",{"_index":850,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["this.files",{"_index":1091,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.files.every(file",{"_index":1123,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.files.filter(f",{"_index":1094,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.files.filter(file",{"_index":1127,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.files.find(f",{"_index":1109,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.files.some(f",{"_index":1088,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.form.controls[this.controlname].valuechanges.subscribe(value",{"_index":956,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.form.get(this.controlname",{"_index":950,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.handleeditdialogdata(data",{"_index":664,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.handleendpointupdate(response",{"_index":614,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.handleendpointupdateerror(error",{"_index":615,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.handleentitydeletion",{"_index":666,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.handleentityupdate(response",{"_index":668,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.handleentityupdateerror(error",{"_index":669,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.handleerror",{"_index":662,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.handleerror(err",{"_index":327,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["this.handlesubmit",{"_index":782,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["this.hasfiles",{"_index":1093,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.hasvalue",{"_index":190,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.http",{"_index":324,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["this.hubconnection",{"_index":239,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.hubconnection.on('addservice",{"_index":259,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.hubconnection.on('recievemessage",{"_index":255,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.hubconnection.on('removeservice",{"_index":271,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.hubconnection.on('updateservice",{"_index":265,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.hubconnection.on('updatestatusservice",{"_index":274,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.invalidfalse.markastouched",{"_index":1233,"title":{},"body":{"components/SwitchComponent.html":{}}}],["this.invalidtrue.markastouched",{"_index":1232,"title":{},"body":{"components/SwitchComponent.html":{}}}],["this.iscansubmit",{"_index":779,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["this.isfeatureenabled",{"_index":1212,"title":{},"body":{"components/SwitchComponent.html":{}}}],["this.item.name",{"_index":1045,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["this.items",{"_index":955,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.items.filter(item",{"_index":953,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.itemsperpage",{"_index":1208,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.location",{"_index":469,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.location.back",{"_index":396,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["this.location.path(true",{"_index":393,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["this.oldname",{"_index":476,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{}}}],["this.processeddata.foreach(service",{"_index":1119,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.processeddata.length",{"_index":1117,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.processeddata.push(apiservicestructure",{"_index":1116,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.processeditdialogdata(data",{"_index":612,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.processjson(json",{"_index":1107,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.readfiles(newfiles",{"_index":1097,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.responsealert.emit(true",{"_index":1044,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["this.route.queryparams.subscribe((params",{"_index":846,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["this.router.navigate",{"_index":852,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["this.router.navigate(['/error",{"_index":893,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.router.navigate(['/page",{"_index":886,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.router.navigatebyurl",{"_index":397,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["this.router.url",{"_index":390,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["this.searchquery.emit(value",{"_index":952,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.showerror('json",{"_index":783,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["this.toggle.emit(this.value",{"_index":1234,"title":{},"body":{"components/SwitchComponent.html":{}}}],["this.updateendpoint(data",{"_index":613,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.updatefilestatus(file",{"_index":1106,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["throwerror",{"_index":317,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["throwerror(error",{"_index":340,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["thumb",{"_index":537,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["thumb:hover",{"_index":539,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["title",{"_index":374,"title":{},"body":{"components/AppComponent.html":{}}}],["toggle",{"_index":1222,"title":{},"body":{"components/SwitchComponent.html":{}}}],["tools",{"_index":1351,"title":{},"body":{"index.html":{}}}],["top",{"_index":549,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["totalitems",{"_index":1194,"title":{},"body":{"components/PaginationComponent.html":{}}}],["totalpages",{"_index":1196,"title":{},"body":{"components/PaginationComponent.html":{}}}],["track",{"_index":535,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["transform",{"_index":871,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["transition",{"_index":415,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["translatex",{"_index":1164,"title":{},"body":{"components/LoadingComponent.html":{}}}],["translatex(16.8px",{"_index":1248,"title":{},"body":{"components/SwitchComponent.html":{}}}],["translatex(70px",{"_index":1161,"title":{},"body":{"components/LoadingComponent.html":{}}}],["transport",{"_index":243,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["trash",{"_index":1020,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash'},{'name",{"_index":99,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["trash.component",{"_index":460,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["trash.component.css",{"_index":1038,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.css,../../styles/icon.css",{"_index":1021,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.html",{"_index":1022,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts",{"_index":1019,"title":{},"body":{"components/IconTrashComponent.html":{},"coverage.html":{}}}],["trash.component.ts:42",{"_index":1031,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts:50",{"_index":1028,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts:58",{"_index":1030,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts:66",{"_index":1029,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts:74",{"_index":1027,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts:98",{"_index":1032,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash/icon",{"_index":459,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{},"coverage.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["true",{"_index":184,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/SwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":391,"title":{},"body":{"components/BackButtonComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["tslib",{"_index":1322,"title":{},"body":{"dependencies.html":{}}}],["tui",{"_index":962,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["tuialertoptions",{"_index":47,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["tuialertservice",{"_index":293,"title":{},"body":{"injectables/ApiService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["tuiappearance",{"_index":426,"title":{},"body":{"components/CardApiComponent.html":{}}}],["tuiautofocus",{"_index":119,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["tuiavatar",{"_index":1051,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["tuibutton",{"_index":120,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["tuidatalistwrapper",{"_index":121,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["tuidialog",{"_index":456,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/HeaderComponent.html":{}}}],["tuidialog(apidialogcomponent",{"_index":449,"title":{},"body":{"components/CardApiComponent.html":{}}}],["tuidialog(endpointdialogcomponent",{"_index":597,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["tuidialog(entitydialogcomponent",{"_index":650,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["tuidialog(importdialogcomponent",{"_index":982,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tuidialogcontext",{"_index":180,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["tuidialogservice",{"_index":156,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["tuifilelike",{"_index":919,"title":{},"body":{"interfaces/FileStatus.html":{}}}],["tuifiles",{"_index":1052,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["tuiicon",{"_index":1083,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["tuiinputmodule",{"_index":122,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["tuiinputslidermodule",{"_index":1187,"title":{},"body":{"components/PaginationComponent.html":{}}}],["tuilink",{"_index":1053,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["tuipagination",{"_index":1188,"title":{},"body":{"components/PaginationComponent.html":{}}}],["tuipopover",{"_index":41,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["tuiroot",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["tuiselectmodule",{"_index":123,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["tuislider",{"_index":124,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["tuiswitch",{"_index":1216,"title":{},"body":{"components/SwitchComponent.html":{}}}],["tuiswitchoptionsprovider",{"_index":1214,"title":{},"body":{"components/SwitchComponent.html":{}}}],["tuitextareamodule",{"_index":737,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["tuitextfield",{"_index":125,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["tuitextfieldcontrollermodule",{"_index":126,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/PaginationComponent.html":{}}}],["type",{"_index":45,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":679,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["typescript",{"_index":1183,"title":{},"body":{"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["ui",{"_index":16,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["ui/addon",{"_index":1303,"title":{},"body":{"dependencies.html":{}}}],["ui/cdk",{"_index":46,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"dependencies.html":{}}}],["ui/core",{"_index":48,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{},"dependencies.html":{}}}],["ui/event",{"_index":1309,"title":{},"body":{"dependencies.html":{}}}],["ui/experimental",{"_index":1312,"title":{},"body":{"dependencies.html":{}}}],["ui/icons",{"_index":1313,"title":{},"body":{"dependencies.html":{}}}],["ui/kit",{"_index":181,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"dependencies.html":{}}}],["ui/layout",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["ui/legacy",{"_index":182,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/PaginationComponent.html":{},"dependencies.html":{}}}],["ui/polymorpheus",{"_index":49,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["undefined",{"_index":53,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["unit",{"_index":1369,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":849,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["updateapientity",{"_index":793,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["updateapientity(apiservicename",{"_index":801,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["updateapientity(this.apiname",{"_index":667,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["updateapiservice",{"_index":286,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["updateapiservice(oldname",{"_index":311,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["updateapiservice(this.oldname",{"_index":482,"title":{},"body":{"components/CardApiComponent.html":{}}}],["updateapiservicestatus",{"_index":287,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["updateapiservicestatus(servicename",{"_index":313,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["updateapiservicestatus(this.apiinfo.name",{"_index":473,"title":{},"body":{"components/CardApiComponent.html":{}}}],["updateendpoint",{"_index":574,"title":{},"body":{"components/CardEndpointComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["updateendpoint(apiservicename",{"_index":707,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["updateendpoint(data",{"_index":595,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["updateendpointstatus",{"_index":607,"title":{},"body":{"components/CardEndpointComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["updateendpointstatus(apiservicename",{"_index":709,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["updateendpointstatus(servicename",{"_index":728,"title":{},"body":{"injectables/EndpointService.html":{}}}],["updateentitystatus",{"_index":794,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["updateentitystatus(servicename",{"_index":802,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["updateentitystatus(this.apiname",{"_index":661,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["updatefilestatus",{"_index":1063,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["updatefilestatus(file",{"_index":1077,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["url",{"_index":388,"title":{},"body":{"components/BackButtonComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["use",{"_index":1375,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":1330,"title":{},"body":{"index.html":{}}}],["validators",{"_index":948,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["validators.pattern('^[a",{"_index":943,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["value",{"_index":36,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":780,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["value.replace(/[^a",{"_index":201,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["var",{"_index":59,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["variable",{"_index":1256,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1404,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1332,"title":{},"body":{"index.html":{},"properties.html":{}}}],["viewchild",{"_index":178,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["viewchild('descriptioninput",{"_index":163,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["viewchild('nameinput",{"_index":170,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["visit",{"_index":1395,"title":{},"body":{"index.html":{}}}],["void",{"_index":149,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["webkit",{"_index":529,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{}}}],["weight",{"_index":413,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["whenever",{"_index":1346,"title":{},"body":{"index.html":{}}}],["white",{"_index":401,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/SwitchComponent.html":{}}}],["width",{"_index":502,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["window.location.origin}/api",{"_index":315,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["window.location.origin}/hubs",{"_index":226,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["window.url.createobjecturl(blob",{"_index":908,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["window.url.revokeobjecturl(url",{"_index":914,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["withautomaticreconnect([1000",{"_index":245,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["withurl(`hubs/apilisthub",{"_index":241,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["word",{"_index":525,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["wrap",{"_index":526,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{}}}],["x",{"_index":522,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["y",{"_index":520,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["yes",{"_index":160,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["z0",{"_index":203,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["za",{"_index":202,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["zone.js",{"_index":1324,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AlertDeleteComponent.html":{"url":"components/AlertDeleteComponent.html","title":"component - AlertDeleteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AlertDeleteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/alert-delete/alert-delete.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент AlertDeleteComponent предназначен для отображения уведомления при выполнении действия удаления.\nИспользует компоненты Taiga UI для управления всплывающим окном уведомления и его опциями.\nЭтот компонент является частью системы уведомлений и используется для оповещения пользователей о действиях удаления.\nИнтегрируется с сервисом уведомлений Taiga UI для обеспечения единообразного пользовательского опыта.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alert-on-delete\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./alert-delete.component.css\n            \n\n\n\n            \n                templateUrl\n                ./alert-delete.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                context\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext, boolean>>()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/alert-delete/alert-delete.component.ts:38\n                        \n                    \n\n            \n                \n                    Контекст для компонента TuiPopover, который управляет опциями уведомления.\nЭтот контекст внедряется с использованием функции injectContext из Taiga UI.\nОн предоставляет необходимую конфигурацию для всплывающего окна уведомления.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport type { TuiPopover } from '@taiga-ui/cdk';\nimport type { TuiAlertOptions } from '@taiga-ui/core';\nimport { injectContext } from '@taiga-ui/polymorpheus';\n\n/**\n * Компонент AlertDeleteComponent предназначен для отображения уведомления при выполнении действия удаления.\n * Использует компоненты Taiga UI для управления всплывающим окном уведомления и его опциями.\n *\n * @remarks\n * Этот компонент является частью системы уведомлений и используется для оповещения пользователей о действиях удаления.\n * Интегрируется с сервисом уведомлений Taiga UI для обеспечения единообразного пользовательского опыта.\n *\n * @example\n * html\n * \n *\n */\n@Component({\n  selector: 'app-alert-on-delete',\n  imports: [CommonModule],\n  templateUrl: './alert-delete.component.html',\n  styleUrls: ['./alert-delete.component.css'], \n})\nexport class AlertDeleteComponent {\n  /**\n   * Контекст для компонента TuiPopover, который управляет опциями уведомления.\n   *\n   * @remarks\n   * Этот контекст внедряется с использованием функции injectContext из Taiga UI.\n   * Он предоставляет необходимую конфигурацию для всплывающего окна уведомления.\n   *\n   * @type {TuiPopover, boolean>}\n   * @default undefined\n   * @memberof AlertDeleteComponent\n   */\n  protected readonly context = injectContext, boolean>>();\n}\n\n    \n\n    \n        \n    {{ response ? 'Да' : 'Нет' }}\n\n    \n\n    \n                \n                    ./alert-delete.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ response ? \\'Да\\' : \\'Нет\\' }}'\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlertDeleteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ApiDialogComponent.html":{"url":"components/ApiDialogComponent.html","title":"component - ApiDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ApiDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/api-dialog/api-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент ApiDialogComponent предназначен для редактирования данных API через диалоговое окно.\nИспользует компоненты Taiga UI для создания интерактивного интерфейса.\nЭтот компонент предоставляет пользователю возможность редактировать данные API, такие как имя и описание,\nи отправлять изменения через диалоговое окно.\nИнтегрируется с сервисами Taiga UI для управления диалогами и вводом данных.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-api-edit-dialog\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            TuiAutoFocus\n                            TuiButton\n                            TuiDataListWrapper\n                            TuiInputModule\n                            TuiSelectModule\n                            TuiSlider\n                            TuiTextfield\n                            TuiTextfieldControllerModule\n                \n            \n\n            \n                styleUrls\n                ./api-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./api-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                context\n                            \n                            \n                                    \n                                descriptionInputRef\n                            \n                            \n                                    Private\n                                    Readonly\n                                dialogs\n                            \n                            \n                                    \n                                nameInputRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                moveFocus\n                            \n                            \n                                    Protected\n                                onInput\n                            \n                            \n                                    Protected\n                                showDialog\n                            \n                            \n                                    Protected\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasValue\n                                \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moveFocus\n                        \n                    \n                \n            \n            \n                \n                        \n                    moveFocus(targetInput: ElementRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/api-dialog/api-dialog.component.ts:173\n                        \n                    \n\n\n            \n                \n                        Перемещает фокус на указанное поле ввода.\nИспользуется для управления фокусом между полями ввода.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                targetInput\n                                            \n                                                        ElementRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСсылка на элемент ввода.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        onInput\n                        \n                    \n                \n            \n            \n                \n                        \n                    onInput(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/api-dialog/api-dialog.component.ts:156\n                        \n                    \n\n\n            \n                \n                        Обработчик ввода данных в поле имени.\nОчищает значение от недопустимых символов и обновляет данные API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСобытие ввода данных.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        showDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    showDialog(content: TemplateRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/api-dialog/api-dialog.component.ts:143\n                        \n                    \n\n\n            \n                \n                        Открывает диалоговое окно с заданным содержимым.\nИспользует сервис TuiDialogService для открытия диалога.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                        TemplateRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nШаблон содержимого диалогового окна.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        submit\n                        \n                    \n                \n            \n            \n                \n                        \n                    submit(event?: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/api-dialog/api-dialog.component.ts:125\n                        \n                    \n\n\n            \n                \n                        Обработчик отправки формы.\nПредотвращает стандартное поведение отправки формы и завершает диалог, если имя не пустое.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nСобытие отправки формы.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext\n    >()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/api-dialog/api-dialog.component.ts:90\n                        \n                    \n\n            \n                \n                    Контекст диалогового окна, содержащий данные API.\nВнедряется с использованием функции injectContext из Taiga UI.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        descriptionInputRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('descriptionInput', {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/api-dialog/api-dialog.component.ts:68\n                        \n                    \n\n            \n                \n                    Ссылка на элемент ввода описания.\nИспользуется для управления фокусом и значением поля ввода описания.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/api-dialog/api-dialog.component.ts:79\n                        \n                    \n\n            \n                \n                    Сервис для управления диалоговыми окнами.\nВнедряется с использованием Angular DI.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nameInputRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('nameInput', {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/api-dialog/api-dialog.component.ts:56\n                        \n                    \n\n            \n                \n                    Ссылка на элемент ввода имени.\nИспользуется для управления фокусом и значением поля ввода имени.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasValue\n                    \n                \n\n                \n                    \n                        gethasValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/api-dialog/api-dialog.component.ts:102\n                                \n                            \n                    \n                        \n                                Флаг, указывающий, есть ли значение в поле ввода имени.\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/api-dialog/api-dialog.component.ts:112\n                                \n                            \n                    \n                        \n                                Данные API, которые редактируются в диалоговом окне.\n\n\n                                \n                                \n                                \n                                    Returns :         apiServiceShortStructure\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ElementRef, TemplateRef } from '@angular/core';\nimport { Component, inject, ViewChild } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TuiAutoFocus } from '@taiga-ui/cdk';\nimport type { TuiDialogContext } from '@taiga-ui/core';\nimport { TuiButton, TuiDialogService, TuiTextfield } from '@taiga-ui/core';\nimport { TuiDataListWrapper, TuiSlider } from '@taiga-ui/kit';\nimport {\n  TuiInputModule,\n  TuiSelectModule,\n  TuiTextfieldControllerModule,\n} from '@taiga-ui/legacy';\nimport { injectContext } from '@taiga-ui/polymorpheus';\nimport { apiServiceShortStructure } from \"../../../interfaces/apiServiceShortStructure\";\n\n/**\n * Компонент ApiDialogComponent предназначен для редактирования данных API через диалоговое окно.\n * Использует компоненты Taiga UI для создания интерактивного интерфейса.\n *\n * @remarks\n * Этот компонент предоставляет пользователю возможность редактировать данные API, такие как имя и описание,\n * и отправлять изменения через диалоговое окно.\n * Интегрируется с сервисами Taiga UI для управления диалогами и вводом данных.\n *\n * @example\n * html\n * \n * \n */\n@Component({\n  selector: 'app-api-edit-dialog',\n  imports: [\n    FormsModule,\n    TuiAutoFocus,\n    TuiButton,\n    TuiDataListWrapper,\n    TuiInputModule,\n    TuiSelectModule,\n    TuiSlider,\n    TuiTextfield,\n    TuiTextfieldControllerModule,\n  ],\n  templateUrl: './api-dialog.component.html',\n  styleUrls: ['./api-dialog.component.css'],\n})\nexport class ApiDialogComponent {\n  /**\n   * Ссылка на элемент ввода имени.\n   *\n   * @remarks\n   * Используется для управления фокусом и значением поля ввода имени.\n   *\n   * @type {ElementRef}\n   * @memberof ApiDialogComponent\n   */\n  @ViewChild('nameInput', { read: ElementRef }) nameInputRef!: ElementRef;\n\n  /**\n   * Ссылка на элемент ввода описания.\n   *\n   * @remarks\n   * Используется для управления фокусом и значением поля ввода описания.\n   *\n   * @type {ElementRef}\n   * @memberof ApiDialogComponent\n   */\n  @ViewChild('descriptionInput', { read: ElementRef })\n  descriptionInputRef!: ElementRef;\n\n  /**\n   * Сервис для управления диалоговыми окнами.\n   *\n   * @remarks\n   * Внедряется с использованием Angular DI.\n   *\n   * @type {TuiDialogService}\n   * @memberof ApiDialogComponent\n   */\n  private readonly dialogs = inject(TuiDialogService);\n\n  /**\n   * Контекст диалогового окна, содержащий данные API.\n   *\n   * @remarks\n   * Внедряется с использованием функции injectContext из Taiga UI.\n   *\n   * @type {TuiDialogContext}\n   * @memberof ApiDialogComponent\n   */\n  public readonly context =\n    injectContext\n    >();\n\n  /**\n   * Флаг, указывающий, есть ли значение в поле ввода имени.\n   *\n   * @type {boolean}\n   * @returns {boolean} Возвращает true, если имя не пустое.\n   * @memberof ApiDialogComponent\n   */\n  protected get hasValue(): boolean {\n    return this.data.name.trim() !== '';\n  }\n\n  /**\n   * Данные API, которые редактируются в диалоговом окне.\n   *\n   * @type {apiServiceShortStructure}\n   * @memberof ApiDialogComponent\n   */\n  protected get data(): apiServiceShortStructure {\n    return this.context.data;\n  }\n\n  /**\n   * Обработчик отправки формы.\n   *\n   * @param event - Событие отправки формы.\n   * @remarks\n   * Предотвращает стандартное поведение отправки формы и завершает диалог, если имя не пустое.\n   *\n   * @memberof ApiDialogComponent\n   */\n  protected submit(event?: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n    if (this.hasValue) {\n      this.context.completeWith(this.data);\n    }\n  }\n\n  /**\n   * Открывает диалоговое окно с заданным содержимым.\n   *\n   * @param content - Шаблон содержимого диалогового окна.\n   * @remarks\n   * Использует сервис TuiDialogService для открытия диалога.\n   *\n   * @memberof ApiDialogComponent\n   */\n  protected showDialog(content: TemplateRef): void {\n    this.dialogs.open(content, { dismissible: true }).subscribe();\n  }\n\n  /**\n   * Обработчик ввода данных в поле имени.\n   *\n   * @param event - Событие ввода данных.\n   * @remarks\n   * Очищает значение от недопустимых символов и обновляет данные API.\n   *\n   * @memberof ApiDialogComponent\n   */\n  protected onInput(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    const value = input.value;\n    const cleanedValue = value.replace(/[^a-zA-Z0-9]/g, '');\n    input.value = cleanedValue;\n    this.data.name = cleanedValue;\n  }\n\n  /**\n   * Перемещает фокус на указанное поле ввода.\n   *\n   * @param targetInput - Ссылка на элемент ввода.\n   * @remarks\n   * Используется для управления фокусом между полями ввода.\n   *\n   * @memberof ApiDialogComponent\n   */\n  protected moveFocus(targetInput: ElementRef): void {\n    targetInput.nativeElement.querySelector('input').focus();\n  }\n}\n\n    \n\n    \n        \n  Имя API\n\n\n\n  Описание\n\n\n\n  \n    Отправить\n  \n\n\n    \n\n    \n                \n                    ./api-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Имя API  Описание      Отправить  '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ApiDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiHubServiceService.html":{"url":"injectables/ApiHubServiceService.html","title":"injectable - ApiHubServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiHubServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api-hub-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiListSubject\n                            \n                            \n                                    Private\n                                baseUrl\n                            \n                            \n                                    Private\n                                hubConnection\n                            \n                            \n                                ordersUpdated$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api-hub-service.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeData\n                        \n                    \n                \n            \n            \n                \ninitializeData(initialData: apiServiceShortStructure[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-hub-service.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                initialData\n                                            \n                                                            apiServiceShortStructure[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiListSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-hub-service.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/hubs`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-hub-service.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hubConnection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     signalR.HubConnection\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-hub-service.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ordersUpdated$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.apiListSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-hub-service.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Input, NgZone } from '@angular/core';\nimport * as signalR from '@microsoft/signalr';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { apiServiceShortStructure } from \"../interfaces/apiServiceShortStructure\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiHubServiceService {\n  private hubConnection!: signalR.HubConnection;\n  private apiListSubject = new BehaviorSubject([]);\n  private baseUrl = `${window.location.origin}/hubs`;\n  ordersUpdated$: Observable = this.apiListSubject.asObservable();\n  constructor() {\n    this.hubConnection = new signalR.HubConnectionBuilder()\n      .withUrl(`hubs/apilisthub`, {\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets\n      })\n      .withAutomaticReconnect([1000, 3000, 5000])\n      .build();\n\n    this.hubConnection\n      .start()\n      .then(() => console.log('Connected to SignalR hub'))\n      .catch(err => console.error('Error connecting to SignalR hub:', err));\n\n    this.hubConnection.on('RecieveMessage', (apiList: apiServiceShortStructure[]) => {\n      this.apiListSubject.next(apiList);\n      console.log(apiList);\n    });\n\n    this.hubConnection.on('AddService', (api: apiServiceShortStructure) => {\n      const currentList = this.apiListSubject.getValue();\n      currentList.push(api);\n      this.apiListSubject.next(currentList);\n      console.log(currentList);\n    });\n    \n    this.hubConnection.on('UpdateService', (oldName: string, api: apiServiceShortStructure) => {\n      const currentList = this.apiListSubject.getValue();\n      const index = currentList.findIndex((apiService: apiServiceShortStructure) => {\n        return apiService.name === oldName\n      });\n      currentList[index] = api;\n      this.apiListSubject.next(currentList);\n    });\n    \n    this.hubConnection.on('RemoveService', (name: string) => {\n      const currentList = this.apiListSubject.getValue();\n      const index = currentList.findIndex((apiService: apiServiceShortStructure) => {\n        return apiService.name === name\n      });\n      currentList.splice(index, 1);\n      this.apiListSubject.next(currentList);\n    });\n\n    this.hubConnection.on('UpdateStatusService', (name: string, isActive: boolean) => {\n      this.apiListSubject.next(\n        this.apiListSubject.getValue().map(apiService => \n          apiService.name === name ? { ...apiService, isActive } : apiService\n        )\n      );\n    });\n  }\n  \n  initializeData(initialData: apiServiceShortStructure[]) {\n    this.apiListSubject.next(initialData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createApiService\n                            \n                            \n                                createFullApiService\n                            \n                            \n                                deleteApiService\n                            \n                            \n                                getApiList\n                            \n                            \n                                getApiStructureList\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                updateApiService\n                            \n                            \n                                updateApiServiceStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorHandler: ErrorHandlerService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api-service.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createApiService\n                        \n                    \n                \n            \n            \n                \ncreateApiService(service: apiServiceShortStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                service\n                                            \n                                                            apiServiceShortStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createFullApiService\n                        \n                    \n                \n            \n            \n                \ncreateFullApiService(service: ApiServiceStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                service\n                                            \n                                                            ApiServiceStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteApiService\n                        \n                    \n                \n            \n            \n                \ndeleteApiService(serviceName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiList\n                        \n                    \n                \n            \n            \n                \ngetApiList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiStructureList\n                        \n                    \n                \n            \n            \n                \ngetApiStructureList(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiService\n                        \n                    \n                \n            \n            \n                \nupdateApiService(oldName: string, service: apiServiceShortStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                service\n                                            \n                                                            apiServiceShortStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiServiceStatus\n                        \n                    \n                \n            \n            \n                \nupdateApiServiceStatus(serviceName: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/api`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-service.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { ApiServiceStructure } from \"../interfaces/ApiServiceStructure\";\nimport { apiServiceShortStructure } from \"../interfaces/apiServiceShortStructure\";\nimport { ErrorHandlerService } from './error-handler.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  private baseUrl = `${window.location.origin}/api`;\n\n  constructor(\n    private http: HttpClient,\n    private errorHandler: ErrorHandlerService,\n    private alerts: TuiAlertService\n  ) {}\n\n  getApiList(): Observable {\n    return this.http\n      .get(`${this.baseUrl}/ApiService`)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  getApiStructureList(name: string): Observable {\n    return this.http\n      .get(\n        `${this.baseUrl}/ApiService/${encodeURIComponent(name)}`\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  createApiService(\n    service: apiServiceShortStructure\n  ): Observable {\n    return this.http\n      .post(`${this.baseUrl}/ApiService`, service)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  createFullApiService(service: ApiServiceStructure): Observable {\n    return this.http\n      .post(`${this.baseUrl}/ApiService`, service)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  updateApiService(\n    oldName: string,\n    service: apiServiceShortStructure\n  ): Observable {\n    return this.http\n      .put(\n        `${this.baseUrl}/ApiService/${encodeURIComponent(oldName)}`,\n        service\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  deleteApiService(serviceName: string): Observable {\n    return this.http\n      .delete(\n        `${this.baseUrl}/ApiService/${encodeURIComponent(serviceName)}`\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  updateApiServiceStatus(\n    serviceName: string,\n    isActive: boolean\n  ): Observable {\n    return this.http\n      .patch(\n        `${this.baseUrl}/ApiService/${encodeURIComponent(\n          serviceName\n        )}/${isActive}`,\n        null\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  private handleError(error: HttpErrorResponse): Observable {\n    this.errorHandler.handleError(error);\n    this.alerts.open(error.message, { appearance: 'negative' }).subscribe();\n    return throwError(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiServiceRepositoryService.html":{"url":"injectables/ApiServiceRepositoryService.html","title":"injectable - ApiServiceRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiServiceRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/api-service-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createApiService\n                            \n                            \n                                createFullApiService\n                            \n                            \n                                deleteApiService\n                            \n                            \n                                getApiList\n                            \n                            \n                                getApiStructureList\n                            \n                            \n                                updateApiService\n                            \n                            \n                                updateApiServiceStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/api-service-repository.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createApiService\n                        \n                    \n                \n            \n            \n                \ncreateApiService(service: apiServiceShortStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                service\n                                            \n                                                            apiServiceShortStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createFullApiService\n                        \n                    \n                \n            \n            \n                \ncreateFullApiService(service: ApiServiceStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                service\n                                            \n                                                            ApiServiceStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteApiService\n                        \n                    \n                \n            \n            \n                \ndeleteApiService(serviceName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiList\n                        \n                    \n                \n            \n            \n                \ngetApiList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiStructureList\n                        \n                    \n                \n            \n            \n                \ngetApiStructureList(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiService\n                        \n                    \n                \n            \n            \n                \nupdateApiService(oldName: string, service: apiServiceShortStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                service\n                                            \n                                                            apiServiceShortStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiServiceStatus\n                        \n                    \n                \n            \n            \n                \nupdateApiServiceStatus(serviceName: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiServiceStructure } from \"../interfaces/ApiServiceStructure\";\nimport { apiServiceShortStructure } from \"../interfaces/apiServiceShortStructure\";\nimport { ApiService } from '../services/api-service.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiServiceRepositoryService {\n  constructor(private apiService: ApiService) {}\n\n  getApiList(): Observable {\n    return this.apiService.getApiList();\n  }\n\n  getApiStructureList(name: string): Observable {\n    return this.apiService.getApiStructureList(name);\n  }\n\n  createApiService(\n    service: apiServiceShortStructure\n  ): Observable {\n    return this.apiService.createApiService(service);\n  }\n\n  createFullApiService(service: ApiServiceStructure): Observable {\n    return this.apiService.createFullApiService(service);\n  }\n\n  updateApiService(\n    oldName: string,\n    service: apiServiceShortStructure\n  ): Observable {\n    return this.apiService.updateApiService(oldName, service);\n  }\n\n  deleteApiService(serviceName: string): Observable {\n    return this.apiService.deleteApiService(serviceName);\n  }\n\n  updateApiServiceStatus(\n    serviceName: string,\n    isActive: boolean\n  ): Observable {\n    return this.apiService.updateApiServiceStatus(serviceName, isActive);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiServiceStructure.html":{"url":"interfaces/ApiServiceStructure.html","title":"interface - ApiServiceStructure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiServiceStructure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/ApiServiceStructure.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            entities\n                                        \n                                \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entities\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entities:         Entity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Entity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity } from \"./Entity\";\n\n\nexport interface ApiServiceStructure {\n  name: string;\n  isActive: boolean;\n  description: string;\n  entities: Entity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                            TuiRoot\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ApiEasier'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { TuiRoot } from \"@taiga-ui/core\";\nimport { Component } from '@angular/core';\nimport { RouterModule, RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  imports: [\n    RouterOutlet, \n    TuiRoot, \n    RouterModule,\n  ],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  title = 'ApiEasier';\n}\n\n    \n\n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BackButtonComponent.html":{"url":"components/BackButtonComponent.html","title":"component - BackButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BackButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/back-button/back-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент BackButtonComponent предназначен для возврата пользователя на предыдущую страницу.\nИспользует Angular Router и Location для управления навигацией.\nЭтот компонент предоставляет функциональность кнопки \"Назад\", которая позволяет пользователю вернуться\nна предыдущую страницу или на главную страницу, если история навигации пуста.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-back-button\n            \n\n\n\n            \n                styleUrls\n                ./back-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./back-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(location: Location, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/back-button/back-button.component.ts:24\n                            \n                        \n\n                \n                    \n                            Конструктор компонента BackButtonComponent.\nВнедряет сервисы Location и Router для управления навигацией.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для работы с историей навигации.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для управления маршрутизацией.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/back-button/back-button.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Метод для возврата на предыдущую страницу.\nПроверяет текущий URL и предыдущий URL. Если предыдущий URL начинается с базового домена,\nвозвращает пользователя на предыдущую страницу. В противном случае перенаправляет на главную страницу.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n\n/**\n * Компонент BackButtonComponent предназначен для возврата пользователя на предыдущую страницу.\n * Использует Angular Router и Location для управления навигацией.\n *\n * @remarks\n * Этот компонент предоставляет функциональность кнопки \"Назад\", которая позволяет пользователю вернуться\n * на предыдущую страницу или на главную страницу, если история навигации пуста.\n *\n * @example\n * html\n * \n *\n */\n@Component({\n  selector: 'app-back-button',\n  imports: [],\n  templateUrl: './back-button.component.html',\n  styleUrls: ['./back-button.component.css'], // Исправлено с styleUrl на styleUrls\n})\nexport class BackButtonComponent {\n  /**\n   * Конструктор компонента BackButtonComponent.\n   *\n   * @param location - Сервис для работы с историей навигации.\n   * @param router - Сервис для управления маршрутизацией.\n   *\n   * @remarks\n   * Внедряет сервисы Location и Router для управления навигацией.\n   *\n   * @memberof BackButtonComponent\n   */\n  constructor(private location: Location, private router: Router) {}\n\n  /**\n   * Метод для возврата на предыдущую страницу.\n   *\n   * @remarks\n   * Проверяет текущий URL и предыдущий URL. Если предыдущий URL начинается с базового домена,\n   * возвращает пользователя на предыдущую страницу. В противном случае перенаправляет на главную страницу.\n   *\n   * @memberof BackButtonComponent\n   */\n  goBack(): void {\n    const currentUrl = this.router.url;\n    try {\n      const previousUrl = this.location.path(true);\n      const baseDomain = '/';\n      if (previousUrl.startsWith(baseDomain)) {\n        this.location.back();\n      } else {\n        this.router.navigateByUrl('/');\n      }\n    } catch (error) {\n      this.router.navigateByUrl('/');\n    }\n  }\n}\n\n    \n\n    \n        \n  Назад\n\n\n    \n\n    \n                \n                    ./back-button.component.css\n                \n                button {\n    background-color: white;\n    border: none;\n    padding: 0.625rem 1.25rem;\n    /* Относительные отступы */\n    margin: 0.625rem 0.625rem;\n    /* Относительные отступы */\n    border-radius: 0.3125rem;\n    /* Относительный радиус скругления */\n    cursor: pointer;\n    font-weight: bold;\n    transition: background-color 0.3s;\n    font-size: 1rem;\n    /* Относительный размер шрифта */\n}\n\nbutton:hover {\n    background-color: #e6e6e6;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Назад'\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BackButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardApiComponent.html":{"url":"components/CardApiComponent.html","title":"component - CardApiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardApiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/card-api/card-api.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент CardApiComponent предназначен для отображения и управления информацией о API.\nПозволяет редактировать, удалять и изменять состояние API.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует сервисы для взаимодействия с репозиторием API и управления состоянием.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-api\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            TuiAppearance\n                            TuiButton\n                            RouterModule\n                                SwitchComponent\n                                IconTrashComponent\n                                ExportApiButtonComponent\n                \n            \n\n            \n                styleUrls\n                ./card-api.component.css,../../styles/card.css,../../styles/button.css,../../styles/icon.css\n            \n\n\n\n            \n                templateUrl\n                ./card-api.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                dialog\n                            \n                            \n                                location\n                            \n                            \n                                oldName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onDeleteConfirmed\n                            \n                            \n                                onToggleChange\n                            \n                            \n                                openEditDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiDeleted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiServiceRepository: ApiServiceRepositoryService, cd: ChangeDetectorRef, alerts: TuiAlertService, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/card-api/card-api.component.ts:87\n                            \n                        \n\n                \n                    \n                            Конструктор компонента CardApiComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apiServiceRepository\n                                                  \n                                                        \n                                                                        ApiServiceRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для взаимодействия с репозиторием API.\n\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для управления изменением состояния.\n\n\n                                                        \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для отображения уведомлений.\n\n\n                                                        \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для работы с историей навигации.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        apiInfo\n                    \n                \n                \n                    \n                        Type :         apiServiceShortStructure\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-api/card-api.component.ts:65\n                            \n                        \n                \n                    \n                        Входной параметр для получения информации о API.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        apiDeleted\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-api/card-api.component.ts:73\n                            \n                        \n                \n                    \n                        Событие, которое вызывается при удалении API.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteConfirmed\n                        \n                    \n                \n            \n            \n                \nonDeleteConfirmed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-api/card-api.component.ts:191\n                        \n                    \n\n\n            \n                \n                        Обработчик подтверждения удаления API.\nУдаляет API из репозитория и уведомляет родительский компонент об удалении.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToggleChange\n                        \n                    \n                \n            \n            \n                \nonToggleChange(newState: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-api/card-api.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Обработчик изменения состояния переключателя.\nОбновляет состояние API и сохраняет изменения в репозитории.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовое состояние переключателя.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-api/card-api.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Открывает диалог для редактирования информации о API.\nСохраняет старое имя API и открывает диалог для редактирования.\nОбновляет информацию о API после закрытия диалога.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : tuiDialog(ApiDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-api/card-api.component.ts:84\n                        \n                    \n\n            \n                \n                    Диалог для редактирования информации о API.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Location\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-api/card-api.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oldName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-api/card-api.component.ts:75\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport {\n  TuiAppearance,\n  TuiButton,\n  tuiDialog,\n  TuiAlertService,\n} from '@taiga-ui/core';\nimport { RouterModule } from '@angular/router';\nimport { apiServiceShortStructure } from \"../../../interfaces/apiServiceShortStructure\";\nimport { SwitchComponent } from '../switch/switch.component';\nimport { ApiDialogComponent } from '../api-dialog/api-dialog.component';\nimport { Location } from '@angular/common';\nimport { IconTrashComponent } from '../icon-trash/icon-trash.component';\nimport { ApiServiceRepositoryService } from '../../../repositories/api-service-repository.service';\nimport { ExportApiButtonComponent } from '../export-api-button/export-api-button.component';\n\n/**\n * Компонент CardApiComponent предназначен для отображения и управления информацией о API.\n * Позволяет редактировать, удалять и изменять состояние API.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует сервисы для взаимодействия с репозиторием API и управления состоянием.\n *\n * @example\n * html\n * \n *\n */\n@Component({\n  selector: 'app-card-api',\n  imports: [\n    CommonModule,\n    TuiAppearance,\n    TuiButton,\n    RouterModule,\n    SwitchComponent,\n    IconTrashComponent,\n    ExportApiButtonComponent,\n  ],\n  templateUrl: './card-api.component.html',\n  styleUrls: [\n    './card-api.component.css',\n    '../../styles/card.css',\n    '../../styles/button.css',\n    '../../styles/icon.css',\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CardApiComponent {\n  /**\n   * Входной параметр для получения информации о API.\n   *\n   * @type {apiServiceShortStructure}\n   * @memberof CardApiComponent\n   */\n  @Input() apiInfo!: apiServiceShortStructure;\n\n  /**\n   * Событие, которое вызывается при удалении API.\n   *\n   * @type {EventEmitter}\n   * @memberof CardApiComponent\n   */\n  @Output() apiDeleted = new EventEmitter();\n\n  oldName: string = '';\n  location: Location;\n\n  /**\n   * Диалог для редактирования информации о API.\n   *\n   * @type {tuiDialog}\n   * @memberof CardApiComponent\n   */\n  private readonly dialog = tuiDialog(ApiDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  });\n\n  /**\n   * Конструктор компонента CardApiComponent.\n   *\n   * @param apiServiceRepository - Сервис для взаимодействия с репозиторием API.\n   * @param cd - Сервис для управления изменением состояния.\n   * @param alerts - Сервис для отображения уведомлений.\n   * @param location - Сервис для работы с историей навигации.\n   *\n   * @memberof CardApiComponent\n   */\n  constructor(\n    private apiServiceRepository: ApiServiceRepositoryService,\n    private cd: ChangeDetectorRef,\n    private alerts: TuiAlertService,\n    location: Location\n  ) {\n    this.location = location;\n  }\n\n  /**\n   * Обработчик изменения состояния переключателя.\n   *\n   * @param newState - Новое состояние переключателя.\n   * @remarks\n   * Обновляет состояние API и сохраняет изменения в репозитории.\n   *\n   * @memberof CardApiComponent\n   */\n  onToggleChange(newState: boolean) {\n    this.apiInfo.isActive = newState;\n    console.log('Состояние переключателя изменилось на:', newState);\n    this.apiServiceRepository\n      .updateApiServiceStatus(this.apiInfo.name, newState)\n      .subscribe({\n        next: (response) => {\n          console.log('Состояние сервиса обновлено:', response);\n        },\n        error: (error) => {\n          console.error('Ошибка при обновлении состояния сервиса:', error);\n        },\n      });\n  }\n\n  /**\n   * Открывает диалог для редактирования информации о API.\n   *\n   * @remarks\n   * Сохраняет старое имя API и открывает диалог для редактирования.\n   * Обновляет информацию о API после закрытия диалога.\n   *\n   * @memberof CardApiComponent\n   */\n  openEditDialog(): void {\n    this.oldName = this.apiInfo.name;\n    this.dialog({ ...this.apiInfo }).subscribe({\n      next: (data) => {\n        console.info(`Dialog emitted data = ${data} - ${this.apiInfo.name}}`);\n\n        this.apiServiceRepository\n          .updateApiService(this.oldName, data)\n          .subscribe({\n            next: (response) => {\n              console.log('API обновлена:', response);\n              this.apiInfo = data;\n              this.cd.markForCheck();\n              this.alerts\n                .open('API успешно обновлено', {\n                  appearance: 'success',\n                })\n                .subscribe();\n            },\n            error: (error) => {\n              if (error.status === 409) {\n                this.alerts\n                  .open('Ошибка: API с таким именем уже существует', {\n                    appearance: 'negative',\n                  })\n                  .subscribe();\n              } else {\n                this.alerts\n                  .open('Ошибка при обновлении API', {\n                    appearance: 'negative',\n                  })\n                  .subscribe();\n              }\n            },\n          });\n      },\n      complete: () => {\n        console.info('Dialog closed');\n      },\n    });\n  }\n\n  /**\n   * Обработчик подтверждения удаления API.\n   *\n   * @remarks\n   * Удаляет API из репозитория и уведомляет родительский компонент об удалении.\n   *\n   * @memberof CardApiComponent\n   */\n  onDeleteConfirmed(): void {\n    this.apiServiceRepository.deleteApiService(this.apiInfo.name).subscribe({\n      next: () => {\n        console.log(`Сервис \"${this.apiInfo.name}\" удален.`);\n        this.apiDeleted.emit();\n      },\n      error: (error) => {\n        console.error('Ошибка при удалении сервиса:', error);\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n    \n    \n    \n\n{{ apiInfo.name }}\n{{ apiInfo.description }}\n\n    К тестам\n    Детали\n    \n\n    \n\n    \n                \n                    ./card-api.component.css\n                \n                \n                \n                    ../../styles/card.css\n                \n                \nh3 {\n    margin: 0;\n    font-size: 24px;\n    color: #0056a6;\n    width: 65%; /* Ширина элемента */\n    text-overflow: ellipsis; /* Добавляем троеточие */\n    white-space: nowrap; /* Запрещаем перенос текста на новую строку */\n    overflow: hidden; /* Скрываем текст, который не помещается */\n    height: 2rem;\n}\n  \n  p {\n    margin: 10px 0;\n    color: #666;\n    font-size: 16px;\n    line-height: 1.5; /* Установите желаемую высоту строки */\n    height: calc(1.5em * 2); /* Высота равна трём строкам */\n    overflow-y: auto; /* Добавляем вертикальную прокрутку при необходимости */\n    overflow-x: hidden; /* Запрещаем горизонтальную прокрутку */\n    box-sizing: border-box; /* Включаем отступы и границы в размер элемента */\n    word-wrap: break-word; /* Перенос слов на новую строку, если они не помещаются */\n    white-space: normal; /* Разрешаем перенос текста на новую строку */\n}\n\n  /* Стилизация полосы прокрутки для WebKit-браузеров (Chrome, Safari, Edge) */\n  p::-webkit-scrollbar {\n    width: 8px; /* Ширина полосы прокрутки */\n  }\n\n  p::-webkit-scrollbar-track {\n    background: #f1f1f1; /* Цвет фона полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb {\n    background: #888; /* Цвет полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb:hover {\n    background: #555; /* Цвет полосы прокрутки при наведении */\n  }\n  \n.actions {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    flex-wrap: wrap;\n  }\n  \n.top-right {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    display: flex;\n    align-items: center;\n  }\n\n                \n                    ../../styles/button.css\n                \n                .primary-button {\n    background-color: #0056a6;\n    color: white;\n    border: none;\n    block-size: auto;\n    padding: 7px 13px;\n    border-radius: 5px;\n    cursor: pointer;\n    font-weight: bold;\n    transition: background-color 0.3s;\n    margin-left: 1rem;\n    margin-bottom: 1rem;\n  }\n  \n  .primary-button:hover {\n    background-color: #004080;\n  }\n                \n                    ../../styles/icon.css\n                \n                  \ni {\n    margin-right: 15px; /* 10px * 1.2 */\n    cursor: pointer;\n    color: #666;\n    transition: color 0.3s;\n    font-size: 20px; /* Увеличиваем размер шрифта на 20% */\n}\n\ni:hover {\n    color: #000;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ apiInfo.name }}{{ apiInfo.description }}    К тестам    Детали    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardApiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardEndpointComponent.html":{"url":"components/CardEndpointComponent.html","title":"component - CardEndpointComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardEndpointComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/card-endpoint/card-endpoint.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент CardEndpointComponent предназначен для отображения и управления информацией об эндпоинтах API.\nПозволяет редактировать, удалять и изменять состояние эндпоинтов.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует сервисы для взаимодействия с репозиторием эндпоинтов и управления состоянием.\nExample :html\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-endpoint\n            \n\n\n            \n                imports\n                \n                                SwitchComponent\n                                IconTrashComponent\n                            CommonModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./card-endpoint.component.css,../../styles/card.css,../../styles/icon.css\n            \n\n\n\n            \n                templateUrl\n                ./card-endpoint.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleEndpointUpdate\n                            \n                            \n                                    Private\n                                handleEndpointUpdateError\n                            \n                            \n                                onDeleteConfirmed\n                            \n                            \n                                onToggleChange\n                            \n                            \n                                openEditDialog\n                            \n                            \n                                    Private\n                                processEditDialogData\n                            \n                            \n                                    Private\n                                updateEndpoint\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiName\n                            \n                            \n                                endpointInfo\n                            \n                            \n                                entityInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                endpointDeleted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(endpointRepositoryService: EndpointRepositoryService, cd: ChangeDetectorRef, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:90\n                            \n                        \n\n                \n                    \n                            Конструктор компонента CardEndpointComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        endpointRepositoryService\n                                                  \n                                                        \n                                                                        EndpointRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для взаимодействия с репозиторием эндпоинтов.\n\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для управления изменением состояния.\n\n\n                                                        \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для отображения уведомлений.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        apiName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:71\n                            \n                        \n                \n                    \n                        Входной параметр для получения имени API.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        endpointInfo\n                    \n                \n                \n                    \n                        Type :         Endpoint\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:62\n                            \n                        \n                \n                    \n                        Входной параметр для получения информации об эндпоинте.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        entityInfo\n                    \n                \n                \n                    \n                        Type :         Entity\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:54\n                            \n                        \n                \n                    \n                        Входной параметр для получения информации о сущности.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        endpointDeleted\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:79\n                            \n                        \n                \n                    \n                        Событие, которое вызывается при удалении эндпоинта.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEndpointUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEndpointUpdate(response: Endpoint, data: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:192\n                        \n                    \n\n\n            \n                \n                        Обрабатывает успешное обновление эндпоинта.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОтвет от сервера.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовые данные эндпоинта.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEndpointUpdateError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEndpointUpdateError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:210\n                        \n                    \n\n\n            \n                \n                        Обрабатывает ошибку при обновлении эндпоинта.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОбъект ошибки.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteConfirmed\n                        \n                    \n                \n            \n            \n                \nonDeleteConfirmed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:235\n                        \n                    \n\n\n            \n                \n                        Обработчик подтверждения удаления эндпоинта.\nУдаляет эндпоинт из репозитория и уведомляет родительский компонент об удалении.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToggleChange\n                        \n                    \n                \n            \n            \n                \nonToggleChange(newState: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Обработчик изменения состояния переключателя.\nОбновляет состояние эндпоинта и сохраняет изменения в репозитории.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовое состояние переключателя.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:144\n                        \n                    \n\n\n            \n                \n                        Открывает диалог для редактирования информации об эндпоинте.\nОбновляет информацию об эндпоинте после закрытия диалога.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        processEditDialogData\n                        \n                    \n                \n            \n            \n                \n                        \n                    processEditDialogData(data: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:158\n                        \n                    \n\n\n            \n                \n                        Обрабатывает данные, полученные из диалога редактирования.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nДанные эндпоинта, полученные из диалога.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateEndpoint\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEndpoint(data: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Обновляет информацию об эндпоинте в репозитории.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовые данные эндпоинта.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : tuiDialog(EndpointDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:87\n                        \n                    \n\n            \n                \n                    Диалог для редактирования информации об эндпоинте.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { Endpoint } from \"../../../interfaces/Endpoint\";\nimport { Entity } from \"../../../interfaces/Entity\";\nimport { apiServiceShortStructure } from \"../../../interfaces/apiServiceShortStructure\";\nimport { Subscription } from 'rxjs';\nimport { SwitchComponent } from '../switch/switch.component';\nimport { IconTrashComponent } from '../icon-trash/icon-trash.component';\nimport { tuiDialog, TuiAlertService } from '@taiga-ui/core';\nimport { EndpointDialogComponent } from '../endpoint-dialog/endpoint-dialog.component';\nimport { EndpointRepositoryService } from '../../../repositories/endpoint-repository.service';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Компонент CardEndpointComponent предназначен для отображения и управления информацией об эндпоинтах API.\n * Позволяет редактировать, удалять и изменять состояние эндпоинтов.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует сервисы для взаимодействия с репозиторием эндпоинтов и управления состоянием.\n *\n * @example\n * html\n * \n * \n */\n@Component({\n  selector: 'app-card-endpoint',\n  imports: [SwitchComponent, IconTrashComponent, CommonModule, RouterModule],\n  templateUrl: './card-endpoint.component.html',\n  styleUrls: [\n    './card-endpoint.component.css',\n    '../../styles/card.css',\n    '../../styles/icon.css',\n  ],\n})\nexport class CardEndpointComponent {\n  /**\n   * Входной параметр для получения информации о сущности.\n   *\n   * @type {Entity}\n   * @memberof CardEndpointComponent\n   */\n  @Input() entityInfo!: Entity;\n\n  /**\n   * Входной параметр для получения информации об эндпоинте.\n   *\n   * @type {Endpoint}\n   * @memberof CardEndpointComponent\n   */\n  @Input() endpointInfo!: Endpoint;\n\n  /**\n   * Входной параметр для получения имени API.\n   *\n   * @type {string}\n   * @default ''\n   * @memberof CardEndpointComponent\n   */\n  @Input() apiName: string = '';\n\n  /**\n   * Событие, которое вызывается при удалении эндпоинта.\n   *\n   * @type {EventEmitter}\n   * @memberof CardEndpointComponent\n   */\n  @Output() endpointDeleted = new EventEmitter();\n\n  /**\n   * Диалог для редактирования информации об эндпоинте.\n   *\n   * @type {tuiDialog}\n   * @memberof CardEndpointComponent\n   */\n  private readonly dialog = tuiDialog(EndpointDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  });\n\n  /**\n   * Конструктор компонента CardEndpointComponent.\n   *\n   * @param endpointRepositoryService - Сервис для взаимодействия с репозиторием эндпоинтов.\n   * @param cd - Сервис для управления изменением состояния.\n   * @param alerts - Сервис для отображения уведомлений.\n   *\n   * @memberof CardEndpointComponent\n   */\n  constructor(\n    private endpointRepositoryService: EndpointRepositoryService,\n    private cd: ChangeDetectorRef,\n    private alerts: TuiAlertService\n  ) {}\n\n  /**\n   * Обработчик изменения состояния переключателя.\n   *\n   * @param newState - Новое состояние переключателя.\n   * @remarks\n   * Обновляет состояние эндпоинта и сохраняет изменения в репозитории.\n   *\n   * @memberof CardEndpointComponent\n   */\n  onToggleChange(newState: boolean): void {\n    this.endpointInfo.isActive = newState;\n    console.log('Состояние переключателя изменилось на:', newState);\n    this.endpointRepositoryService\n      .updateEndpointStatus(\n        this.apiName,\n        this.entityInfo.name,\n        this.endpointInfo.route,\n        newState\n      )\n      .subscribe({\n        next: (response) => {\n          console.log('Состояние сервиса обновлено:', response);\n        },\n        error: (error) => {\n          console.error('Ошибка при обновлении состояния сервиса:', error);\n        },\n      });\n  }\n\n  /**\n   * Открывает диалог для редактирования информации об эндпоинте.\n   *\n   * @remarks\n   * Обновляет информацию об эндпоинте после закрытия диалога.\n   *\n   * @memberof CardEndpointComponent\n   */\n  openEditDialog(): void {\n    this.dialog({ ...this.endpointInfo }).subscribe({\n      next: (data) => this.processEditDialogData(data),\n      complete: () => console.info('Dialog closed'),\n    });\n  }\n\n  /**\n   * Обрабатывает данные, полученные из диалога редактирования.\n   *\n   * @param data - Данные эндпоинта, полученные из диалога.\n   * @private\n   * @memberof CardEndpointComponent\n   */\n  private processEditDialogData(data: Endpoint): void {\n    console.info(`Dialog emitted data = ${data} - ${this.apiName}`);\n    this.updateEndpoint(data);\n  }\n\n  /**\n   * Обновляет информацию об эндпоинте в репозитории.\n   *\n   * @param data - Новые данные эндпоинта.\n   * @private\n   * @memberof CardEndpointComponent\n   */\n  private updateEndpoint(data: Endpoint): void {\n    this.endpointRepositoryService\n      .updateEndpoint(\n        this.apiName,\n        this.entityInfo.name,\n        this.endpointInfo.route,\n        data\n      )\n      .subscribe({\n        next: (response) => this.handleEndpointUpdate(response, data),\n        error: (error) => this.handleEndpointUpdateError(error),\n      });\n  }\n\n  /**\n   * Обрабатывает успешное обновление эндпоинта.\n   *\n   * @param response - Ответ от сервера.\n   * @param data - Новые данные эндпоинта.\n   * @private\n   * @memberof CardEndpointComponent\n   */\n  private handleEndpointUpdate(response: Endpoint, data: Endpoint): void {\n    console.log('Эндпоинт обновлен:', response);\n    this.endpointInfo = data;\n    this.cd.markForCheck();\n    this.alerts\n      .open('Эндпоинт успешно обновлен', {\n        appearance: 'success',\n      })\n      .subscribe();\n  }\n\n  /**\n   * Обрабатывает ошибку при обновлении эндпоинта.\n   *\n   * @param error - Объект ошибки.\n   * @private\n   * @memberof CardEndpointComponent\n   */\n  private handleEndpointUpdateError(error: any): void {\n    if (error.status === 409) {\n      this.alerts\n        .open('Ошибка: Эндпоинт с таким именем уже существует', {\n          appearance: 'negative',\n        })\n        .subscribe();\n    } else {\n      this.alerts\n        .open('Ошибка при обновлении эндпоинта', {\n          appearance: 'negative',\n        })\n        .subscribe();\n    }\n    console.error('Ошибка при обновлении эндпоинта:', error);\n  }\n\n  /**\n   * Обработчик подтверждения удаления эндпоинта.\n   *\n   * @remarks\n   * Удаляет эндпоинт из репозитория и уведомляет родительский компонент об удалении.\n   *\n   * @memberof CardEndpointComponent\n   */\n  onDeleteConfirmed(): void {\n    this.endpointRepositoryService\n      .deleteEndpoint(\n        this.apiName,\n        this.entityInfo.name,\n        this.endpointInfo.route\n      )\n      .subscribe({\n        next: () => {\n          console.log(`Действие \"${this.endpointInfo.route}\" удалено.`);\n          this.endpointDeleted.emit(this.endpointInfo.route);\n        },\n        error: (error) => {\n          console.error('Ошибка при удалении действия:', error);\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n    \n      \n      \n      \n    \n    {{ endpointInfo.route }}\n    Тип: {{ endpointInfo.type }}\n  \n  \n    \n\n    \n                \n                    ./card-endpoint.component.css\n                \n                \n                \n                    ../../styles/card.css\n                \n                \nh3 {\n    margin: 0;\n    font-size: 24px;\n    color: #0056a6;\n    width: 65%; /* Ширина элемента */\n    text-overflow: ellipsis; /* Добавляем троеточие */\n    white-space: nowrap; /* Запрещаем перенос текста на новую строку */\n    overflow: hidden; /* Скрываем текст, который не помещается */\n    height: 2rem;\n}\n  \n  p {\n    margin: 10px 0;\n    color: #666;\n    font-size: 16px;\n    line-height: 1.5; /* Установите желаемую высоту строки */\n    height: calc(1.5em * 2); /* Высота равна трём строкам */\n    overflow-y: auto; /* Добавляем вертикальную прокрутку при необходимости */\n    overflow-x: hidden; /* Запрещаем горизонтальную прокрутку */\n    box-sizing: border-box; /* Включаем отступы и границы в размер элемента */\n    word-wrap: break-word; /* Перенос слов на новую строку, если они не помещаются */\n    white-space: normal; /* Разрешаем перенос текста на новую строку */\n}\n\n  /* Стилизация полосы прокрутки для WebKit-браузеров (Chrome, Safari, Edge) */\n  p::-webkit-scrollbar {\n    width: 8px; /* Ширина полосы прокрутки */\n  }\n\n  p::-webkit-scrollbar-track {\n    background: #f1f1f1; /* Цвет фона полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb {\n    background: #888; /* Цвет полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb:hover {\n    background: #555; /* Цвет полосы прокрутки при наведении */\n  }\n  \n.actions {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    flex-wrap: wrap;\n  }\n  \n.top-right {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    display: flex;\n    align-items: center;\n  }\n\n                \n                    ../../styles/icon.css\n                \n                  \ni {\n    margin-right: 15px; /* 10px * 1.2 */\n    cursor: pointer;\n    color: #666;\n    transition: color 0.3s;\n    font-size: 20px; /* Увеличиваем размер шрифта на 20% */\n}\n\ni:hover {\n    color: #000;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ endpointInfo.route }}    Тип: {{ endpointInfo.type }}    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardEndpointComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardEntityComponent.html":{"url":"components/CardEntityComponent.html","title":"component - CardEntityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardEntityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/card-entity/card-entity.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент CardEntityComponent предназначен для отображения и управления информацией о сущностях API.\nПозволяет редактировать, удалять и изменять состояние сущностей.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует сервисы для взаимодействия с репозиторием сущностей и управления состоянием.\nExample :html\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-entity\n            \n\n\n            \n                imports\n                \n                                IconTrashComponent\n                                SwitchComponent\n                            CommonModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./card-entity.component.css,../../styles/card.css,../../styles/button.css,../../styles/icon.css\n            \n\n\n\n            \n                templateUrl\n                ./card-entity.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                dialog\n                            \n                            \n                                    Private\n                                loading\n                            \n                            \n                                    Private\n                                oldName\n                            \n                            \n                                    Private\n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleEditDialogData\n                            \n                            \n                                    Private\n                                handleEntityDeletion\n                            \n                            \n                                    Private\n                                handleEntityUpdate\n                            \n                            \n                                    Private\n                                handleEntityUpdateError\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                onDeleteConfirmed\n                            \n                            \n                                onToggleChange\n                            \n                            \n                                openEditDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiName\n                            \n                            \n                                entityInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                entityDeleted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cd: ChangeDetectorRef, entityRepositoryService: EntityRepositoryService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/card-entity/card-entity.component.ts:85\n                            \n                        \n\n                \n                    \n                            Конструктор компонента CardEntityComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для управления изменением состояния.\n\n\n                                                        \n                                                \n                                                \n                                                        entityRepositoryService\n                                                  \n                                                        \n                                                                        EntityRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для взаимодействия с репозиторием сущностей.\n\n\n                                                        \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для отображения уведомлений.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        apiName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-entity/card-entity.component.ts:62\n                            \n                        \n                \n                    \n                        Входной параметр для получения имени API.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        entityInfo\n                    \n                \n                \n                    \n                        Type :         Entity\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-entity/card-entity.component.ts:53\n                            \n                        \n                \n                    \n                        Входной параметр для получения информации о сущности.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        entityDeleted\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-entity/card-entity.component.ts:70\n                            \n                        \n                \n                    \n                        Событие, которое вызывается при удалении сущности.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEditDialogData\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEditDialogData(data: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:164\n                        \n                    \n\n\n            \n                \n                        Обрабатывает данные, полученные из диалога редактирования.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nДанные сущности, полученные из диалога.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEntityDeletion\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEntityDeletion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:207\n                        \n                    \n\n\n            \n                \n                        Обрабатывает удаление сущности.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEntityUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEntityUpdate(response: Entity, data: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:181\n                        \n                    \n\n\n            \n                \n                        Обрабатывает успешное обновление сущности.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОтвет от сервера.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовые данные сущности.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEntityUpdateError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEntityUpdateError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:197\n                        \n                    \n\n\n            \n                \n                        Обрабатывает ошибку при обновлении сущности.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОбъект ошибки.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(message: string, error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:220\n                        \n                    \n\n\n            \n                \n                        Обрабатывает ошибки и отображает уведомления.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСообщение об ошибке.\n\n\n                                            \n                                        \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОбъект ошибки.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteConfirmed\n                        \n                    \n                \n            \n            \n                \nonDeleteConfirmed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:147\n                        \n                    \n\n\n            \n                \n                        Обработчик подтверждения удаления сущности.\nУдаляет сущность из репозитория и уведомляет родительский компонент об удалении.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToggleChange\n                        \n                    \n                \n            \n            \n                \nonToggleChange(newState: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:111\n                        \n                    \n\n\n            \n                \n                        Обработчик изменения состояния переключателя.\nОбновляет состояние сущности и сохраняет изменения в репозитории.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовое состояние переключателя.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:131\n                        \n                    \n\n\n            \n                \n                        Открывает диалог для редактирования информации о сущности.\nОбновляет информацию о сущности после закрытия диалога.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : tuiDialog(EntityDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-entity/card-entity.component.ts:82\n                        \n                    \n\n            \n                \n                    Диалог для редактирования информации о сущности.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-entity/card-entity.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        oldName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-entity/card-entity.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-entity/card-entity.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { Entity } from \"../../../interfaces/Entity\";\nimport { RouterModule } from '@angular/router';\nimport { IconTrashComponent } from '../icon-trash/icon-trash.component';\nimport { SwitchComponent } from '../switch/switch.component';\nimport { Subscription } from 'rxjs';\nimport { tuiDialog, TuiAlertService } from '@taiga-ui/core';\nimport { EntityDialogComponent } from '../entity-dialog/entity-dialog.component';\nimport { CommonModule } from '@angular/common';\nimport { EntityRepositoryService } from '../../../repositories/entity-repository.service';\n\n/**\n * Компонент CardEntityComponent предназначен для отображения и управления информацией о сущностях API.\n * Позволяет редактировать, удалять и изменять состояние сущностей.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует сервисы для взаимодействия с репозиторием сущностей и управления состоянием.\n *\n * @example\n * html\n * \n * \n * \n */\n@Component({\n  selector: 'app-card-entity',\n  imports: [IconTrashComponent, SwitchComponent, CommonModule, RouterModule],\n  templateUrl: './card-entity.component.html',\n  styleUrls: [\n    './card-entity.component.css',\n    '../../styles/card.css',\n    '../../styles/button.css',\n    '../../styles/icon.css',\n  ],\n})\nexport class CardEntityComponent {\n  /**\n   * Входной параметр для получения информации о сущности.\n   *\n   * @type {Entity}\n   * @memberof CardEntityComponent\n   */\n  @Input() entityInfo!: Entity;\n\n  /**\n   * Входной параметр для получения имени API.\n   *\n   * @type {string}\n   * @default ''\n   * @memberof CardEntityComponent\n   */\n  @Input() apiName: string = '';\n\n  /**\n   * Событие, которое вызывается при удалении сущности.\n   *\n   * @type {EventEmitter}\n   * @memberof CardEntityComponent\n   */\n  @Output() entityDeleted = new EventEmitter();\n\n  private oldName: string = '';\n  private sub: Subscription | null = null;\n  private loading: boolean = false;\n\n  /**\n   * Диалог для редактирования информации о сущности.\n   *\n   * @type {tuiDialog}\n   * @memberof CardEntityComponent\n   */\n  private readonly dialog = tuiDialog(EntityDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  });\n\n  /**\n   * Конструктор компонента CardEntityComponent.\n   *\n   * @param cd - Сервис для управления изменением состояния.\n   * @param entityRepositoryService - Сервис для взаимодействия с репозиторием сущностей.\n   * @param alerts - Сервис для отображения уведомлений.\n   *\n   * @memberof CardEntityComponent\n   */\n  constructor(\n    private cd: ChangeDetectorRef,\n    private entityRepositoryService: EntityRepositoryService,\n    private alerts: TuiAlertService\n  ) {}\n\n  /**\n   * Обработчик изменения состояния переключателя.\n   *\n   * @param newState - Новое состояние переключателя.\n   * @remarks\n   * Обновляет состояние сущности и сохраняет изменения в репозитории.\n   *\n   * @memberof CardEntityComponent\n   */\n  onToggleChange(newState: boolean): void {\n    this.entityInfo.isActive = newState;\n    this.entityRepositoryService\n      .updateEntityStatus(this.apiName, this.entityInfo.name, newState)\n      .subscribe({\n        next: (response) =>\n          console.log('Состояние сервиса обновлено:', response),\n        error: (error) =>\n          this.handleError('Ошибка при обновлении состояния сервиса', error),\n      });\n  }\n\n  /**\n   * Открывает диалог для редактирования информации о сущности.\n   *\n   * @remarks\n   * Обновляет информацию о сущности после закрытия диалога.\n   *\n   * @memberof CardEntityComponent\n   */\n  openEditDialog(): void {\n    this.oldName = this.entityInfo.name;\n    this.dialog({ ...this.entityInfo }).subscribe({\n      next: (data) => this.handleEditDialogData(data),\n      complete: () => console.info('Dialog closed'),\n    });\n  }\n\n  /**\n   * Обработчик подтверждения удаления сущности.\n   *\n   * @remarks\n   * Удаляет сущность из репозитория и уведомляет родительский компонент об удалении.\n   *\n   * @memberof CardEntityComponent\n   */\n  onDeleteConfirmed(): void {\n    this.entityRepositoryService\n      .deleteApiEntity(this.apiName, this.entityInfo.name)\n      .subscribe({\n        next: () => this.handleEntityDeletion(),\n        error: (error) =>\n          this.handleError('Ошибка при удалении сущности', error),\n      });\n  }\n\n  /**\n   * Обрабатывает данные, полученные из диалога редактирования.\n   *\n   * @param data - Данные сущности, полученные из диалога.\n   * @private\n   * @memberof CardEntityComponent\n   */\n  private handleEditDialogData(data: Entity): void {\n    this.entityRepositoryService\n      .updateApiEntity(this.apiName, this.oldName, data)\n      .subscribe({\n        next: (response) => this.handleEntityUpdate(response, data),\n        error: (error) => this.handleEntityUpdateError(error),\n      });\n  }\n\n  /**\n   * Обрабатывает успешное обновление сущности.\n   *\n   * @param response - Ответ от сервера.\n   * @param data - Новые данные сущности.\n   * @private\n   * @memberof CardEntityComponent\n   */\n  private handleEntityUpdate(response: Entity, data: Entity): void {\n    console.log('Сущность обновлена:', response);\n    this.entityInfo = data;\n    this.cd.markForCheck();\n    this.alerts\n      .open('Сущность успешно обновлена', { appearance: 'success' })\n      .subscribe();\n  }\n\n  /**\n   * Обрабатывает ошибку при обновлении сущности.\n   *\n   * @param error - Объект ошибки.\n   * @private\n   * @memberof CardEntityComponent\n   */\n  private handleEntityUpdateError(error: any): void {\n    this.handleError('Ошибка при обновлении сущности', error);\n  }\n\n  /**\n   * Обрабатывает удаление сущности.\n   *\n   * @private\n   * @memberof CardEntityComponent\n   */\n  private handleEntityDeletion(): void {\n    console.log(`Сущность \"${this.entityInfo.name}\" удалена.`);\n    this.entityDeleted.emit(this.entityInfo.name);\n  }\n\n  /**\n   * Обрабатывает ошибки и отображает уведомления.\n   *\n   * @param message - Сообщение об ошибке.\n   * @param error - Объект ошибки.\n   * @private\n   * @memberof CardEntityComponent\n   */\n  private handleError(message: string, error: any): void {\n    console.error(message, error);\n    if (error.status === 409) {\n      this.alerts\n        .open(`${message}: Сущность с таким именем уже существует`, {\n          appearance: 'negative',\n        })\n        .subscribe();\n    } else {\n      this.alerts.open(message, { appearance: 'negative' }).subscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n    \n    \n    \n  \n  {{ entityInfo.name }}\n  Структура \n    @if(entityInfo.structure == null){\n      отсутствует\n    }\n    @else{\n      есть\n    }\n  \n  \n    Детали\n  \n  \n    \n\n    \n                \n                    ./card-entity.component.css\n                \n                \n                \n                    ../../styles/card.css\n                \n                \nh3 {\n    margin: 0;\n    font-size: 24px;\n    color: #0056a6;\n    width: 65%; /* Ширина элемента */\n    text-overflow: ellipsis; /* Добавляем троеточие */\n    white-space: nowrap; /* Запрещаем перенос текста на новую строку */\n    overflow: hidden; /* Скрываем текст, который не помещается */\n    height: 2rem;\n}\n  \n  p {\n    margin: 10px 0;\n    color: #666;\n    font-size: 16px;\n    line-height: 1.5; /* Установите желаемую высоту строки */\n    height: calc(1.5em * 2); /* Высота равна трём строкам */\n    overflow-y: auto; /* Добавляем вертикальную прокрутку при необходимости */\n    overflow-x: hidden; /* Запрещаем горизонтальную прокрутку */\n    box-sizing: border-box; /* Включаем отступы и границы в размер элемента */\n    word-wrap: break-word; /* Перенос слов на новую строку, если они не помещаются */\n    white-space: normal; /* Разрешаем перенос текста на новую строку */\n}\n\n  /* Стилизация полосы прокрутки для WebKit-браузеров (Chrome, Safari, Edge) */\n  p::-webkit-scrollbar {\n    width: 8px; /* Ширина полосы прокрутки */\n  }\n\n  p::-webkit-scrollbar-track {\n    background: #f1f1f1; /* Цвет фона полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb {\n    background: #888; /* Цвет полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb:hover {\n    background: #555; /* Цвет полосы прокрутки при наведении */\n  }\n  \n.actions {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    flex-wrap: wrap;\n  }\n  \n.top-right {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    display: flex;\n    align-items: center;\n  }\n\n                \n                    ../../styles/button.css\n                \n                .primary-button {\n    background-color: #0056a6;\n    color: white;\n    border: none;\n    block-size: auto;\n    padding: 7px 13px;\n    border-radius: 5px;\n    cursor: pointer;\n    font-weight: bold;\n    transition: background-color 0.3s;\n    margin-left: 1rem;\n    margin-bottom: 1rem;\n  }\n  \n  .primary-button:hover {\n    background-color: #004080;\n  }\n                \n                    ../../styles/icon.css\n                \n                  \ni {\n    margin-right: 15px; /* 10px * 1.2 */\n    cursor: pointer;\n    color: #666;\n    transition: color 0.3s;\n    font-size: 20px; /* Увеличиваем размер шрифта на 20% */\n}\n\ni:hover {\n    color: #000;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ entityInfo.name }}  Структура     @if(entityInfo.structure == null){      отсутствует    }    @else{      есть    }        Детали    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardEntityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Endpoint.html":{"url":"interfaces/Endpoint.html","title":"interface - Endpoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Endpoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/Endpoint.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            route\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Endpoint {\n  route: string;\n  type: string;\n  isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EndpointDialogComponent.html":{"url":"components/EndpointDialogComponent.html","title":"component - EndpointDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EndpointDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент EndpointDialogComponent предназначен для отображения диалогового окна редактирования эндпоинта.\nПозволяет пользователю вводить и изменять данные эндпоинта, такие как маршрут и тип запроса.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует сервисы для управления диалоговыми окнами и вводом данных.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-endpoint-dialog\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            TuiAutoFocus\n                            TuiButton\n                            TuiDataListWrapper\n                            TuiInputModule\n                            TuiSelectModule\n                            TuiSlider\n                            TuiTextfield\n                            TuiTextfieldControllerModule\n                \n            \n\n            \n                styleUrls\n                ./endpoint-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./endpoint-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                context\n                            \n                            \n                                    Private\n                                    Readonly\n                                dialogs\n                            \n                            \n                                    Readonly\n                                types\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                onInput\n                            \n                            \n                                    Protected\n                                showDialog\n                            \n                            \n                                    Protected\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasValue\n                                \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        onInput\n                        \n                    \n                \n            \n            \n                \n                        \n                    onInput(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:129\n                        \n                    \n\n\n            \n                \n                        Обработчик ввода данных в поле маршрута.\nОчищает значение от недопустимых символов и обновляет данные эндпоинта.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСобытие ввода данных.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        showDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    showDialog(content: TemplateRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Открывает диалоговое окно с заданным содержимым.\nИспользует сервис TuiDialogService для открытия диалога.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                        TemplateRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nШаблон содержимого диалогового окна.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        submit\n                        \n                    \n                \n            \n            \n                \n                        \n                    submit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:98\n                        \n                    \n\n\n            \n                \n                        Обработчик отправки формы.\nПредотвращает стандартное поведение отправки формы и завершает диалог, если маршрут не пустой.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext>()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:67\n                        \n                    \n\n            \n                \n                    Контекст диалогового окна, содержащий данные эндпоинта.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:51\n                        \n                    \n\n            \n                \n                    Сервис для управления диалоговыми окнами.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        types\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['get', 'post', 'put', 'delete', 'getbyindex']\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:59\n                        \n                    \n\n            \n                \n                    Список доступных типов запросов для эндпоинта.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasValue\n                    \n                \n\n                \n                    \n                        gethasValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:76\n                                \n                            \n                    \n                        \n                                Флаг, указывающий, есть ли значение в поле маршрута.\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:86\n                                \n                            \n                    \n                        \n                                Данные эндпоинта, которые редактируются в диалоговом окне.\n\n\n                                \n                                \n                                \n                                    Returns :         Endpoint\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import type { TemplateRef } from '@angular/core';\nimport { Component, inject } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TuiAutoFocus } from '@taiga-ui/cdk';\nimport type { TuiDialogContext } from '@taiga-ui/core';\nimport { TuiButton, TuiDialogService, TuiTextfield } from '@taiga-ui/core';\nimport { TuiDataListWrapper, TuiSlider } from '@taiga-ui/kit';\nimport {\n  TuiInputModule,\n  TuiSelectModule,\n  TuiTextfieldControllerModule,\n} from '@taiga-ui/legacy';\nimport { injectContext } from '@taiga-ui/polymorpheus';\nimport { Endpoint } from \"../../../interfaces/Endpoint\";\n\n/**\n * Компонент EndpointDialogComponent предназначен для отображения диалогового окна редактирования эндпоинта.\n * Позволяет пользователю вводить и изменять данные эндпоинта, такие как маршрут и тип запроса.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует сервисы для управления диалоговыми окнами и вводом данных.\n *\n * @example\n * html\n * \n */\n@Component({\n  selector: 'app-endpoint-dialog',\n  imports: [\n    FormsModule,\n    TuiAutoFocus,\n    TuiButton,\n    TuiDataListWrapper,\n    TuiInputModule,\n    TuiSelectModule,\n    TuiSlider,\n    TuiTextfield,\n    TuiTextfieldControllerModule,\n  ],\n  templateUrl: './endpoint-dialog.component.html',\n  styleUrls: ['./endpoint-dialog.component.css'],\n})\nexport class EndpointDialogComponent {\n  /**\n   * Сервис для управления диалоговыми окнами.\n   *\n   * @type {TuiDialogService}\n   * @memberof EndpointDialogComponent\n   */\n  private readonly dialogs = inject(TuiDialogService);\n\n  /**\n   * Список доступных типов запросов для эндпоинта.\n   *\n   * @type {string[]}\n   * @memberof EndpointDialogComponent\n   */\n  readonly types: string[] = ['get', 'post', 'put', 'delete', 'getbyindex'];\n\n  /**\n   * Контекст диалогового окна, содержащий данные эндпоинта.\n   *\n   * @type {TuiDialogContext}\n   * @memberof EndpointDialogComponent\n   */\n  public readonly context = injectContext>();\n\n  /**\n   * Флаг, указывающий, есть ли значение в поле маршрута.\n   *\n   * @type {boolean}\n   * @returns {boolean} Возвращает true, если маршрут не пустой.\n   * @memberof EndpointDialogComponent\n   */\n  protected get hasValue(): boolean {\n    return this.data.route.trim() !== '';\n  }\n\n  /**\n   * Данные эндпоинта, которые редактируются в диалоговом окне.\n   *\n   * @type {Endpoint}\n   * @memberof EndpointDialogComponent\n   */\n  protected get data(): Endpoint {\n    return this.context.data;\n  }\n\n  /**\n   * Обработчик отправки формы.\n   *\n   * @remarks\n   * Предотвращает стандартное поведение отправки формы и завершает диалог, если маршрут не пустой.\n   *\n   * @memberof EndpointDialogComponent\n   */\n  protected submit(): void {\n    if (event) {\n      event.preventDefault();\n    }\n    if (this.hasValue) {\n      this.context.completeWith(this.data);\n    }\n  }\n\n  /**\n   * Открывает диалоговое окно с заданным содержимым.\n   *\n   * @param content - Шаблон содержимого диалогового окна.\n   * @remarks\n   * Использует сервис TuiDialogService для открытия диалога.\n   *\n   * @memberof EndpointDialogComponent\n   */\n  protected showDialog(content: TemplateRef): void {\n    this.dialogs.open(content, { dismissible: true }).subscribe();\n  }\n\n  /**\n   * Обработчик ввода данных в поле маршрута.\n   *\n   * @param event - Событие ввода данных.\n   * @remarks\n   * Очищает значение от недопустимых символов и обновляет данные эндпоинта.\n   *\n   * @memberof EndpointDialogComponent\n   */\n  protected onInput(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    const value = input.value;\n    const cleanedValue = value.replace(/[^a-zA-Z0-9]/g, '');\n    input.value = cleanedValue;\n    this.data.route = cleanedValue;\n  }\n}\n\n    \n\n    \n        \n  Имя эндпоинта\n\n\n\n  Тип\n  \n\n\n\n  \n    Отправить\n  \n\n\n    \n\n    \n                \n                    ./endpoint-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Имя эндпоинта  Тип        Отправить  '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EndpointDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EndpointRepositoryService.html":{"url":"injectables/EndpointRepositoryService.html","title":"injectable - EndpointRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EndpointRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/endpoint-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEndpoint\n                            \n                            \n                                deleteEndpoint\n                            \n                            \n                                getEndpointByName\n                            \n                            \n                                getEndpointList\n                            \n                            \n                                updateEndpoint\n                            \n                            \n                                updateEndpointStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(endpointService: EndpointService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/endpoint-repository.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        endpointService\n                                                  \n                                                        \n                                                                        EndpointService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createEndpoint\n                        \n                    \n                \n            \n            \n                \ncreateEndpoint(apiServiceName: string, entityName: string, endpoint: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpoint\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEndpoint\n                        \n                    \n                \n            \n            \n                \ndeleteEndpoint(apiServiceName: string, entityName: string, endpointName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpointName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEndpointByName\n                        \n                    \n                \n            \n            \n                \ngetEndpointByName(apiServiceName: string, entityName: string, endpointName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpointName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEndpointList\n                        \n                    \n                \n            \n            \n                \ngetEndpointList(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEndpoint\n                        \n                    \n                \n            \n            \n                \nupdateEndpoint(apiServiceName: string, entityName: string, endpointName: string, endpoint: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpointName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpoint\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEndpointStatus\n                        \n                    \n                \n            \n            \n                \nupdateEndpointStatus(apiServiceName: string, entityName: string, endpointName: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpointName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EndpointService as EndpointService } from '../services/endpoint-service.service';\nimport { Endpoint as Endpoint } from \"../interfaces/Endpoint\";\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EndpointRepositoryService {\n\n  constructor(private endpointService: EndpointService) { }\n\n  getEndpointList(apiServiceName: string, entityName: string): Observable {\n    return this.endpointService.getEndpointList(apiServiceName, entityName);\n  }\n\n  createEndpoint(apiServiceName: string, entityName: string, endpoint: Endpoint): Observable {\n    return this.endpointService.createEndpoint(apiServiceName, entityName, endpoint);\n  }\n\n  getEndpointByName(apiServiceName: string, entityName: string, endpointName: string): Observable {\n    return this.endpointService.getEndpointByName(apiServiceName, entityName, endpointName);\n  }\n\n  updateEndpoint(apiServiceName: string, entityName: string, endpointName: string, endpoint: Endpoint): Observable {\n    return this.endpointService.updateEndpoint(apiServiceName, entityName, endpointName, endpoint);\n  }\n\n  deleteEndpoint(apiServiceName: string, entityName: string, endpointName: string): Observable {\n    return this.endpointService.deleteEndpoint(apiServiceName, entityName, endpointName);\n  }\n  \n  updateEndpointStatus(apiServiceName: string, entityName: string, endpointName: string, isActive: boolean): Observable {\n    return this.endpointService.updateEndpointStatus(apiServiceName, entityName, endpointName, isActive);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EndpointService.html":{"url":"injectables/EndpointService.html","title":"injectable - EndpointService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EndpointService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/endpoint-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEndpoint\n                            \n                            \n                                deleteEndpoint\n                            \n                            \n                                getEndpointByName\n                            \n                            \n                                getEndpointList\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                updateEndpoint\n                            \n                            \n                                updateEndpointStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorHandler: ErrorHandlerService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/endpoint-service.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createEndpoint\n                        \n                    \n                \n            \n            \n                \ncreateEndpoint(apiServiceName: string, entityName: string, action: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                action\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEndpoint\n                        \n                    \n                \n            \n            \n                \ndeleteEndpoint(apiServiceName: string, entityName: string, actionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEndpointByName\n                        \n                    \n                \n            \n            \n                \ngetEndpointByName(apiServiceName: string, entityName: string, actionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEndpointList\n                        \n                    \n                \n            \n            \n                \ngetEndpointList(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEndpoint\n                        \n                    \n                \n            \n            \n                \nupdateEndpoint(apiServiceName: string, entityName: string, actionName: string, action: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                action\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEndpointStatus\n                        \n                    \n                \n            \n            \n                \nupdateEndpointStatus(serviceName: string, entityName: string, endpoint: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/api`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/endpoint-service.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { Endpoint } from \"../interfaces/Endpoint\";\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { ErrorHandlerService } from './error-handler.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EndpointService {\n  private baseUrl = `${window.location.origin}/api`;\n\n  constructor(\n    private http: HttpClient,\n    private errorHandler: ErrorHandlerService,\n    private alerts: TuiAlertService\n  ) {}\n\n  getEndpointList(\n    apiServiceName: string,\n    entityName: string\n  ): Observable {\n    return this.http\n      .get(\n        `${this.baseUrl}/ApiEndpoint/${apiServiceName}/${entityName}`\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  createEndpoint(\n    apiServiceName: string,\n    entityName: string,\n    action: Endpoint\n  ): Observable {\n    return this.http\n      .post(\n        `${this.baseUrl}/ApiEndpoint/${apiServiceName}/${entityName}`,\n        action\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  getEndpointByName(\n    apiServiceName: string,\n    entityName: string,\n    actionName: string\n  ): Observable {\n    return this.http\n      .get(\n        `${this.baseUrl}/ApiEndpoint/${apiServiceName}/${entityName}/${actionName}`\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  updateEndpoint(\n    apiServiceName: string,\n    entityName: string,\n    actionName: string,\n    action: Endpoint\n  ): Observable {\n    return this.http\n      .put(\n        `${this.baseUrl}/ApiEndpoint/${apiServiceName}/${entityName}/${actionName}`,\n        action\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  deleteEndpoint(\n    apiServiceName: string,\n    entityName: string,\n    actionName: string\n  ): Observable {\n    return this.http\n      .delete(\n        `${this.baseUrl}/ApiEndpoint/${apiServiceName}/${entityName}/${actionName}`\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  updateEndpointStatus(\n    serviceName: string,\n    entityName: string,\n    endpoint: string,\n    isActive: boolean\n  ): Observable {\n    return this.http\n      .patch(\n        `${this.baseUrl}/ApiEndpoint/${serviceName}/${entityName}/${endpoint}/${isActive}`,\n        null\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  private handleError(error: HttpErrorResponse): Observable {\n    this.errorHandler.handleError(error);\n    this.alerts.open(error.message, { appearance: 'negative' }).subscribe();\n    return throwError(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Entity.html":{"url":"interfaces/Entity.html","title":"interface - Entity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Entity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/Entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            endpoints\n                                        \n                                \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            structure\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endpoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endpoints:         Endpoint[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Endpoint[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        structure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        structure:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Endpoint } from \"./Endpoint\";\n\n\nexport interface Entity {\n  name: string;\n  isActive: boolean;\n  structure: any;\n  endpoints: Endpoint[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EntityDialogComponent.html":{"url":"components/EntityDialogComponent.html","title":"component - EntityDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EntityDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/entity-dialog/entity-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент EntityDialogComponent предназначен для отображения диалогового окна редактирования сущности.\nПозволяет пользователю вводить и изменять данные сущности, такие как имя и структура.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует сервисы для управления диалоговыми окнами и вводом данных.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-entity-edit-dialog\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            TuiAutoFocus\n                            TuiButton\n                            TuiDataListWrapper\n                            TuiInputModule\n                            TuiSelectModule\n                            TuiSlider\n                            TuiTextfield\n                            TuiTextfieldControllerModule\n                            TuiTextareaModule\n                \n            \n\n            \n                styleUrls\n                ./entity-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./entity-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                alerts\n                            \n                            \n                                    Public\n                                    Readonly\n                                context\n                            \n                            \n                                    Private\n                                    Readonly\n                                dialogs\n                            \n                            \n                                    Private\n                                isCanSubmit\n                            \n                            \n                                    \n                                nameInputRef\n                            \n                            \n                                    \n                                structureInputRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                handleKeyboardEvent\n                            \n                            \n                                    Protected\n                                handleSubmit\n                            \n                            \n                                    Protected\n                                moveFocus\n                            \n                            \n                                    Protected\n                                onInput\n                            \n                            \n                                    Protected\n                                showDialog\n                            \n                            \n                                    Private\n                                showError\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:keydown\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasValue\n                                \n                                \n                                    data\n                                \n                                \n                                    structure\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:keydown\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:keydown(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Обработчик событий клавиатуры.\nОбрабатывает нажатия клавиш \"Enter\" и \"Escape\".\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСобытие клавиатуры.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleKeyboardEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleKeyboardEvent(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Обработчик событий клавиатуры.\nОбрабатывает нажатия клавиш \"Enter\" и \"Escape\".\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСобытие клавиатуры.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        handleSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:194\n                        \n                    \n\n\n            \n                \n                        Обработчик отправки формы.\nПроверяет корректность данных и завершает диалог, если данные валидны.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moveFocus\n                        \n                    \n                \n            \n            \n                \n                        \n                    moveFocus(targetInput: ElementRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:263\n                        \n                    \n\n\n            \n                \n                        Перемещает фокус на указанное поле ввода.\nИспользуется для управления фокусом между полями ввода.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                targetInput\n                                            \n                                                        ElementRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСсылка на элемент ввода.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        onInput\n                        \n                    \n                \n            \n            \n                \n                        \n                    onInput(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:246\n                        \n                    \n\n\n            \n                \n                        Обработчик ввода данных в поле имени.\nОчищает значение от недопустимых символов и обновляет данные сущности.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСобытие ввода данных.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        showDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    showDialog(content: TemplateRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:216\n                        \n                    \n\n\n            \n                \n                        Открывает диалоговое окно с заданным содержимым.\nИспользует сервис TuiDialogService для открытия диалога.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                        TemplateRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nШаблон содержимого диалогового окна.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showError\n                        \n                    \n                \n            \n            \n                \n                        \n                    showError(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:227\n                        \n                    \n\n\n            \n                \n                        Отображает сообщение об ошибке.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСообщение об ошибке.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:91\n                        \n                    \n\n            \n                \n                    Сервис для отображения уведомлений.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext>()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:108\n                        \n                    \n\n            \n                \n                    Контекст диалогового окна, содержащий данные сущности.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:83\n                        \n                    \n\n            \n                \n                    Сервис для управления диалоговыми окнами.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isCanSubmit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:100\n                        \n                    \n\n            \n                \n                    Флаг, указывающий, можно ли отправить данные.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nameInputRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('nameInput', {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:66\n                        \n                    \n\n            \n                \n                    Ссылка на элемент ввода имени.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        structureInputRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('descriptionInput', {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:75\n                        \n                    \n\n            \n                \n                    Ссылка на элемент ввода структуры.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasValue\n                    \n                \n\n                \n                    \n                        gethasValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:117\n                                \n                            \n                    \n                        \n                                Флаг, указывающий, есть ли значение в поле имени.\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:127\n                                \n                            \n                    \n                        \n                                Данные сущности, которые редактируются в диалоговом окне.\n\n\n                                \n                                \n                                \n                                    Returns :         Entity\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        structure\n                    \n                \n\n                \n                    \n                        getstructure()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:138\n                                \n                            \n                    \n                        \n                                Возвращает структуру сущности в формате JSON.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setstructure(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:154\n                                \n                            \n                    \n                        \n                                Устанавливает структуру сущности из строки JSON.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nСтрока JSON для установки структуры.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import type { TemplateRef } from '@angular/core';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  HostListener,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TuiAutoFocus } from '@taiga-ui/cdk';\nimport type { TuiDialogContext } from '@taiga-ui/core';\nimport {\n  TuiButton,\n  TuiDialogService,\n  TuiTextfield,\n  TuiAlertService,\n} from '@taiga-ui/core';\nimport { TuiDataListWrapper, TuiSlider } from '@taiga-ui/kit';\nimport { TuiTextareaModule } from '@taiga-ui/legacy';\nimport {\n  TuiInputModule,\n  TuiSelectModule,\n  TuiTextfieldControllerModule,\n} from '@taiga-ui/legacy';\nimport { injectContext } from '@taiga-ui/polymorpheus';\nimport { Entity } from \"../../../interfaces/Entity\";\n\n/**\n * Компонент EntityDialogComponent предназначен для отображения диалогового окна редактирования сущности.\n * Позволяет пользователю вводить и изменять данные сущности, такие как имя и структура.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует сервисы для управления диалоговыми окнами и вводом данных.\n *\n * @example\n * html\n * \n */\n@Component({\n  selector: 'app-entity-edit-dialog',\n  imports: [\n    FormsModule,\n    TuiAutoFocus,\n    TuiButton,\n    TuiDataListWrapper,\n    TuiInputModule,\n    TuiSelectModule,\n    TuiSlider,\n    TuiTextfield,\n    TuiTextfieldControllerModule,\n    TuiTextareaModule,\n  ],\n  templateUrl: './entity-dialog.component.html',\n  styleUrls: ['./entity-dialog.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EntityDialogComponent {\n  /**\n   * Ссылка на элемент ввода имени.\n   *\n   * @type {ElementRef}\n   * @memberof EntityDialogComponent\n   */\n  @ViewChild('nameInput', { read: ElementRef }) nameInputRef!: ElementRef;\n\n  /**\n   * Ссылка на элемент ввода структуры.\n   *\n   * @type {ElementRef}\n   * @memberof EntityDialogComponent\n   */\n  @ViewChild('descriptionInput', { read: ElementRef })\n  structureInputRef!: ElementRef;\n\n  /**\n   * Сервис для управления диалоговыми окнами.\n   *\n   * @type {TuiDialogService}\n   * @memberof EntityDialogComponent\n   */\n  private readonly dialogs = inject(TuiDialogService);\n\n  /**\n   * Сервис для отображения уведомлений.\n   *\n   * @type {TuiAlertService}\n   * @memberof EntityDialogComponent\n   */\n  private readonly alerts = inject(TuiAlertService);\n\n  /**\n   * Флаг, указывающий, можно ли отправить данные.\n   *\n   * @type {boolean}\n   * @default true\n   * @memberof EntityDialogComponent\n   */\n  private isCanSubmit: boolean = true;\n\n  /**\n   * Контекст диалогового окна, содержащий данные сущности.\n   *\n   * @type {TuiDialogContext}\n   * @memberof EntityDialogComponent\n   */\n  public readonly context = injectContext>();\n\n  /**\n   * Флаг, указывающий, есть ли значение в поле имени.\n   *\n   * @type {boolean}\n   * @returns {boolean} Возвращает true, если имя не пустое.\n   * @memberof EntityDialogComponent\n   */\n  protected get hasValue(): boolean {\n    return this.data.name.trim() !== '';\n  }\n\n  /**\n   * Данные сущности, которые редактируются в диалоговом окне.\n   *\n   * @type {Entity}\n   * @memberof EntityDialogComponent\n   */\n  protected get data(): Entity {\n    return this.context.data;\n  }\n\n  /**\n   * Возвращает структуру сущности в формате JSON.\n   *\n   * @type {string}\n   * @returns {string} Структура сущности в формате JSON.\n   * @memberof EntityDialogComponent\n   */\n  protected get structure(): string {\n    try {\n      if (this.data.structure == null) return '';\n      return JSON.stringify(this.data.structure, null, 2);\n    } catch (error) {\n      console.error('Ошибка при преобразовании структуры в JSON:', error);\n      return '';\n    }\n  }\n\n  /**\n   * Устанавливает структуру сущности из строки JSON.\n   *\n   * @param value - Строка JSON для установки структуры.\n   * @memberof EntityDialogComponent\n   */\n  protected set structure(value: string) {\n    try {\n      this.data.structure = JSON.parse(value);\n      this.isCanSubmit = true;\n    } catch {\n      if (value.length === 0) {\n        this.data.structure = null;\n        this.isCanSubmit = true;\n        return;\n      }\n      this.isCanSubmit = false;\n    }\n  }\n\n  /**\n   * Обработчик событий клавиатуры.\n   *\n   * @param event - Событие клавиатуры.\n   * @remarks\n   * Обрабатывает нажатия клавиш \"Enter\" и \"Escape\".\n   *\n   * @memberof EntityDialogComponent\n   */\n  @HostListener('document:keydown', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent): void {\n    if (event.key === 'Enter') {\n      this.handleSubmit();\n    } else if (event.key === 'Escape') {\n      // Обработка нажатия клавиши \"Escape\"\n    }\n  }\n\n  /**\n   * Обработчик отправки формы.\n   *\n   * @remarks\n   * Проверяет корректность данных и завершает диалог, если данные валидны.\n   *\n   * @memberof EntityDialogComponent\n   */\n  protected handleSubmit(): void {\n    if (!this.isCanSubmit) {\n      this.showError('JSON не правильной структуры');\n      return;\n    }\n    if (event) {\n      event.preventDefault();\n    }\n    if (this.hasValue) {\n      this.context.completeWith(this.data);\n    }\n  }\n\n  /**\n   * Открывает диалоговое окно с заданным содержимым.\n   *\n   * @param content - Шаблон содержимого диалогового окна.\n   * @remarks\n   * Использует сервис TuiDialogService для открытия диалога.\n   *\n   * @memberof EntityDialogComponent\n   */\n  protected showDialog(content: TemplateRef): void {\n    this.dialogs.open(content, { dismissible: true }).subscribe();\n  }\n\n  /**\n   * Отображает сообщение об ошибке.\n   *\n   * @param message - Сообщение об ошибке.\n   * @private\n   * @memberof EntityDialogComponent\n   */\n  private showError(message: string): void {\n    this.alerts\n      .open(message, {\n        label: 'Ошибка',\n        appearance: 'negative',\n        autoClose: 5000,\n      })\n      .subscribe();\n  }\n\n  /**\n   * Обработчик ввода данных в поле имени.\n   *\n   * @param event - Событие ввода данных.\n   * @remarks\n   * Очищает значение от недопустимых символов и обновляет данные сущности.\n   *\n   * @memberof EntityDialogComponent\n   */\n  protected onInput(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    const value = input.value;\n    const cleanedValue = value.replace(/[^a-zA-Z0-9]/g, '');\n    input.value = cleanedValue;\n    this.data.name = cleanedValue;\n  }\n\n  /**\n   * Перемещает фокус на указанное поле ввода.\n   *\n   * @param targetInput - Ссылка на элемент ввода.\n   * @remarks\n   * Используется для управления фокусом между полями ввода.\n   *\n   * @memberof EntityDialogComponent\n   */\n  protected moveFocus(targetInput: ElementRef): void {\n    targetInput.nativeElement.querySelector('input, textarea').focus();\n  }\n}\n\n    \n\n    \n        \n    \n      Имя сущности\n    \n    \n  \n    \n      Структура\n    \n  \n    \n      \n        Отправить\n      \n    \n  \n  \n    \n\n    \n                \n                    ./entity-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Имя сущности                    Структура                        Отправить              '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EntityDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EntityRepositoryService.html":{"url":"injectables/EntityRepositoryService.html","title":"injectable - EntityRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EntityRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/entity-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createApiEntity\n                            \n                            \n                                deleteApiEntity\n                            \n                            \n                                getApiEntity\n                            \n                            \n                                getApiEntityList\n                            \n                            \n                                updateApiEntity\n                            \n                            \n                                updateEntityStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entityService: EntityService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/entity-repository.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entityService\n                                                  \n                                                        \n                                                                        EntityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createApiEntity\n                        \n                    \n                \n            \n            \n                \ncreateApiEntity(apiServiceName: string, entity: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteApiEntity\n                        \n                    \n                \n            \n            \n                \ndeleteApiEntity(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiEntity\n                        \n                    \n                \n            \n            \n                \ngetApiEntity(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiEntityList\n                        \n                    \n                \n            \n            \n                \ngetApiEntityList(apiServiceName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiEntity\n                        \n                    \n                \n            \n            \n                \nupdateApiEntity(apiServiceName: string, entityName: string, entity: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEntityStatus\n                        \n                    \n                \n            \n            \n                \nupdateEntityStatus(serviceName: string, entityName: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityService } from '../services/entity-service.service';\nimport { Observable } from 'rxjs';\nimport { Entity } from \"../interfaces/Entity\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EntityRepositoryService {\n\n  constructor(private entityService: EntityService) { }\n\n  getApiEntityList(apiServiceName: string): Observable {\n    return this.entityService.getApiEntityList(apiServiceName);\n  } \n\n  getApiEntity(apiServiceName: string, entityName: string): Observable {\n    return this.entityService.getApiEntity(apiServiceName, entityName);\n  }\n\n  createApiEntity(apiServiceName: string, entity: Entity): Observable {\n    return this.entityService.createApiEntity(apiServiceName, entity);\n  }\n\n  updateApiEntity(apiServiceName: string, entityName: string, entity: Entity): Observable {\n    return this.entityService.updateApiEntity(apiServiceName, entityName, entity);\n  }\n\n  deleteApiEntity(apiServiceName: string, entityName: string): Observable {\n    return this.entityService.deleteApiEntity(apiServiceName, entityName);\n  } \n\n  updateEntityStatus(serviceName: string, entityName: string, isActive: boolean): Observable {\n    return this.entityService.updateEntityStatus(serviceName, entityName, isActive);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EntityService.html":{"url":"injectables/EntityService.html","title":"injectable - EntityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/entity-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createApiEntity\n                            \n                            \n                                deleteApiEntity\n                            \n                            \n                                getAllApiServices\n                            \n                            \n                                getApiEntity\n                            \n                            \n                                getApiEntityList\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                updateApiEntity\n                            \n                            \n                                updateEntityStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorHandler: ErrorHandlerService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/entity-service.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createApiEntity\n                        \n                    \n                \n            \n            \n                \ncreateApiEntity(apiServiceName: string, entity: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteApiEntity\n                        \n                    \n                \n            \n            \n                \ndeleteApiEntity(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllApiServices\n                        \n                    \n                \n            \n            \n                \ngetAllApiServices()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiEntity\n                        \n                    \n                \n            \n            \n                \ngetApiEntity(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiEntityList\n                        \n                    \n                \n            \n            \n                \ngetApiEntityList(apiServiceName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiEntity\n                        \n                    \n                \n            \n            \n                \nupdateApiEntity(apiServiceName: string, entityName: string, entity: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEntityStatus\n                        \n                    \n                \n            \n            \n                \nupdateEntityStatus(serviceName: string, entityName: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/api`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/entity-service.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { Entity } from \"../interfaces/Entity\";\nimport { ApiServiceStructure } from \"../interfaces/ApiServiceStructure\";\nimport { apiServiceShortStructure } from \"../interfaces/apiServiceShortStructure\";\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { ErrorHandlerService } from './error-handler.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EntityService {\n  private baseUrl = `${window.location.origin}/api`;\n\n  constructor(\n    private http: HttpClient,\n    private errorHandler: ErrorHandlerService,\n    private alerts: TuiAlertService\n  ) {}\n\n  getApiEntityList(apiServiceName: string): Observable {\n    return this.http\n      .get(`${this.baseUrl}/ApiEntity/${apiServiceName}`)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  getApiEntity(apiServiceName: string, entityName: string): Observable {\n    return this.http\n      .get(`${this.baseUrl}/ApiEntity/${apiServiceName}/${entityName}`)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  createApiEntity(apiServiceName: string, entity: Entity): Observable {\n    return this.http\n      .post(`${this.baseUrl}/ApiEntity/${apiServiceName}`, entity)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  updateApiEntity(\n    apiServiceName: string,\n    entityName: string,\n    entity: Entity\n  ): Observable {\n    return this.http\n      .put(\n        `${this.baseUrl}/ApiEntity/${apiServiceName}/${entityName}`,\n        entity\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  deleteApiEntity(\n    apiServiceName: string,\n    entityName: string\n  ): Observable {\n    return this.http\n      .delete(`${this.baseUrl}/ApiEntity/${apiServiceName}/${entityName}`)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  updateEntityStatus(\n    serviceName: string,\n    entityName: string,\n    isActive: boolean\n  ): Observable {\n    return this.http\n      .patch(\n        `${this.baseUrl}/ApiEntity/${serviceName}/${entityName}/${isActive}`,\n        null\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  getAllApiServices(): Observable {\n    return this.http\n      .get(`${this.baseUrl}/ApiServices`)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  private handleError(error: HttpErrorResponse): Observable {\n    this.errorHandler.handleError(error);\n    this.alerts.open(error.message, { appearance: 'negative' }).subscribe();\n    return throwError(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityShort.html":{"url":"interfaces/EntityShort.html","title":"interface - EntityShort","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EntityShort\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/EntityShort.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            structure\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        structure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        structure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EntityShort {\n  name: string;\n  isActive: boolean;\n  structure: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorDisplayComponent.html":{"url":"components/ErrorDisplayComponent.html","title":"component - ErrorDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/pages/error-display/error-display.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент ErrorDisplayComponent отвечает за отображение страницы с ошибкой.\nОн получает код ошибки и сообщение об ошибке из параметров маршрута и отображает их пользователю.\nЭтот компонент используется для отображения информации об ошибках, которые произошли в приложении.\nОн предоставляет пользователю возможность вернуться на главную страницу.\nExample :HTML:\n```html\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-display\n            \n\n\n            \n                imports\n                \n                            TuiButton\n                \n            \n\n            \n                styleUrls\n                ./error-display.component.css\n            \n\n\n\n            \n                templateUrl\n                ./error-display.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorCode\n                            \n                            \n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/pages/error-display/error-display.component.ts:37\n                            \n                        \n\n                \n                    \n                            Конструктор компонента.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nАктивированный маршрут для получения параметров маршрута.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nРоутер для навигации между представлениями.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/error-display/error-display.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Метод для возврата на главную страницу.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/error-display/error-display.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Метод жизненного цикла, который вызывается при инициализации компонента.\nПолучает параметры маршрута и устанавливает код ошибки и сообщение об ошибке.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/error-display/error-display.component.ts:30\n                        \n                    \n\n            \n                \n                    Код ошибки.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/error-display/error-display.component.ts:37\n                        \n                    \n\n            \n                \n                    Сообщение об ошибке.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TuiButton } from '@taiga-ui/core';\n\n/**\n * Компонент ErrorDisplayComponent отвечает за отображение страницы с ошибкой.\n * Он получает код ошибки и сообщение об ошибке из параметров маршрута и отображает их пользователю.\n *\n * @remarks\n * Этот компонент используется для отображения информации об ошибках, которые произошли в приложении.\n * Он предоставляет пользователю возможность вернуться на главную страницу.\n *\n * @example\n * HTML:\n * ```html\n * \n */\n@Component({\n  selector: 'app-error-display',\n  imports: [TuiButton],\n  templateUrl: './error-display.component.html',\n  styleUrls: ['./error-display.component.css'],\n})\nexport class ErrorDisplayComponent implements OnInit {\n  /**\n   * Код ошибки.\n   * @type {string}\n   * @memberof ErrorDisplayComponent\n   */\n  errorCode!: string;\n\n  /**\n   * Сообщение об ошибке.\n   * @type {string}\n   * @memberof ErrorDisplayComponent\n   */\n  errorMessage!: string;\n\n  /**\n   * Конструктор компонента.\n   * @param {ActivatedRoute} route - Активированный маршрут для получения параметров маршрута.\n   * @param {Router} router - Роутер для навигации между представлениями.\n   */\n  constructor(private route: ActivatedRoute, private router: Router) {}\n\n  /**\n   * Метод жизненного цикла, который вызывается при инициализации компонента.\n   * Получает параметры маршрута и устанавливает код ошибки и сообщение об ошибке.\n   *\n   * @memberof ErrorDisplayComponent\n   */\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      this.errorCode = params['code'] || 'Unknown Error';\n      this.errorMessage =\n        params['message'] || 'Произошла непредвиденная ошибка.';\n    });\n  }\n\n  /**\n   * Метод для возврата на главную страницу.\n   *\n   * @memberof ErrorDisplayComponent\n   */\n  goBack(): void {\n    this.router.navigate(['/']);\n  }\n}\n\n    \n\n    \n        \n    {{ errorCode }}\n    {{ errorMessage }}\n    \n      Go Back\n    \n  \n  \n    \n\n    \n                \n                    ./error-display.component.css\n                \n                .error-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  background-color: #f9f9f9;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  max-width: 400px;\n  margin: 50px auto;\n}\n\nh1 {\n  margin: 0;\n  font-size: 36px;\n  color: #d9534f; /* Цвет для заголовка ошибки */\n}\n\nh3 {\n  margin: 0;\n  font-size: 24px;\n  color: #0056a6;\n  width: 65%;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  height: 2rem;\n}\n\np {\n  margin: 10px 0;\n  color: #666;\n  font-size: 16px;\n  line-height: 1.5;\n  height: calc(1.5em * 2);\n  overflow-y: auto;\n  overflow-x: hidden;\n  box-sizing: border-box;\n  word-wrap: break-word;\n  white-space: normal;\n}\n\n.primary-button {\n  background-color: #0056a6;\n  color: white;\n  border: 2px solid #0056a6; /* Добавлена граница */\n  padding: 10px 15px;\n  border-radius: 5px;\n  cursor: pointer;\n  font-weight: bold;\n  transition: background-color 0.3s, transform 0.2s, border-color 0.3s; /* Добавлено изменение цвета границы */\n  margin-left: 1rem;\n  margin-bottom: 1rem;\n}\n\n.primary-button:hover {\n  background-color: #004080;\n  border-color: #003366; /* Изменение цвета границы при наведении */\n  transform: scale(1.05); /* Увеличение кнопки при наведении */\n}\n\n.actions {\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n.top-right {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  display: flex;\n  align-items: center;\n}\n\n/* Стилизация полосы прокрутки для WebKit-браузеров */\np::-webkit-scrollbar {\n  width: 8px;\n}\n\np::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 10px;\n}\n\np::-webkit-scrollbar-thumb {\n  background: #888;\n  border-radius: 10px;\n}\n\np::-webkit-scrollbar-thumb:hover {\n  background: #555;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ errorCode }}    {{ errorMessage }}          Go Back        '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/error-handler.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, alertService: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/error-handler.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/error-handler.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { TuiAlertService } from '@taiga-ui/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHandlerService {\n  constructor(private router: Router, private alertService: TuiAlertService) {}\n\n  handleError(error: HttpErrorResponse): void {\n    let errorMessage = 'Произошла ошибка при обработке запроса';\n    let errorCode = error.status || 'Unknown';\n\n    switch (error.status) {\n      case 400:\n        errorMessage = 'Неверный запрос. Проверьте данные и попробуйте снова. 🤦‍♂️';\n        this.alertService.open(`Error ${errorCode}: ${errorMessage}`).subscribe();\n        break;\n      case 404:\n        errorMessage = 'Страница не найдена. Возможно, она была удалена или перемещена. 🕵️‍♂️';\n        this.router.navigate(['/page-not-found']);\n        return;\n      case 408:\n        errorMessage = 'Время ожидания запроса истекло. Попробуйте еще раз. ⏳';\n        break;\n      case 500:\n        errorMessage = 'Внутренняя ошибка сервера. Мы уже работаем над этим! 🛠️';\n        break;\n      case 502:\n        errorMessage = 'Плохой шлюз. Сервер недоступен. Попробуйте позже. 🌐';\n        break;\n      case 503:\n        errorMessage = 'Сервис временно недоступен. Мы на ремонте! 🔧';\n        break;\n      case 504:\n        errorMessage = 'Время ожидания ответа от сервера истекло. Попробуйте еще раз. ⏰';\n        break;\n      default:\n        errorMessage = `Неизвестная ошибка: ${errorMessage}. Код: ${errorCode}. 🤷‍♂️`;\n        break;\n    }\n\n    // Переход на страницу ошибки для всех остальных случаев\n    this.router.navigate(['/error'], {\n      queryParams: { code: errorCode, message: errorMessage },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExportApiButtonComponent.html":{"url":"components/ExportApiButtonComponent.html","title":"component - ExportApiButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExportApiButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/export-api-button/export-api-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент ExportApiButtonComponent предназначен для экспорта структуры API в формате JSON.\nПозволяет пользователю скачать структуру API в виде файла.\nЭтот компонент интегрируется с сервисом репозитория API для получения структуры API.\nИспользует Taiga UI для создания интерактивного интерфейса.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-export-api-button\n            \n\n\n            \n                imports\n                \n                            TuiButton\n                \n            \n\n            \n                styleUrls\n                ./export-api-button.component.css,../../styles/button.css\n            \n\n\n\n            \n                templateUrl\n                ./export-api-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiInfo\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiServiceRepository: ApiServiceRepositoryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/export-api-button/export-api-button.component.ts:32\n                            \n                        \n\n                \n                    \n                            Конструктор компонента ExportApiButtonComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apiServiceRepository\n                                                  \n                                                        \n                                                                        ApiServiceRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для взаимодействия с репозиторием API.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        apiInfo\n                    \n                \n                \n                    \n                        Type :         apiServiceShortStructure\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/export-api-button/export-api-button.component.ts:32\n                            \n                        \n                \n                    \n                        Входной параметр для получения информации о API.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/export-api-button/export-api-button.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Обработчик нажатия на кнопку экспорта.\nПолучает структуру API из репозитория и инициирует скачивание файла JSON.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { TuiButton } from '@taiga-ui/core';\nimport { ApiServiceStructure } from \"../../../interfaces/ApiServiceStructure\";\nimport { apiServiceShortStructure } from \"../../../interfaces/apiServiceShortStructure\";\nimport { ApiServiceRepositoryService } from '../../../repositories/api-service-repository.service';\n\n/**\n * Компонент ExportApiButtonComponent предназначен для экспорта структуры API в формате JSON.\n * Позволяет пользователю скачать структуру API в виде файла.\n *\n * @remarks\n * Этот компонент интегрируется с сервисом репозитория API для получения структуры API.\n * Использует Taiga UI для создания интерактивного интерфейса.\n *\n * @example\n * html\n * \n */\n@Component({\n  selector: 'app-export-api-button',\n  imports: [TuiButton],\n  templateUrl: './export-api-button.component.html',\n  styleUrls: ['./export-api-button.component.css', '../../styles/button.css'],\n})\nexport class ExportApiButtonComponent {\n  /**\n   * Входной параметр для получения информации о API.\n   *\n   * @type {apiServiceShortStructure}\n   * @memberof ExportApiButtonComponent\n   */\n  @Input() apiInfo!: apiServiceShortStructure;\n\n  /**\n   * Конструктор компонента ExportApiButtonComponent.\n   *\n   * @param apiServiceRepository - Сервис для взаимодействия с репозиторием API.\n   *\n   * @memberof ExportApiButtonComponent\n   */\n  constructor(private apiServiceRepository: ApiServiceRepositoryService) {}\n\n  /**\n   * Обработчик нажатия на кнопку экспорта.\n   *\n   * @remarks\n   * Получает структуру API из репозитория и инициирует скачивание файла JSON.\n   *\n   * @memberof ExportApiButtonComponent\n   */\n  onClick(): void {\n    this.apiServiceRepository.getApiStructureList(this.apiInfo.name).subscribe({\n      next: (data: ApiServiceStructure) => {\n        const { name, ...dataWithoutName } = data;\n        const jsonString = JSON.stringify(dataWithoutName, null, 2);\n\n        const blob = new Blob([jsonString], { type: 'application/json' });\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = `${data.name}.json`;\n        a.click();\n        window.URL.revokeObjectURL(url);\n      },\n      error: (error) => {\n        console.log(error);\n      },\n    });\n  }\n}\n\n    \n\n    \n        Экспортировать\n    \n\n    \n                \n                    ./export-api-button.component.css\n                \n                \n                \n                    ../../styles/button.css\n                \n                .primary-button {\n    background-color: #0056a6;\n    color: white;\n    border: none;\n    block-size: auto;\n    padding: 7px 13px;\n    border-radius: 5px;\n    cursor: pointer;\n    font-weight: bold;\n    transition: background-color 0.3s;\n    margin-left: 1rem;\n    margin-bottom: 1rem;\n  }\n  \n  .primary-button:hover {\n    background-color: #004080;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Экспортировать'\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExportApiButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileStatus.html":{"url":"interfaces/FileStatus.html","title":"interface - FileStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/FileStatus.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errorMessage\n                                        \n                                \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     TuiFileLike\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TuiFileLike\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \"loading\" | \"normal\" | \"error\" | \"success\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"loading\" | \"normal\" | \"error\" | \"success\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { TuiFileLike } from '@taiga-ui/kit';\n\nexport interface FileStatus {\n  file: TuiFileLike;\n  status: 'loading' | 'normal' | 'error' | 'success';\n  errorMessage: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterByInputComponent.html":{"url":"components/FilterByInputComponent.html","title":"component - FilterByInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FilterByInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/filter-by-input/filter-by-input.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент FilterByInputComponent предназначен для фильтрации элементов на основе ввода пользователя.\nПозволяет пользователю вводить текст для поиска и фильтрации списка элементов.\nЭтот компонент использует реактивные формы Angular для управления вводом и фильтрацией данных.\nИнтегрируется с Taiga UI для создания интерактивного интерфейса.\nExample :html\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter-by-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            TuiDataListWrapper\n                            TuiInputModule\n                \n            \n\n            \n                styleUrls\n                ./filter-by-input.component.css\n            \n\n\n\n            \n                templateUrl\n                ./filter-by-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onKeyPress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                controlName\n                            \n                            \n                                items\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                searchQuery\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filteredItems\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:97\n                            \n                        \n\n                \n                    \n                            Конструктор компонента FilterByInputComponent.\nПодписывается на изменения значения контрола формы и вызывает событие searchQuery.\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        controlName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'search'\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:53\n                            \n                        \n                \n                    \n                        Имя контрола формы.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:62\n                            \n                        \n                \n                    \n                        Список элементов для фильтрации.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Search'\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:44\n                            \n                        \n                \n                    \n                        Метка для поля ввода.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        searchQuery\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:70\n                            \n                        \n                \n                    \n                        Событие, которое вызывается при изменении поискового запроса.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onKeyPress\n                        \n                    \n                \n            \n            \n                \nonKeyPress(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Обработчик нажатия клавиш.\nПредотвращает ввод недопустимых символов.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСобытие нажатия клавиши.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    [this.controlName]: new FormControl('', [Validators.pattern('^[a-zA-Z0-9]*$')]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:78\n                        \n                    \n\n            \n                \n                    Реактивная форма для управления вводом.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filteredItems\n                    \n                \n\n                \n                    \n                        getfilteredItems()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:89\n                                \n                            \n                    \n                        \n                                Возвращает отфильтрованные элементы на основе введенного значения.\n\n\n                                \n                                \n                                \n                                    Returns :     string[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { TuiDataListWrapper } from '@taiga-ui/kit';\nimport { TuiInputModule } from '@taiga-ui/legacy';\n\n/**\n * Компонент FilterByInputComponent предназначен для фильтрации элементов на основе ввода пользователя.\n * Позволяет пользователю вводить текст для поиска и фильтрации списка элементов.\n *\n * @remarks\n * Этот компонент использует реактивные формы Angular для управления вводом и фильтрацией данных.\n * Интегрируется с Taiga UI для создания интерактивного интерфейса.\n *\n * @example\n * html\n * \n * \n\n */\n@Component({\n  selector: 'app-filter-by-input',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    TuiDataListWrapper,\n    TuiInputModule,\n  ],\n  templateUrl: './filter-by-input.component.html',\n  styleUrls: ['./filter-by-input.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilterByInputComponent {\n  /**\n   * Метка для поля ввода.\n   *\n   * @type {string}\n   * @default 'Search'\n   * @memberof FilterByInputComponent\n   */\n  @Input() label: string = 'Search';\n\n  /**\n   * Имя контрола формы.\n   *\n   * @type {string}\n   * @default 'search'\n   * @memberof FilterByInputComponent\n   */\n  @Input() controlName: string = 'search';\n\n  /**\n   * Список элементов для фильтрации.\n   *\n   * @type {string[]}\n   * @default []\n   * @memberof FilterByInputComponent\n   */\n  @Input() items: string[] = [];\n\n  /**\n   * Событие, которое вызывается при изменении поискового запроса.\n   *\n   * @type {EventEmitter}\n   * @memberof FilterByInputComponent\n   */\n  @Output() searchQuery = new EventEmitter();\n\n  /**\n   * Реактивная форма для управления вводом.\n   *\n   * @type {FormGroup}\n   * @memberof FilterByInputComponent\n   */\n  form = new FormGroup({\n    [this.controlName]: new FormControl('', [Validators.pattern('^[a-zA-Z0-9]*$')]),\n  });\n\n  /**\n   * Возвращает отфильтрованные элементы на основе введенного значения.\n   *\n   * @type {string[]}\n   * @returns {string[]} Отфильтрованные элементы.\n   * @memberof FilterByInputComponent\n   */\n  get filteredItems(): string[] {\n    const control = this.form.get(this.controlName);\n    if (control) {\n      const value = control.value ?? '';\n      this.searchQuery.emit(value);\n      return this.items.filter(item => item.includes(value));\n    }\n    return this.items;\n  }\n\n  /**\n   * Конструктор компонента FilterByInputComponent.\n   *\n   * @remarks\n   * Подписывается на изменения значения контрола формы и вызывает событие searchQuery.\n   *\n   * @memberof FilterByInputComponent\n   */\n  constructor() {\n    this.form.controls[this.controlName].valueChanges.subscribe(value => {\n      this.searchQuery.emit(value ?? '');\n    });\n  }\n\n  /**\n   * Обработчик нажатия клавиш.\n   *\n   * @param event - Событие нажатия клавиши.\n   * @remarks\n   * Предотвращает ввод недопустимых символов.\n   *\n   * @memberof FilterByInputComponent\n   */\n  onKeyPress(event: KeyboardEvent): void {\n    const inputChar = event.key;\n    const allowedChars = /^[a-zA-Z0-9]$/;\n    if (!allowedChars.test(inputChar) && !event.ctrlKey && !event.metaKey) {\n      event.preventDefault();\n    }\n  }\n}\n\n    \n\n    \n        \n    \n      {{ label }}\n      \n    \n  \n  \n    \n\n    \n                \n                    ./filter-by-input.component.css\n                \n                tui-input {\n    min-width: 300px;\n    max-width: 50%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ label }}              '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterByInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент HeaderComponent предназначен для отображения заголовка страницы с логотипом и кнопкой.\nПозволяет пользователю выполнять действия, такие как возврат на предыдущую страницу или импорт данных.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует диалоговые окна для выполнения операций импорта.\nExample :html\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n            \n                imports\n                \n                                BackButtonComponent\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Click\n                            \n                            \n                                Import\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonText\n                            \n                            \n                                isApiPage\n                            \n                            \n                                logoUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/header/header.component.ts:46\n                            \n                        \n                \n                    \n                        Текст кнопки в заголовке.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isApiPage\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/header/header.component.ts:63\n                            \n                        \n                \n                    \n                        Флаг, указывающий, является ли текущая страница страницей API.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        logoUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://www.titan2.ru/images/temp/logo__ru.jpg\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/header/header.component.ts:37\n                            \n                        \n                \n                    \n                        URL логотипа для отображения в заголовке.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        buttonClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/header/header.component.ts:54\n                            \n                        \n                \n                    \n                        Событие, которое вызывается при нажатии на кнопку.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Click\n                        \n                    \n                \n            \n            \n                \nClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/header/header.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Обработчик нажатия на кнопку.\nВызывает событие buttonClick для уведомления родительского компонента о нажатии.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Import\n                        \n                    \n                \n            \n            \n                \nImport()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/header/header.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Открывает диалоговое окно для импорта данных.\nИспользует сервис tuiDialog для отображения диалогового окна.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : tuiDialog(ImportDialogComponent, {\n    closeable: true,\n    dismissible: true,\n    label: \"Импортировать\",\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/header/header.component.ts:71\n                        \n                    \n\n            \n                \n                    Диалог для импорта данных.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { BackButtonComponent } from '../back-button/back-button.component';\nimport { CommonModule } from '@angular/common';\nimport { tuiDialog } from '@taiga-ui/core';\nimport { ImportDialogComponent } from '../import-dialog/import-dialog.component';\n\n/**\n * Компонент HeaderComponent предназначен для отображения заголовка страницы с логотипом и кнопкой.\n * Позволяет пользователю выполнять действия, такие как возврат на предыдущую страницу или импорт данных.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует диалоговые окна для выполнения операций импорта.\n *\n * @example\n * html\n * \n * \n */\n@Component({\n  selector: 'app-header',\n  imports: [BackButtonComponent, CommonModule],\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'], // Исправлено с styleUrl на styleUrls\n})\nexport class HeaderComponent {\n  /**\n   * URL логотипа для отображения в заголовке.\n   *\n   * @type {string}\n   * @default \"https://www.titan2.ru/images/temp/logo__ru.jpg\"\n   * @memberof HeaderComponent\n   */\n  @Input() logoUrl: string = \"https://www.titan2.ru/images/temp/logo__ru.jpg\";\n\n  /**\n   * Текст кнопки в заголовке.\n   *\n   * @type {string}\n   * @default ''\n   * @memberof HeaderComponent\n   */\n  @Input() buttonText: string = '';\n\n  /**\n   * Событие, которое вызывается при нажатии на кнопку.\n   *\n   * @type {EventEmitter}\n   * @memberof HeaderComponent\n   */\n  @Output() buttonClick: EventEmitter = new EventEmitter();\n\n  /**\n   * Флаг, указывающий, является ли текущая страница страницей API.\n   *\n   * @type {boolean}\n   * @default false\n   * @memberof HeaderComponent\n   */\n  @Input() isApiPage: boolean = false;\n\n  /**\n   * Диалог для импорта данных.\n   *\n   * @type {tuiDialog}\n   * @memberof HeaderComponent\n   */\n  private readonly dialog = tuiDialog(ImportDialogComponent, {\n    closeable: true,\n    dismissible: true,\n    label: \"Импортировать\",\n  });\n\n  /**\n   * Обработчик нажатия на кнопку.\n   *\n   * @remarks\n   * Вызывает событие buttonClick для уведомления родительского компонента о нажатии.\n   *\n   * @memberof HeaderComponent\n   */\n  Click(): void {\n    this.buttonClick.emit();\n  }\n\n  /**\n   * Открывает диалоговое окно для импорта данных.\n   *\n   * @remarks\n   * Использует сервис tuiDialog для отображения диалогового окна.\n   *\n   * @memberof HeaderComponent\n   */\n  Import(): void {\n    this.dialog().subscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    @if(isApiPage){\n      Импортировать\n    }\n    @if(buttonText != ''){\n      {{ buttonText }}\n    }\n    \n  \n\n    \n\n    \n                \n                    ./header.component.css\n                \n                .header {\n    background-color: #0056a6;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n.header a{\n    height: 4rem;\n}\n\n.header a {\n    outline: none; /* Убирает стандартное выделение */\n}\n\n.header a img{\n    height: 4rem;\n}\n\n.header button {\n    background-color: white;\n    border: none;\n    padding: 0.625rem 1.25rem;\n    /* Относительные отступы */\n    margin: 0.625rem 0.5rem;\n    /* Относительные отступы */\n    border-radius: 0.3125rem;\n    /* Относительный радиус скругления */\n    cursor: pointer;\n    font-weight: bold;\n    transition: background-color 0.3s;\n    font-size: 1rem;\n    /* Относительный размер шрифта */\n}\n\n.header button:hover {\n    background-color: #e6e6e6;\n}\n\n@media only screen and (max-width: 768px) {\n    .header {\n        display: flex;  \n        justify-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n    }\n\n    .header a{\n        width: -webkit-fill-available;\n        height: auto;\n    }\n\n    .header a img{\n        width: -webkit-fill-available;\n        height: auto;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              @if(isApiPage){      Импортировать    }    @if(buttonText != \\'\\'){      {{ buttonText }}    }      '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpErrorInterceptor.html":{"url":"interceptors/HttpErrorInterceptor.html","title":"interceptor - HttpErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interceptors/http-error.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorHandler: ErrorHandlerService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/interceptors/http-error.interceptor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/interceptors/http-error.interceptor.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { ErrorHandlerService } from '../services/error-handler.service';\n\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n\n  constructor(private errorHandler: ErrorHandlerService, private alerts: TuiAlertService) {}\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        this.errorHandler.handleError(error);\n        this.alerts.open(error.message, { appearance: 'negative' }).subscribe();\n        return throwError(error);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconTrashComponent.html":{"url":"components/IconTrashComponent.html","title":"component - IconTrashComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IconTrashComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/icon-trash/icon-trash.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент IconTrashComponent предназначен для отображения иконки корзины и управления удалением элементов.\nПозволяет пользователю подтверждать удаление элементов с помощью уведомлений.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует сервисы для управления уведомлениями и маршрутизацией.\nExample :html\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-icon-trash\n            \n\n\n\n            \n                styleUrls\n                ./icon-trash.component.css,../../styles/icon.css\n            \n\n\n\n            \n                templateUrl\n                ./icon-trash.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                showNotification\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiInfo\n                            \n                            \n                                endpointInfo\n                            \n                            \n                                entityInfo\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                responseAlert\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alerts: TuiAlertService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/icon-trash/icon-trash.component.ts:74\n                            \n                        \n\n                \n                    \n                            Конструктор компонента IconTrashComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для отображения уведомлений.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для управления маршрутизацией.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        apiInfo\n                    \n                \n                \n                    \n                        Type :         apiServiceShortStructure\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/icon-trash/icon-trash.component.ts:50\n                            \n                        \n                \n                    \n                        Информация об API, связанная с элементом.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        endpointInfo\n                    \n                \n                \n                    \n                        Type :         Endpoint\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/icon-trash/icon-trash.component.ts:66\n                            \n                        \n                \n                    \n                        Информация об эндпоинте, связанная с элементом.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        entityInfo\n                    \n                \n                \n                    \n                        Type :         EntityShort\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/icon-trash/icon-trash.component.ts:58\n                            \n                        \n                \n                    \n                        Информация о сущности, связанная с элементом.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/icon-trash/icon-trash.component.ts:42\n                            \n                        \n                \n                    \n                        Элемент, который будет удален.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        responseAlert\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/icon-trash/icon-trash.component.ts:74\n                            \n                        \n                \n                    \n                        Событие, которое вызывается при подтверждении удаления элемента.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        showNotification\n                        \n                    \n                \n            \n            \n                \n                        \n                    showNotification()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/icon-trash/icon-trash.component.ts:98\n                        \n                    \n\n\n            \n                \n                        Отображает уведомление для подтверждения удаления элемента.\nИспользует сервис TuiAlertService для отображения уведомлений.\nПодписывается на события маршрутизации для автоматического закрытия уведомлений.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { switchMap, takeUntil } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { PolymorpheusComponent } from '@taiga-ui/polymorpheus';\nimport { AlertDeleteComponent } from '../alert-delete/alert-delete.component';\nimport { Endpoint } from \"../../../interfaces/Endpoint\";\nimport { apiServiceShortStructure } from \"../../../interfaces/apiServiceShortStructure\";\nimport { EntityShort } from \"../../../interfaces/EntityShort\";\n\n/**\n * Компонент IconTrashComponent предназначен для отображения иконки корзины и управления удалением элементов.\n * Позволяет пользователю подтверждать удаление элементов с помощью уведомлений.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует сервисы для управления уведомлениями и маршрутизацией.\n *\n * @example\n * html\n * \n * \n */\n@Component({\n  selector: 'app-icon-trash',\n  imports: [],\n  templateUrl: './icon-trash.component.html',\n  styleUrls: ['./icon-trash.component.css', '../../styles/icon.css'],\n})\nexport class IconTrashComponent {\n  /**\n   * Элемент, который будет удален.\n   *\n   * @type {any}\n   * @memberof IconTrashComponent\n   */\n  @Input() item: any;\n\n  /**\n   * Информация об API, связанная с элементом.\n   *\n   * @type {apiServiceShortStructure}\n   * @memberof IconTrashComponent\n   */\n  @Input() apiInfo!: apiServiceShortStructure;\n\n  /**\n   * Информация о сущности, связанная с элементом.\n   *\n   * @type {EntityShort}\n   * @memberof IconTrashComponent\n   */\n  @Input() entityInfo!: EntityShort;\n\n  /**\n   * Информация об эндпоинте, связанная с элементом.\n   *\n   * @type {Endpoint}\n   * @memberof IconTrashComponent\n   */\n  @Input() endpointInfo!: Endpoint;\n\n  /**\n   * Событие, которое вызывается при подтверждении удаления элемента.\n   *\n   * @type {EventEmitter}\n   * @memberof IconTrashComponent\n   */\n  @Output() responseAlert = new EventEmitter();\n\n  /**\n   * Конструктор компонента IconTrashComponent.\n   *\n   * @param alerts - Сервис для отображения уведомлений.\n   * @param router - Сервис для управления маршрутизацией.\n   *\n   * @memberof IconTrashComponent\n   */\n  constructor(\n    private alerts: TuiAlertService,\n    private router: Router,\n  ) {}\n\n  /**\n   * Отображает уведомление для подтверждения удаления элемента.\n   *\n   * @remarks\n   * Использует сервис TuiAlertService для отображения уведомлений.\n   * Подписывается на события маршрутизации для автоматического закрытия уведомлений.\n   *\n   * @memberof IconTrashComponent\n   */\n  protected showNotification(): void {\n    const notification = this.alerts\n      .open(new PolymorpheusComponent(AlertDeleteComponent), {\n        label: 'Вы уверены, что хотите удалить?',\n        appearance: 'negative',\n        autoClose: 0,\n      })\n      .pipe(\n        switchMap((response) => {\n          if (response) {\n            this.responseAlert.emit(true);\n            console.log(`Удаление карточки: ${this.item.name}`);\n            return this.alerts.open(`Карточка \"${this.item.name}\" удалена.`, { label: 'Успех' });\n          } else {\n            return this.alerts.open(`Удаление карточки \"${this.item.name}\" отменено.`, { label: 'Информация' });\n          }\n        }),\n        takeUntil(this.router.events),\n      );\n\n    notification.subscribe();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./icon-trash.component.css\n                \n                \n                \n                    ../../styles/icon.css\n                \n                  \ni {\n    margin-right: 15px; /* 10px * 1.2 */\n    cursor: pointer;\n    color: #666;\n    transition: color 0.3s;\n    font-size: 20px; /* Увеличиваем размер шрифта на 20% */\n}\n\ni:hover {\n    color: #000;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IconTrashComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImportDialogComponent.html":{"url":"components/ImportDialogComponent.html","title":"component - ImportDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ImportDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/import-dialog/import-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент ImportDialogComponent предназначен для импорта данных API через диалоговое окно.\nПозволяет пользователю загружать файлы и обрабатывать их содержимое для создания новых API сервисов.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует реактивные формы для управления загрузкой файлов и обработки данных.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-import-dialog\n            \n\n\n            \n                imports\n                \n                            NgIf\n                            ReactiveFormsModule\n                            TuiAvatar\n                            TuiFiles\n                            TuiLink\n                            NgFor\n                            TuiButton\n                \n            \n\n            \n                styleUrls\n                ./import-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./import-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                context\n                            \n                            \n                                    Protected\n                                    Readonly\n                                control\n                            \n                            \n                                    Protected\n                                files\n                            \n                            \n                                    Protected\n                                hasFiles\n                            \n                            \n                                    Protected\n                                processedData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getFileStatus\n                            \n                            \n                                    Protected\n                                getFileStatusText\n                            \n                            \n                                    Private\n                                processJson\n                            \n                            \n                                    Private\n                                readFiles\n                            \n                            \n                                    Protected\n                                removeFile\n                            \n                            \n                                    Protected\n                                submit\n                            \n                            \n                                    Private\n                                updateFileStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cd: ChangeDetectorRef, apiService: ApiServiceRepositoryService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:71\n                            \n                        \n\n                \n                    \n                            Конструктор компонента ImportDialogComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для управления изменением состояния.\n\n\n                                                        \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiServiceRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для взаимодействия с репозиторием API.\n\n\n                                                        \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для отображения уведомлений.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getFileStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFileStatus(file: FileStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:172\n                        \n                    \n\n\n            \n                \n                        Возвращает текущий статус файла.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            FileStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nФайл, для которого нужно получить статус.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     \"loading\" | \"normal\" | \"error\"\n\n                        \n                            \n                                Статус файла.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getFileStatusText\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFileStatusText(file: FileStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:150\n                        \n                    \n\n\n            \n                \n                        Возвращает текстовое описание статуса файла.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            FileStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nФайл, для которого нужно получить статус.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Текстовое описание статуса файла.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        processJson\n                        \n                    \n                \n            \n            \n                \n                        \n                    processJson(json: any, fileName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:193\n                        \n                    \n\n\n            \n                \n                        Обрабатывает JSON данные из файла.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                json\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nJSON данные для обработки.\n\n\n                                            \n                                        \n                                        \n                                                fileName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя файла.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    readFiles(files: File[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:108\n                        \n                    \n\n\n            \n                \n                        Читает содержимое загруженных файлов.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСписок файлов для чтения.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        removeFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeFile(fileToRemove: FileStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:260\n                        \n                    \n\n\n            \n                \n                        Удаляет файл из списка загруженных.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fileToRemove\n                                            \n                                                            FileStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nФайл, который нужно удалить.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        submit\n                        \n                    \n                \n            \n            \n                \n                        \n                    submit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:213\n                        \n                    \n\n\n            \n                \n                        Отправляет обработанные данные на сервер.\nОбновляет статус файлов и отображает уведомления о результатах отправки.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateFileStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateFileStatus(file: File, status: \"loading\" | \"normal\" | \"error\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:134\n                        \n                    \n\n\n            \n                \n                        Обновляет статус файла.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nФайл, статус которого нужно обновить.\n\n\n                                            \n                                        \n                                        \n                                                status\n                                            \n                                                        \"loading\" | \"normal\" | \"error\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовый статус файла.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext>()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:71\n                        \n                    \n\n            \n                \n                    Контекст диалогового окна.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        control\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl([])\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:38\n                        \n                    \n\n            \n                \n                    Контрол для управления загрузкой файлов.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileStatus[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:46\n                        \n                    \n\n            \n                \n                    Список загруженных файлов с их статусами.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        hasFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:55\n                        \n                    \n\n            \n                \n                    Флаг, указывающий, есть ли загруженные файлы.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        processedData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiServiceStructure[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:63\n                        \n                    \n\n            \n                \n                    Массив для хранения обработанных данных API.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { NgIf, NgFor } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, ChangeDetectorRef } from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { TuiIcon, TuiLink, TuiButton, TuiAlertService } from '@taiga-ui/core';\nimport { TuiAvatar, TuiFiles } from '@taiga-ui/kit';\nimport { ApiServiceStructure } from \"../../../interfaces/ApiServiceStructure\";\nimport { ApiServiceRepositoryService } from '../../../repositories/api-service-repository.service';\nimport { TuiDialogContext } from '@taiga-ui/core';\nimport { injectContext } from '@taiga-ui/polymorpheus';\nimport { FileStatus } from '../../../interfaces/FileStatus';\n\n/**\n * Компонент ImportDialogComponent предназначен для импорта данных API через диалоговое окно.\n * Позволяет пользователю загружать файлы и обрабатывать их содержимое для создания новых API сервисов.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует реактивные формы для управления загрузкой файлов и обработки данных.\n *\n * @example\n * html\n * \n */\n@Component({\n  selector: 'app-import-dialog',\n  imports: [NgIf, ReactiveFormsModule, TuiAvatar, TuiFiles, TuiLink, NgFor, TuiButton],\n  templateUrl: './import-dialog.component.html',\n  styleUrls: ['./import-dialog.component.css'], // Исправлено с styleUrl на styleUrls\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ImportDialogComponent {\n  /**\n   * Контрол для управления загрузкой файлов.\n   *\n   * @type {FormControl}\n   * @memberof ImportDialogComponent\n   */\n  protected readonly control = new FormControl([]);\n\n  /**\n   * Список загруженных файлов с их статусами.\n   *\n   * @type {FileStatus[]}\n   * @memberof ImportDialogComponent\n   */\n  protected files: FileStatus[] = [];\n\n  /**\n   * Флаг, указывающий, есть ли загруженные файлы.\n   *\n   * @type {boolean}\n   * @default false\n   * @memberof ImportDialogComponent\n   */\n  protected hasFiles = false;\n\n  /**\n   * Массив для хранения обработанных данных API.\n   *\n   * @type {ApiServiceStructure[]}\n   * @memberof ImportDialogComponent\n   */\n  protected processedData: ApiServiceStructure[] = [];\n\n  /**\n   * Контекст диалогового окна.\n   *\n   * @type {TuiDialogContext}\n   * @memberof ImportDialogComponent\n   */\n  private readonly context = injectContext>();\n\n  /**\n   * Конструктор компонента ImportDialogComponent.\n   *\n   * @param cd - Сервис для управления изменением состояния.\n   * @param apiService - Сервис для взаимодействия с репозиторием API.\n   * @param alerts - Сервис для отображения уведомлений.\n   *\n   * @memberof ImportDialogComponent\n   */\n  constructor(\n    private cd: ChangeDetectorRef,\n    private apiService: ApiServiceRepositoryService,\n    private readonly alerts: TuiAlertService\n  ) {\n    this.control.valueChanges.subscribe((files) => {\n      if (files) {\n        // Обновляем только новые файлы\n        const newFiles = files.filter(file => !this.files.some(f => f.file.name === file.name));\n        this.files = [\n          ...this.files,\n          ...newFiles.map(file => ({ file, status: 'loading' as const, errorMessage: '' }))\n        ];\n        this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n        this.readFiles(newFiles);\n      }\n    });\n  }\n\n  /**\n   * Читает содержимое загруженных файлов.\n   *\n   * @param files - Список файлов для чтения.\n   * @private\n   * @memberof ImportDialogComponent\n   */\n  private readFiles(files: File[]): void {\n    files.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = (e: ProgressEvent) => {\n        const text = e.target?.result as string;\n        try {\n          const json = JSON.parse(text);\n          this.updateFileStatus(file, 'normal');\n          this.processJson(json, file.name);\n        } catch (error) {\n          console.error('Ошибка при чтении JSON файла:', error);\n          this.updateFileStatus(file, 'error');\n        }\n      };\n      reader.readAsText(file);\n    });\n  }\n\n  /**\n   * Обновляет статус файла.\n   *\n   * @param file - Файл, статус которого нужно обновить.\n   * @param status - Новый статус файла.\n   * @private\n   * @memberof ImportDialogComponent\n   */\n  private updateFileStatus(file: File, status: 'loading' | 'normal' | 'error'): void {\n    const fileStatus = this.files.find(f => f.file.name === file.name);\n    if (fileStatus) {\n      fileStatus.status = status;\n      this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n      this.cd.markForCheck();\n    }\n  }\n\n  /**\n   * Возвращает текстовое описание статуса файла.\n   *\n   * @param file - Файл, для которого нужно получить статус.\n   * @returns {string} Текстовое описание статуса файла.\n   * @memberof ImportDialogComponent\n   */\n  protected getFileStatusText(file: FileStatus): string {\n    switch (file.status) {\n      case 'loading':\n        return 'Файл на проверке';\n      case 'normal':\n        return 'Файл проверен';\n      case 'error':\n        return 'Ошибка загрузки файла';\n      case 'success':\n        return 'Файл загружен';\n      default:\n        return '';\n    }\n  }\n\n  /**\n   * Возвращает текущий статус файла.\n   *\n   * @param file - Файл, для которого нужно получить статус.\n   * @returns {'loading' | 'normal' | 'error'} Статус файла.\n   * @memberof ImportDialogComponent\n   */\n  protected getFileStatus(file: FileStatus): 'loading' | 'normal' | 'error' {\n    switch (file.status) {\n      case 'loading':\n        return 'loading';\n      case 'normal':\n        return 'normal';\n      case 'error':\n        return 'error';\n      case 'success':\n        return 'normal';\n    }\n  }\n\n  /**\n   * Обрабатывает JSON данные из файла.\n   *\n   * @param json - JSON данные для обработки.\n   * @param fileName - Имя файла.\n   * @private\n   * @memberof ImportDialogComponent\n   */\n  private processJson(json: any, fileName: string): void {\n    const name = fileName.replace(/\\.[^/.]+$/, \"\");\n    const apiServiceStructure: ApiServiceStructure = {\n      name: name,\n      isActive: json.isActive || false,\n      description: json.description || '',\n      entities: json.entities || []\n    };\n    this.processedData.push(apiServiceStructure);\n    console.log('Обработанный JSON:', apiServiceStructure);\n  }\n\n  /**\n   * Отправляет обработанные данные на сервер.\n   *\n   * @remarks\n   * Обновляет статус файлов и отображает уведомления о результатах отправки.\n   *\n   * @memberof ImportDialogComponent\n   */\n  protected submit(): void {\n    if (this.processedData.length > 0) {\n      this.files.filter(f => f.status == 'normal').forEach(file => file.status = 'loading');\n      this.cd.markForCheck();\n\n      this.processedData.forEach(service => {\n        this.apiService.createFullApiService(service).subscribe({\n          next: (response) => {\n            console.log('Сервис успешно создан:', response);\n            const file = this.files.find(f => f.file.name === service.name + '.json');\n            if (file) {\n              file.status = 'success';\n              file.errorMessage = '';\n              this.cd.markForCheck();\n            }\n            this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n            if (this.files.every(file => file.status == 'success')) {\n              this.alerts\n                .open('Файлы успешно загружены', {\n                  appearance: 'success',\n                })\n                .subscribe();\n              this.context.completeWith(false);\n            }\n          },\n          error: (response) => {\n            const file = this.files.find(f => f.file.name === service.name + '.json');\n            if (file) {\n              file.status = 'error';\n              file.errorMessage = `Ошибка при создании сервиса: ${response.error}`;\n              this.cd.markForCheck();\n            }\n            this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n          }\n        });\n      });\n    } else {\n      console.warn('Нет данных для отправки.');\n    }\n  }\n\n  /**\n   * Удаляет файл из списка загруженных.\n   *\n   * @param fileToRemove - Файл, который нужно удалить.\n   * @memberof ImportDialogComponent\n   */\n  protected removeFile(fileToRemove: FileStatus): void {\n    this.files = this.files.filter(file => file !== fileToRemove);\n    this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n\n    const currentFiles = this.control.value ? this.control.value.filter(file => file !== fileToRemove.file) : [];\n    this.control.setValue(currentFiles);\n\n    this.cd.markForCheck();\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n            \n            \n                Файлы готовы к загрузке!\n                \n                \n            \n        \n        \n            \n                \n                \n                    Перетащите файлы сюда или\n                    кликните для загрузки\n                \n            \n        \n    \n\n\n\n    \n        {{ getFileStatusText(file) }}\n        {{ file.errorMessage }}\n        \n    \n\n\n\n    \n        Отправить\n    \n\n\n    \n\n    \n                \n                    ./import-dialog.component.css\n                \n                .content {\n    display: flex;\n    block-size: 10rem;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 1rem;\n}\n\nbutton[tuiIconButton] {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    color: red; /* Красный цвет для кнопки удаления */\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        Файлы готовы к загрузке!                                                                                                                            Перетащите файлы сюда или                    кликните для загрузки                                                    {{ getFileStatusText(file) }}        {{ file.errorMessage }}                        Отправить    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImportDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingComponent.html":{"url":"components/LoadingComponent.html","title":"component - LoadingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoadingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/loading/loading.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент LoadingComponent предназначен для отображения анимации загрузки с изображением.\nИспользуется для индикации процесса загрузки данных или выполнения операций.\nЭтот компонент отображает статическое изображение, которое может быть заменено на анимацию или другой индикатор загрузки.\nПодходит для использования в различных частях приложения, где требуется показать пользователю, что выполняется загрузка.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading\n            \n\n\n\n            \n                styleUrls\n                ./loading.component.css\n            \n\n\n\n            \n                templateUrl\n                ./loading.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"assets/dora.png\"\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/loading/loading.component.ts:29\n                        \n                    \n\n            \n                \n                    Путь к изображению, отображаемому во время загрузки.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Компонент LoadingComponent предназначен для отображения анимации загрузки с изображением.\n * Используется для индикации процесса загрузки данных или выполнения операций.\n *\n * @remarks\n * Этот компонент отображает статическое изображение, которое может быть заменено на анимацию или другой индикатор загрузки.\n * Подходит для использования в различных частях приложения, где требуется показать пользователю, что выполняется загрузка.\n *\n * @example\n * html\n * \n */\n@Component({\n  selector: 'app-loading',\n  imports: [],\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.css'], // Исправлено с styleUrl на styleUrls\n})\nexport class LoadingComponent {\n  /**\n   * Путь к изображению, отображаемому во время загрузки.\n   *\n   * @type {string}\n   * @default \"assets/dora.png\"\n   * @memberof LoadingComponent\n   */\n  path: string = \"assets/dora.png\";\n}\n\n    \n\n    \n        \n    \n\n    \n\n    \n                \n                    ./loading.component.css\n                \n                .loading {\n    display: flex;\n    justify-content: center; \n    align-items: center;    \n    height: 100vh;\n}\n\n.loader {\n    width: 100px;\n    height: 46px;\n    position: relative;\n    border-bottom: 8px solid #0056a6; /* Увеличиваем толщину линии */\n    border-top: 8px solid #0056a6;    /* Увеличиваем толщину линии */\n    box-sizing: border-box;\n}\n\n.loader:before, .loader:after {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    top: -20px;\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    background: #fff;\n    border: 8px solid #0056a6; /* Увеличиваем толщину линии */\n    box-sizing: border-box;\n    animation: slide 1s infinite ease-in-out alternate;\n}\n\n.loader:after {\n    top: 20px;\n    animation-direction: alternate-reverse;\n}\n\n@keyframes slide {\n    0%, 20% { transform: translateX(70px); }\n    80%, 100% { transform: translateX(-1px); }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/pages/page-not-found/page-not-found.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент PageNotFoundComponent отвечает за отображение страницы \"Страница не найдена\" (404).\nОн предоставляет пользователю информацию о том, что запрашиваемая страница не существует.\nЭтот компонент используется для отображения сообщения об ошибке 404, когда пользователь пытается получить доступ к несуществующей странице.\nОн может быть настроен для отображения дополнительной информации или предложений по навигации.\nExample :HTML:\n```html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            TuiButton\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./page-not-found.component.css\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TuiButton } from '@taiga-ui/core';\n\n/**\n * Компонент PageNotFoundComponent отвечает за отображение страницы \"Страница не найдена\" (404).\n * Он предоставляет пользователю информацию о том, что запрашиваемая страница не существует.\n *\n * @remarks\n * Этот компонент используется для отображения сообщения об ошибке 404, когда пользователь пытается получить доступ к несуществующей странице.\n * Он может быть настроен для отображения дополнительной информации или предложений по навигации.\n *\n * @example\n * HTML:\n * ```html\n * \n */\n@Component({\n  selector: 'app-page-not-found',\n  imports: [\n    CommonModule,\n    TuiButton,\n    RouterModule,\n  ],\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css'],\n})\nexport class PageNotFoundComponent {\n}\n\n    \n\n    \n        \n\n\n\n    \n    \n\n\n\n    \n        \n            Ой!🙈🍌\n            Страница не найдена\n            \n            На главную\n        \n    \n\n\n\n    \n\n    \n                \n                    ./page-not-found.component.css\n                \n                html, body {\n    height: 100%;\n    margin: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.cc {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n}\n\n.container {\n    text-align: center;\n    padding: 40px;\n    border-radius: 15px;\n    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\n    max-width: 400px;\n    width: 100%;\n    background-color: #fff; /* Фон контейнера */\n}\n\n/* Стили для заголовков */\nh1 {\n    color: #333;\n    font-size: 2em;\n    margin: 15px 0;\n}\n\n/* Стили для изображения */\nimg {\n    width: 300px;\n    height: 300px;\n    border-radius: 15px;\n    margin: 25px 0;\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n}\n\n/* Стили для кнопки */\nbutton {\n    background-color: #007BFF;\n    color: #fff;\n    border: none;\n    padding: 15px 30px;\n    font-size: 1.2em;\n    border-radius: 7px;\n    cursor: pointer;\n    transition: background-color 0.3s, transform 0.3s;\n}\n\nbutton:hover {\n    background-color: #0056b3;\n    transform: scale(1.05);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Ой!🙈🍌            Страница не найдена                        На главную            '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaginationComponent.html":{"url":"components/PaginationComponent.html","title":"component - PaginationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PaginationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/pagination/pagination.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент PaginationComponent предназначен для управления пагинацией в Angular-приложениях.\nОн предоставляет удобный интерфейс для навигации по страницам с данными.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует реактивные формы для управления состоянием пагинации.\nExample :HTML:\n```html\n\nExample :TypeScript:\n```typescript\nonPageChange(page: number): void {\n  console.log('Текущая страница:', page);\n}\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pagination\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            TuiInputSliderModule\n                            TuiPagination\n                            TuiTextfieldControllerModule\n                \n            \n\n            \n                styleUrls\n                ./pagination.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pagination.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToPage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                itemsPerPage\n                            \n                            \n                                totalItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    totalPages\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentPage\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/pagination/pagination.component.ts:76\n                            \n                        \n                \n                    \n                        Текущая страница.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        itemsPerPage\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 16\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/pagination/pagination.component.ts:68\n                            \n                        \n                \n                    \n                        Количество элементов на одной странице.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        totalItems\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/pagination/pagination.component.ts:60\n                            \n                        \n                \n                    \n                        Общее количество элементов.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        pageChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/pagination/pagination.component.ts:83\n                            \n                        \n                \n                    \n                        Событие, которое срабатывает при изменении страницы.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToPage\n                        \n                    \n                \n            \n            \n                \ngoToPage(page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/pagination/pagination.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Переходит на указанную страницу.\nExample :goToPage(2); // Переходит на вторую страницу.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНомер страницы, на которую нужно перейти.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        totalPages\n                    \n                \n\n                \n                    \n                        gettotalPages()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/pagination/pagination.component.ts:91\n                                \n                            \n                    \n                        \n                                Возвращает общее количество страниц.\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TuiPagination } from '@taiga-ui/kit';\nimport {\n  TuiInputSliderModule,\n  TuiTextfieldControllerModule,\n} from '@taiga-ui/legacy';\n\n/**\n * Компонент PaginationComponent предназначен для управления пагинацией в Angular-приложениях.\n * Он предоставляет удобный интерфейс для навигации по страницам с данными.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует реактивные формы для управления состоянием пагинации.\n *\n * @example\n * HTML:\n * ```html\n * \n * \n * ```\n *\n * TypeScript:\n * ```typescript\n * onPageChange(page: number): void {\n *   console.log('Текущая страница:', page);\n * }\n * ```\n */\n@Component({\n  selector: 'app-pagination',\n  imports: [\n    FormsModule,\n    TuiInputSliderModule,\n    TuiPagination,\n    TuiTextfieldControllerModule,\n  ],\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaginationComponent {\n  /**\n   * Общее количество элементов.\n   * @type {number}\n   * @default 0\n   * @memberof PaginationComponent\n   */\n  @Input() totalItems: number = 0;\n\n  /**\n   * Количество элементов на одной странице.\n   * @type {number}\n   * @default 16\n   * @memberof PaginationComponent\n   */\n  @Input() itemsPerPage: number = 16;\n\n  /**\n   * Текущая страница.\n   * @type {number}\n   * @default 1\n   * @memberof PaginationComponent\n   */\n  @Input() currentPage: number = 1;\n\n  /**\n   * Событие, которое срабатывает при изменении страницы.\n   * @type {EventEmitter}\n   * @memberof PaginationComponent\n   */\n  @Output() pageChange = new EventEmitter();\n\n  /**\n   * Возвращает общее количество страниц.\n   * @readonly\n   * @type {number}\n   * @memberof PaginationComponent\n   */\n  get totalPages(): number {\n    return Math.ceil(this.totalItems / this.itemsPerPage);\n  }\n\n  /**\n   * Переходит на указанную страницу.\n   * @param {number} page - Номер страницы, на которую нужно перейти.\n   * @memberof PaginationComponent\n   * @example\n   * goToPage(2); // Переходит на вторую страницу.\n   */\n  goToPage(page: number): void {\n    if (page >= 1 && page \n    \n\n    \n        Page {{ currentPage }}\n\n\n\n    \n\n    \n                \n                    ./pagination.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Page {{ currentPage }}'\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaginationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SwitchComponent.html":{"url":"components/SwitchComponent.html","title":"component - SwitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SwitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/switch/switch.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент SwitchComponent представляет собой переключатель, который позволяет пользователю включать или выключать определенную функцию.\nОн интегрируется с Taiga UI для создания стилизованного и интерактивного интерфейса.\nЭтот компонент использует реактивные формы для управления состоянием переключателя.\nПоддерживает валидацию и может быть настроен для отображения иконки и изменения внешнего вида.\nExample :HTML:\n```html\nExample :TypeScript:\n```typescript\nisFeatureEnabled: boolean = false;\n\nonToggle(value: boolean): void {\n  this.isFeatureEnabled = value;\n  console.log('Функция переключена:', value);\n}\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            tuiSwitchOptionsProvider({ showIcons: false, appearance: () =>  })\n                \n            \n\n\n            \n                selector\n                app-switch\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiSwitch\n                \n            \n\n            \n                styleUrls\n                ./switch.component.css\n            \n\n\n\n            \n                templateUrl\n                ./switch.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                invalidFalse\n                            \n                            \n                                    Protected\n                                    Readonly\n                                invalidTrue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                onToggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/switch/switch.component.ts:54\n                            \n                        \n                \n                    \n                        Значение переключателя.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/switch/switch.component.ts:61\n                            \n                        \n                \n                    \n                        Событие, которое срабатывает при переключении состояния.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/switch/switch.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Инициализация компонента.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToggle\n                        \n                    \n                \n            \n            \n                \nonToggle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/switch/switch.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Обработчик события переключения.\nExample :onToggle(); // Вызывает событие toggle с текущим значением переключателя.\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        invalidFalse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(false, () => ({\n    invalid: true,\n  }))\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/switch/switch.component.ts:77\n                        \n                    \n\n            \n                \n                    Контрол для валидации состояния переключателя (ложь).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        invalidTrue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(true, () => ({\n    invalid: true,\n  }))\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/switch/switch.component.ts:68\n                        \n                    \n\n            \n                \n                    Контроль для валидации состояния переключателя (истина).\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  OnInit,\n} from '@angular/core';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TuiSwitch, tuiSwitchOptionsProvider } from '@taiga-ui/kit';\n\n/**\n * Компонент SwitchComponent представляет собой переключатель, который позволяет пользователю включать или выключать определенную функцию.\n * Он интегрируется с Taiga UI для создания стилизованного и интерактивного интерфейса.\n *\n * @remarks\n * Этот компонент использует реактивные формы для управления состоянием переключателя.\n * Поддерживает валидацию и может быть настроен для отображения иконки и изменения внешнего вида.\n *\n * @example\n * HTML:\n * ```html\n * \n * ```\n *\n * TypeScript:\n * ```typescript\n * isFeatureEnabled: boolean = false;\n *\n * onToggle(value: boolean): void {\n *   this.isFeatureEnabled = value;\n *   console.log('Функция переключена:', value);\n * }\n * ```\n */\n@Component({\n  selector: 'app-switch',\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, TuiSwitch],\n  templateUrl: './switch.component.html',\n  styleUrls: ['./switch.component.css'],\n  providers: [\n    tuiSwitchOptionsProvider({ showIcons: false, appearance: () => 'primary' }),\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SwitchComponent implements OnInit {\n  /**\n   * Значение переключателя.\n   * @type {boolean}\n   * @default false\n   * @memberof SwitchComponent\n   */\n  @Input() value: boolean = false;\n\n  /**\n   * Событие, которое срабатывает при переключении состояния.\n   * @type {EventEmitter}\n   * @memberof SwitchComponent\n   */\n  @Output() toggle: EventEmitter = new EventEmitter();\n\n  /**\n   * Контроль для валидации состояния переключателя (истина).\n   * @type {FormControl}\n   * @memberof SwitchComponent\n   */\n  protected readonly invalidTrue = new FormControl(true, () => ({\n    invalid: true,\n  }));\n\n  /**\n   * Контрол для валидации состояния переключателя (ложь).\n   * @type {FormControl}\n   * @memberof SwitchComponent\n   */\n  protected readonly invalidFalse = new FormControl(false, () => ({\n    invalid: true,\n  }));\n\n  /**\n   * Инициализация компонента.\n   * @memberof SwitchComponent\n   */\n  public ngOnInit(): void {\n    this.invalidTrue.markAsTouched();\n    this.invalidFalse.markAsTouched();\n  }\n\n  /**\n   * Обработчик события переключения.\n   * @memberof SwitchComponent\n   * @example\n   * onToggle(); // Вызывает событие toggle с текущим значением переключателя.\n   */\n  onToggle(): void {\n    this.toggle.emit(this.value);\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./switch.component.css\n                \n                .switch {\n    position: relative;\n    display: inline-block;\n    width: 40.8px; /* 34px * 1.2 */\n    height: 24px;  /* 20px * 1.2 */\n}\n\n.switch input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n}\n\n.slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #f44336;\n    transition: .4s;\n    border-radius: 34px; /* Можно оставить без изменений, если не хотите менять форму */\n}\n\n.slider:before {\n    position: absolute;\n    content: \"\";\n    height: 16.8px; /* 14px * 1.2 */\n    width: 16.8px;  /* 14px * 1.2 */\n    left: 4px;      /* 3px * 1.2 */\n    bottom: 4px;    /* 3px * 1.2 */\n    background-color: white;\n    transition: .4s;\n    border-radius: 50%;\n}\n\ninput:checked + .slider {\n    background-color: #4caf50;\n}\n\ninput:checked + .slider:before {\n    transform: translateX(16.8px); /* 14px * 1.2 */\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SwitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/apiServiceShortStructure.html":{"url":"interfaces/apiServiceShortStructure.html","title":"interface - apiServiceShortStructure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  apiServiceShortStructure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/apiServiceShortStructure.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface apiServiceShortStructure {\n  name: string;\n  isActive: boolean;\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/components/alert-delete/alert-delete.component.ts\n            \n            component\n            AlertDeleteComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/data/components/api-dialog/api-dialog.component.ts\n            \n            component\n            ApiDialogComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/data/components/back-button/back-button.component.ts\n            \n            component\n            BackButtonComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/data/components/card-api/card-api.component.ts\n            \n            component\n            CardApiComponent\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/data/components/card-endpoint/card-endpoint.component.ts\n            \n            component\n            CardEndpointComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/data/components/card-entity/card-entity.component.ts\n            \n            component\n            CardEntityComponent\n            \n                82 %\n                (14/17)\n            \n        \n        \n            \n                \n                src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts\n            \n            component\n            EndpointDialogComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/data/components/entity-dialog/entity-dialog.component.ts\n            \n            component\n            EntityDialogComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/data/components/export-api-button/export-api-button.component.ts\n            \n            component\n            ExportApiButtonComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/data/components/filter-by-input/filter-by-input.component.ts\n            \n            component\n            FilterByInputComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/data/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/data/components/icon-trash/icon-trash.component.ts\n            \n            component\n            IconTrashComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/data/components/import-dialog/import-dialog.component.ts\n            \n            component\n            ImportDialogComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/data/components/loading/loading.component.ts\n            \n            component\n            LoadingComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/data/components/pagination/pagination.component.ts\n            \n            component\n            PaginationComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/data/components/switch/switch.component.ts\n            \n            component\n            SwitchComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts\n            \n            component\n            ApiEndpointListComponent\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                src/app/data/pages/card-api-list/card-api-list.component.ts\n            \n            component\n            CardApiListComponent\n            \n                100 %\n                (45/45)\n            \n        \n        \n            \n                \n                src/app/data/pages/endpoint-card-list/endpoint-card-list.component.ts\n            \n            component\n            EndpointCardListComponent\n            \n                100 %\n                (24/24)\n            \n        \n        \n            \n                \n                src/app/data/pages/entity-card-list/entity-card-list.component.ts\n            \n            component\n            EntityCardListComponent\n            \n                100 %\n                (34/34)\n            \n        \n        \n            \n                \n                src/app/data/pages/error-display/error-display.component.ts\n            \n            component\n            ErrorDisplayComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/data/pages/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/interceptors/http-error.interceptor.ts\n            \n            interceptor\n            HttpErrorInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/ApiServiceStructure.ts\n            \n            interface\n            ApiServiceStructure\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/Endpoint.ts\n            \n            interface\n            Endpoint\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/Entity.ts\n            \n            interface\n            Entity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/EntityShort.ts\n            \n            interface\n            EntityShort\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/FileStatus.ts\n            \n            interface\n            FileStatus\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/apiServiceShortStructure.ts\n            \n            interface\n            apiServiceShortStructure\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/repositories/api-service-repository.service.ts\n            \n            injectable\n            ApiServiceRepositoryService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/repositories/endpoint-repository.service.ts\n            \n            injectable\n            EndpointRepositoryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/repositories/entity-repository.service.ts\n            \n            injectable\n            EntityRepositoryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/api-hub-service.service.ts\n            \n            injectable\n            ApiHubServiceService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/api-service.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/endpoint-service.service.ts\n            \n            injectable\n            EndpointService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/entity-service.service.ts\n            \n            injectable\n            EntityService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/error-handler.service.ts\n            \n            injectable\n            ErrorHandlerService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^19.1.0\n        \n            @angular/common : ^19.1.0\n        \n            @angular/compiler : ^19.1.0\n        \n            @angular/core : ^19.1.0\n        \n            @angular/forms : ^19.1.0\n        \n            @angular/platform-browser : ^19.1.0\n        \n            @angular/platform-browser-dynamic : ^19.1.0\n        \n            @angular/router : ^19.1.0\n        \n            @microsoft/signalr : ^8.0.7\n        \n            @taiga-ui/addon-charts : ^4.21.0\n        \n            @taiga-ui/addon-commerce : ^4.21.0\n        \n            @taiga-ui/addon-doc : ^4.21.0\n        \n            @taiga-ui/addon-mobile : ^4.21.0\n        \n            @taiga-ui/addon-table : ^4.21.0\n        \n            @taiga-ui/cdk : ^4.21.0\n        \n            @taiga-ui/core : ^4.21.0\n        \n            @taiga-ui/event-plugins : ^4.0.2\n        \n            @taiga-ui/experimental : ^4.21.0\n        \n            @taiga-ui/icons : ^4.22.0\n        \n            @taiga-ui/icons-fontawesome : ^4.22.0\n        \n            @taiga-ui/icons-material : ^4.22.0\n        \n            @taiga-ui/kit : ^4.21.0\n        \n            @taiga-ui/layout : ^4.21.0\n        \n            @taiga-ui/legacy : ^4.24.0\n        \n            jszip : ^3.10.1\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nApiEasier\nThis project was generated using Angular CLI version 19.1.3.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    23 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideHttpClient(),\n    { provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true },\n    provideAnimations(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(APP_ROUTES),\n    NG_EVENT_PLUGINS,\n  ],\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
