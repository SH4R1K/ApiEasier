var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AlertDeleteComponent.html",[0,0.011,1,0.639]],["body/components/AlertDeleteComponent.html",[0,0.018,1,1.199,2,0.902,3,0.2,4,0.171,5,0.765,6,0.926,7,0.765,8,0.765,9,0.171,10,4.126,11,3.28,12,3.065,13,0.926,14,0.025,15,0.998,16,2.076,17,1.326,18,1.246,19,0.765,20,1.512,21,1.512,22,1.391,23,2.992,24,1.03,25,2.493,26,1.246,27,5.495,28,1.03,29,4.861,30,0.171,31,0.625,32,2.877,33,2.047,34,3.382,35,0.902,36,0.765,37,3.776,38,0.952,39,0.392,40,3.611,41,5.878,42,0.51,43,1.345,44,0.357,45,0.217,46,2.222,47,3.611,48,0.717,49,2.044,50,1.411,51,0.269,52,0.392,53,3.611,54,1.048,55,2.365,56,0.765,57,1.03,58,0.765,59,1.246,60,0.765,61,0.35,62,0.765,63,0.67,64,1.091,65,1.03,66,1.246,67,0.67,68,0.764,69,1.246,70,0.67,71,0.765,72,0.67,73,0.765,74,1.03,75,0.67,76,1.254,77,0.765,78,0.717,79,0.67,80,0.765,81,0.67,82,0.765,83,0.67,84,0.67,85,0.717,86,0.676,87,0.67,88,0.67,89,0.542,90,0.765,91,0.67,92,0.67,93,0.765,94,0.765,95,0.67,96,0.765,97,0.67,98,0.765,99,0.765,100,0.67,101,0.67,102,0.765,103,0.67,104,0.717,105,0.765,106,0.67,107,0.765,108,0.67,109,0.717,110,0.717,111,0.765,112,0.016,113,0.016]],["title/components/ApiDialogComponent.html",[0,0.011,63,0.639]],["body/components/ApiDialogComponent.html",[0,0.014,1,0.437,2,0.664,3,0.13,4,0.111,5,0.499,6,0.604,7,0.499,8,0.499,9,0.111,13,1.332,14,0.025,15,0.946,16,1.797,17,0.976,18,1.024,19,0.499,20,1.45,21,1.45,22,0.499,24,0.758,26,0.917,28,0.758,30,0.111,31,0.46,32,3.373,33,2.037,34,2.662,35,0.664,36,0.917,37,3.196,38,0.837,39,0.663,42,0.502,44,0.354,45,0.252,46,1.45,48,0.71,49,1.333,50,1.741,51,0.198,52,0.255,54,1.775,56,0.499,57,0.758,58,0.499,59,1.024,60,0.499,61,0.394,62,0.499,63,1.216,64,1.262,65,1.024,66,1.024,67,0.437,68,0.602,69,1.024,70,0.437,71,0.499,72,0.437,73,0.499,74,0.758,75,0.437,76,1.085,77,0.499,78,0.468,79,0.437,80,0.499,81,0.437,82,0.499,83,0.437,84,0.437,85,0.468,86,0.498,87,0.437,88,0.437,89,0.353,90,0.499,91,0.437,92,0.437,93,0.499,94,0.499,95,0.437,96,0.499,97,0.437,98,0.499,99,0.499,100,0.437,101,0.437,102,0.499,103,0.437,104,0.468,105,0.499,106,0.437,107,0.499,108,0.437,109,0.468,110,0.468,111,0.499,112,0.012,113,0.012,114,5.275,115,4.656,116,1.45,117,1.623,118,2.662,119,3.24,120,1.962,121,2.919,122,2.919,123,3.24,124,3.24,125,3.24,126,2.919,127,2.919,128,2.414,129,2.919,130,4.325,131,0.978,132,3.24,133,3.671,134,0.537,135,3.036,136,2.68,137,2.68,138,2.68,139,2.202,140,3.24,141,2.105,142,3.036,143,5.467,144,2.355,145,0.78,146,0.78,147,3.036,148,0.853,149,1.41,150,2.68,151,4.194,152,2.355,153,2.68,154,3.619,155,2.355,156,3.619,157,1.332,158,3.577,159,2.355,160,2.355,161,2.355,162,3.036,163,3.036,164,4.1,165,2.355,166,2.68,167,2.355,168,2.202,169,3.577,170,3.036,171,2.355,172,1.765,173,2.355,174,1.765,175,2.355,176,1.799,177,1.765,178,1.999,179,1.146,180,2.414,181,1.069,182,1.333,183,1.069,184,1.251,185,0.917,186,1.999,187,1.765,188,1.799,189,1.589,190,1.765,191,1.765,192,1.765,193,1.146,194,0.824,195,1.834,196,0.774,197,1.765,198,1.765,199,2.68,200,3.24,201,1.765,202,1.589,203,1.589,204,1.765,205,1.999,206,2.355]],["title/components/ApiEndpointListComponent.html",[0,0.011,67,0.639]],["body/components/ApiEndpointListComponent.html",[0,0.012,1,0.333,2,0.536,3,0.099,4,0.085,5,0.38,6,0.46,7,0.38,8,0.38,9,0.085,14,0.025,15,0.544,18,0.612,19,0.38,20,1.399,21,1.411,22,0.38,24,0.612,25,1.646,26,0.741,28,0.612,30,0.085,31,0.371,35,0.905,36,1.034,38,1.021,39,0.686,42,0.511,43,0.668,44,0.177,45,0.252,48,0.573,51,0.16,52,0.194,55,2.373,56,0.38,57,0.612,58,0.38,59,0.967,60,0.38,61,0.416,62,0.38,63,0.333,64,1.192,65,0.612,66,0.882,67,0.772,68,0.993,69,0.882,70,0.333,71,0.38,72,0.333,73,0.38,74,0.612,75,0.333,76,0.968,77,0.38,78,0.356,79,0.333,80,0.38,81,0.333,82,0.38,83,0.333,84,0.333,85,0.356,86,0.844,87,0.333,88,0.333,89,0.867,90,0.38,91,0.333,92,0.333,93,0.38,94,0.38,95,0.772,96,0.38,97,0.333,98,0.882,99,0.38,100,0.333,101,0.772,102,0.38,103,0.333,104,0.356,105,0.38,106,0.333,107,0.38,108,0.772,109,0.968,110,0.356,111,0.38,112,0.01,113,0.01,120,1.646,131,1.478,134,0.434,145,0.889,146,0.889,148,0.867,149,1.547,157,1.699,184,1.01,185,0.46,194,1.269,195,1.225,196,0.589,207,5.413,208,5.413,209,1.343,210,1.778,211,2.448,212,3.08,213,1.406,214,1.406,215,3.117,216,3.628,217,1.9,218,1.793,219,2.452,220,2.448,221,3.079,222,2.718,223,3.628,224,2.582,225,3.08,226,2.889,227,2.889,228,2.889,229,2.889,230,4.161,231,3.532,232,2.808,233,2.889,234,3.628,235,2.889,236,2.889,237,0.612,238,1.522,239,2.808,240,2.037,241,2.685,242,2.718,243,2.179,244,2.903,245,2.903,246,1.9,247,2.179,248,1.351,249,1.455,250,2.452,251,2.561,252,2.889,253,0.95,254,1.793,255,2.054,256,2.889,257,1.793,258,1.635,259,2.889,260,1.793,261,2.889,262,1.888,263,1.793,264,3.628,265,1.793,266,1.793,267,1.793,268,2.889,269,1.793,270,3.683,271,1.793,272,1.793,273,2.889,274,1.793,275,2.889,276,1.793,277,3.6,278,1.793,279,1.12,280,2.179,281,1.522,282,1.522,283,1.793,284,2.68,285,1.522,286,2.448,287,1.793,288,0.872,289,0.939,290,0.939,291,1.015,292,1.522,293,0.589,294,0.52,295,1.522,296,1.21,297,1.522,298,1.343,299,1.21,300,0.939,301,1.9,302,1.343,303,1.343,304,1.522,305,2.452,306,1.949,307,1.793,308,1.522,309,2.164,310,1.793,311,1.793,312,1.793,313,1.793,314,2.025,315,1.793,316,2.452,317,2.355,318,1.793,319,1.793,320,2.452,321,1.793,322,1.522,323,1.793,324,1.793,325,1.793,326,1.793,327,1.793,328,1.793,329,1.793,330,1.793,331,1.793,332,1.21,333,1.793,334,1.793,335,1.21,336,2.452,337,1.522,338,1.793,339,1.793,340,1.793,341,2.889,342,1.793,343,1.793,344,1.793,345,1.522,346,1.793,347,1.646,348,2.233,349,1.793,350,1.343,351,1.343,352,4.161,353,1.793,354,1.343,355,1.793,356,3.08,357,2.122,358,2.889,359,2.889,360,2.889,361,2.452,362,2.961,363,2.22,364,1.343,365,3.628,366,2.499,367,2.175,368,1.793,369,2.41,370,3.08,371,2.754,372,2.794,373,1.793,374,1.9,375,1.793,376,2.495,377,2.373,378,3.628,379,4.161,380,2.389,381,2.889,382,1.793,383,2.025,384,1.21,385,2.175,386,2.866,387,2.212,388,2.025,389,2.054,390,2.718,391,2.497,392,2.889,393,2.66,394,2.175,395,3.628,396,1.935,397,2.553,398,2.164,399,2.212,400,3.873,401,1.793,402,1.793,403,0.872,404,1.766,405,1.793,406,1.793,407,1.793,408,2.355,409,1.513,410,1.793,411,1.793,412,1.793,413,1.793,414,1.793,415,1.793,416,1.103,417,1.522,418,1.635,419,2.07,420,1.778,421,1.766,422,2.355,423,1.793,424,1.522,425,3.653,426,1.793,427,1.21,428,1.793,429,2.164,430,1.9,431,1.522,432,1.793,433,1.103,434,1.522,435,2.355,436,1.793,437,1.793,438,2.179,439,1.522,440,1.949,441,2.164,442,2.164,443,3.117,444,3.117,445,1.793,446,1.793,447,1.793,448,2.448,449,1.513,450,1.406,451,2.561,452,1.635,453,1.635,454,2.389,455,1.103,456,4.562,457,1.793,458,3.08,459,3.418,460,1.103,461,1.21,462,2.889,463,1.522,464,1.793,465,1.793,466,2.452,467,1.778,468,1.793,469,1.21,470,1.225,471,1.225,472,1.513,473,1.793,474,2.889,475,1.793,476,1.793,477,1.21,478,1.793,479,1.343,480,1.21,481,1.343,482,1.21,483,2.233,484,1.793,485,0.813,486,1.21,487,1.21,488,1.103]],["title/injectables/ApiHubServiceService.html",[489,0.882,490,2.578]],["body/injectables/ApiHubServiceService.html",[3,0.233,4,0.199,9,0.199,14,0.025,30,0.28,31,0.691,35,1.099,36,1.255,38,0.73,39,0.715,42,0.503,44,0.417,45,0.234,51,0.233,52,0.457,61,0.464,64,1.099,112,0.018,113,0.018,131,1.549,134,0.807,145,0.68,146,0.68,148,0.632,149,1.014,176,2.552,183,1.91,184,1.472,185,1.379,195,2.734,196,1.383,237,1.255,241,2.815,253,0.889,279,1.66,293,1.383,336,3.574,337,3.574,429,3.155,442,3.155,489,1.379,490,4.028,491,1.91,492,5.02,493,5.815,494,2.592,495,5.922,496,3.997,497,5.922,498,5.922,499,5.376,500,5.376,501,5.376,502,4.211,503,4.211,504,2.071,505,5.922,506,4.211,507,5.376,508,4.211,509,5.376,510,4.211,511,2.882,512,5.376,513,4.211,514,5.922,515,3.574,516,4.211,517,2.049,518,1.91,519,5.376,520,4.211,521,4.211,522,4.211,523,4.211,524,4.211,525,4.211,526,4.211,527,3.574,528,3.574,529,4.211,530,4.211,531,4.211,532,4.211,533,4.211,534,4.211,535,4.211,536,4.211,537,5.922,538,5.922,539,4.211,540,5.922,541,4.211,542,4.211,543,3.309,544,5.376,545,5.922,546,4.211,547,4.211,548,4.211,549,4.211,550,4.211,551,4.211,552,4.211]],["title/injectables/ApiService.html",[241,1.802,489,0.882]],["body/injectables/ApiService.html",[3,0.211,4,0.18,9,0.18,14,0.025,15,0.572,23,2.345,30,0.18,31,0.648,35,0.707,36,0.808,38,0.978,39,0.736,42,0.542,44,0.377,45,0.263,48,0.756,51,0.211,52,0.413,61,0.484,89,0.756,112,0.017,113,0.017,131,1.52,134,0.756,145,1.073,146,1.073,148,0.997,176,2.437,183,1.728,185,1.704,194,1.332,237,1.068,240,1.513,241,2.638,248,2.102,249,2.1,253,1.034,262,2.725,279,1.854,284,1.854,291,2.156,293,1.252,294,1.106,300,3.52,489,1.292,491,1.728,492,5.126,494,2.345,496,3.809,511,3.425,517,1.854,518,1.728,543,3.1,553,4.791,554,4.276,555,4.276,556,5.097,557,4.276,558,3.1,559,4.791,560,4.791,561,2.854,562,4.499,563,3.809,564,3.145,565,5.038,566,3.774,567,3.234,568,3.81,569,4.276,570,3.81,571,4.276,572,3.81,573,3.696,574,3.81,575,4.276,576,3.81,577,3.4,578,4.211,579,3.81,580,3.234,581,3.81,582,3.234,583,3.81,584,3.774,585,2.345,586,2.571,587,2.571,588,2.571,589,2.571,590,4.903,591,3.81,592,4.903,593,4.903,594,3.81,595,5.038,596,2.571,597,3.81,598,3.81,599,2.854,600,3.81,601,2.571,602,2.571,603,1.419,604,1.616,605,2.571]],["title/injectables/ApiServiceRepositoryService.html",[243,1.802,489,0.882]],["body/injectables/ApiServiceRepositoryService.html",[3,0.237,4,0.203,9,0.203,14,0.025,30,0.203,38,1.034,39,0.738,42,0.523,44,0.423,45,0.266,51,0.237,52,0.464,61,0.49,112,0.018,113,0.018,134,0.815,145,1.086,146,1.086,148,1.009,176,2.505,183,1.942,185,1.725,237,0.907,241,3.467,243,2.845,253,1.051,262,2.848,279,1.939,291,2.423,293,1.406,295,3.634,296,2.889,300,3.721,489,1.393,491,1.942,511,3.448,517,2.083,518,1.942,543,3.344,553,5.066,554,4.612,555,4.612,556,5.329,557,4.612,559,5.066,560,5.066,567,3.634,569,4.612,571,4.612,573,3.673,575,4.612,580,3.634,582,3.634,606,5.832,607,2.889,608,4.281,609,4.281,610,3.207,611,4.281,612,4.281,613,3.207,614,3.207,615,4.281,616,4.281,617,2.083,618,4.281,619,4.281,620,4.281,621,4.281,622,4.281,623,4.281,624,4.281]],["title/interfaces/ApiServiceStructure.html",[262,1.561,625,1.203]],["body/interfaces/ApiServiceStructure.html",[3,0.293,4,0.25,9,0.25,13,1.731,14,0.024,30,0.25,31,0.795,38,1.135,42,0.427,45,0.267,51,0.293,61,0.486,86,0.957,112,0.021,113,0.021,222,5.058,253,1.045,262,2.806,279,2.085,625,1.851,626,2.772,627,4.494]],["title/components/AppComponent.html",[0,0.011,70,0.639]],["body/components/AppComponent.html",[0,0.02,1,0.821,2,1.03,3,0.245,4,0.209,5,0.938,7,0.938,8,0.938,9,0.209,14,0.024,15,0.664,18,1.176,19,0.938,20,1.534,21,1.534,22,0.938,24,1.176,28,1.176,30,0.209,31,0.713,35,0.821,36,0.938,39,0.48,42,0.513,44,0.438,45,0.175,48,0.878,51,0.307,52,0.48,56,0.938,57,1.176,58,0.938,59,1.347,60,0.938,61,0.399,62,0.938,63,0.821,64,1.179,65,1.176,66,1.347,67,0.821,68,0.843,69,1.347,70,1.179,71,0.938,72,0.821,73,0.938,74,1.176,75,0.821,76,1.325,77,0.938,78,0.878,79,0.821,80,0.938,81,0.821,82,0.938,83,0.821,84,0.821,85,0.878,86,0.772,87,0.821,88,0.821,89,0.664,90,0.938,91,0.821,92,0.821,93,0.938,94,0.938,95,0.821,96,0.938,97,0.821,98,0.938,99,0.938,100,0.821,101,0.821,102,0.938,103,0.821,104,0.878,105,0.938,106,0.821,107,0.938,108,0.821,109,0.878,110,0.878,111,0.938,112,0.019,113,0.019,217,3.173,253,0.664,294,1.284,518,2.517,628,3.755,629,6.06,630,6.06,631,5.547,632,2.905,633,5.547,634,6.06,635,4.708,636,4.424]],["title/components/BackButtonComponent.html",[0,0.011,72,0.639]],["body/components/BackButtonComponent.html",[0,0.017,1,0.609,2,0.845,3,0.182,4,0.155,5,0.696,6,0.842,7,0.696,8,0.696,9,0.155,13,1.168,14,0.025,17,1.243,18,1.197,19,0.696,20,1.5,21,1.5,22,0.696,24,0.696,26,1.341,28,0.965,30,0.155,39,0.494,42,0.456,43,1.223,44,0.325,45,0.13,50,1.518,51,0.252,52,0.356,54,1.322,56,0.696,57,0.965,58,0.696,59,1.197,60,0.696,61,0.376,62,0.696,63,0.609,64,1.048,65,0.965,66,1.197,67,0.609,68,0.727,69,1.197,70,0.609,71,0.696,72,1.225,73,1.36,74,0.965,75,0.609,76,1.219,77,0.696,78,0.652,79,0.609,80,0.696,81,0.609,82,0.696,83,0.609,84,0.609,85,0.652,86,0.633,87,0.609,88,0.609,89,0.683,90,0.696,91,0.609,92,0.609,93,0.696,94,0.696,95,0.609,96,0.696,97,0.609,98,0.696,99,0.696,100,0.609,101,0.609,102,0.696,103,0.609,104,0.652,105,0.696,106,0.609,107,0.696,108,0.609,109,0.652,110,0.652,111,0.696,112,0.015,113,0.015,131,0.742,134,0.683,145,0.53,146,0.53,148,0.493,149,1.097,168,2.803,188,1.696,195,2.217,237,0.696,240,2.671,277,4.143,294,0.953,332,2.215,335,2.215,362,1.719,366,2.066,367,1.392,369,2.077,371,1.489,374,1.719,380,2.738,391,2.217,393,1.931,394,1.392,396,1.392,399,1.489,438,1.719,449,1.719,454,1.719,470,1.392,471,1.392,472,1.719,485,1.489,617,1.597,632,1.719,637,4.438,638,3.918,639,2.459,640,4.995,641,4.438,642,3.865,643,4.794,644,3.282,645,3.282,646,3.282,647,3.282,648,3.282,649,3.282,650,3.282,651,3.282,652,3.282,653,3.282,654,4.554,655,4.438,656,2.786,657,2.786,658,2.786]],["title/components/CardApiComponent.html",[0,0.011,75,0.639]],["body/components/CardApiComponent.html",[0,0.013,1,0.388,2,0.605,3,0.115,4,0.099,5,0.443,6,0.535,7,0.443,8,0.443,9,0.099,13,1.028,14,0.025,15,0.602,16,1.071,17,0.89,18,0.961,19,0.443,20,1.429,21,1.429,22,0.443,24,0.691,25,1.82,26,0.836,28,0.691,30,0.099,31,0.419,33,1.494,35,0.605,36,0.691,38,0.695,39,0.628,42,0.494,43,1.214,44,0.207,45,0.229,48,0.414,50,1.316,51,0.222,52,0.226,54,1.58,55,2.206,56,0.443,57,0.691,58,0.443,59,0.961,60,0.443,61,0.326,62,0.443,63,0.605,64,1.291,65,0.691,66,0.961,67,0.388,68,0.558,69,0.961,70,0.388,71,0.443,72,0.388,73,0.443,74,0.691,75,1.179,76,1.233,77,0.443,78,0.414,79,0.388,80,0.443,81,0.388,82,0.443,83,0.388,84,0.388,85,0.414,86,0.454,87,0.388,88,0.388,89,0.868,90,0.443,91,0.841,92,0.388,93,0.443,94,0.443,95,0.388,96,0.443,97,0.841,98,0.691,99,0.443,100,0.388,101,0.388,102,0.443,103,0.388,104,0.414,105,0.443,106,0.388,107,0.443,108,0.841,109,0.414,110,0.414,111,0.443,112,0.011,113,0.011,115,1.564,117,1.82,120,1.82,131,1.178,134,0.489,141,2.392,145,0.526,146,0.526,148,0.602,149,1.184,157,0.778,176,1.688,183,0.947,184,1.14,188,1.831,193,1.586,194,1.822,196,1.071,213,1.586,214,1.586,217,2.1,220,2.707,237,0.691,242,3.005,243,2.373,246,2.373,247,2.373,248,1.688,249,1.585,253,0.489,255,1.182,270,3.026,288,1.016,294,0.606,299,1.409,300,1.093,301,1.093,306,2.2,314,2.206,317,1.182,320,1.772,345,2.767,347,1.82,348,2.007,357,1.14,362,1.093,363,1.016,366,2.056,367,1.922,369,2.298,371,2.23,372,1.093,374,1.093,376,1.586,377,1.586,380,1.093,383,1.016,385,1.383,386,2.206,387,1.479,388,1.016,389,1.845,391,2.209,393,2.085,394,1.701,396,1.383,397,1.707,399,1.479,403,1.016,404,1.952,408,1.182,409,1.707,416,1.285,418,1.182,419,1.479,420,1.285,421,1.952,422,1.182,427,1.409,430,2.728,433,1.285,435,1.182,438,1.093,449,1.093,450,1.586,451,2.007,452,2.27,453,1.182,454,1.707,455,1.285,460,2.79,461,2.2,467,1.285,469,1.409,470,1.383,471,1.383,472,1.093,482,1.409,483,2.007,485,1.82,486,1.409,487,1.409,488,1.285,504,0.73,543,2.468,603,1.494,604,1.383,640,4.708,659,3.994,660,5.023,661,1.772,662,4.011,663,2.088,664,3.26,665,3.396,666,2.2,667,3.396,668,1.479,669,1.586,670,4.011,671,1.772,672,2.088,673,2.088,674,2.206,675,2.088,676,2.088,677,2.2,678,2.088,679,2.088,680,3.26,681,1.586,682,2.088,683,2.088,684,2.088,685,1.586,686,2.007,687,1.564,688,1.285,689,1.285,690,1.564,691,1.564,692,1.772,693,3.26,694,2.443,695,2.2,696,1.772,697,2.088,698,1.772,699,4.011,700,1.409,701,3.26,702,1.772,703,1.772,704,2.088,705,2.088,706,2.1,707,2.088,708,1.182,709,1.409,710,1.564,711,1.845,712,1.285,713,1.409,714,1.409,715,2.088,716,2.088,717,3.26,718,3.26,719,1.564,720,1.409,721,1.564,722,1.564,723,1.564,724,3.318,725,2.2,726,1.564,727,1.564,728,1.285,729,1.409,730,1.564,731,1.182,732,3.318,733,1.564,734,1.564,735,1.564,736,3.396,737,1.564,738,1.564,739,1.564,740,1.564,741,1.564,742,1.409,743,1.707,744,1.285,745,1.285,746,1.409]],["title/components/CardEndpointComponent.html",[0,0.011,79,0.639]],["body/components/CardEndpointComponent.html",[0,0.013,1,0.354,2,0.563,3,0.105,4,0.09,5,0.404,6,0.489,7,0.404,8,0.404,9,0.09,13,1.348,14,0.025,15,0.567,16,0.997,17,0.828,18,0.914,19,0.404,20,1.412,21,1.412,22,0.404,24,0.643,25,1.716,26,0.778,28,0.643,30,0.09,31,0.39,33,1.408,35,0.702,36,0.643,38,0.655,39,0.659,42,0.49,43,0.71,44,0.189,45,0.246,48,0.379,50,1.251,51,0.168,52,0.207,54,1.765,55,2.439,56,0.404,57,0.643,58,0.404,59,0.914,60,0.404,61,0.393,62,0.404,63,0.354,64,1.013,65,0.643,66,0.914,67,0.354,68,0.914,69,0.914,70,0.354,71,0.404,72,0.354,73,0.404,74,0.643,75,0.354,76,1.207,77,0.404,78,0.379,79,1.213,80,0.404,81,0.354,82,0.404,83,0.354,84,0.563,85,0.379,86,0.697,87,0.354,88,0.354,89,0.899,90,0.404,91,0.354,92,0.354,93,0.404,94,0.404,95,0.354,96,0.404,97,0.8,98,0.643,99,0.404,100,0.354,101,0.354,102,0.404,103,0.354,104,0.379,105,0.404,106,0.354,107,0.404,108,0.8,109,0.379,110,0.379,111,0.404,112,0.01,113,0.01,117,1.716,131,1.485,134,0.456,141,2.997,145,0.809,146,0.809,148,0.789,149,1.483,157,0.71,176,0.71,183,0.865,184,1.062,188,2.094,193,1.477,194,1.838,196,1.416,217,1.98,221,2.552,237,0.643,240,0.757,245,2.976,246,2.257,247,2.257,248,1.606,249,1.507,253,0.567,255,1.08,270,2.896,286,1.287,289,0.999,290,0.999,293,0.627,294,0.554,301,0.999,302,1.429,309,3.23,314,2.098,317,1.08,347,1.956,348,2.327,354,2.833,357,1.062,363,0.928,366,1.716,367,1.604,369,1.869,371,1.716,376,1.477,377,1.477,383,0.928,385,1.287,386,2.098,387,1.377,388,0.928,389,1.718,391,1.604,393,1.604,394,1.287,396,0.809,397,1.59,399,0.865,403,0.928,404,1.84,409,0.999,416,1.174,419,1.377,420,1.174,421,1.84,427,1.287,430,2.625,433,1.174,435,1.08,450,0.928,451,1.868,452,2.14,453,1.08,455,1.174,460,2.653,461,2.049,467,1.174,469,1.287,470,0.809,471,0.809,482,1.287,485,1.377,504,0.667,603,1.408,604,1.287,659,4.156,665,3.23,666,2.049,667,3.23,668,1.377,669,1.477,674,2.098,677,2.049,681,1.477,685,1.477,686,1.868,687,1.429,688,1.174,689,1.174,690,1.429,694,2.274,695,2.049,700,1.287,702,1.619,703,1.619,706,1.98,708,1.08,709,1.287,710,1.429,711,2.14,712,1.174,713,1.287,714,1.287,719,1.429,720,1.287,721,1.429,722,1.429,723,1.429,724,3.176,725,2.049,726,1.429,727,1.429,728,1.174,729,1.287,730,1.429,731,1.08,732,3.176,733,1.429,734,1.429,735,1.429,736,3.23,737,1.429,738,1.429,739,1.429,740,1.429,741,1.429,742,1.287,743,1.59,744,1.174,745,1.174,746,1.287,747,4.614,748,1.619,749,1.907,750,3.036,751,3.036,752,3.036,753,3.036,754,2.833,755,3.21,756,2.552,757,3.781,758,1.907,759,1.907,760,1.907,761,1.907,762,1.907,763,1.907,764,3.036,765,1.907,766,3.036,767,1.907,768,1.907,769,1.907,770,1.907,771,3.036,772,1.907,773,3.036,774,1.907,775,2.577,776,1.907,777,1.287,778,3.036,779,1.907,780,1.429,781,3.21,782,4.311,783,3.036,784,1.907,785,1.907,786,1.907,787,1.907,788,1.429,789,1.907,790,3.036,791,3.036]],["title/components/CardEntityComponent.html",[0,0.011,81,0.639]],["body/components/CardEntityComponent.html",[0,0.012,1,0.341,2,0.547,3,0.102,4,0.087,5,0.39,6,0.472,7,0.39,8,0.39,9,0.087,13,1.329,14,0.025,15,0.554,16,0.969,17,0.805,18,0.895,19,0.39,20,1.405,21,1.405,22,0.39,24,0.625,25,1.675,26,0.756,28,0.625,30,0.087,31,0.379,33,1.375,35,0.916,36,0.98,38,0.801,39,0.677,42,0.47,43,0.685,44,0.182,45,0.247,48,0.365,50,1.226,51,0.163,52,0.2,54,1.749,55,2.401,56,0.39,57,0.625,58,0.39,59,0.895,60,0.39,61,0.388,62,0.39,63,0.341,64,1,65,0.625,66,0.895,67,0.341,68,0.514,69,0.895,70,0.341,71,0.39,72,0.341,73,0.39,74,0.625,75,0.341,76,1.196,77,0.39,78,0.365,79,0.341,80,0.39,81,1.205,82,0.39,83,0.341,84,0.341,85,0.365,86,0.885,87,0.547,88,0.341,89,0.946,90,0.39,91,0.341,92,0.341,93,0.39,94,0.39,95,0.341,96,0.39,97,0.784,98,0.625,99,0.39,100,0.341,101,0.341,102,0.39,103,0.341,104,0.365,105,0.39,106,0.341,107,0.39,108,0.784,109,0.365,110,0.365,111,0.39,112,0.01,113,0.01,117,1.675,131,1.546,134,0.443,141,2.774,145,0.796,146,0.796,148,0.808,149,1.504,157,0.685,184,1.031,188,2.123,193,1.435,194,1.812,196,1.213,217,1.933,221,2.491,224,2.09,225,3.134,237,0.625,244,3.049,246,1.933,247,2.211,248,1.573,249,1.477,253,0.808,255,1.041,270,2.599,280,1.544,284,2.401,286,2.491,290,0.963,293,0.604,294,0.534,301,0.963,303,1.378,306,1.99,314,2.055,317,1.041,347,1.675,350,2.766,351,1.378,357,1.031,362,0.963,363,0.895,366,1.916,367,1.791,369,2.207,371,2.097,372,0.963,374,0.963,376,1.435,377,1.435,380,0.963,383,0.895,385,1.251,386,2.055,387,1.338,388,0.895,389,1.669,391,2.092,393,1.96,394,1.566,396,1.251,397,1.544,399,1.338,403,0.895,404,1.796,408,1.041,409,1.544,416,1.132,418,1.041,419,1.338,420,1.132,421,1.796,422,1.041,427,1.241,430,2.583,433,1.132,435,1.041,438,0.963,449,0.963,450,1.435,451,1.815,452,2.09,453,1.041,454,1.544,455,1.132,460,2.599,461,1.99,467,1.132,469,1.241,470,1.251,471,1.251,472,0.963,482,1.241,483,1.815,485,1.675,486,1.241,487,1.241,488,1.132,504,0.643,543,2.272,558,1.815,603,1.375,604,1.251,659,4.255,665,3.164,666,1.99,667,3.164,668,1.338,669,1.435,674,2.055,677,1.99,681,1.435,685,1.435,686,1.815,687,1.378,688,1.132,689,1.132,690,1.378,694,2.21,695,1.99,698,2.503,700,1.241,706,1.544,708,1.041,709,1.241,710,1.378,711,1.041,712,1.132,713,1.241,714,1.241,719,1.378,720,1.241,721,1.378,722,1.378,723,1.378,724,3.119,725,1.99,726,1.378,727,1.378,728,1.132,729,1.241,730,1.378,731,1.041,732,3.119,733,1.378,734,1.378,735,1.378,736,3.164,737,1.378,738,1.378,739,1.378,740,1.378,741,1.378,742,1.241,743,1.544,744,1.132,745,1.132,746,1.241,756,2.491,781,3.585,792,5.352,793,1.562,794,1.84,795,2.949,796,2.949,797,4.223,798,2.949,799,2.949,800,3.692,801,1.378,802,1.84,803,1.84,804,1.84,805,1.84,806,2.949,807,1.84,808,1.84,809,2.949,810,1.84,811,2.949,812,1.84,813,2.949,814,1.84,815,2.21,816,1.84,817,1.84,818,1.84,819,2.949,820,1.84,821,1.84,822,1.84,823,1.84,824,1.378,825,2.949,826,1.562,827,3.692,828,2.503,829,1.84,830,1.84,831,1.84,832,1.84,833,1.84,834,1.84,835,1.84,836,1.84,837,1.84,838,1.84,839,2.503,840,2.503]],["title/interfaces/Endpoint.html",[68,0.479,625,1.203]],["body/interfaces/Endpoint.html",[3,0.298,4,0.255,9,0.255,14,0.024,30,0.255,31,0.803,38,1.143,45,0.279,51,0.298,68,0.869,112,0.021,113,0.021,251,4.178,253,1.049,279,2.096,625,1.883,626,2.82,841,4.572]],["title/components/EndpointCardListComponent.html",[0,0.011,83,0.639]],["body/components/EndpointCardListComponent.html",[0,0.013,1,0.361,2,0.573,3,0.108,4,0.092,5,1.008,6,0.499,7,0.413,8,0.413,9,0.092,14,0.025,15,0.463,18,0.654,19,0.413,20,1.416,21,1.416,22,0.413,23,2.359,24,0.654,25,1.739,26,0.791,28,0.654,30,0.092,31,0.397,33,1.428,35,0.939,36,1.072,38,1.005,39,0.718,42,0.515,43,0.725,44,0.193,45,0.256,48,0.387,51,0.171,52,0.211,55,2.314,56,0.413,57,0.654,58,0.413,59,0.924,60,0.413,61,0.426,62,0.413,63,0.361,64,0.81,65,1.008,66,0.924,67,0.361,68,0.948,69,0.924,70,0.361,71,0.413,72,0.361,73,0.413,74,0.654,75,0.361,76,1.411,77,0.413,78,0.387,79,0.81,80,0.413,81,0.361,82,0.413,83,0.81,84,0.573,85,0.387,86,0.85,87,0.361,88,0.361,89,0.655,90,0.413,91,0.361,92,0.361,93,0.413,94,0.413,95,0.81,96,0.413,97,0.361,98,0.413,99,0.413,100,0.361,101,0.81,102,0.413,103,0.361,104,0.387,105,0.413,106,0.361,107,0.413,108,0.81,109,0.387,110,0.387,111,0.413,112,0.01,113,0.01,117,1.739,131,1.558,134,0.463,141,2.675,145,0.914,146,0.914,148,0.917,149,1.602,157,1.149,184,1.525,185,0.791,193,1.502,194,1.769,209,1.459,210,1.899,211,2.587,212,3.254,213,1.502,214,1.502,215,2.312,217,2.007,219,2.619,221,2.587,224,2.691,231,3.702,232,2.943,237,0.654,239,2.943,240,2.009,244,3,245,3,246,2.007,247,2.284,248,1.428,249,1.525,250,1.653,251,3.262,253,0.87,255,1.102,258,2.17,270,2.684,279,0.953,280,2.649,281,1.653,282,1.653,284,2.461,285,1.653,286,3.413,288,0.948,289,1.02,290,1.02,293,0.64,294,0.896,297,1.653,298,1.459,301,1.616,302,1.459,303,1.459,304,1.653,305,2.619,308,1.653,309,1.459,314,2.122,316,3.702,317,2.691,347,1.4,350,2.312,351,1.459,354,1.459,356,2.619,357,2.105,361,1.653,362,2.649,363,2.314,364,2.312,366,1.4,367,0.826,369,2.303,370,1.653,371,2.295,372,2.284,374,1.02,376,1.865,377,1.502,380,2.284,383,2.122,384,2.587,385,1.85,386,2.122,387,1.4,388,0.948,389,1.747,390,1.459,391,2.331,393,2.145,394,1.626,396,1.309,397,2.007,398,2.872,399,1.739,403,0.948,404,1.865,409,1.616,419,2.157,420,1.899,421,1.865,422,2.17,424,1.653,425,1.459,430,2.775,434,1.653,435,1.747,438,1.616,440,1.314,441,1.459,443,2.312,444,1.459,448,1.314,449,1.02,450,0.948,451,1.899,452,1.102,453,1.102,458,2.619,459,1.459,460,1.198,466,1.653,470,0.826,471,0.826,472,1.616,477,2.083,479,2.872,480,2.943,481,1.459,485,1.739,488,1.198,603,1.149,604,0.826,640,4.577,666,2.083,677,2.083,681,1.502,686,1.198,688,1.198,696,1.653,700,1.314,706,1.616,708,1.102,711,1.747,712,1.198,713,1.314,714,1.314,724,1.314,729,1.314,731,1.747,742,1.314,743,1.616,747,1.459,756,2.587,775,2.619,777,1.314,826,1.653,828,1.653,839,2.619,840,2.619,842,5.647,843,5.647,844,5.647,845,3.833,846,1.947,847,3.833,848,3.254,849,2.312,850,3.086,851,3.086,852,3.086,853,4.361,854,3.086,855,4.361,856,3.086,857,4.361,858,2.312,859,1.653,860,1.947,861,3.086,862,1.947,863,3.086,864,1.947,865,3.086,866,1.947,867,3.086,868,1.947,869,1.947,870,1.947,871,1.947,872,3.086,873,1.947,874,3.086,875,1.947,876,1.947,877,3.086,878,1.947,879,1.947,880,3.086,881,1.947,882,1.947,883,1.947,884,1.947,885,1.947,886,1.947,887,1.653,888,1.947,889,1.947,890,1.947,891,3.086,892,1.947,893,1.947,894,4.361,895,1.947,896,1.947,897,1.947,898,1.947,899,1.947,900,3.086,901,1.947,902,1.947,903,1.947,904,1.947,905,1.947,906,1.947,907,1.947,908,1.947,909,1.947,910,1.947,911,1.947,912,1.947,913,1.947,914,3.086,915,2.083,916,1.947,917,1.947,918,3.833,919,3.086,920,1.947,921,1.947,922,3.833,923,1.947,924,1.314,925,5.661,926,4.361,927,1.947,928,4.361,929,3.086,930,1.653,931,1.947,932,1.653,933,1.947,934,1.947,935,1.653,936,1.947,937,1.947,938,1.947,939,1.947,940,1.947,941,1.314,942,1.947,943,1.947]],["title/components/EndpointDialogComponent.html",[0,0.011,84,0.639]],["body/components/EndpointDialogComponent.html",[0,0.015,1,0.5,2,0.733,3,0.149,4,0.127,5,0.57,6,0.69,7,0.57,8,0.57,9,0.127,13,1.201,14,0.025,15,0.914,16,1.298,17,1.078,18,1.094,19,0.57,20,1.472,21,1.472,22,0.57,23,2.432,24,0.838,26,1.013,28,0.838,30,0.127,31,0.508,32,3.355,33,2.315,34,2.882,35,0.869,36,1.094,37,2.882,38,0.894,39,0.661,42,0.517,44,0.391,45,0.25,46,1.656,48,0.784,49,1.523,50,1.498,51,0.219,52,0.292,54,1.768,56,0.57,57,0.838,58,0.57,59,1.094,60,0.57,61,0.371,62,0.57,63,0.5,64,0.958,65,0.838,66,1.094,67,0.5,68,0.918,69,1.094,70,0.5,71,0.57,72,0.5,73,0.57,74,0.838,75,0.5,76,1.14,77,0.57,78,0.534,79,0.5,80,0.57,81,0.5,82,0.57,83,0.5,84,1.226,85,0.534,86,0.55,87,0.5,88,0.5,89,0.404,90,0.57,91,0.5,92,0.5,93,0.57,94,0.57,95,0.5,96,0.57,97,0.5,98,0.57,99,0.57,100,0.5,101,0.5,102,0.57,103,0.5,104,0.534,105,0.57,106,0.5,107,0.57,108,0.5,109,0.534,110,0.534,111,0.57,112,0.013,113,0.013,116,1.656,117,1.793,118,2.882,119,3.508,120,2.124,121,3.16,122,3.16,123,3.508,124,3.508,125,3.508,126,3.16,127,3.16,128,2.667,129,3.16,131,1.058,132,3.508,134,0.593,136,2.96,137,2.96,138,3.866,139,2.432,140,3.508,141,2.279,145,0.638,146,0.638,148,0.862,149,1.384,150,2.96,151,3.877,153,2.96,154,3.866,156,3.866,157,1.472,166,2.96,172,2.016,174,2.016,177,2.016,179,1.309,180,2.667,181,1.221,182,1.523,184,1.382,185,1.013,187,2.016,188,1.472,189,1.816,190,2.016,191,2.016,192,2.016,193,1.309,194,0.941,195,1.986,196,0.884,197,2.016,198,2.016,199,2.96,200,3.508,201,2.016,202,1.816,203,1.816,204,2.016,253,0.703,289,1.409,596,2.667,777,4.195,944,5.276,945,4.683,946,2.691,947,2.691,948,2.691,949,2.691,950,2.691,951,3.354,952,3.951,953,2.691,954,2.691,955,2.691,956,2.691,957,2.691]],["title/injectables/EndpointRepositoryService.html",[245,1.948,489,0.882]],["body/injectables/EndpointRepositoryService.html",[3,0.227,4,0.194,9,0.194,14,0.025,30,0.194,38,1.013,39,0.722,42,0.498,44,0.406,45,0.263,51,0.227,52,0.445,61,0.479,68,0.984,112,0.018,113,0.018,134,0.793,145,1.075,146,1.075,148,0.982,185,1.679,237,0.869,245,2.991,253,1.097,258,4.069,279,1.908,289,2.147,293,1.347,296,2.767,489,1.355,491,1.86,511,3.404,517,1.995,518,1.86,607,2.767,610,3.072,613,3.072,614,3.072,617,1.995,754,3.96,780,3.96,788,3.96,849,3.96,958,5.727,959,4.486,960,4.486,961,4.1,962,4.494,963,3.48,964,4.486,965,4.418,966,4.486,967,7.074,968,3.48,969,4.486,970,4.486,971,4.486,972,3.48,973,5.285,974,3.48,975,4.1,976,4.1,977,4.1,978,4.1,979,4.1,980,4.1,981,4.1]],["title/injectables/EndpointService.html",[489,0.882,962,2.322]],["body/injectables/EndpointService.html",[3,0.202,4,0.173,9,0.173,14,0.025,15,0.549,23,2.252,30,0.173,31,0.63,35,0.679,36,0.776,38,0.959,39,0.723,42,0.531,44,0.362,45,0.26,48,0.726,51,0.202,52,0.397,61,0.474,68,0.937,89,0.736,112,0.017,113,0.017,131,1.508,134,0.736,145,1.063,146,1.063,148,0.972,185,1.661,194,1.28,237,1.04,240,1.453,248,2.06,249,2.067,253,1.092,258,3.979,279,1.708,284,1.781,289,1.916,293,1.202,294,1.062,489,1.258,491,1.66,494,2.252,496,3.733,511,3.384,517,1.781,518,1.66,558,3.019,561,2.742,562,4.428,563,3.733,564,3.095,566,3.675,573,3.019,577,3.31,578,4.147,584,3.675,585,2.252,586,2.47,587,2.47,588,2.47,589,2.47,590,4.752,592,4.752,593,4.752,596,2.47,599,2.742,601,2.47,602,2.47,603,1.363,604,1.552,605,2.47,754,4.145,780,4.145,788,4.145,849,4.145,951,3.106,959,4.695,960,4.695,962,3.31,964,3.106,965,4.547,966,3.106,969,3.106,970,3.106,971,3.106,982,5.72,983,4.905,984,6.584,985,3.66,986,6.669,987,3.66,988,3.66,989,3.66,990,3.66,991,3.66,992,3.66,993,3.66,994,4.905,995,5.532,996,3.66]],["title/interfaces/Entity.html",[86,0.479,625,1.203]],["body/interfaces/Entity.html",[3,0.294,4,0.251,9,0.251,14,0.024,30,0.251,31,0.797,38,1.137,42,0.429,45,0.267,51,0.294,61,0.487,68,0.958,86,0.862,112,0.021,113,0.021,253,0.985,279,2.087,625,1.858,626,2.783,848,5.737,941,4.561,997,4.51]],["title/components/EntityDialogComponent.html",[0,0.011,87,0.639]],["body/components/EntityDialogComponent.html",[0,0.013,1,0.375,2,0.589,3,0.112,4,0.095,5,0.428,6,0.518,7,0.428,8,0.428,9,0.095,13,1.427,14,0.025,15,0.859,16,1.043,17,0.866,18,0.943,19,0.428,20,1.423,21,1.423,22,0.428,24,0.673,26,0.814,28,0.673,30,0.095,31,0.408,32,3.334,33,2.133,34,2.415,35,0.898,36,1.139,37,2.415,38,0.931,39,0.696,42,0.49,44,0.314,45,0.259,46,1.242,48,0.63,49,1.142,50,1.491,51,0.176,52,0.219,54,1.848,56,0.428,57,0.673,58,0.428,59,0.943,60,0.428,61,0.412,62,0.428,63,0.375,64,0.826,65,0.943,66,0.943,67,0.375,68,0.546,69,0.943,70,0.375,71,0.428,72,0.375,73,0.428,74,0.673,75,0.375,76,1.02,77,0.428,78,0.401,79,0.375,80,0.428,81,0.375,82,0.428,83,0.375,84,0.375,85,0.401,86,0.857,87,1.23,88,0.375,89,0.589,90,0.428,91,0.375,92,0.375,93,0.428,94,0.428,95,0.375,96,0.428,97,0.375,98,0.428,99,0.428,100,0.375,101,0.375,102,0.428,103,0.375,104,0.401,105,0.428,106,0.375,107,0.428,108,0.375,109,0.401,110,0.401,111,0.428,112,0.011,113,0.011,116,1.242,117,1.44,118,2.415,119,2.94,120,1.78,121,2.648,122,2.648,123,2.94,124,2.94,125,2.94,126,2.648,127,2.648,128,2.142,129,2.648,131,1.393,132,2.94,133,3.331,134,0.476,135,2.695,136,2.379,137,2.379,139,1.954,140,2.94,141,1.91,142,2.695,143,5.295,145,0.868,146,0.868,147,2.695,148,0.912,149,1.484,150,2.379,151,4.1,153,2.379,154,3.333,156,3.333,157,1.183,162,3.331,163,2.695,164,3.777,166,2.379,170,2.695,172,1.512,174,1.512,177,1.512,178,1.713,179,0.982,180,2.142,181,0.916,182,1.797,184,1.879,185,1.378,186,1.713,187,1.512,188,1.913,189,1.362,190,1.512,191,1.512,192,1.512,193,0.982,194,1.11,195,1.664,196,0.663,197,1.512,198,1.512,199,2.379,200,2.94,201,1.512,202,1.362,203,1.362,204,1.512,205,1.713,213,1.545,214,1.545,248,1.462,249,1.11,253,0.88,280,1.057,284,1.91,288,0.982,290,1.057,322,1.713,332,2.142,335,2.142,348,1.242,357,0.706,527,1.713,603,0.752,604,0.856,681,0.982,706,1.057,728,1.242,815,2.379,824,4.847,915,3.757,941,2.648,998,5.491,999,3.924,1000,3.924,1001,3.924,1002,3.175,1003,4.449,1004,3.175,1005,3.175,1006,3.175,1007,2.018,1008,2.018,1009,3.777,1010,3.175,1011,4.449,1012,4.838,1013,3.175,1014,3.175,1015,2.018,1016,2.018,1017,2.018,1018,2.018,1019,3.175,1020,2.018,1021,3.175,1022,2.018,1023,1.713,1024,2.018,1025,2.018,1026,2.018,1027,2.018,1028,2.018,1029,2.018,1030,2.018,1031,2.018,1032,2.018,1033,2.018,1034,2.018,1035,3.924,1036,2.018,1037,2.018,1038,2.018,1039,4.449,1040,2.018,1041,2.695,1042,2.018,1043,2.018,1044,2.018,1045,1.713,1046,2.018,1047,2.018]],["title/injectables/EntityRepositoryService.html",[244,1.948,489,0.882]],["body/injectables/EntityRepositoryService.html",[3,0.237,4,0.202,9,0.202,14,0.025,30,0.202,38,1.034,39,0.729,42,0.506,44,0.423,45,0.266,51,0.237,52,0.464,61,0.484,86,0.986,112,0.018,113,0.018,134,0.815,145,1.086,146,1.086,148,0.993,185,1.697,237,0.906,244,3.073,253,1.089,258,4.022,279,1.938,290,2.24,293,1.405,296,2.886,489,1.392,491,1.94,511,3.423,517,2.081,518,1.94,573,2.632,607,2.886,610,3.204,613,3.204,614,3.204,617,2.081,858,4.068,963,3.63,965,4.371,968,3.63,972,3.63,974,3.63,1048,5.776,1049,4.609,1050,4.609,1051,4.609,1052,4.609,1053,4.609,1054,4.277,1055,4.467,1056,4.609,1057,4.609,1058,4.609,1059,4.609,1060,4.609,1061,4.609,1062,4.277,1063,4.277,1064,4.277,1065,4.277,1066,4.277,1067,4.277,1068,4.277]],["title/injectables/EntityService.html",[489,0.882,1055,2.322]],["body/injectables/EntityService.html",[3,0.206,4,0.176,9,0.176,14,0.025,15,0.558,30,0.176,31,0.637,35,0.69,36,0.788,38,0.966,39,0.733,42,0.545,44,0.368,45,0.261,48,0.738,51,0.206,52,0.403,61,0.476,86,0.969,89,0.744,112,0.017,113,0.017,131,1.512,134,0.744,145,1.067,146,1.067,148,0.992,176,1.384,183,1.686,185,1.694,194,1.299,237,1.05,240,1.476,248,2.076,249,2.079,253,1.079,258,3.883,262,1.686,279,1.721,284,1.808,290,1.946,291,2.103,293,1.221,294,1.079,489,1.271,491,1.686,494,2.287,496,3.762,511,3.416,517,1.808,518,1.686,558,3.049,561,2.784,562,4.455,563,3.762,564,3.114,566,3.712,573,3.049,577,3.344,578,4.193,584,3.712,585,2.287,586,2.508,587,2.508,588,2.508,589,2.508,590,4.873,592,4.873,593,4.873,596,2.508,599,2.784,601,2.508,602,2.508,603,1.384,604,1.576,605,2.508,858,4.176,965,4.389,1049,4.206,1050,4.731,1051,4.206,1052,4.206,1053,4.731,1055,3.344,1056,4.206,1057,3.154,1058,4.206,1059,4.206,1060,3.154,1061,3.154,1069,5.783,1070,5.946,1071,4.955,1072,3.716,1073,3.716,1074,3.716,1075,3.716,1076,3.716,1077,3.716,1078,3.716,1079,3.716,1080,3.716,1081,3.716,1082,3.716,1083,3.716,1084,3.716,1085,3.716,1086,3.716]],["title/interfaces/EntityShort.html",[625,1.203,1087,2.322]],["body/interfaces/EntityShort.html",[3,0.298,4,0.255,9,0.255,14,0.024,30,0.255,31,0.803,38,1.143,45,0.261,51,0.298,61,0.489,112,0.021,113,0.021,253,1.049,279,2.096,625,1.883,626,2.82,941,4.581,1087,4.215,1088,4.572]],["title/components/ErrorDisplayComponent.html",[0,0.011,88,0.639]],["body/components/ErrorDisplayComponent.html",[0,0.019,1,0.743,2,0.966,3,0.221,4,0.189,5,0.848,7,0.848,8,0.848,9,0.189,14,0.025,15,0.601,18,1.103,19,0.848,20,1.523,21,1.523,22,0.848,24,1.103,28,1.103,30,0.189,31,0.669,39,0.688,42,0.494,44,0.396,45,0.228,48,0.794,51,0.288,52,0.434,56,0.848,57,1.103,58,0.848,59,1.297,60,0.848,61,0.416,62,0.848,63,0.743,64,1.136,65,1.103,66,1.297,67,0.743,68,0.804,69,1.297,70,0.743,71,0.848,72,0.743,73,1.225,74,1.103,75,0.743,76,1.291,77,0.848,78,0.794,79,0.743,80,0.848,81,0.743,82,0.848,83,0.743,84,0.743,85,0.794,86,0.724,87,0.743,88,1.136,89,1.008,90,0.848,91,0.743,92,0.743,93,0.848,94,0.848,95,0.743,96,0.848,97,0.743,98,0.848,99,0.848,100,0.743,101,0.743,102,0.848,103,0.743,104,0.794,105,0.848,106,0.743,107,0.848,108,0.743,109,0.794,110,0.794,111,0.848,112,0.018,113,0.018,120,2.623,131,0.905,134,0.781,145,0.646,146,0.646,148,0.781,149,1.474,210,3.202,211,3.901,232,4.131,237,0.848,238,3.397,239,4.131,240,2.63,251,3.202,253,0.919,294,1.162,385,2.206,617,1.947,632,2.725,643,5.196,1089,5.521,1090,5.521,1091,3.397,1092,5.203,1093,5.203,1094,5.386,1095,4.282,1096,5.203,1097,4.002,1098,4.002,1099,4.002,1100,4.002,1101,4.002,1102,4.002,1103,3.397,1104,4.002,1105,4.002,1106,4.002,1107,5.203]],["title/injectables/ErrorHandlerService.html",[489,0.882,564,1.802]],["body/injectables/ErrorHandlerService.html",[3,0.242,4,0.207,9,0.207,14,0.025,15,0.655,30,0.207,35,0.811,39,0.597,42,0.51,44,0.432,45,0.217,48,0.867,51,0.242,52,0.474,61,0.396,89,0.655,109,0.867,112,0.019,113,0.019,131,0.987,134,0.826,145,0.888,146,0.888,148,0.655,149,1.325,185,1.12,237,0.926,240,2.643,249,2.211,294,1.268,453,3.824,489,1.411,491,1.981,517,2.125,518,1.981,558,3.386,564,2.881,577,3.713,578,3.892,585,2.688,617,2.125,709,3.713,815,3.272,859,3.707,1094,5.367,1095,4.715,1103,3.707,1108,5.113,1109,3.707,1110,6.023,1111,4.367,1112,4.367,1113,5.734,1114,4.367,1115,4.367,1116,4.367,1117,4.367,1118,4.367,1119,3.707,1120,4.367,1121,4.367,1122,4.367,1123,4.367,1124,4.367,1125,4.367,1126,4.367,1127,3.707]],["title/components/ExportApiButtonComponent.html",[0,0.011,91,0.639]],["body/components/ExportApiButtonComponent.html",[0,0.017,1,0.609,2,0.845,3,0.181,4,0.155,5,0.695,6,0.841,7,0.695,8,0.695,9,0.155,13,1.167,14,0.025,15,0.784,16,1.495,17,1.242,18,1.197,19,0.695,20,1.5,21,1.5,22,0.695,24,0.965,26,1.167,28,0.965,30,0.155,39,0.567,42,0.495,44,0.324,45,0.223,48,0.651,50,1.321,51,0.36,52,0.356,54,1.517,56,0.695,57,0.965,58,0.695,59,1.197,60,0.695,61,0.406,62,0.695,63,0.609,64,1.329,65,0.965,66,1.197,67,0.609,68,0.727,69,1.197,70,0.609,71,0.695,72,0.609,73,0.695,74,0.965,75,0.609,76,1.218,77,0.695,78,0.651,79,0.609,80,0.695,81,0.609,82,0.695,83,0.609,84,0.609,85,0.651,86,0.633,87,0.609,88,0.609,89,0.784,90,0.695,91,1.237,92,0.609,93,0.695,94,0.695,95,0.609,96,0.695,97,0.609,98,0.695,99,0.695,100,0.609,101,0.609,102,0.695,103,0.609,104,0.651,105,0.695,106,0.609,107,0.695,108,0.609,109,0.651,110,0.651,111,0.695,112,0.015,113,0.015,120,2.371,134,0.683,141,2.215,145,0.53,146,0.53,148,0.492,149,1.096,176,2.103,183,1.488,188,1.222,195,2.515,196,1.495,220,3.527,237,0.695,242,3.916,243,2.956,262,2.065,277,3.071,284,1.596,291,1.856,299,2.213,300,1.717,301,1.717,306,3.071,314,1.596,362,1.717,366,1.488,367,1.391,369,2.242,371,2.065,372,1.717,374,1.717,380,2.737,391,2.217,393,1.93,394,1.391,396,1.391,399,1.488,408,1.856,409,1.717,418,1.856,422,1.856,438,1.717,449,1.717,450,1.596,454,2.383,470,1.391,471,1.391,472,1.717,483,2.801,485,1.488,486,2.213,487,2.213,488,2.019,504,1.147,617,1.596,639,2.457,641,3.863,642,3.863,668,2.065,671,2.784,691,4.23,728,2.019,915,3.81,1128,4.792,1129,3.28,1130,5.646,1131,4.551,1132,3.28,1133,3.28,1134,3.28,1135,3.28,1136,3.28,1137,3.28,1138,3.28,1139,3.28,1140,3.28,1141,3.28,1142,3.28,1143,3.28,1144,3.28,1145,3.28,1146,3.28,1147,3.28]],["title/interfaces/FileStatus.html",[625,1.203,1148,2.322]],["body/interfaces/FileStatus.html",[3,0.289,4,0.247,9,0.324,14,0.025,15,0.784,30,0.247,31,0.789,42,0.422,45,0.266,51,0.289,89,0.978,112,0.021,113,0.021,181,2.37,224,3.688,253,0.978,625,1.827,626,2.736,708,3.688,731,3.688,1095,4.537,1148,4.141,1149,4.435,1150,5.706,1151,6.723]],["title/components/FilterByInputComponent.html",[0,0.011,92,0.639]],["body/components/FilterByInputComponent.html",[0,0.016,1,0.532,2,0.768,3,0.159,4,0.136,5,0.607,6,0.735,7,0.607,8,0.607,9,0.136,13,1.061,14,0.025,15,0.798,16,1.359,17,1.129,18,1.127,19,0.607,20,1.481,21,1.481,22,0.607,24,0.877,26,1.061,28,0.877,30,0.136,31,0.532,35,1.124,36,1.195,39,0.672,42,0.455,44,0.283,45,0.257,50,1.409,51,0.229,52,0.311,54,1.799,56,0.607,57,0.877,58,0.607,59,1.127,60,0.607,61,0.349,62,0.607,63,0.532,64,0.987,65,0.877,66,1.127,67,0.532,68,0.675,69,1.127,70,0.532,71,0.607,72,0.532,73,0.607,74,0.877,75,0.532,76,1.166,77,0.607,78,0.569,79,0.532,80,0.607,81,0.532,82,0.607,83,0.532,84,0.532,85,0.569,86,0.575,87,0.532,88,0.532,89,0.43,90,0.607,91,0.532,92,1.255,93,1.314,94,0.607,95,0.532,96,0.607,97,0.532,98,0.607,99,0.607,100,0.532,101,0.532,102,0.607,103,0.532,104,0.569,105,0.607,106,0.532,107,0.607,108,0.532,109,0.569,110,0.569,111,0.607,112,0.014,113,0.014,121,3.276,122,3.276,134,0.621,139,2.546,145,0.463,146,0.463,148,0.729,149,0.996,151,2.792,168,2.546,179,1.395,181,1.3,182,1.622,184,1.447,185,1.061,188,1.067,189,1.934,195,2.254,196,1.989,202,3.276,203,3.276,213,2.013,214,2.013,237,1.029,253,0.994,288,1.395,387,2.202,419,1.877,431,2.433,480,1.934,504,1.971,668,1.877,669,2.013,674,2.587,681,2.743,685,2.013,924,1.934,932,2.433,1009,4.121,1041,2.433,1152,5.36,1153,5.36,1154,2.433,1155,4.137,1156,3.637,1157,4.855,1158,4.137,1159,4.855,1160,4.137,1161,4.855,1162,5.637,1163,4.855,1164,2.866,1165,5.873,1166,2.866,1167,2.866,1168,2.866,1169,2.866,1170,4.137,1171,2.866,1172,5.316,1173,4.137,1174,3.637,1175,4.137,1176,4.855,1177,2.866,1178,2.866,1179,2.866,1180,2.866,1181,3.511,1182,2.866,1183,2.866,1184,4.137,1185,2.866,1186,2.866,1187,2.866,1188,2.866,1189,2.866,1190,2.866,1191,2.866,1192,2.866,1193,2.866,1194,2.866]],["title/components/HeaderComponent.html",[0,0.011,95,0.639]],["body/components/HeaderComponent.html",[0,0.016,1,0.517,2,0.752,3,0.154,4,0.132,5,0.59,6,0.714,7,0.59,8,0.59,9,0.132,13,0.714,14,0.025,15,0.717,16,1.331,17,1.106,18,1.112,19,0.59,20,1.477,21,1.477,22,0.59,24,0.859,25,2.167,26,1.225,28,0.859,30,0.132,31,0.521,33,1.779,35,1.114,36,1.112,38,0.828,39,0.651,42,0.521,43,1.037,44,0.276,45,0.248,48,0.553,50,1.387,51,0.224,52,0.302,54,1.742,56,0.59,57,0.859,58,0.59,59,1.112,60,0.59,61,0.292,62,0.59,63,0.517,64,1.08,65,0.859,66,1.112,67,0.517,68,0.664,69,1.112,70,0.517,71,0.59,72,0.974,73,0.859,74,0.859,75,0.517,76,1.154,77,0.59,78,0.553,79,0.517,80,0.59,81,0.517,82,0.59,83,0.517,84,0.517,85,0.553,86,0.564,87,0.517,88,0.517,89,0.418,90,0.59,91,0.517,92,0.517,93,0.59,94,0.59,95,1.223,96,0.59,97,0.517,98,0.59,99,0.59,100,0.752,101,0.517,102,0.59,103,0.517,104,0.553,105,0.59,106,0.517,107,0.59,108,0.517,109,0.553,110,0.553,111,0.59,112,0.014,113,0.014,117,2.167,131,1.08,134,0.608,148,0.608,149,1.263,157,1.509,184,1.834,193,1.972,196,1.723,253,0.873,277,2.735,280,2.501,357,1.67,362,1.459,366,1.839,367,1.181,369,2.083,371,1.264,374,1.459,376,1.972,377,2.324,380,1.459,385,1.718,386,2.324,387,1.839,388,1.972,389,1.577,390,2.087,391,2.224,393,1.718,394,1.181,396,1.181,397,1.459,398,2.087,399,1.264,409,2.122,419,2.167,421,2.552,422,1.577,425,4.836,438,2.122,449,1.459,450,1.355,452,2.294,454,1.459,463,2.364,470,1.181,471,1.181,472,1.459,479,2.087,480,1.88,481,2.087,485,1.264,504,0.974,632,1.459,638,2.087,655,3.44,656,2.364,657,2.364,658,2.364,668,1.839,669,1.972,674,2.712,681,1.972,685,1.972,686,3.228,688,1.714,692,2.364,732,2.735,930,2.364,935,2.364,1195,2.364,1196,4.777,1197,4.052,1198,5.245,1199,5.573,1200,4.777,1201,4.777,1202,5.573,1203,2.785,1204,2.785,1205,4.777,1206,2.785,1207,2.785,1208,2.785,1209,2.785,1210,4.052,1211,4.052,1212,2.785,1213,2.087,1214,2.785,1215,2.785,1216,4.052,1217,4.052,1218,2.785,1219,4.052,1220,4.052,1221,2.785,1222,2.785,1223,4.052,1224,3.44]],["title/interceptors/HttpErrorInterceptor.html",[1225,2.921,1226,2.322]],["body/interceptors/HttpErrorInterceptor.html",[3,0.269,4,0.23,9,0.23,14,0.025,15,0.73,30,0.23,39,0.638,42,0.558,44,0.481,45,0.232,48,0.965,51,0.269,52,0.527,61,0.423,112,0.02,113,0.02,131,1.099,134,0.882,145,0.949,146,0.949,148,0.73,185,1.508,194,1.701,210,2.993,237,1.031,240,1.931,248,2.354,249,2.296,293,1.598,294,1.412,314,3.075,489,1.508,511,3.075,563,3.968,564,3.438,578,3.619,585,2.993,586,3.282,587,3.282,588,3.282,589,3.282,601,3.282,602,3.282,603,1.811,604,2.062,605,3.282,617,2.367,1226,3.968,1227,4.863,1228,5.365,1229,4.128,1230,5.88,1231,4.863,1232,4.863,1233,5.88,1234,6.566,1235,6.566,1236,4.863,1237,4.863,1238,4.863,1239,5.88,1240,4.863,1241,4.863,1242,4.863]],["title/components/IconTrashComponent.html",[0,0.011,97,0.639]],["body/components/IconTrashComponent.html",[0,0.016,1,0.779,2,0.779,3,0.162,4,0.138,5,0.62,6,0.75,7,0.62,8,0.62,9,0.138,11,1.974,13,1.077,14,0.025,15,0.805,16,1.379,17,1.146,18,1.137,19,0.62,20,1.484,21,1.484,22,0.89,24,0.62,26,1.077,28,0.89,30,0.138,32,2.572,39,0.661,42,0.52,44,0.289,45,0.258,48,0.581,49,1.656,50,1.219,51,0.232,52,0.317,54,1.769,55,1.424,56,0.62,57,0.89,58,0.62,59,1.137,60,0.62,61,0.354,62,0.62,63,0.543,64,1.098,65,0.89,66,1.137,67,0.543,68,0.847,69,1.137,70,0.543,71,0.62,72,0.543,73,0.62,74,0.89,75,0.543,76,1.174,77,0.62,78,0.581,79,0.543,80,0.62,81,0.543,82,0.62,83,0.543,84,0.543,85,0.581,86,0.584,87,0.543,88,0.543,89,0.439,90,0.62,91,0.543,92,0.543,93,0.62,94,0.62,95,0.543,96,0.62,97,1.251,98,1.321,99,0.62,100,0.543,101,0.543,102,0.62,103,0.543,104,0.581,105,0.62,106,0.543,107,0.62,108,0.543,109,0.581,110,0.581,111,0.62,112,0.014,113,0.014,131,0.949,134,0.63,145,0.472,146,0.472,148,0.439,149,1.011,176,1.999,183,1.327,185,1.077,188,1.564,195,1.241,196,1.867,220,3.314,237,0.89,240,2.475,248,1.829,249,2.068,289,1.532,293,0.961,294,0.849,347,1.327,357,1.023,363,1.424,366,1.327,367,1.241,369,1.95,371,1.327,396,1.241,399,1.327,404,1.424,430,1.532,433,1.801,439,4.169,455,1.801,470,1.241,471,1.241,504,1.023,603,1.09,604,1.241,668,1.905,669,2.043,674,2.611,681,2.39,685,2.043,689,3.836,695,2.833,706,1.532,725,1.974,744,1.801,745,1.801,746,1.974,755,4.169,756,3.314,1045,2.483,1087,3.621,1243,5.29,1244,2.483,1245,4.199,1246,2.926,1247,4.199,1248,5.366,1249,4.911,1250,2.926,1251,4.199,1252,2.926,1253,2.926,1254,2.926,1255,2.926,1256,2.926,1257,2.926,1258,2.926,1259,2.926,1260,2.483,1261,2.926,1262,4.199,1263,2.926,1264,2.926,1265,2.926,1266,2.926,1267,2.926,1268,2.926,1269,4.911,1270,4.199,1271,2.926,1272,2.926]],["title/components/ImportDialogComponent.html",[0,0.011,100,0.639]],["body/components/ImportDialogComponent.html",[0,0.012,1,0.349,2,0.557,3,0.104,4,0.089,5,0.398,6,0.482,7,0.398,8,0.398,9,0.306,13,1.435,14,0.025,15,0.747,16,0.986,17,0.819,18,0.906,19,0.398,20,1.409,21,1.409,22,0.398,24,0.636,26,0.96,28,0.636,30,0.089,31,0.386,32,3.466,33,1.947,34,2.305,35,0.97,36,0.99,37,2.305,38,0.326,39,0.657,42,0.515,43,0.7,44,0.186,45,0.243,48,0.596,49,1.064,50,0.871,51,0.166,52,0.204,54,1.758,55,1.822,56,0.398,57,0.636,58,0.398,59,0.906,60,0.398,61,0.429,62,0.398,63,0.349,64,1.107,65,0.636,66,0.906,67,0.349,68,0.521,69,0.906,70,0.349,71,0.398,72,0.349,73,0.398,74,0.636,75,0.349,76,0.989,77,0.398,78,0.373,79,0.349,80,0.398,81,0.349,82,0.398,83,0.349,84,0.349,85,0.373,86,0.417,87,0.349,88,0.349,89,0.932,90,0.398,91,0.349,92,0.349,93,0.398,94,0.398,95,0.349,96,0.398,97,0.349,98,0.398,99,0.398,100,1.21,101,0.349,102,0.398,103,0.349,104,0.373,105,0.398,106,0.349,107,0.398,108,0.349,109,0.743,110,0.373,111,0.398,112,0.01,113,0.01,116,1.157,117,1.361,120,1.699,127,2.527,128,2.025,131,1.443,134,0.45,138,3.203,145,0.844,146,0.844,148,0.84,149,1.382,157,1.117,179,0.914,180,2.025,181,0.853,185,1.435,188,2.182,194,0.657,195,2.485,213,1.46,214,1.46,222,1.408,224,3.316,237,0.636,241,2.239,243,2.239,246,1.961,247,2.239,248,1.592,249,1.495,253,0.784,255,1.064,262,2.371,279,0.58,280,2.239,288,0.914,291,1.064,299,1.268,300,0.984,301,0.984,314,0.914,317,2.644,332,1.268,335,1.268,347,1.361,348,1.157,357,1.742,364,1.408,367,0.797,369,0.746,376,0.914,377,1.46,383,0.914,385,0.797,386,1.46,387,0.853,388,0.914,403,0.914,404,0.914,418,1.064,430,1.571,440,1.268,441,1.408,454,0.984,504,1.309,603,0.7,632,0.984,706,0.984,708,2.644,711,1.064,731,3.316,743,0.984,801,1.408,915,3.954,1023,1.595,1095,1.268,1113,4.607,1148,4.191,1150,4.227,1156,2.805,1174,3.203,1181,3.178,1213,4.598,1273,5.21,1274,3.744,1275,3.744,1276,3.744,1277,3.744,1278,3.744,1279,4.227,1280,3.744,1281,3.744,1282,3,1283,3,1284,3,1285,3,1286,3,1287,3,1288,3,1289,3,1290,1.879,1291,4.275,1292,1.879,1293,3,1294,4.275,1295,1.879,1296,3,1297,3,1298,1.879,1299,3.744,1300,1.879,1301,3,1302,1.879,1303,1.879,1304,1.879,1305,1.879,1306,1.879,1307,1.879,1308,1.879,1309,1.879,1310,1.879,1311,1.879,1312,1.879,1313,4.275,1314,3.744,1315,3.744,1316,1.879,1317,4.672,1318,4.98,1319,4.98,1320,4.672,1321,1.879,1322,1.879,1323,1.879,1324,1.879,1325,1.879,1326,1.879,1327,1.879,1328,1.879,1329,1.879,1330,3,1331,1.879,1332,1.879,1333,3.744,1334,1.879,1335,4.98,1336,1.879,1337,1.879,1338,1.879,1339,1.879,1340,1.879,1341,1.879,1342,1.879,1343,1.879,1344,1.879,1345,3,1346,4.275,1347,1.879,1348,1.879,1349,1.879,1350,1.879,1351,1.879,1352,1.879,1353,1.879,1354,1.879,1355,1.879,1356,1.879,1357,1.879,1358,1.879,1359,1.879]],["title/components/LoadingComponent.html",[0,0.011,101,0.639]],["body/components/LoadingComponent.html",[0,0.018,1,0.66,2,0.893,3,0.197,4,0.168,5,0.754,6,0.912,7,0.754,8,0.754,9,0.168,13,0.912,14,0.025,17,1.313,18,1.238,19,0.754,20,1.51,21,1.51,22,0.754,24,0.754,26,1.398,28,1.019,30,0.168,31,0.618,35,0.893,36,0.754,39,0.386,42,0.388,44,0.352,45,0.19,50,1.032,51,0.266,52,0.386,54,1.032,56,0.754,57,1.019,58,0.754,59,1.238,60,0.754,61,0.346,62,0.754,63,0.66,64,1.084,65,1.019,66,1.238,67,0.66,68,0.758,69,1.238,70,0.66,71,0.754,72,0.66,73,0.754,74,1.019,75,0.66,76,1.249,77,0.754,78,0.706,79,0.66,80,0.754,81,0.66,82,0.754,83,0.66,84,0.66,85,0.706,86,0.669,87,0.66,88,0.66,89,0.534,90,0.754,91,0.66,92,0.66,93,0.754,94,0.754,95,0.66,96,0.754,97,0.66,98,0.754,99,0.754,100,0.66,101,1.194,102,0.754,103,0.66,104,0.706,105,0.754,106,0.66,107,0.754,108,0.66,109,0.706,110,0.706,111,0.754,112,0.016,113,0.016,157,1.792,224,3.085,253,0.818,357,1.682,363,2.341,372,1.862,376,1.73,377,2.341,383,2.341,384,2.399,385,1.508,386,1.73,387,1.613,388,1.73,391,1.508,393,2.667,394,1.508,397,3.058,400,3.018,403,1.73,408,2.012,419,2.182,421,2.653,435,3.085,440,2.399,443,2.664,444,4.084,448,2.399,450,2.653,467,2.96,477,3.246,632,1.862,743,2.855,745,2.188,924,2.399,1360,3.018,1361,5.451,1362,4.81,1363,5.451,1364,5.451,1365,3.555,1366,3.555,1367,3.555,1368,3.555,1369,3.555,1370,3.555,1371,4.81,1372,4.81,1373,3.555,1374,4.81,1375,4.81,1376,3.555,1377,3.555,1378,3.555,1379,4.81,1380,3.555,1381,3.555,1382,3.555,1383,3.018,1384,3.555]],["title/components/PageNotFoundComponent.html",[0,0.011,103,0.639]],["body/components/PageNotFoundComponent.html",[0,0.02,1,0.999,2,0.999,3,0.233,4,0.2,5,0.894,7,0.894,8,0.894,9,0.2,11,2.847,14,0.025,15,0.633,18,1.141,19,0.894,20,1.529,21,1.529,22,0.894,24,1.141,25,2.689,28,1.141,39,0.458,42,0.541,43,1.571,44,0.417,45,0.167,48,0.837,51,0.298,52,0.458,56,0.894,57,1.141,58,0.894,59,1.323,60,0.894,61,0.427,62,0.894,63,0.783,64,1.159,65,1.141,66,1.323,67,0.783,68,0.825,69,1.323,70,0.783,71,0.894,72,0.783,73,0.894,74,1.141,75,0.783,76,1.309,77,0.894,78,0.837,79,0.783,80,0.894,81,0.783,82,0.894,83,0.783,84,0.783,85,0.837,86,0.749,87,0.783,88,0.783,89,0.633,90,0.894,91,0.783,92,0.783,93,0.894,94,0.894,95,0.999,96,0.894,97,0.783,98,0.894,99,0.894,100,0.783,101,0.783,102,0.894,103,1.159,104,1.331,105,0.894,106,0.783,107,0.894,108,0.783,109,0.837,110,0.837,111,0.894,112,0.018,113,0.018,120,2.689,131,1.217,145,0.681,146,0.681,217,3.104,237,1.141,239,4.214,246,2.819,247,3.27,251,3.648,294,1.225,298,3.161,632,2.819,801,3.161,1119,4.569,1260,3.581,1385,4.569,1386,4.569,1387,3.581,1388,5.383,1389,5.383,1390,4.219,1391,4.219]],["title/components/PaginationComponent.html",[0,0.011,106,0.639]],["body/components/PaginationComponent.html",[0,0.017,1,0.591,2,0.828,3,0.176,4,0.151,5,0.675,6,0.816,7,0.675,8,0.675,9,0.151,13,1.143,14,0.025,15,0.836,16,1.465,17,1.601,18,1.289,19,0.675,20,1.496,21,1.496,22,0.675,24,0.945,26,1.143,28,0.945,30,0.151,33,1.186,35,1.129,36,1.09,39,0.66,42,0.473,44,0.315,45,0.259,50,0.924,51,0.247,52,0.345,54,1.765,56,0.675,57,0.945,58,0.675,59,1.181,60,0.675,61,0.37,62,0.675,63,0.591,64,1.035,65,0.945,66,1.181,67,0.591,68,0.716,69,1.181,70,0.591,71,0.675,72,0.591,73,0.675,74,0.945,75,0.591,76,1.207,77,0.675,78,0.632,79,0.591,80,0.675,81,0.591,82,0.675,83,0.591,84,0.591,85,0.632,86,0.62,87,0.591,88,0.591,89,0.478,90,0.675,91,0.591,92,0.591,93,0.675,94,0.675,95,0.591,96,0.675,97,0.591,98,0.675,99,0.675,100,0.591,101,0.591,102,0.675,103,0.591,104,1.285,105,0.675,106,1.242,107,0.675,108,0.591,109,0.632,110,0.632,111,0.675,112,0.015,113,0.015,118,3.166,126,3.472,134,0.669,139,2.744,145,0.514,146,0.514,148,0.669,149,1.342,168,2.744,179,1.549,181,1.445,182,1.802,185,0.816,188,1.186,196,1.831,213,2.169,214,2.169,288,1.549,347,2.023,357,1.799,429,4.176,504,1.113,668,2.023,669,2.169,674,2.712,685,2.169,1392,2.703,1393,4.731,1394,4.458,1395,6.92,1396,4.458,1397,5.145,1398,5.145,1399,5.145,1400,4.458,1401,4.458,1402,5.867,1403,5.145,1404,5.145,1405,5.145,1406,5.145,1407,3.184,1408,5.145,1409,3.184,1410,3.184,1411,3.184,1412,4.458,1413,3.184,1414,4.458,1415,3.184,1416,3.184,1417,3.184,1418,3.184]],["title/components/SwitchComponent.html",[0,0.011,108,0.639]],["body/components/SwitchComponent.html",[0,0.016,1,0.521,2,0.757,3,0.155,4,0.133,5,0.595,6,0.72,7,0.595,8,0.595,9,0.133,13,0.72,14,0.025,15,0.72,16,1.339,17,1.526,18,1.236,19,0.595,20,1.478,21,1.478,22,0.595,24,0.864,25,2.177,26,1.045,28,0.864,30,0.133,31,0.524,32,3.054,33,2.172,35,0.977,36,1.353,38,1.043,39,0.633,42,0.451,43,1.046,44,0.278,45,0.231,50,0.815,51,0.225,52,0.305,54,1.693,56,0.595,57,0.864,58,0.595,59,1.116,60,0.595,61,0.293,62,0.595,63,0.521,64,0.977,65,0.864,66,1.116,67,0.521,68,0.668,69,1.116,70,0.521,71,0.595,72,0.521,73,0.595,74,0.864,75,0.521,76,1.158,77,0.595,78,0.558,79,0.521,80,0.595,81,0.521,82,0.595,83,0.521,84,0.521,85,0.558,86,0.567,87,0.521,88,0.521,89,0.422,90,0.595,91,0.521,92,0.521,93,0.595,94,0.595,95,0.521,96,0.595,97,0.521,98,0.595,99,0.595,100,0.521,101,0.521,102,0.595,103,0.521,104,0.558,105,0.595,106,0.521,107,0.595,108,1.213,109,1.11,110,0.558,111,0.595,112,0.014,113,0.014,118,2.954,129,3.239,134,0.612,148,0.612,149,1.405,157,1.046,179,1.367,181,1.274,184,1.841,196,1.577,210,2.509,211,3.239,213,1.984,214,1.984,232,3.554,280,3.151,288,1.367,347,1.85,357,2.104,363,1.367,369,1.906,372,2.135,383,2.335,384,1.895,385,1.191,391,2.035,393,1.729,394,1.729,396,1.729,403,1.984,404,1.367,408,2.308,417,2.384,418,1.59,419,2.177,421,2.335,459,3.055,470,1.191,471,1.191,477,1.895,483,1.729,485,1.274,504,1.955,603,1.519,668,1.85,669,1.984,674,2.721,685,1.984,720,1.895,743,1.471,744,3.704,924,1.895,1156,3.596,1174,3.596,1393,4.47,1419,2.384,1420,4.077,1421,4.077,1422,4.077,1423,3.461,1424,4.799,1425,4.077,1426,4.799,1427,4.799,1428,4.077,1429,4.799,1430,4.799,1431,5.833,1432,5.592,1433,2.809,1434,2.809,1435,2.809,1436,2.809,1437,4.077,1438,5.266,1439,2.809,1440,4.077,1441,2.809,1442,2.809,1443,2.809,1444,2.809,1445,2.809,1446,4.077,1447,2.809,1448,4.077,1449,2.809,1450,4.077,1451,4.077,1452,4.077,1453,4.799,1454,4.077,1455,4.077,1456,2.809,1457,2.809]],["title/interfaces/apiServiceShortStructure.html",[176,1.282,625,1.203]],["body/interfaces/apiServiceShortStructure.html",[3,0.298,4,0.255,9,0.255,13,1.741,14,0.024,30,0.255,31,0.803,38,1.143,45,0.261,51,0.298,61,0.489,112,0.021,113,0.021,176,2.326,253,1.049,279,2.096,625,1.883,626,2.82,1458,4.572]],["title/coverage.html",[1459,3.993]],["body/coverage.html",[0,0.024,1,0.757,9,0.193,10,3.461,11,2.751,12,3.461,14,0.025,45,0.161,63,0.757,64,1.144,67,0.757,68,0.811,70,0.757,72,0.757,75,0.757,76,1.224,78,0.809,79,0.757,81,0.757,83,0.757,84,0.757,85,0.809,86,0.567,87,0.757,88,0.757,91,0.757,92,0.757,95,0.757,97,0.757,100,0.757,101,0.757,103,0.757,106,0.757,108,0.757,112,0.018,113,0.018,114,3.461,115,3.055,116,3.794,176,1.519,207,3.461,208,3.461,209,4.619,241,2.135,243,2.135,244,2.308,245,2.308,262,1.85,300,2.135,357,2.509,448,4.738,489,1.728,490,3.055,492,3.945,493,3.461,494,3.794,504,1.426,564,2.135,606,3.461,607,3.936,625,2.286,627,3.461,628,3.461,637,3.461,638,3.055,639,3.945,659,3.936,660,3.461,661,3.461,689,2.509,691,3.055,747,3.055,748,3.461,777,2.751,792,3.461,793,3.461,824,3.055,841,3.461,842,3.461,843,3.461,844,3.461,944,3.461,958,3.461,962,2.751,982,3.461,997,3.461,998,3.461,1048,3.461,1055,2.751,1069,3.461,1087,2.751,1088,3.461,1089,3.461,1090,3.461,1091,3.461,1108,3.461,1109,3.461,1128,3.461,1148,2.751,1149,3.461,1152,3.461,1153,3.461,1154,3.461,1195,3.461,1213,3.055,1225,3.461,1226,2.751,1228,3.461,1229,3.461,1243,3.461,1244,3.461,1273,3.461,1360,3.461,1383,3.461,1385,3.461,1386,3.461,1387,3.461,1392,3.461,1419,3.461,1458,3.461,1459,3.461,1460,4.077,1461,4.077,1462,4.077,1463,5.266,1464,3.461,1465,4.077,1466,3.461,1467,4.077,1468,5.266,1469,4.077,1470,4.077,1471,4.077,1472,5.833,1473,4.077,1474,4.077,1475,5.266,1476,4.077,1477,5.833,1478,4.077,1479,4.077,1480,4.077,1481,4.077,1482,4.077,1483,4.077,1484,4.077,1485,4.077,1486,4.077,1487,4.077,1488,5.266,1489,5.266,1490,6.164,1491,4.077,1492,5.266,1493,4.077,1494,5.266,1495,4.077,1496,4.077,1497,3.461]],["title/dependencies.html",[1498,2.436,1499,3.515]],["body/dependencies.html",[14,0.025,15,1.08,43,1.846,44,0.49,46,3.051,48,0.984,112,0.02,113,0.02,179,2.412,181,2.249,182,2.806,292,4.208,293,1.629,294,1.439,515,4.208,887,4.208,1497,4.208,1499,4.208,1500,4.957,1501,6.996,1502,4.957,1503,5.948,1504,5.049,1505,4.957,1506,4.957,1507,6.758,1508,4.957,1509,7.08,1510,4.957,1511,4.957,1512,4.957,1513,4.957,1514,4.957,1515,4.957,1516,6.372,1517,6.372,1518,4.957,1519,4.957,1520,4.957,1521,4.957,1522,4.957,1523,4.957,1524,4.957,1525,4.957,1526,4.957,1527,4.957]],["title/index.html",[30,0.136,1528,2.87,1529,2.87]],["body/index.html",[0,0.021,2,0.893,4,0.228,14,0.02,17,1.859,35,1.084,104,0.955,110,0.955,112,0.02,113,0.02,168,4.026,215,3.604,416,4.194,442,3.604,504,1.682,528,5.339,635,4.083,711,2.722,712,2.96,1127,4.957,1224,4.083,1279,4.083,1504,4.083,1530,6.29,1531,4.81,1532,5.84,1533,6.702,1534,4.083,1535,4.81,1536,5.84,1537,6.29,1538,4.81,1539,6.702,1540,6.814,1541,4.81,1542,5.84,1543,4.81,1544,4.81,1545,5.84,1546,4.81,1547,4.81,1548,4.81,1549,4.81,1550,5.84,1551,4.81,1552,4.81,1553,4.81,1554,6.29,1555,4.81,1556,4.81,1557,4.81,1558,4.81,1559,4.81,1560,4.81,1561,4.81,1562,4.81,1563,4.81,1564,4.81,1565,4.81,1566,4.81,1567,4.81,1568,4.81,1569,4.81,1570,5.84,1571,6.29,1572,4.81,1573,4.81,1574,4.81,1575,4.81,1576,4.81,1577,4.81,1578,6.29,1579,4.81,1580,4.81,1581,5.84,1582,4.81,1583,4.81,1584,4.81,1585,4.81,1586,4.81,1587,4.81,1588,4.81,1589,4.81,1590,4.81,1591,4.81,1592,4.81,1593,4.81,1594,4.81,1595,4.81,1596,4.81,1597,3.604,1598,4.81]],["title/modules.html",[1599,3.993]],["body/modules.html",[14,0.022,112,0.022,113,0.022,1599,4.809]],["title/overview.html",[1597,3.525]],["body/overview.html",[2,1.044,14,0.022,112,0.022,113,0.022,491,2.551,626,2.944,1597,4.212,1600,5.622,1601,5.622,1602,5.622]],["title/properties.html",[31,0.532,1498,2.436]],["body/properties.html",[14,0.023,31,0.725,112,0.022,113,0.022,1534,4.791,1603,5.644]],["title/miscellaneous/variables.html",[1604,2.436,1605,3.515]],["body/miscellaneous/variables.html",[14,0.024,30,0.257,35,1.009,36,1.152,45,0.215,112,0.021,113,0.021,184,2.195,1226,3.666,1423,4.612,1464,4.612,1466,5.328,1604,4.612,1605,4.612,1606,5.433,1607,5.433,1608,5.433,1609,5.433,1610,5.433,1611,5.433,1612,5.433,1613,5.433,1614,5.433,1615,5.433,1616,5.433,1617,5.433]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":357,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EntityDialogComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1603,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":1218,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0.15.0",{"_index":1527,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":936,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["0.3125rem",{"_index":657,"title":{},"body":{"components/BackButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["0.3s",{"_index":399,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{}}}],["0.5rem",{"_index":1221,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0.625rem",{"_index":655,"title":{},"body":{"components/BackButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["0.9rem",{"_index":465,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["0/1",{"_index":1467,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1495,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1494,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1479,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1463,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":1483,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1488,"title":{},"body":{"coverage.html":{}}}],["0/34",{"_index":1486,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1490,"title":{},"body":{"coverage.html":{}}}],["0/46",{"_index":1482,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1489,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1487,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1493,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1492,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1491,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":455,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{}}}],["004080",{"_index":488,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["0056a6",{"_index":450,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{}}}],["0f5132",{"_index":476,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["0px",{"_index":395,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["1",{"_index":429,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"components/PaginationComponent.html":{}}}],["1.2",{"_index":744,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{},"components/SwitchComponent.html":{}}}],["1.25rem",{"_index":656,"title":{},"body":{"components/BackButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["1.5",{"_index":726,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["1.5rem",{"_index":919,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["100",{"_index":448,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/LoadingComponent.html":{},"coverage.html":{}}}],["100px",{"_index":1368,"title":{},"body":{"components/LoadingComponent.html":{}}}],["100vh",{"_index":1366,"title":{},"body":{"components/LoadingComponent.html":{}}}],["10px",{"_index":430,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["10rem",{"_index":1357,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["1200px",{"_index":937,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["12px",{"_index":462,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["13px",{"_index":487,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["14/14",{"_index":1472,"title":{},"body":{"coverage.html":{}}}],["14/17",{"_index":1474,"title":{},"body":{"coverage.html":{}}}],["14px",{"_index":1453,"title":{},"body":{"components/SwitchComponent.html":{}}}],["150px",{"_index":942,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["15px",{"_index":433,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{}}}],["16",{"_index":1408,"title":{},"body":{"components/PaginationComponent.html":{}}}],["16.8px",{"_index":1452,"title":{},"body":{"components/SwitchComponent.html":{}}}],["16px",{"_index":420,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["19.1.0",{"_index":1501,"title":{},"body":{"dependencies.html":{}}}],["19.1.3",{"_index":1535,"title":{},"body":{"index.html":{}}}],["1fr",{"_index":928,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["1px",{"_index":443,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/LoadingComponent.html":{}}}],["1rem",{"_index":454,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{}}}],["1s",{"_index":1376,"title":{},"body":{"components/LoadingComponent.html":{}}}],["2",{"_index":728,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["2.3.0",{"_index":1525,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":368,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["2/2",{"_index":1468,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":745,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{}}}],["2000",{"_index":343,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["20px",{"_index":363,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["22",{"_index":931,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["23",{"_index":1600,"title":{},"body":{"overview.html":{}}}],["24px",{"_index":720,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/SwitchComponent.html":{}}}],["2px",{"_index":930,"title":{},"body":{"components/EndpointCardListComponent.html":{},"components/HeaderComponent.html":{}}}],["2rem",{"_index":482,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["3",{"_index":424,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["3.10.1",{"_index":1522,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1470,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":526,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["300px",{"_index":932,"title":{},"body":{"components/EndpointCardListComponent.html":{},"components/FilterByInputComponent.html":{}}}],["32px",{"_index":1372,"title":{},"body":{"components/LoadingComponent.html":{}}}],["333",{"_index":370,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["34px",{"_index":1446,"title":{},"body":{"components/SwitchComponent.html":{}}}],["3px",{"_index":1454,"title":{},"body":{"components/SwitchComponent.html":{}}}],["3rem",{"_index":373,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["4.0.2",{"_index":1515,"title":{},"body":{"dependencies.html":{}}}],["4.21.0",{"_index":1509,"title":{},"body":{"dependencies.html":{}}}],["4.22.0",{"_index":1517,"title":{},"body":{"dependencies.html":{}}}],["4.24.0",{"_index":1520,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1476,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":917,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["40.8px",{"_index":1445,"title":{},"body":{"components/SwitchComponent.html":{}}}],["400",{"_index":1114,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["404",{"_index":1117,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["408",{"_index":1120,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["409",{"_index":710,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["40px",{"_index":466,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["45px",{"_index":405,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["46px",{"_index":1369,"title":{},"body":{"components/LoadingComponent.html":{}}}],["4caf50",{"_index":1456,"title":{},"body":{"components/SwitchComponent.html":{}}}],["4px",{"_index":459,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/SwitchComponent.html":{}}}],["4rem",{"_index":1219,"title":{},"body":{"components/HeaderComponent.html":{}}}],["4s",{"_index":1450,"title":{},"body":{"components/SwitchComponent.html":{}}}],["50",{"_index":924,"title":{},"body":{"components/EndpointCardListComponent.html":{},"components/FilterByInputComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["500",{"_index":1121,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["5000",{"_index":527,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"components/EntityDialogComponent.html":{}}}],["502",{"_index":1122,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["503",{"_index":1123,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["504",{"_index":1124,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["555",{"_index":469,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["5px",{"_index":422,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["6",{"_index":1602,"title":{},"body":{"overview.html":{}}}],["6/6",{"_index":1478,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":375,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["65",{"_index":721,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["666",{"_index":725,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{}}}],["7.8.0",{"_index":1523,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1475,"title":{},"body":{"coverage.html":{}}}],["768px",{"_index":481,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/HeaderComponent.html":{}}}],["7px",{"_index":486,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["8",{"_index":1601,"title":{},"body":{"overview.html":{}}}],["8.0.7",{"_index":1506,"title":{},"body":{"dependencies.html":{}}}],["8/10",{"_index":1471,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":1477,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1383,"title":{},"body":{"components/LoadingComponent.html":{},"coverage.html":{}}}],["82",{"_index":1473,"title":{},"body":{"coverage.html":{}}}],["888",{"_index":740,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["8px",{"_index":435,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/LoadingComponent.html":{}}}],["9",{"_index":1176,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["9/9",{"_index":1469,"title":{},"body":{"coverage.html":{}}}],["992px",{"_index":939,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["9]/g",{"_index":204,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["a.click",{"_index":1145,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["a.download",{"_index":1143,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["a.href",{"_index":1142,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["absolute",{"_index":403,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["absolutely",{"_index":401,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["accessors",{"_index":139,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/PaginationComponent.html":{}}}],["accordion",{"_index":379,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["accordion::after",{"_index":414,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["action",{"_index":984,"title":{},"body":{"injectables/EndpointService.html":{}}}],["actionname",{"_index":986,"title":{},"body":{"injectables/EndpointService.html":{}}}],["actions",{"_index":742,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["activatedroute",{"_index":239,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["actual_component",{"_index":111,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["additional",{"_index":1589,"title":{},"body":{"index.html":{}}}],["alert",{"_index":22,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["alertdeletecomponent",{"_index":1,"title":{"components/AlertDeleteComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["alerts",{"_index":248,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["alertservice",{"_index":1110,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["align",{"_index":376,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{}}}],["allowedchars",{"_index":1190,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["allowedchars.test(inputchar",{"_index":1191,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["alternate",{"_index":1379,"title":{},"body":{"components/LoadingComponent.html":{}}}],["angular",{"_index":168,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/BackButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/PaginationComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":1500,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":43,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":585,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["angular/compiler",{"_index":1502,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":44,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":179,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1503,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":294,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":1374,"title":{},"body":{"components/LoadingComponent.html":{}}}],["api",{"_index":64,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["api'},{'name",{"_index":77,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["api.component.css",{"_index":693,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.css,../../styles/card.css,../../styles/button.css,../../styles/icon.css",{"_index":663,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.html",{"_index":664,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts",{"_index":661,"title":{},"body":{"components/CardApiComponent.html":{},"coverage.html":{}}}],["api.component.ts:117",{"_index":678,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:141",{"_index":679,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:191",{"_index":676,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:65",{"_index":673,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:73",{"_index":675,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:75",{"_index":684,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:76",{"_index":683,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:84",{"_index":682,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:87",{"_index":672,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api/card",{"_index":660,"title":{},"body":{"components/CardApiComponent.html":{},"coverage.html":{}}}],["apideleted",{"_index":670,"title":{},"body":{"components/CardApiComponent.html":{}}}],["apidialogcomponent",{"_index":63,"title":{"components/ApiDialogComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["apieasier",{"_index":635,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["apiendpointlistcomponent",{"_index":67,"title":{"components/ApiEndpointListComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["apihubserviceservice",{"_index":490,"title":{"injectables/ApiHubServiceService.html":{}},"body":{"injectables/ApiHubServiceService.html":{},"coverage.html":{}}}],["apiinfo",{"_index":220,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/IconTrashComponent.html":{}}}],["apiinfo.description",{"_index":718,"title":{},"body":{"components/CardApiComponent.html":{}}}],["apiinfo.name",{"_index":717,"title":{},"body":{"components/CardApiComponent.html":{}}}],["apilist",{"_index":533,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["apilistsubject",{"_index":495,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["apiname",{"_index":221,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["apiservice",{"_index":241,"title":{"injectables/ApiService.html":{}},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["apiservice.name",{"_index":545,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["apiservicename",{"_index":965,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["apiservicerepository",{"_index":242,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["apiservicerepositoryservice",{"_index":243,"title":{"injectables/ApiServiceRepositoryService.html":{}},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["apiserviceshortstructure",{"_index":176,"title":{"interfaces/apiServiceShortStructure.html":{}},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"injectables/EntityService.html":{},"components/ExportApiButtonComponent.html":{},"components/IconTrashComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{}}}],["apiservicestructure",{"_index":262,"title":{"interfaces/ApiServiceStructure.html":{}},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"injectables/EntityService.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["apistructure",{"_index":264,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["apistructure.entities",{"_index":319,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["apistructure.isactive",{"_index":321,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["app",{"_index":21,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["app.component.css",{"_index":633,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":631,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":70,"title":{"components/AppComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1466,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appearance",{"_index":603,"title":{},"body":{"injectables/ApiService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["application",{"_index":1545,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":1139,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["applicationconfig",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arguments",{"_index":1007,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["artifacts",{"_index":1563,"title":{},"body":{"index.html":{}}}],["assets/dora.png",{"_index":1364,"title":{},"body":{"components/LoadingComponent.html":{}}}],["auto",{"_index":409,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["autoclose",{"_index":1045,"title":{},"body":{"components/EntityDialogComponent.html":{},"components/IconTrashComponent.html":{}}}],["automatically",{"_index":1546,"title":{},"body":{"index.html":{}}}],["available",{"_index":1224,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["back",{"_index":73,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["backbuttoncomponent",{"_index":72,"title":{"components/BackButtonComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["background",{"_index":391,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["basedomain",{"_index":651,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["baseurl",{"_index":496,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["behaviorsubject",{"_index":505,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["between",{"_index":390,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/HeaderComponent.html":{}}}],["blob",{"_index":1137,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["blob([jsonstring",{"_index":1138,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["block",{"_index":418,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["bold",{"_index":449,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["boolean",{"_index":38,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["border",{"_index":393,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["bottom",{"_index":372,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["box",{"_index":397,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{}}}],["break",{"_index":453,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["browser",{"_index":1504,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["build",{"_index":528,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"index.html":{}}}],["buildthis",{"_index":1560,"title":{},"body":{"index.html":{}}}],["button",{"_index":380,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["button'},{'name",{"_index":74,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["button.component",{"_index":692,"title":{},"body":{"components/CardApiComponent.html":{},"components/HeaderComponent.html":{}}}],["button.component.css",{"_index":641,"title":{},"body":{"components/BackButtonComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["button.component.css,../../styles/button.css",{"_index":1129,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["button.component.html",{"_index":642,"title":{},"body":{"components/BackButtonComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["button.component.ts",{"_index":639,"title":{},"body":{"components/BackButtonComponent.html":{},"components/ExportApiButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:24",{"_index":645,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["button.component.ts:32",{"_index":1131,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["button.component.ts:47",{"_index":646,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["button.component.ts:51",{"_index":1132,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["button.copied",{"_index":474,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["button/back",{"_index":638,"title":{},"body":{"components/BackButtonComponent.html":{},"components/HeaderComponent.html":{},"coverage.html":{}}}],["button/export",{"_index":691,"title":{},"body":{"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{},"coverage.html":{}}}],["button:hover",{"_index":472,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["button[tuiiconbutton",{"_index":1358,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["buttonclick",{"_index":1202,"title":{},"body":{"components/HeaderComponent.html":{}}}],["buttontext",{"_index":1199,"title":{},"body":{"components/HeaderComponent.html":{}}}],["calc(1.5em",{"_index":727,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["card",{"_index":76,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["card:hover",{"_index":933,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["cardapicomponent",{"_index":75,"title":{"components/CardApiComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["cardapilistcomponent",{"_index":78,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["cardendpointcomponent",{"_index":79,"title":{"components/CardEndpointComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["cardentitycomponent",{"_index":81,"title":{"components/CardEntityComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["case",{"_index":1113,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/ImportDialogComponent.html":{}}}],["catch",{"_index":335,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["catch(err",{"_index":530,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["catcherror",{"_index":587,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["catcherror((error",{"_index":1242,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["cc0000",{"_index":921,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["cd",{"_index":246,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["center",{"_index":377,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{}}}],["changedetection",{"_index":213,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["changedetectionstrategy",{"_index":288,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":214,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["changedetectorref",{"_index":247,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["charts",{"_index":1508,"title":{},"body":{"dependencies.html":{}}}],["chevron",{"_index":410,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["child",{"_index":447,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["choose",{"_index":1585,"title":{},"body":{"index.html":{}}}],["chrome",{"_index":733,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["class",{"_index":52,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["cleanedvalue",{"_index":200,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["cli",{"_index":1533,"title":{},"body":{"index.html":{}}}],["click",{"_index":1198,"title":{},"body":{"components/HeaderComponent.html":{}}}],["closeable",{"_index":1211,"title":{},"body":{"components/HeaderComponent.html":{}}}],["closed",{"_index":714,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["code",{"_index":1127,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["color",{"_index":369,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["column",{"_index":441,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ImportDialogComponent.html":{}}}],["columns",{"_index":926,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["come",{"_index":1583,"title":{},"body":{"index.html":{}}}],["command",{"_index":1578,"title":{},"body":{"index.html":{}}}],["commerce",{"_index":1510,"title":{},"body":{"dependencies.html":{}}}],["commonmodule",{"_index":25,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["compile",{"_index":1561,"title":{},"body":{"index.html":{}}}],["complete",{"_index":712,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"index.html":{}}}],["component",{"_index":0,"title":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":60,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"index.html":{},"overview.html":{}}}],["components/alert",{"_index":1391,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["components/card",{"_index":888,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["components/endpoint",{"_index":890,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["components/header/header.component",{"_index":298,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["components/loading/loading.component",{"_index":297,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["components/switch/switch.component",{"_index":304,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["connecting",{"_index":531,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["console.error",{"_index":348,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["console.error('error",{"_index":337,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{}}}],["console.error(message",{"_index":836,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["console.info('dialog",{"_index":713,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["console.info(`dialog",{"_index":702,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{}}}],["console.log",{"_index":347,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["console.log('api",{"_index":705,"title":{},"body":{"components/CardApiComponent.html":{}}}],["console.log('connected",{"_index":529,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["console.log(apilist",{"_index":535,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["console.log(currentlist",{"_index":541,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["console.log(error",{"_index":1147,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["console.warn",{"_index":1350,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["const",{"_index":195,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"components/BackButtonComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["constructor",{"_index":237,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["constructor(alerts",{"_index":1250,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["constructor(apiservice",{"_index":608,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["constructor(apiservicerepository",{"_index":671,"title":{},"body":{"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["constructor(cd",{"_index":801,"title":{},"body":{"components/CardEntityComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["constructor(endpointrepositoryservice",{"_index":758,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["constructor(endpointservice",{"_index":961,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["constructor(entityservice",{"_index":1054,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["constructor(errorhandler",{"_index":1231,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["constructor(http",{"_index":561,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["constructor(location",{"_index":644,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["constructor(private",{"_index":617,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["constructor(route",{"_index":238,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["constructor(router",{"_index":859,"title":{},"body":{"components/EndpointCardListComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["container",{"_index":361,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["content",{"_index":157,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["context",{"_index":34,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["control",{"_index":1181,"title":{},"body":{"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{}}}],["control.value",{"_index":1183,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["controlname",{"_index":1161,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["copy",{"_index":456,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["copying",{"_index":338,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["copytexttoclipboard",{"_index":226,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["copytexttoclipboard(text",{"_index":252,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["copytoclipboard",{"_index":227,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["copytoclipboard(entityname",{"_index":256,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["correctly",{"_index":413,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["coverage",{"_index":1459,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createapientity",{"_index":1049,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["createapientity(apiservicename",{"_index":1056,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["createapiservice",{"_index":553,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["createapiservice(service",{"_index":567,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["createendpoint",{"_index":849,"title":{},"body":{"components/EndpointCardListComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["createendpoint(apiservicename",{"_index":964,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["createendpoint(data",{"_index":861,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["createendpoint(this.apiname",{"_index":909,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["createfullapiservice",{"_index":554,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["createfullapiservice(service",{"_index":569,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["currentfiles",{"_index":1352,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["currentlist",{"_index":537,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["currentlist.findindex((apiservice",{"_index":544,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["currentlist.push(api",{"_index":539,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["currentlist.splice(index",{"_index":548,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["currentlist[index",{"_index":546,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["currentpage",{"_index":1402,"title":{},"body":{"components/PaginationComponent.html":{}}}],["currenturl",{"_index":647,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["cursor",{"_index":470,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/SwitchComponent.html":{}}}],["d1e7dd",{"_index":475,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["data",{"_index":141,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["data.name}.json",{"_index":1144,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["datawithoutname",{"_index":1134,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["ddd",{"_index":458,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["decorators",{"_index":162,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["default",{"_index":35,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":39,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["delete",{"_index":23,"title":{},"body":{"components/AlertDeleteComponent.html":{},"injectables/ApiService.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{}}}],["delete'},{'name",{"_index":62,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["delete(`${this.baseurl}/apientity/${apiservicename}/${entityname",{"_index":1084,"title":{},"body":{"injectables/EntityService.html":{}}}],["delete.component",{"_index":1260,"title":{},"body":{"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["delete.component.css",{"_index":27,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["delete.component.html",{"_index":29,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["delete.component.ts",{"_index":12,"title":{},"body":{"components/AlertDeleteComponent.html":{},"coverage.html":{}}}],["delete.component.ts:38",{"_index":40,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["delete/alert",{"_index":11,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["deleteapientity",{"_index":1050,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["deleteapientity(apiservicename",{"_index":1057,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["deleteapientity(this.apiname",{"_index":830,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["deleteapiservice",{"_index":555,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["deleteapiservice(servicename",{"_index":571,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["deleteendpoint",{"_index":788,"title":{},"body":{"components/CardEndpointComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["deleteendpoint(apiservicename",{"_index":966,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["dependencies",{"_index":1499,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"interfaces/ApiServiceStructure.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["descriptioninputref",{"_index":130,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["detailed",{"_index":1594,"title":{},"body":{"index.html":{}}}],["development",{"_index":1536,"title":{},"body":{"index.html":{}}}],["di",{"_index":169,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog",{"_index":117,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{}}}],["dialog'},{'name",{"_index":66,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["dialog.component",{"_index":688,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/HeaderComponent.html":{}}}],["dialog.component.css",{"_index":127,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["dialog.component.html",{"_index":128,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["dialog.component.ts",{"_index":116,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:100",{"_index":1025,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:102",{"_index":173,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:108",{"_index":1023,"title":{},"body":{"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:112",{"_index":175,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:116",{"_index":947,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:117",{"_index":1028,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:125",{"_index":159,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:127",{"_index":1029,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:129",{"_index":946,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:134",{"_index":1302,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:138",{"_index":1031,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:143",{"_index":155,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:150",{"_index":1292,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:154",{"_index":1033,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:156",{"_index":152,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:172",{"_index":1290,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:173",{"_index":144,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:178",{"_index":1010,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:193",{"_index":1295,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:194",{"_index":1015,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:213",{"_index":1300,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:216",{"_index":1018,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:227",{"_index":1020,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:246",{"_index":1017,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:260",{"_index":1298,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:263",{"_index":1016,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:38",{"_index":1303,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:46",{"_index":1304,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:51",{"_index":950,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:55",{"_index":1305,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:56",{"_index":171,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:59",{"_index":953,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:63",{"_index":1306,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:66",{"_index":1026,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:67",{"_index":949,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:68",{"_index":165,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:71",{"_index":1288,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:75",{"_index":1027,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:76",{"_index":954,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:79",{"_index":167,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:83",{"_index":1024,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:86",{"_index":955,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:90",{"_index":161,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:91",{"_index":1022,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:98",{"_index":948,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog/api",{"_index":115,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"coverage.html":{}}}],["dialog/endpoint",{"_index":777,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"coverage.html":{}}}],["dialog/entity",{"_index":824,"title":{},"body":{"components/CardEntityComponent.html":{},"components/EntityDialogComponent.html":{},"coverage.html":{}}}],["dialog/import",{"_index":1213,"title":{},"body":{"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["dialogs",{"_index":132,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["direction",{"_index":440,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{}}}],["directive",{"_index":58,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["directives",{"_index":110,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"index.html":{}}}],["directory",{"_index":1565,"title":{},"body":{"index.html":{}}}],["dismissible",{"_index":193,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/HeaderComponent.html":{}}}],["display",{"_index":385,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["display'},{'name",{"_index":90,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["display.component.css",{"_index":1093,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display.component.html",{"_index":1092,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display.component.ts",{"_index":1091,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"coverage.html":{}}}],["display.component.ts:12",{"_index":1099,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display.component.ts:13",{"_index":1096,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display.component.ts:17",{"_index":1098,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display.component.ts:25",{"_index":1097,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display/error",{"_index":1090,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"coverage.html":{}}}],["dist",{"_index":1564,"title":{},"body":{"index.html":{}}}],["doc",{"_index":1511,"title":{},"body":{"dependencies.html":{}}}],["document.body.appendchild(textarea",{"_index":330,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["document.body.removechild(textarea",{"_index":340,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["document.createelement('a",{"_index":1141,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["document.createelement('textarea",{"_index":328,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["document.execcommand('copy",{"_index":333,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["document:keydown",{"_index":1006,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["document:keydown(event",{"_index":1008,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["documentation",{"_index":1460,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["dynamic",{"_index":1505,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1326,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["e.target?.result",{"_index":1328,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["e0e0e0",{"_index":473,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["e2e",{"_index":1580,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":1582,"title":{},"body":{"index.html":{}}}],["e6e6e6",{"_index":658,"title":{},"body":{"components/BackButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["ease",{"_index":400,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/LoadingComponent.html":{}}}],["edge",{"_index":735,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["edit",{"_index":65,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["eee",{"_index":445,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["element",{"_index":57,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["elementref",{"_index":143,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["ellipsis",{"_index":722,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["emitted",{"_index":703,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{}}}],["emptyentityorapi",{"_index":359,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["end",{"_index":416,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"index.html":{}}}],["endpoint",{"_index":68,"title":{"interfaces/Endpoint.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["endpoint'},{'name",{"_index":80,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["endpoint.component",{"_index":889,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["endpoint.component.css",{"_index":778,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.css,../../styles/card.css,../../styles/icon.css",{"_index":749,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.html",{"_index":750,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts",{"_index":748,"title":{},"body":{"components/CardEndpointComponent.html":{},"coverage.html":{}}}],["endpoint.component.ts:116",{"_index":769,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:144",{"_index":770,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:158",{"_index":772,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:170",{"_index":774,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:192",{"_index":765,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:210",{"_index":767,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:235",{"_index":768,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:54",{"_index":762,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:62",{"_index":761,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:71",{"_index":760,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:79",{"_index":763,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:87",{"_index":776,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:90",{"_index":759,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.isactive",{"_index":353,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["endpoint.route",{"_index":356,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["endpoint.type",{"_index":360,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["endpoint/card",{"_index":747,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/EndpointCardListComponent.html":{},"coverage.html":{}}}],["endpointcardlistcomponent",{"_index":83,"title":{"components/EndpointCardListComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["endpointdeleted",{"_index":757,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpointdialogcomponent",{"_index":84,"title":{"components/EndpointDialogComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["endpointinfo",{"_index":755,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/IconTrashComponent.html":{}}}],["endpointinfo.route",{"_index":790,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpointinfo.type",{"_index":791,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpointname",{"_index":967,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["endpointrepositoryservice",{"_index":245,"title":{"injectables/EndpointRepositoryService.html":{}},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEndpointComponent.html":{},"components/EndpointCardListComponent.html":{},"injectables/EndpointRepositoryService.html":{},"coverage.html":{}}}],["endpointroute",{"_index":874,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["endpoints",{"_index":848,"title":{},"body":{"components/EndpointCardListComponent.html":{},"interfaces/Entity.html":{}}}],["endpointservice",{"_index":962,"title":{"injectables/EndpointService.html":{}},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"coverage.html":{}}}],["ensure",{"_index":378,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["enter",{"_index":1011,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["entities",{"_index":222,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"interfaces/ApiServiceStructure.html":{},"components/ImportDialogComponent.html":{}}}],["entity",{"_index":86,"title":{"interfaces/Entity.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["entity'},{'name",{"_index":82,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["entity.component.css",{"_index":825,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.css,../../styles/card.css,../../styles/button.css,../../styles/icon.css",{"_index":794,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.html",{"_index":795,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts",{"_index":793,"title":{},"body":{"components/CardEntityComponent.html":{},"coverage.html":{}}}],["entity.component.ts:111",{"_index":817,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:131",{"_index":818,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:147",{"_index":816,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:164",{"_index":807,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:181",{"_index":810,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:197",{"_index":812,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:207",{"_index":808,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:220",{"_index":814,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:53",{"_index":804,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:62",{"_index":803,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:70",{"_index":805,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:72",{"_index":822,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:73",{"_index":823,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:74",{"_index":821,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:82",{"_index":820,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:85",{"_index":802,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.endpoints",{"_index":901,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["entity.isactive",{"_index":349,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["entity.name",{"_index":352,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["entity/card",{"_index":792,"title":{},"body":{"components/CardEntityComponent.html":{},"coverage.html":{}}}],["entitycardlistcomponent",{"_index":85,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["entitydeleted",{"_index":800,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entitydialogcomponent",{"_index":87,"title":{"components/EntityDialogComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["entityinfo",{"_index":756,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/IconTrashComponent.html":{}}}],["entityinfo.name",{"_index":839,"title":{},"body":{"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["entityinfo.structure",{"_index":914,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["entityname",{"_index":258,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["entityrepositoryservice",{"_index":244,"title":{"injectables/EntityRepositoryService.html":{}},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"injectables/EntityRepositoryService.html":{},"coverage.html":{}}}],["entityservice",{"_index":1055,"title":{"injectables/EntityService.html":{}},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"coverage.html":{}}}],["entityshort",{"_index":1087,"title":{"interfaces/EntityShort.html":{}},"body":{"interfaces/EntityShort.html":{},"components/IconTrashComponent.html":{},"coverage.html":{}}}],["err",{"_index":336,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{}}}],["error",{"_index":89,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["error.interceptor.ts",{"_index":1229,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["error.interceptor.ts:12",{"_index":1232,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error.interceptor.ts:16",{"_index":1236,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error.status",{"_index":709,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["errorcode",{"_index":1094,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["errordisplaycomponent",{"_index":88,"title":{"components/ErrorDisplayComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["errorhandler",{"_index":563,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["errorhandlerservice",{"_index":564,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["errormessage",{"_index":1095,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["errormessage}`).subscribe",{"_index":1116,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["escape",{"_index":1012,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["event",{"_index":151,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["event.ctrlkey",{"_index":1192,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["event.key",{"_index":1041,"title":{},"body":{"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["event.metakey",{"_index":1193,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["event.preventdefault",{"_index":189,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["event.target",{"_index":197,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["eventcoalescing",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":674,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["example",{"_index":17,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"index.html":{}}}],["execute",{"_index":1572,"title":{},"body":{"index.html":{}}}],["expand",{"_index":432,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["export",{"_index":51,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["exportapibuttoncomponent",{"_index":91,"title":{"components/ExportApiButtonComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["f.file.name",{"_index":1313,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["f.status",{"_index":1319,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["f0f0f0",{"_index":468,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["f1f1f1",{"_index":738,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["f44336",{"_index":1449,"title":{},"body":{"components/SwitchComponent.html":{}}}],["f9f9f9",{"_index":434,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["false",{"_index":280,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EntityDialogComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["ff4d4d",{"_index":920,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["fff",{"_index":1373,"title":{},"body":{"components/LoadingComponent.html":{}}}],["ffffff",{"_index":464,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["field",{"_index":457,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{}}}],["file.errormessage",{"_index":1346,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["file.name",{"_index":1314,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["file.status",{"_index":1335,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["filename",{"_index":1294,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["filename.replace",{"_index":1336,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["filereader",{"_index":1324,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["files",{"_index":1279,"title":{},"body":{"components/ImportDialogComponent.html":{},"index.html":{}}}],["files.filter(file",{"_index":1311,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["files.foreach(file",{"_index":1322,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["filestatus",{"_index":1148,"title":{"interfaces/FileStatus.html":{}},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["filestatus.status",{"_index":1334,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["filetoremove",{"_index":1299,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["filetoremove.file",{"_index":1355,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["fill",{"_index":1223,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filter",{"_index":93,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["filterbyinputcomponent",{"_index":92,"title":{"components/FilterByInputComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["filtereditems",{"_index":1163,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["finally",{"_index":339,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["flex",{"_index":386,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{}}}],["following",{"_index":1577,"title":{},"body":{"index.html":{}}}],["font",{"_index":366,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{}}}],["fontawesome",{"_index":1518,"title":{},"body":{"dependencies.html":{}}}],["form",{"_index":1159,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["formcontrol",{"_index":1174,"title":{},"body":{"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["formcontrol(false",{"_index":1437,"title":{},"body":{"components/SwitchComponent.html":{}}}],["formcontrol(true",{"_index":1440,"title":{},"body":{"components/SwitchComponent.html":{}}}],["formgroup",{"_index":1172,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["formsmodule",{"_index":118,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["found",{"_index":1119,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/PageNotFoundComponent.html":{}}}],["found'},{'name",{"_index":105,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["found.component.css",{"_index":1389,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.html",{"_index":1388,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1387,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:18",{"_index":1390,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":1386,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["framework",{"_index":1584,"title":{},"body":{"index.html":{}}}],["further",{"_index":407,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["gap",{"_index":364,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ImportDialogComponent.html":{}}}],["generate",{"_index":1554,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1531,"title":{},"body":{"index.html":{}}}],["get(`${this.baseurl}/apientity/${apiservicename",{"_index":1080,"title":{},"body":{"injectables/EntityService.html":{}}}],["get(`${this.baseurl}/apientity/${apiservicename}/${entityname",{"_index":1081,"title":{},"body":{"injectables/EntityService.html":{}}}],["get(`${this.baseurl}/apiservice",{"_index":591,"title":{},"body":{"injectables/ApiService.html":{}}}],["get(`${this.baseurl}/apiservices",{"_index":1086,"title":{},"body":{"injectables/EntityService.html":{}}}],["getallapiservices",{"_index":1070,"title":{},"body":{"injectables/EntityService.html":{}}}],["getapientity",{"_index":1051,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["getapientity(apiservicename",{"_index":1058,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["getapientity(this.apiname",{"_index":898,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["getapientitylist",{"_index":1052,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["getapientitylist(apiservicename",{"_index":1059,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["getapilist",{"_index":556,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["getapistructurelist",{"_index":557,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["getapistructurelist(name",{"_index":575,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["getbyindex",{"_index":952,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["getdata",{"_index":174,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["getendpointbyname",{"_index":959,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["getendpointbyname(apiservicename",{"_index":969,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["getendpointlist",{"_index":960,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["getendpointlist(apiservicename",{"_index":970,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["getfilestatus",{"_index":1282,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["getfilestatus(file",{"_index":1289,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["getfilestatustext",{"_index":1283,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["getfilestatustext(file",{"_index":1291,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["getfiltereditems",{"_index":1178,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["gethasvalue",{"_index":172,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["getstructure",{"_index":1030,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["getting",{"_index":1528,"title":{"index.html":{}},"body":{}}],["gettotalpages",{"_index":1415,"title":{},"body":{"components/PaginationComponent.html":{}}}],["geturl",{"_index":228,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["geturl(entityname",{"_index":259,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["go",{"_index":1107,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["goback",{"_index":643,"title":{},"body":{"components/BackButtonComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["gotopage",{"_index":1401,"title":{},"body":{"components/PaginationComponent.html":{}}}],["gotopage(2",{"_index":1414,"title":{},"body":{"components/PaginationComponent.html":{}}}],["gotopage(page",{"_index":1412,"title":{},"body":{"components/PaginationComponent.html":{}}}],["grid",{"_index":925,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["grow",{"_index":428,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["h1",{"_index":365,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["h2",{"_index":923,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["h3",{"_index":719,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["handleapistructureresponse",{"_index":229,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["handleapistructureresponse(apistructure",{"_index":261,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["handleeditdialogdata",{"_index":796,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleeditdialogdata(data",{"_index":806,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleendpointcreation",{"_index":850,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["handleendpointcreation(response",{"_index":863,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["handleendpointupdate",{"_index":751,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["handleendpointupdate(response",{"_index":764,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["handleendpointupdateerror",{"_index":752,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["handleendpointupdateerror(error",{"_index":766,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["handleentitydeletion",{"_index":797,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleentityinforesponse",{"_index":851,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["handleentityinforesponse(entity",{"_index":865,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["handleentityupdate",{"_index":798,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleentityupdate(response",{"_index":809,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleentityupdateerror",{"_index":799,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleentityupdateerror(error",{"_index":811,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleerror",{"_index":558,"title":{},"body":{"injectables/ApiService.html":{},"components/CardEntityComponent.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{}}}],["handleerror(error",{"_index":577,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{}}}],["handleerror(message",{"_index":813,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handlekeyboardevent",{"_index":1002,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["handlekeyboardevent(event",{"_index":1013,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["handler.service",{"_index":589,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["handler.service.ts",{"_index":1109,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:12",{"_index":1112,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:9",{"_index":1111,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handlesubmit",{"_index":1003,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["hasfiles",{"_index":1280,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["hasvalue",{"_index":140,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["header",{"_index":425,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":96,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["header.component.css",{"_index":1196,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":1197,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":95,"title":{"components/HeaderComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["height",{"_index":421,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["helpbuilding",{"_index":1559,"title":{},"body":{"index.html":{}}}],["here",{"_index":324,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["hidden",{"_index":461,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["hostlistener",{"_index":1034,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["hostlistener('document:keydown",{"_index":1014,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["hostlisteners",{"_index":1005,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["html",{"_index":18,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["htmlinputelement",{"_index":198,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["http",{"_index":566,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["http://localhost:4200",{"_index":1544,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":562,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["httperrorinterceptor",{"_index":1226,"title":{"interceptors/HttpErrorInterceptor.html":{}},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httperrorresponse",{"_index":578,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["httpevent",{"_index":1238,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["httphandler",{"_index":1235,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["httpinterceptor",{"_index":1239,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["httprequest",{"_index":1234,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["https://www.titan2.ru/images/temp/logo__ru.jpg",{"_index":1205,"title":{},"body":{"components/HeaderComponent.html":{}}}],["hub",{"_index":493,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"coverage.html":{}}}],["hubconnection",{"_index":497,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["i:hover",{"_index":746,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{}}}],["icon",{"_index":98,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["icontrashcomponent",{"_index":97,"title":{"components/IconTrashComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["identifier",{"_index":1461,"title":{},"body":{"coverage.html":{}}}],["if(buttontext",{"_index":1217,"title":{},"body":{"components/HeaderComponent.html":{}}}],["if(entityinfo.structure",{"_index":840,"title":{},"body":{"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["if(isapipage",{"_index":1216,"title":{},"body":{"components/HeaderComponent.html":{}}}],["img",{"_index":1220,"title":{},"body":{"components/HeaderComponent.html":{}}}],["implements",{"_index":210,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ErrorDisplayComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/SwitchComponent.html":{}}}],["import",{"_index":42,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["important",{"_index":484,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["importdialogcomponent",{"_index":100,"title":{"components/ImportDialogComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["imports",{"_index":24,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["includes",{"_index":1551,"title":{},"body":{"index.html":{}}}],["including",{"_index":1593,"title":{},"body":{"index.html":{}}}],["increase",{"_index":406,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["index",{"_index":30,"title":{"index.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":1377,"title":{},"body":{"components/LoadingComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["information",{"_index":1592,"title":{},"body":{"index.html":{}}}],["initialdata",{"_index":503,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["initializedata",{"_index":499,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["initializedata(initialdata",{"_index":501,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["inject",{"_index":177,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["inject(tuialertservice",{"_index":1021,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["inject(tuidialogservice",{"_index":166,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["injectable",{"_index":489,"title":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{}},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["injectables",{"_index":491,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"overview.html":{}}}],["injectcontext",{"_index":37,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["inline",{"_index":417,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/SwitchComponent.html":{}}}],["input",{"_index":196,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["input'},{'name",{"_index":94,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["input.component.css",{"_index":1157,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.html",{"_index":1158,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts",{"_index":1154,"title":{},"body":{"components/FilterByInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:122",{"_index":1171,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:44",{"_index":1168,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:53",{"_index":1166,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:62",{"_index":1167,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:70",{"_index":1169,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:78",{"_index":1177,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:89",{"_index":1179,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:97",{"_index":1164,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.value",{"_index":199,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["input/filter",{"_index":1153,"title":{},"body":{"components/FilterByInputComponent.html":{},"coverage.html":{}}}],["input:checked",{"_index":1455,"title":{},"body":{"components/SwitchComponent.html":{}}}],["inputchar",{"_index":1189,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["inputs",{"_index":668,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["intercept",{"_index":1230,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["intercept(req",{"_index":1233,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["interceptor",{"_index":1225,"title":{"interceptors/HttpErrorInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":1227,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["interface",{"_index":625,"title":{"interfaces/ApiServiceStructure.html":{},"interfaces/Endpoint.html":{},"interfaces/Entity.html":{},"interfaces/EntityShort.html":{},"interfaces/FileStatus.html":{},"interfaces/apiServiceShortStructure.html":{}},"body":{"interfaces/ApiServiceStructure.html":{},"interfaces/Endpoint.html":{},"interfaces/Entity.html":{},"interfaces/EntityShort.html":{},"interfaces/FileStatus.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{}}}],["interfaces",{"_index":626,"title":{},"body":{"interfaces/ApiServiceStructure.html":{},"interfaces/Endpoint.html":{},"interfaces/Entity.html":{},"interfaces/EntityShort.html":{},"interfaces/FileStatus.html":{},"interfaces/apiServiceShortStructure.html":{},"overview.html":{}}}],["interfaces/apiserviceshortstructure",{"_index":183,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"injectables/EntityService.html":{},"components/ExportApiButtonComponent.html":{},"components/IconTrashComponent.html":{}}}],["interfaces/apiservicestructure",{"_index":291,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EntityService.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{}}}],["interfaces/endpoint",{"_index":289,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEndpointComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/IconTrashComponent.html":{}}}],["interfaces/entity",{"_index":290,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["interfaces/entityshort",{"_index":1261,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["interfaces/filestatus",{"_index":1308,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["invalid",{"_index":1438,"title":{},"body":{"components/SwitchComponent.html":{}}}],["invalidfalse",{"_index":1429,"title":{},"body":{"components/SwitchComponent.html":{}}}],["invalidtrue",{"_index":1430,"title":{},"body":{"components/SwitchComponent.html":{}}}],["isactive",{"_index":279,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ImportDialogComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["isapipage",{"_index":1200,"title":{},"body":{"components/HeaderComponent.html":{}}}],["iscansubmit",{"_index":1000,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["iscopied",{"_index":223,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["isfeatureenabled",{"_index":1420,"title":{},"body":{"components/SwitchComponent.html":{}}}],["isrouteexists",{"_index":852,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["isrouteexists(route",{"_index":867,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["item",{"_index":439,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/IconTrashComponent.html":{}}}],["item.includes(value",{"_index":1186,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["item:last",{"_index":446,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["items",{"_index":387,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{}}}],["itemsperpage",{"_index":1403,"title":{},"body":{"components/PaginationComponent.html":{}}}],["json",{"_index":915,"title":{},"body":{"components/EndpointCardListComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{}}}],["json.description",{"_index":1338,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["json.entities",{"_index":1339,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["json.isactive",{"_index":1337,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["json.parse(text",{"_index":1329,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["json.parse(value",{"_index":1038,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["json.stringify(datawithoutname",{"_index":1136,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["json.stringify(this.data.structure",{"_index":1036,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["jsonstring",{"_index":1135,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["jszip",{"_index":1521,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":388,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{}}}],["karma",{"_index":1573,"title":{},"body":{"index.html":{}}}],["keyboardevent",{"_index":1009,"title":{},"body":{"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["keyframes",{"_index":1381,"title":{},"body":{"components/LoadingComponent.html":{}}}],["label",{"_index":681,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{}}}],["left",{"_index":408,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["legend",{"_index":56,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["line",{"_index":427,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["list",{"_index":215,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"index.html":{}}}],["list'},{'name",{"_index":69,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["list.component.css",{"_index":305,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["list.component.css,../../../styles/card",{"_index":846,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.css,../../styles/button.css",{"_index":218,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["list.component.html",{"_index":219,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["list.component.ts",{"_index":209,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"coverage.html":{}}}],["list.component.ts:105",{"_index":876,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:111",{"_index":276,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["list.component.ts:112",{"_index":878,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:120",{"_index":260,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["list.component.ts:121",{"_index":868,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:124",{"_index":269,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["list.component.ts:125",{"_index":879,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:133",{"_index":862,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:138",{"_index":274,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["list.component.ts:145",{"_index":864,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:152",{"_index":272,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["list.component.ts:156",{"_index":875,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:161",{"_index":881,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:174",{"_index":873,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:41",{"_index":283,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["list.component.ts:42",{"_index":287,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["list.component.ts:43",{"_index":285,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["list.component.ts:44",{"_index":282,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["list.component.ts:45",{"_index":281,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["list.component.ts:46",{"_index":250,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["list.component.ts:47",{"_index":884,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:48",{"_index":885,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:49",{"_index":886,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:51",{"_index":882,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:56",{"_index":883,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:59",{"_index":266,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["list.component.ts:60",{"_index":860,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:63",{"_index":267,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["list.component.ts:72",{"_index":265,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["list.component.ts:74",{"_index":870,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:78",{"_index":871,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:82",{"_index":263,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["list.component.ts:86",{"_index":869,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:91",{"_index":257,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["list.component.ts:96",{"_index":254,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["list.component.ts:98",{"_index":866,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.css",{"_index":847,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list/api",{"_index":208,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"coverage.html":{}}}],["list/card",{"_index":1481,"title":{},"body":{"coverage.html":{}}}],["list/endpoint",{"_index":844,"title":{},"body":{"components/EndpointCardListComponent.html":{},"coverage.html":{}}}],["list/entity",{"_index":1485,"title":{},"body":{"coverage.html":{}}}],["literal",{"_index":278,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["loadapistructure",{"_index":230,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["loaddata",{"_index":853,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["loader",{"_index":1367,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loader:after",{"_index":1371,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loader:before",{"_index":1370,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading",{"_index":224,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{}}}],["loading'},{'name",{"_index":102,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["loading.component.css",{"_index":1361,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading.component.html",{"_index":1362,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loadingcomponent",{"_index":101,"title":{"components/LoadingComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["local",{"_index":1538,"title":{},"body":{"index.html":{}}}],["location",{"_index":640,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["logourl",{"_index":1201,"title":{},"body":{"components/HeaderComponent.html":{}}}],["margin",{"_index":371,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{}}}],["matching",{"_index":113,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1519,"title":{},"body":{"dependencies.html":{}}}],["math.ceil(this.totalitems",{"_index":1417,"title":{},"body":{"components/PaginationComponent.html":{}}}],["max",{"_index":480,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{}}}],["mb",{"_index":916,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["media",{"_index":479,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/HeaderComponent.html":{}}}],["memberof",{"_index":54,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["message",{"_index":815,"title":{},"body":{"components/CardEntityComponent.html":{},"components/EntityDialogComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["metadata",{"_index":19,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["methods",{"_index":134,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["microsoft/signalr",{"_index":515,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"dependencies.html":{}}}],["min",{"_index":1194,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["miscellaneous",{"_index":1604,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mobile",{"_index":1512,"title":{},"body":{"dependencies.html":{}}}],["modify",{"_index":1549,"title":{},"body":{"index.html":{}}}],["modules",{"_index":1599,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":1591,"title":{},"body":{"index.html":{}}}],["movefocus",{"_index":135,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["movefocus(targetinput",{"_index":142,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["multi",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":61,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["namefor",{"_index":1555,"title":{},"body":{"index.html":{}}}],["nameinputref",{"_index":133,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["navigate",{"_index":1543,"title":{},"body":{"index.html":{}}}],["needs",{"_index":1588,"title":{},"body":{"index.html":{}}}],["negative",{"_index":604,"title":{},"body":{"injectables/ApiService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{}}}],["new",{"_index":504,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{},"index.html":{}}}],["newfiles",{"_index":1310,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["newfiles.map(file",{"_index":1316,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["newstate",{"_index":270,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["next",{"_index":314,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/ImportDialogComponent.html":{}}}],["next.handle(req).pipe",{"_index":1241,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["ng",{"_index":1540,"title":{},"body":{"index.html":{}}}],["ng_event_plugins",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngfor",{"_index":1278,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["ngif",{"_index":1274,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["ngondestroy",{"_index":231,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["ngoninit",{"_index":232,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/SwitchComponent.html":{}}}],["ngzone",{"_index":513,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["noentities",{"_index":358,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["none",{"_index":438,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["normal",{"_index":731,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["normal').foreach(file",{"_index":1342,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["normal').length",{"_index":1320,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["notification",{"_index":1263,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["notification.subscribe",{"_index":1272,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["nowrap",{"_index":723,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["null",{"_index":284,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiService.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"components/ExportApiButtonComponent.html":{}}}],["number",{"_index":1395,"title":{},"body":{"components/PaginationComponent.html":{}}}],["observable",{"_index":511,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["oldname",{"_index":543,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{}}}],["onapitogglechange",{"_index":233,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["onapitogglechange(newstate",{"_index":268,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["onclick",{"_index":1130,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["ondeleteconfirmed",{"_index":665,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["ondestroy",{"_index":212,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["one",{"_index":1586,"title":{},"body":{"index.html":{}}}],["onendpointdeleted",{"_index":854,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["onendpointdeleted(endpointroute",{"_index":872,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["onendpointtogglechange",{"_index":234,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["onendpointtogglechange(entity",{"_index":271,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["onentitytogglechange",{"_index":235,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["onentitytogglechange(entity",{"_index":273,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["oninit",{"_index":211,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/SwitchComponent.html":{}}}],["oninput",{"_index":136,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["oninput(event",{"_index":150,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["onkeypress",{"_index":1160,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["onkeypress(event",{"_index":1170,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["onpagechange(page",{"_index":1394,"title":{},"body":{"components/PaginationComponent.html":{}}}],["ontoggle",{"_index":1431,"title":{},"body":{"components/SwitchComponent.html":{}}}],["ontoggle(value",{"_index":1421,"title":{},"body":{"components/SwitchComponent.html":{}}}],["ontogglechange",{"_index":666,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["ontogglechange(newstate",{"_index":677,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["opacity",{"_index":1447,"title":{},"body":{"components/SwitchComponent.html":{}}}],["open",{"_index":711,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ImportDialogComponent.html":{},"index.html":{}}}],["open('api",{"_index":707,"title":{},"body":{"components/CardApiComponent.html":{}}}],["open(`${message",{"_index":837,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["open(message",{"_index":1044,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["open(new",{"_index":1264,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["opencreatedialog",{"_index":855,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["openeditdialog",{"_index":667,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["optimizes",{"_index":1567,"title":{},"body":{"index.html":{}}}],["optional",{"_index":146,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{}}}],["order",{"_index":423,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["ordersupdated",{"_index":498,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["out",{"_index":1378,"title":{},"body":{"components/LoadingComponent.html":{}}}],["outline",{"_index":463,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/HeaderComponent.html":{}}}],["output",{"_index":685,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["outputs",{"_index":669,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["overflow",{"_index":460,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["overview",{"_index":1597,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":724,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["package",{"_index":1498,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":362,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["page",{"_index":104,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"index.html":{}}}],["page/endpoin",{"_index":843,"title":{},"body":{"components/EndpointCardListComponent.html":{},"coverage.html":{}}}],["pagechange",{"_index":1405,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagenotfoundcomponent",{"_index":103,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["pagination",{"_index":1396,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination'},{'name",{"_index":107,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["pagination.component.css",{"_index":1399,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.component.html",{"_index":1400,"title":{},"body":{"components/PaginationComponent.html":{}}}],["paginationcomponent",{"_index":106,"title":{"components/PaginationComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["param",{"_index":188,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{}}}],["parameters",{"_index":145,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{}}}],["params['apiservicename",{"_index":893,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["params['code",{"_index":1102,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["params['entityname",{"_index":895,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["params['message",{"_index":1105,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["params['name",{"_index":310,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["patch",{"_index":599,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["path",{"_index":1363,"title":{},"body":{"components/LoadingComponent.html":{}}}],["performance",{"_index":1568,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":1266,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["pipe(catcherror((err",{"_index":592,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["pipes",{"_index":1558,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":1514,"title":{},"body":{"dependencies.html":{}}}],["pointer",{"_index":471,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/SwitchComponent.html":{}}}],["polymorpheuscomponent",{"_index":1259,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["polymorpheuscomponent(alertdeletecomponent",{"_index":1265,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["position",{"_index":383,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["positioned",{"_index":381,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["post",{"_index":951,"title":{},"body":{"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{}}}],["post(`${this.baseurl}/apientity/${apiservicename",{"_index":1082,"title":{},"body":{"injectables/EntityService.html":{}}}],["post(`${this.baseurl}/apiservice",{"_index":595,"title":{},"body":{"injectables/ApiService.html":{}}}],["powerful",{"_index":1552,"title":{},"body":{"index.html":{}}}],["previousurl",{"_index":649,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["previousurl.startswith(basedomain",{"_index":652,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["primary",{"_index":483,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/SwitchComponent.html":{}}}],["private",{"_index":131,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["processcreatedialogdata",{"_index":856,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["processcreatedialogdata(data",{"_index":877,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["processeddata",{"_index":1281,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["processeditdialogdata",{"_index":753,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["processeditdialogdata(data",{"_index":771,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["processjson",{"_index":1284,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["processjson(json",{"_index":1293,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["production",{"_index":1566,"title":{},"body":{"index.html":{}}}],["progressevent",{"_index":1327,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["project",{"_index":1530,"title":{},"body":{"index.html":{}}}],["properties",{"_index":31,"title":{"properties.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"properties.html":{}}}],["protected",{"_index":32,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["provide",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":517,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{}}}],["providehttpclient",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(app_routes",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1423,"title":{},"body":{"components/SwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":129,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["put",{"_index":596,"title":{},"body":{"injectables/ApiService.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["queryparams",{"_index":1126,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["radius",{"_index":394,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["reactiveformsmodule",{"_index":1156,"title":{},"body":{"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["read",{"_index":164,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["reader",{"_index":1323,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["reader.onload",{"_index":1325,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["reader.readastext(file",{"_index":1332,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["readfiles",{"_index":1285,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["readfiles(files",{"_index":1296,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["readonly",{"_index":33,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["red",{"_index":1359,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["reference",{"_index":1598,"title":{},"body":{"index.html":{}}}],["references",{"_index":1595,"title":{},"body":{"index.html":{}}}],["relative",{"_index":384,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["relatively",{"_index":382,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["reload",{"_index":1547,"title":{},"body":{"index.html":{}}}],["remarks",{"_index":50,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["removefile",{"_index":1286,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["removefile(filetoremove",{"_index":1297,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["repeat(2",{"_index":940,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["repeat(3",{"_index":938,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["repeat(4",{"_index":927,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["repositories/api",{"_index":299,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{}}}],["repositories/endpoint",{"_index":302,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEndpointComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["repositories/entity",{"_index":303,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["repository.service",{"_index":301,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{}}}],["repository.service.ts",{"_index":607,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{},"coverage.html":{}}}],["repository.service.ts:10",{"_index":609,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:13",{"_index":613,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:17",{"_index":614,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:21",{"_index":610,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:25",{"_index":972,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:27",{"_index":611,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:29",{"_index":968,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:31",{"_index":615,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:33",{"_index":974,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:38",{"_index":612,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:42",{"_index":616,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:9",{"_index":963,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["req",{"_index":1237,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["resize",{"_index":943,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["resources",{"_index":1590,"title":{},"body":{"index.html":{}}}],["response",{"_index":55,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["response.error",{"_index":1349,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["responsealert",{"_index":1249,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["results",{"_index":112,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":185,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"components/FilterByInputComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{}}}],["returns",{"_index":148,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["reverse",{"_index":1380,"title":{},"body":{"components/LoadingComponent.html":{}}}],["rgb(0",{"_index":929,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["rgba(0",{"_index":935,"title":{},"body":{"components/EndpointCardListComponent.html":{},"components/HeaderComponent.html":{}}}],["right",{"_index":404,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["root",{"_index":518,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/AppComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{}}}],["root'},{'name",{"_index":71,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["rotate(360deg",{"_index":478,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["route",{"_index":251,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["router",{"_index":240,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiService.html":{},"components/BackButtonComponent.html":{},"components/CardEndpointComponent.html":{},"components/EndpointCardListComponent.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{}}}],["routermodule",{"_index":217,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["routeroutlet",{"_index":629,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1539,"title":{},"body":{"index.html":{}}}],["runner",{"_index":1575,"title":{},"body":{"index.html":{}}}],["running",{"_index":1542,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":293,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":588,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["safari",{"_index":734,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["scaffolding",{"_index":1550,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":1556,"title":{},"body":{"index.html":{}}}],["screen",{"_index":1222,"title":{},"body":{"components/HeaderComponent.html":{}}}],["scrollbar",{"_index":736,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["search",{"_index":1165,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["searchquery",{"_index":1162,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["section",{"_index":918,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["selector",{"_index":20,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["separator",{"_index":922,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["serveonce",{"_index":1541,"title":{},"body":{"index.html":{}}}],["server",{"_index":1537,"title":{},"body":{"index.html":{}}}],["service",{"_index":300,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["service.name",{"_index":1345,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["service.service",{"_index":296,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["service.service.ts",{"_index":494,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"coverage.html":{}}}],["service.service.ts:10",{"_index":510,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["service.service.ts:11",{"_index":506,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["service.service.ts:12",{"_index":508,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["service.service.ts:13",{"_index":500,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["service.service.ts:14",{"_index":983,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:15",{"_index":565,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:16",{"_index":1071,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:22",{"_index":989,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:23",{"_index":574,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:24",{"_index":1076,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:29",{"_index":576,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:30",{"_index":1075,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:33",{"_index":985,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:36",{"_index":1072,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:37",{"_index":568,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:42",{"_index":1078,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:45",{"_index":570,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:46",{"_index":988,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:51",{"_index":581,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:55",{"_index":1073,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:58",{"_index":991,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:63",{"_index":572,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:64",{"_index":1079,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:67",{"_index":502,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["service.service.ts:71",{"_index":583,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:72",{"_index":987,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:77",{"_index":1074,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:83",{"_index":1077,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:84",{"_index":993,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:85",{"_index":579,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:98",{"_index":990,"title":{},"body":{"injectables/EndpointService.html":{}}}],["servicename",{"_index":573,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["services/api",{"_index":295,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["services/endpoint",{"_index":975,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["services/entity",{"_index":1062,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["services/error",{"_index":1240,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["set",{"_index":322,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EntityDialogComponent.html":{}}}],["setstructure(value",{"_index":1032,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["settimeout",{"_index":342,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["shadow",{"_index":398,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/HeaderComponent.html":{}}}],["showcopysuccess",{"_index":236,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["showcopysuccess(url",{"_index":275,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["showdialog",{"_index":137,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["showdialog(content",{"_index":153,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["showerror",{"_index":1004,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["showerror(message",{"_index":1019,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["showicons",{"_index":1425,"title":{},"body":{"components/SwitchComponent.html":{}}}],["shownotification",{"_index":1248,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["showrouteexistserror",{"_index":857,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["signalr",{"_index":514,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["signalr.httptransporttype.websockets",{"_index":524,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["signalr.hubconnection",{"_index":509,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["signalr.hubconnectionbuilder",{"_index":520,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["size",{"_index":367,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["sizing",{"_index":467,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/LoadingComponent.html":{}}}],["skipnegotiation",{"_index":522,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["slide",{"_index":1375,"title":{},"body":{"components/LoadingComponent.html":{}}}],["slider",{"_index":1448,"title":{},"body":{"components/SwitchComponent.html":{}}}],["slider:before",{"_index":1451,"title":{},"body":{"components/SwitchComponent.html":{}}}],["solid",{"_index":444,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/LoadingComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"index.html":{}}}],["space",{"_index":389,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/HeaderComponent.html":{}}}],["speed",{"_index":1569,"title":{},"body":{"index.html":{}}}],["src/.../app.config.ts",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":628,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":636,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1464,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/data/components/alert",{"_index":10,"title":{},"body":{"components/AlertDeleteComponent.html":{},"coverage.html":{}}}],["src/app/data/components/api",{"_index":114,"title":{},"body":{"components/ApiDialogComponent.html":{},"coverage.html":{}}}],["src/app/data/components/back",{"_index":637,"title":{},"body":{"components/BackButtonComponent.html":{},"coverage.html":{}}}],["src/app/data/components/card",{"_index":659,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"coverage.html":{}}}],["src/app/data/components/endpoint",{"_index":944,"title":{},"body":{"components/EndpointDialogComponent.html":{},"coverage.html":{}}}],["src/app/data/components/entity",{"_index":998,"title":{},"body":{"components/EntityDialogComponent.html":{},"coverage.html":{}}}],["src/app/data/components/export",{"_index":1128,"title":{},"body":{"components/ExportApiButtonComponent.html":{},"coverage.html":{}}}],["src/app/data/components/filter",{"_index":1152,"title":{},"body":{"components/FilterByInputComponent.html":{},"coverage.html":{}}}],["src/app/data/components/header/header.component.ts",{"_index":1195,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/data/components/header/header.component.ts:37",{"_index":1206,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:46",{"_index":1203,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:54",{"_index":1207,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:63",{"_index":1204,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:71",{"_index":1212,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:85",{"_index":1208,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:97",{"_index":1209,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/icon",{"_index":1243,"title":{},"body":{"components/IconTrashComponent.html":{},"coverage.html":{}}}],["src/app/data/components/import",{"_index":1273,"title":{},"body":{"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["src/app/data/components/loading/loading.component.ts",{"_index":1360,"title":{},"body":{"components/LoadingComponent.html":{},"coverage.html":{}}}],["src/app/data/components/loading/loading.component.ts:29",{"_index":1365,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts",{"_index":1392,"title":{},"body":{"components/PaginationComponent.html":{},"coverage.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:102",{"_index":1413,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:60",{"_index":1410,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:68",{"_index":1409,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:76",{"_index":1407,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:83",{"_index":1411,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:91",{"_index":1416,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts",{"_index":1419,"title":{},"body":{"components/SwitchComponent.html":{},"coverage.html":{}}}],["src/app/data/components/switch/switch.component.ts:54",{"_index":1433,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts:61",{"_index":1434,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts:68",{"_index":1441,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts:77",{"_index":1439,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts:85",{"_index":1435,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts:96",{"_index":1436,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/pages/api",{"_index":207,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"coverage.html":{}}}],["src/app/data/pages/card",{"_index":1480,"title":{},"body":{"coverage.html":{}}}],["src/app/data/pages/endpoints",{"_index":842,"title":{},"body":{"components/EndpointCardListComponent.html":{},"coverage.html":{}}}],["src/app/data/pages/entity",{"_index":1484,"title":{},"body":{"coverage.html":{}}}],["src/app/data/pages/error",{"_index":1089,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"coverage.html":{}}}],["src/app/data/pages/page",{"_index":1385,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/interceptors/http",{"_index":1228,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/interfaces/apiserviceshortstructure.ts",{"_index":1458,"title":{},"body":{"interfaces/apiServiceShortStructure.html":{},"coverage.html":{}}}],["src/app/interfaces/apiservicestructure.ts",{"_index":627,"title":{},"body":{"interfaces/ApiServiceStructure.html":{},"coverage.html":{}}}],["src/app/interfaces/endpoint.ts",{"_index":841,"title":{},"body":{"interfaces/Endpoint.html":{},"coverage.html":{}}}],["src/app/interfaces/entity.ts",{"_index":997,"title":{},"body":{"interfaces/Entity.html":{},"coverage.html":{}}}],["src/app/interfaces/entityshort.ts",{"_index":1088,"title":{},"body":{"interfaces/EntityShort.html":{},"coverage.html":{}}}],["src/app/interfaces/filestatus.ts",{"_index":1149,"title":{},"body":{"interfaces/FileStatus.html":{},"coverage.html":{}}}],["src/app/repositories/api",{"_index":606,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"coverage.html":{}}}],["src/app/repositories/endpoint",{"_index":958,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"coverage.html":{}}}],["src/app/repositories/entity",{"_index":1048,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"coverage.html":{}}}],["src/app/services/api",{"_index":492,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/services/endpoint",{"_index":982,"title":{},"body":{"injectables/EndpointService.html":{},"coverage.html":{}}}],["src/app/services/entity",{"_index":1069,"title":{},"body":{"injectables/EntityService.html":{},"coverage.html":{}}}],["src/app/services/error",{"_index":1108,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["standalone",{"_index":1155,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["start",{"_index":442,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"index.html":{}}}],["started",{"_index":1529,"title":{"index.html":{}},"body":{}}],["state",{"_index":323,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["statements",{"_index":1462,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":1150,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["stays",{"_index":426,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["still",{"_index":411,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["store",{"_index":1562,"title":{},"body":{"index.html":{}}}],["string",{"_index":253,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["structure",{"_index":941,"title":{},"body":{"components/EndpointCardListComponent.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"interfaces/EntityShort.html":{}}}],["structure(value",{"_index":1037,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["structureinputref",{"_index":1001,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["style",{"_index":437,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["styles/button.css",{"_index":306,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["styles/card",{"_index":891,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["styles/card.css",{"_index":694,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["styles/icon.css",{"_index":695,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{}}}],["styleurl",{"_index":632,"title":{},"body":{"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["styleurls",{"_index":26,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["sub",{"_index":225,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEntityComponent.html":{}}}],["subject",{"_index":516,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["submit",{"_index":138,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["submit(event",{"_index":158,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["subscribe",{"_index":194,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/ImportDialogComponent.html":{}}}],["subscription",{"_index":286,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["success",{"_index":708,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["such",{"_index":1557,"title":{},"body":{"index.html":{}}}],["suits",{"_index":1587,"title":{},"body":{"index.html":{}}}],["switch",{"_index":109,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["switch.component.css",{"_index":1427,"title":{},"body":{"components/SwitchComponent.html":{}}}],["switch.component.html",{"_index":1428,"title":{},"body":{"components/SwitchComponent.html":{}}}],["switch/switch.component",{"_index":687,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["switchcomponent",{"_index":108,"title":{"components/SwitchComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["switchmap",{"_index":1257,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["switchmap((response",{"_index":1267,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["t",{"_index":415,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["table",{"_index":1497,"title":{},"body":{"coverage.html":{},"dependencies.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1496,"title":{},"body":{"coverage.html":{}}}],["taiga",{"_index":15,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"dependencies.html":{}}}],["takeuntil",{"_index":1258,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["takeuntil(this.router.events",{"_index":1271,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["targetinput",{"_index":147,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["targetinput.nativeelement.queryselector('input",{"_index":1046,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["targetinput.nativeelement.queryselector('input').focus",{"_index":206,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["templateref",{"_index":154,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["templateurl",{"_index":28,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["test",{"_index":1574,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1581,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":1579,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1571,"title":{},"body":{"index.html":{}}}],["text",{"_index":255,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ImportDialogComponent.html":{}}}],["textarea",{"_index":327,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["textarea').focus",{"_index":1047,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["textarea.select",{"_index":331,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["textarea.value",{"_index":329,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["this.alerts",{"_index":706,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EntityDialogComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["this.alerts.open",{"_index":1270,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["this.alerts.open(error.message",{"_index":602,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["this.alerts.open(message",{"_index":838,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.alertservice.open(`error",{"_index":1115,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.apideleted.emit",{"_index":716,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.apiinfo",{"_index":701,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.apiinfo.isactive",{"_index":320,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{}}}],["this.apiinfo.name",{"_index":699,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.apilistsubject.asobservable",{"_index":512,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.getvalue",{"_index":538,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.getvalue().map(apiservice",{"_index":551,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.next",{"_index":550,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.next(apilist",{"_index":534,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.next(currentlist",{"_index":540,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.next(initialdata",{"_index":552,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apiname",{"_index":309,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEndpointComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["this.apiservice.createapiservice(service",{"_index":620,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.createfullapiservice(service",{"_index":621,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.createfullapiservice(service).subscribe",{"_index":1344,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.apiservice.deleteapiservice(servicename",{"_index":623,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.getapilist",{"_index":618,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.getapistructurelist(name",{"_index":619,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.getapistructurelist(this.apiname).subscribe",{"_index":313,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["this.apiservice.updateapiservice(oldname",{"_index":622,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.updateapiservicestatus(servicename",{"_index":624,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservicerepository",{"_index":345,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{}}}],["this.apiservicerepository.deleteapiservice(this.apiinfo.name).subscribe",{"_index":715,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.apiservicerepository.getapistructurelist(this.apiinfo.name).subscribe",{"_index":1133,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["this.baseurl}/apiendpoint/${apiservicename}/${entityname",{"_index":994,"title":{},"body":{"injectables/EndpointService.html":{}}}],["this.baseurl}/apiendpoint/${apiservicename}/${entityname}/${actionname",{"_index":995,"title":{},"body":{"injectables/EndpointService.html":{}}}],["this.baseurl}/apiendpoint/${servicename}/${entityname}/${endpoint}/${isactive",{"_index":996,"title":{},"body":{"injectables/EndpointService.html":{}}}],["this.baseurl}/apientity/${apiservicename}/${entityname",{"_index":1083,"title":{},"body":{"injectables/EntityService.html":{}}}],["this.baseurl}/apientity/${servicename}/${entityname}/${isactive",{"_index":1085,"title":{},"body":{"injectables/EntityService.html":{}}}],["this.baseurl}/apiservice/${encodeuricomponent",{"_index":600,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.baseurl}/apiservice/${encodeuricomponent(name",{"_index":594,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.baseurl}/apiservice/${encodeuricomponent(oldname",{"_index":597,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.baseurl}/apiservice/${encodeuricomponent(servicename",{"_index":598,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.buttonclick.emit",{"_index":1214,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.cd.detectchanges",{"_index":902,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.cd.markforcheck",{"_index":317,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ImportDialogComponent.html":{}}}],["this.context.completewith(false",{"_index":1348,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.context.completewith(this.data",{"_index":191,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.context.data",{"_index":187,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.control.setvalue(currentfiles",{"_index":1356,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.control.value",{"_index":1353,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.control.value.filter(file",{"_index":1354,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.control.valuechanges.subscribe((files",{"_index":1309,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.controlname",{"_index":1173,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.copytexttoclipboard(url",{"_index":326,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["this.createendpoint(data",{"_index":907,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.data.name",{"_index":205,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.data.name.trim",{"_index":186,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.data.route",{"_index":957,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["this.data.route.trim",{"_index":956,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["this.data.structure",{"_index":1035,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["this.dialog",{"_index":700,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["this.dialog().subscribe",{"_index":1215,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.dialogs.open(content",{"_index":192,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.endpoint",{"_index":903,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.endpointdeleted.emit(this.endpointinfo.route",{"_index":789,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.endpointinfo",{"_index":783,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.endpointinfo.isactive",{"_index":779,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.endpointinfo.route",{"_index":782,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.endpointrepositoryservice",{"_index":354,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEndpointComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["this.endpoints",{"_index":900,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.endpoints.filter",{"_index":913,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.endpoints.push(data",{"_index":911,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.endpoints.some((endpoint",{"_index":908,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.endpointservice.createendpoint(apiservicename",{"_index":977,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.endpointservice.deleteendpoint(apiservicename",{"_index":980,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.endpointservice.getendpointbyname(apiservicename",{"_index":978,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.endpointservice.getendpointlist(apiservicename",{"_index":976,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.endpointservice.updateendpoint(apiservicename",{"_index":979,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.endpointservice.updateendpointstatus(apiservicename",{"_index":981,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.entities",{"_index":318,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["this.entitydeleted.emit(this.entityinfo.name",{"_index":835,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.entityinfo",{"_index":828,"title":{},"body":{"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["this.entityinfo.isactive",{"_index":826,"title":{},"body":{"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["this.entityinfo.name",{"_index":781,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["this.entityname",{"_index":894,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.entityrepositoryservice",{"_index":350,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["this.entityservice.createapientity(apiservicename",{"_index":1065,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.entityservice.deleteapientity(apiservicename",{"_index":1067,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.entityservice.getapientity(apiservicename",{"_index":1064,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.entityservice.getapientitylist(apiservicename",{"_index":1063,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.entityservice.updateapientity(apiservicename",{"_index":1066,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.entityservice.updateentitystatus(servicename",{"_index":1068,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.errorcode",{"_index":1101,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["this.errorhandler.handleerror(error",{"_index":601,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["this.errormessage",{"_index":1104,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["this.files",{"_index":1315,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.files.every(file",{"_index":1347,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.files.filter(f",{"_index":1318,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.files.filter(file",{"_index":1351,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.files.find(f",{"_index":1333,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.files.some(f",{"_index":1312,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.form.controls[this.controlname].valuechanges.subscribe(value",{"_index":1188,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.form.get(this.controlname",{"_index":1182,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.geturl(entityname",{"_index":325,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["this.handleapistructureresponse(apistructure",{"_index":315,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["this.handleeditdialogdata(data",{"_index":829,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.handleendpointcreation(response",{"_index":910,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.handleendpointupdate(response",{"_index":786,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.handleendpointupdateerror(error",{"_index":787,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.handleentitydeletion",{"_index":831,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.handleentityinforesponse(entity",{"_index":899,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.handleentityupdate(response",{"_index":833,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.handleentityupdateerror(error",{"_index":834,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.handleerror",{"_index":827,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.handleerror(err",{"_index":593,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["this.handlesubmit",{"_index":1042,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["this.hasfiles",{"_index":1317,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.hasvalue",{"_index":190,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.http",{"_index":590,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["this.hubconnection",{"_index":519,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.hubconnection.on('addservice",{"_index":536,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.hubconnection.on('recievemessage",{"_index":532,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.hubconnection.on('removeservice",{"_index":547,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.hubconnection.on('updateservice",{"_index":542,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.hubconnection.on('updatestatusservice",{"_index":549,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.invalidfalse.markastouched",{"_index":1443,"title":{},"body":{"components/SwitchComponent.html":{}}}],["this.invalidtrue.markastouched",{"_index":1442,"title":{},"body":{"components/SwitchComponent.html":{}}}],["this.iscansubmit",{"_index":1039,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["this.iscopied",{"_index":341,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["this.isfeatureenabled",{"_index":1422,"title":{},"body":{"components/SwitchComponent.html":{}}}],["this.isrouteexists(data.route",{"_index":905,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.item.name",{"_index":1269,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["this.items",{"_index":1187,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.items.filter(item",{"_index":1185,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.itemsperpage",{"_index":1418,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.loadapistructure",{"_index":311,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["this.loaddata",{"_index":896,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.loading",{"_index":316,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["this.location",{"_index":696,"title":{},"body":{"components/CardApiComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["this.location.back",{"_index":653,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["this.location.path(true",{"_index":650,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["this.oldname",{"_index":698,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{}}}],["this.processcreatedialogdata(data",{"_index":904,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.processeddata.foreach(service",{"_index":1343,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.processeddata.length",{"_index":1341,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.processeddata.push(apiservicestructure",{"_index":1340,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.processeditdialogdata(data",{"_index":784,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.processjson(json",{"_index":1331,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.readfiles(newfiles",{"_index":1321,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.responsealert.emit(true",{"_index":1268,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["this.route.params.subscribe((params",{"_index":308,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["this.route.queryparams.subscribe((params",{"_index":1100,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["this.router.navigate",{"_index":1106,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["this.router.navigate(['/error",{"_index":1125,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.router.navigate(['/page",{"_index":1118,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.router.navigatebyurl",{"_index":654,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["this.router.url",{"_index":648,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["this.searchquery.emit(value",{"_index":1184,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.showcopysuccess(text",{"_index":334,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["this.showerror('json",{"_index":1043,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["this.showrouteexistserror",{"_index":906,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.sub",{"_index":312,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["this.sub?.unsubscribe",{"_index":307,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["this.subscription",{"_index":897,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.subscription?.unsubscribe",{"_index":892,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.toggle.emit(this.value",{"_index":1444,"title":{},"body":{"components/SwitchComponent.html":{}}}],["this.updateendpoint(data",{"_index":785,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.updateentitystatus(newstate",{"_index":912,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.updatefilestatus(file",{"_index":1330,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["throwerror",{"_index":586,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["throwerror(error",{"_index":605,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["thumb",{"_index":739,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["thumb:hover",{"_index":741,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["title",{"_index":634,"title":{},"body":{"components/AppComponent.html":{}}}],["toggle",{"_index":1432,"title":{},"body":{"components/SwitchComponent.html":{}}}],["tools",{"_index":1553,"title":{},"body":{"index.html":{}}}],["top",{"_index":743,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["totalitems",{"_index":1404,"title":{},"body":{"components/PaginationComponent.html":{}}}],["totalpages",{"_index":1406,"title":{},"body":{"components/PaginationComponent.html":{}}}],["track",{"_index":737,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["transform",{"_index":477,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["transition",{"_index":396,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/SwitchComponent.html":{}}}],["translatex",{"_index":1384,"title":{},"body":{"components/LoadingComponent.html":{}}}],["translatex(16.8px",{"_index":1457,"title":{},"body":{"components/SwitchComponent.html":{}}}],["translatex(70px",{"_index":1382,"title":{},"body":{"components/LoadingComponent.html":{}}}],["translatey",{"_index":934,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["transparent",{"_index":392,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["transport",{"_index":523,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["trash",{"_index":1245,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash'},{'name",{"_index":99,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["trash.component",{"_index":690,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["trash.component.css",{"_index":1262,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.css,../../styles/icon.css",{"_index":1246,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.html",{"_index":1247,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts",{"_index":1244,"title":{},"body":{"components/IconTrashComponent.html":{},"coverage.html":{}}}],["trash.component.ts:42",{"_index":1255,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts:50",{"_index":1252,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts:58",{"_index":1254,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts:66",{"_index":1253,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts:74",{"_index":1251,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts:98",{"_index":1256,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash/icon",{"_index":689,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{},"coverage.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["true",{"_index":184,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/SwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":332,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["tslib",{"_index":1524,"title":{},"body":{"dependencies.html":{}}}],["tui",{"_index":431,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/FilterByInputComponent.html":{}}}],["tuiaccordion",{"_index":216,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["tuialertoptions",{"_index":47,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["tuialertservice",{"_index":249,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["tuiappearance",{"_index":662,"title":{},"body":{"components/CardApiComponent.html":{}}}],["tuiautofocus",{"_index":119,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["tuiavatar",{"_index":1275,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["tuibutton",{"_index":120,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["tuicardlarge",{"_index":845,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["tuidatalistwrapper",{"_index":121,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["tuidialog",{"_index":686,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/HeaderComponent.html":{}}}],["tuidialog(apidialogcomponent",{"_index":680,"title":{},"body":{"components/CardApiComponent.html":{}}}],["tuidialog(endpointdialogcomponent",{"_index":775,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["tuidialog(entitydialogcomponent",{"_index":819,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["tuidialog(importdialogcomponent",{"_index":1210,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tuidialogcontext",{"_index":180,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["tuidialogservice",{"_index":156,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["tuifilelike",{"_index":1151,"title":{},"body":{"interfaces/FileStatus.html":{}}}],["tuifiles",{"_index":1276,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["tuiicon",{"_index":1307,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["tuiinputmodule",{"_index":122,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["tuiinputslidermodule",{"_index":1397,"title":{},"body":{"components/PaginationComponent.html":{}}}],["tuilink",{"_index":1277,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["tuipagination",{"_index":1398,"title":{},"body":{"components/PaginationComponent.html":{}}}],["tuipopover",{"_index":41,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["tuiroot",{"_index":630,"title":{},"body":{"components/AppComponent.html":{}}}],["tuiselectmodule",{"_index":123,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["tuislider",{"_index":124,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["tuiswitch",{"_index":1426,"title":{},"body":{"components/SwitchComponent.html":{}}}],["tuiswitchoptionsprovider",{"_index":1424,"title":{},"body":{"components/SwitchComponent.html":{}}}],["tuitextareamodule",{"_index":999,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["tuitextfield",{"_index":125,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["tuitextfieldcontrollermodule",{"_index":126,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/PaginationComponent.html":{}}}],["type",{"_index":45,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":945,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["typescript",{"_index":1393,"title":{},"body":{"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["ui",{"_index":16,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["ui/addon",{"_index":1507,"title":{},"body":{"dependencies.html":{}}}],["ui/cdk",{"_index":46,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"dependencies.html":{}}}],["ui/core",{"_index":48,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{},"dependencies.html":{}}}],["ui/event",{"_index":1513,"title":{},"body":{"dependencies.html":{}}}],["ui/experimental",{"_index":292,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"dependencies.html":{}}}],["ui/icons",{"_index":1516,"title":{},"body":{"dependencies.html":{}}}],["ui/kit",{"_index":181,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"dependencies.html":{}}}],["ui/layout",{"_index":887,"title":{},"body":{"components/EndpointCardListComponent.html":{},"dependencies.html":{}}}],["ui/legacy",{"_index":182,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/PaginationComponent.html":{},"dependencies.html":{}}}],["ui/polymorpheus",{"_index":49,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["ul",{"_index":436,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["undefined",{"_index":53,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["unit",{"_index":1570,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":1103,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["updateapientity",{"_index":1053,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["updateapientity(apiservicename",{"_index":1060,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["updateapientity(this.apiname",{"_index":832,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["updateapiservice",{"_index":559,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["updateapiservice(oldname",{"_index":580,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["updateapiservice(this.oldname",{"_index":704,"title":{},"body":{"components/CardApiComponent.html":{}}}],["updateapiservicestatus",{"_index":560,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["updateapiservicestatus(servicename",{"_index":582,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["updateapiservicestatus(this.apiinfo.name",{"_index":697,"title":{},"body":{"components/CardApiComponent.html":{}}}],["updateapiservicestatus(this.apiname",{"_index":346,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["updateendpoint",{"_index":754,"title":{},"body":{"components/CardEndpointComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["updateendpoint(apiservicename",{"_index":971,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["updateendpoint(data",{"_index":773,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["updateendpointstatus",{"_index":780,"title":{},"body":{"components/CardEndpointComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["updateendpointstatus(apiservicename",{"_index":973,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["updateendpointstatus(servicename",{"_index":992,"title":{},"body":{"injectables/EndpointService.html":{}}}],["updateendpointstatus(this.apiname",{"_index":355,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["updateentitystatus",{"_index":858,"title":{},"body":{"components/EndpointCardListComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["updateentitystatus(newstate",{"_index":880,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["updateentitystatus(servicename",{"_index":1061,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["updateentitystatus(this.apiname",{"_index":351,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["updatefilestatus",{"_index":1287,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["updatefilestatus(file",{"_index":1301,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["url",{"_index":277,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["use",{"_index":1576,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":1532,"title":{},"body":{"index.html":{}}}],["validators",{"_index":1180,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["validators.pattern('^[a",{"_index":1175,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["value",{"_index":36,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":1040,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["value.replace(/[^a",{"_index":201,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["var",{"_index":59,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["variable",{"_index":1465,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1605,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1534,"title":{},"body":{"index.html":{},"properties.html":{}}}],["viewchild",{"_index":178,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["viewchild('descriptioninput",{"_index":163,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["viewchild('nameinput",{"_index":170,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["visible",{"_index":412,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["visit",{"_index":1596,"title":{},"body":{"index.html":{}}}],["void",{"_index":149,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["webkit",{"_index":732,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/HeaderComponent.html":{}}}],["weight",{"_index":374,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["whenever",{"_index":1548,"title":{},"body":{"index.html":{}}}],["white",{"_index":485,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/SwitchComponent.html":{}}}],["width",{"_index":419,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["window.location.origin}/api",{"_index":584,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["window.location.origin}/api/apiemu/${this.apiname}/${entityname}/${endpoint.route",{"_index":344,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["window.location.origin}/hubs",{"_index":507,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["window.url.createobjecturl(blob",{"_index":1140,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["window.url.revokeobjecturl(url",{"_index":1146,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["withautomaticreconnect([1000",{"_index":525,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["within",{"_index":402,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["withurl(`hubs/apilisthub",{"_index":521,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["word",{"_index":451,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["wrap",{"_index":452,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/HeaderComponent.html":{}}}],["x",{"_index":730,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["y",{"_index":729,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["yes",{"_index":160,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["z0",{"_index":203,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["za",{"_index":202,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["zone.js",{"_index":1526,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AlertDeleteComponent.html":{"url":"components/AlertDeleteComponent.html","title":"component - AlertDeleteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AlertDeleteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/alert-delete/alert-delete.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент AlertDeleteComponent предназначен для отображения уведомления при выполнении действия удаления.\nИспользует компоненты Taiga UI для управления всплывающим окном уведомления и его опциями.\nЭтот компонент является частью системы уведомлений и используется для оповещения пользователей о действиях удаления.\nИнтегрируется с сервисом уведомлений Taiga UI для обеспечения единообразного пользовательского опыта.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alert-on-delete\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./alert-delete.component.css\n            \n\n\n\n            \n                templateUrl\n                ./alert-delete.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                context\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext, boolean>>()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/alert-delete/alert-delete.component.ts:38\n                        \n                    \n\n            \n                \n                    Контекст для компонента TuiPopover, который управляет опциями уведомления.\nЭтот контекст внедряется с использованием функции injectContext из Taiga UI.\nОн предоставляет необходимую конфигурацию для всплывающего окна уведомления.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport type { TuiPopover } from '@taiga-ui/cdk';\nimport type { TuiAlertOptions } from '@taiga-ui/core';\nimport { injectContext } from '@taiga-ui/polymorpheus';\n\n/**\n * Компонент AlertDeleteComponent предназначен для отображения уведомления при выполнении действия удаления.\n * Использует компоненты Taiga UI для управления всплывающим окном уведомления и его опциями.\n *\n * @remarks\n * Этот компонент является частью системы уведомлений и используется для оповещения пользователей о действиях удаления.\n * Интегрируется с сервисом уведомлений Taiga UI для обеспечения единообразного пользовательского опыта.\n *\n * @example\n * html\n * \n *\n */\n@Component({\n  selector: 'app-alert-on-delete',\n  imports: [CommonModule],\n  templateUrl: './alert-delete.component.html',\n  styleUrls: ['./alert-delete.component.css'], \n})\nexport class AlertDeleteComponent {\n  /**\n   * Контекст для компонента TuiPopover, который управляет опциями уведомления.\n   *\n   * @remarks\n   * Этот контекст внедряется с использованием функции injectContext из Taiga UI.\n   * Он предоставляет необходимую конфигурацию для всплывающего окна уведомления.\n   *\n   * @type {TuiPopover, boolean>}\n   * @default undefined\n   * @memberof AlertDeleteComponent\n   */\n  protected readonly context = injectContext, boolean>>();\n}\n\n    \n\n    \n        \n    {{ response ? 'Да' : 'Нет' }}\n\n    \n\n    \n                \n                    ./alert-delete.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ response ? \\'Да\\' : \\'Нет\\' }}'\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlertDeleteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ApiDialogComponent.html":{"url":"components/ApiDialogComponent.html","title":"component - ApiDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ApiDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/api-dialog/api-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент ApiDialogComponent предназначен для редактирования данных API через диалоговое окно.\nИспользует компоненты Taiga UI для создания интерактивного интерфейса.\nЭтот компонент предоставляет пользователю возможность редактировать данные API, такие как имя и описание,\nи отправлять изменения через диалоговое окно.\nИнтегрируется с сервисами Taiga UI для управления диалогами и вводом данных.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-api-edit-dialog\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            TuiAutoFocus\n                            TuiButton\n                            TuiDataListWrapper\n                            TuiInputModule\n                            TuiSelectModule\n                            TuiSlider\n                            TuiTextfield\n                            TuiTextfieldControllerModule\n                \n            \n\n            \n                styleUrls\n                ./api-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./api-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                context\n                            \n                            \n                                    \n                                descriptionInputRef\n                            \n                            \n                                    Private\n                                    Readonly\n                                dialogs\n                            \n                            \n                                    \n                                nameInputRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                moveFocus\n                            \n                            \n                                    Protected\n                                onInput\n                            \n                            \n                                    Protected\n                                showDialog\n                            \n                            \n                                    Protected\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasValue\n                                \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moveFocus\n                        \n                    \n                \n            \n            \n                \n                        \n                    moveFocus(targetInput: ElementRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/api-dialog/api-dialog.component.ts:173\n                        \n                    \n\n\n            \n                \n                        Перемещает фокус на указанное поле ввода.\nИспользуется для управления фокусом между полями ввода.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                targetInput\n                                            \n                                                        ElementRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСсылка на элемент ввода.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        onInput\n                        \n                    \n                \n            \n            \n                \n                        \n                    onInput(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/api-dialog/api-dialog.component.ts:156\n                        \n                    \n\n\n            \n                \n                        Обработчик ввода данных в поле имени.\nОчищает значение от недопустимых символов и обновляет данные API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСобытие ввода данных.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        showDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    showDialog(content: TemplateRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/api-dialog/api-dialog.component.ts:143\n                        \n                    \n\n\n            \n                \n                        Открывает диалоговое окно с заданным содержимым.\nИспользует сервис TuiDialogService для открытия диалога.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                        TemplateRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nШаблон содержимого диалогового окна.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        submit\n                        \n                    \n                \n            \n            \n                \n                        \n                    submit(event?: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/api-dialog/api-dialog.component.ts:125\n                        \n                    \n\n\n            \n                \n                        Обработчик отправки формы.\nПредотвращает стандартное поведение отправки формы и завершает диалог, если имя не пустое.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nСобытие отправки формы.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext\n    >()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/api-dialog/api-dialog.component.ts:90\n                        \n                    \n\n            \n                \n                    Контекст диалогового окна, содержащий данные API.\nВнедряется с использованием функции injectContext из Taiga UI.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        descriptionInputRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('descriptionInput', {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/api-dialog/api-dialog.component.ts:68\n                        \n                    \n\n            \n                \n                    Ссылка на элемент ввода описания.\nИспользуется для управления фокусом и значением поля ввода описания.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/api-dialog/api-dialog.component.ts:79\n                        \n                    \n\n            \n                \n                    Сервис для управления диалоговыми окнами.\nВнедряется с использованием Angular DI.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nameInputRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('nameInput', {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/api-dialog/api-dialog.component.ts:56\n                        \n                    \n\n            \n                \n                    Ссылка на элемент ввода имени.\nИспользуется для управления фокусом и значением поля ввода имени.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasValue\n                    \n                \n\n                \n                    \n                        gethasValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/api-dialog/api-dialog.component.ts:102\n                                \n                            \n                    \n                        \n                                Флаг, указывающий, есть ли значение в поле ввода имени.\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/api-dialog/api-dialog.component.ts:112\n                                \n                            \n                    \n                        \n                                Данные API, которые редактируются в диалоговом окне.\n\n\n                                \n                                \n                                \n                                    Returns :         apiServiceShortStructure\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ElementRef, TemplateRef } from '@angular/core';\nimport { Component, inject, ViewChild } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TuiAutoFocus } from '@taiga-ui/cdk';\nimport type { TuiDialogContext } from '@taiga-ui/core';\nimport { TuiButton, TuiDialogService, TuiTextfield } from '@taiga-ui/core';\nimport { TuiDataListWrapper, TuiSlider } from '@taiga-ui/kit';\nimport {\n  TuiInputModule,\n  TuiSelectModule,\n  TuiTextfieldControllerModule,\n} from '@taiga-ui/legacy';\nimport { injectContext } from '@taiga-ui/polymorpheus';\nimport { apiServiceShortStructure } from \"../../../interfaces/apiServiceShortStructure\";\n\n/**\n * Компонент ApiDialogComponent предназначен для редактирования данных API через диалоговое окно.\n * Использует компоненты Taiga UI для создания интерактивного интерфейса.\n *\n * @remarks\n * Этот компонент предоставляет пользователю возможность редактировать данные API, такие как имя и описание,\n * и отправлять изменения через диалоговое окно.\n * Интегрируется с сервисами Taiga UI для управления диалогами и вводом данных.\n *\n * @example\n * html\n * \n * \n */\n@Component({\n  selector: 'app-api-edit-dialog',\n  imports: [\n    FormsModule,\n    TuiAutoFocus,\n    TuiButton,\n    TuiDataListWrapper,\n    TuiInputModule,\n    TuiSelectModule,\n    TuiSlider,\n    TuiTextfield,\n    TuiTextfieldControllerModule,\n  ],\n  templateUrl: './api-dialog.component.html',\n  styleUrls: ['./api-dialog.component.css'],\n})\nexport class ApiDialogComponent {\n  /**\n   * Ссылка на элемент ввода имени.\n   *\n   * @remarks\n   * Используется для управления фокусом и значением поля ввода имени.\n   *\n   * @type {ElementRef}\n   * @memberof ApiDialogComponent\n   */\n  @ViewChild('nameInput', { read: ElementRef }) nameInputRef!: ElementRef;\n\n  /**\n   * Ссылка на элемент ввода описания.\n   *\n   * @remarks\n   * Используется для управления фокусом и значением поля ввода описания.\n   *\n   * @type {ElementRef}\n   * @memberof ApiDialogComponent\n   */\n  @ViewChild('descriptionInput', { read: ElementRef })\n  descriptionInputRef!: ElementRef;\n\n  /**\n   * Сервис для управления диалоговыми окнами.\n   *\n   * @remarks\n   * Внедряется с использованием Angular DI.\n   *\n   * @type {TuiDialogService}\n   * @memberof ApiDialogComponent\n   */\n  private readonly dialogs = inject(TuiDialogService);\n\n  /**\n   * Контекст диалогового окна, содержащий данные API.\n   *\n   * @remarks\n   * Внедряется с использованием функции injectContext из Taiga UI.\n   *\n   * @type {TuiDialogContext}\n   * @memberof ApiDialogComponent\n   */\n  public readonly context =\n    injectContext\n    >();\n\n  /**\n   * Флаг, указывающий, есть ли значение в поле ввода имени.\n   *\n   * @type {boolean}\n   * @returns {boolean} Возвращает true, если имя не пустое.\n   * @memberof ApiDialogComponent\n   */\n  protected get hasValue(): boolean {\n    return this.data.name.trim() !== '';\n  }\n\n  /**\n   * Данные API, которые редактируются в диалоговом окне.\n   *\n   * @type {apiServiceShortStructure}\n   * @memberof ApiDialogComponent\n   */\n  protected get data(): apiServiceShortStructure {\n    return this.context.data;\n  }\n\n  /**\n   * Обработчик отправки формы.\n   *\n   * @param event - Событие отправки формы.\n   * @remarks\n   * Предотвращает стандартное поведение отправки формы и завершает диалог, если имя не пустое.\n   *\n   * @memberof ApiDialogComponent\n   */\n  protected submit(event?: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n    if (this.hasValue) {\n      this.context.completeWith(this.data);\n    }\n  }\n\n  /**\n   * Открывает диалоговое окно с заданным содержимым.\n   *\n   * @param content - Шаблон содержимого диалогового окна.\n   * @remarks\n   * Использует сервис TuiDialogService для открытия диалога.\n   *\n   * @memberof ApiDialogComponent\n   */\n  protected showDialog(content: TemplateRef): void {\n    this.dialogs.open(content, { dismissible: true }).subscribe();\n  }\n\n  /**\n   * Обработчик ввода данных в поле имени.\n   *\n   * @param event - Событие ввода данных.\n   * @remarks\n   * Очищает значение от недопустимых символов и обновляет данные API.\n   *\n   * @memberof ApiDialogComponent\n   */\n  protected onInput(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    const value = input.value;\n    const cleanedValue = value.replace(/[^a-zA-Z0-9]/g, '');\n    input.value = cleanedValue;\n    this.data.name = cleanedValue;\n  }\n\n  /**\n   * Перемещает фокус на указанное поле ввода.\n   *\n   * @param targetInput - Ссылка на элемент ввода.\n   * @remarks\n   * Используется для управления фокусом между полями ввода.\n   *\n   * @memberof ApiDialogComponent\n   */\n  protected moveFocus(targetInput: ElementRef): void {\n    targetInput.nativeElement.querySelector('input').focus();\n  }\n}\n\n    \n\n    \n        \n  Имя API\n\n\n\n  Описание\n\n\n\n  \n    Отправить\n  \n\n\n    \n\n    \n                \n                    ./api-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Имя API  Описание      Отправить  '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ApiDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ApiEndpointListComponent.html":{"url":"components/ApiEndpointListComponent.html","title":"component - ApiEndpointListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ApiEndpointListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-api-endpoint-list\n            \n\n\n            \n                imports\n                \n                            TuiAccordion\n                                LoadingComponent\n                            CommonModule\n                            RouterModule\n                            TuiButton\n                                HeaderComponent\n                                SwitchComponent\n                \n            \n\n            \n                styleUrls\n                ./api-endpoint-list.component.css,../../styles/button.css\n            \n\n\n\n            \n                templateUrl\n                ./api-endpoint-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiInfo\n                            \n                            \n                                apiName\n                            \n                            \n                                entities\n                            \n                            \n                                isCopied\n                            \n                            \n                                loading\n                            \n                            \n                                    Private\n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                copyTextToClipboard\n                            \n                            \n                                copyToClipboard\n                            \n                            \n                                getUrl\n                            \n                            \n                                    Private\n                                handleApiStructureResponse\n                            \n                            \n                                    Private\n                                loadApiStructure\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onApiToggleChange\n                            \n                            \n                                onEndpointToggleChange\n                            \n                            \n                                onEntityToggleChange\n                            \n                            \n                                    Private\n                                showCopySuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, apiService: ApiService, apiServiceRepository: ApiServiceRepositoryService, entityRepositoryService: EntityRepositoryService, endpointRepositoryService: EndpointRepositoryService, cd: ChangeDetectorRef, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiServiceRepository\n                                                  \n                                                        \n                                                                        ApiServiceRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityRepositoryService\n                                                  \n                                                        \n                                                                        EntityRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endpointRepositoryService\n                                                  \n                                                        \n                                                                        EndpointRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        copyTextToClipboard\n                        \n                    \n                \n            \n            \n                \n                        \n                    copyTextToClipboard(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        copyToClipboard\n                        \n                    \n                \n            \n            \n                \ncopyToClipboard(entityName: string, endpoint: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpoint\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUrl\n                        \n                    \n                \n            \n            \n                \ngetUrl(entityName: string, endpoint: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpoint\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleApiStructureResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleApiStructureResponse(apiStructure: ApiServiceStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiStructure\n                                            \n                                                            ApiServiceStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadApiStructure\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadApiStructure()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onApiToggleChange\n                        \n                    \n                \n            \n            \n                \nonApiToggleChange(newState: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEndpointToggleChange\n                        \n                    \n                \n            \n            \n                \nonEndpointToggleChange(entity: Entity, endpoint: Endpoint, newState: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpoint\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newState\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEntityToggleChange\n                        \n                    \n                \n            \n            \n                \nonEntityToggleChange(entity: Entity, newState: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:138\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newState\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showCopySuccess\n                        \n                    \n                \n            \n            \n                \n                        \n                    showCopySuccess(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : { isActive: false }\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        entities\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Entity[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCopied\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { Endpoint } from \"../../../interfaces/Endpoint\";\nimport { Entity } from \"../../../interfaces/Entity\";\nimport { ApiServiceStructure } from \"../../../interfaces/ApiServiceStructure\";\nimport { TuiAccordion } from '@taiga-ui/experimental';\nimport { Subscription } from 'rxjs';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { ApiService } from '../../../services/api-service.service';\nimport { LoadingComponent } from '../../components/loading/loading.component';\nimport { CommonModule } from '@angular/common';\nimport { TuiButton } from '@taiga-ui/core';\nimport { HeaderComponent } from '../../components/header/header.component';\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { ApiServiceRepositoryService } from '../../../repositories/api-service-repository.service';\nimport { EndpointRepositoryService } from '../../../repositories/endpoint-repository.service';\nimport { EntityRepositoryService } from '../../../repositories/entity-repository.service';\nimport { SwitchComponent } from '../../components/switch/switch.component';\n\n@Component({\n  selector: 'app-api-endpoint-list',\n  imports: [\n    TuiAccordion,\n    LoadingComponent,\n    CommonModule,\n    RouterModule,\n    TuiButton,\n    HeaderComponent,\n    SwitchComponent,\n  ],\n  templateUrl: './api-endpoint-list.component.html',\n  styleUrls: ['./api-endpoint-list.component.css', '../../styles/button.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ApiEndpointListComponent implements OnInit, OnDestroy {\n  entities: Entity[] = [];\n  private sub: Subscription | null = null;\n  loading: boolean = true;\n  apiName!: string;\n  apiInfo: { isActive: boolean } = { isActive: false };\n  isCopied: string | null = null;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private apiService: ApiService,\n    private apiServiceRepository: ApiServiceRepositoryService,\n    private entityRepositoryService: EntityRepositoryService,\n    private endpointRepositoryService: EndpointRepositoryService,\n    private cd: ChangeDetectorRef,\n    private alerts: TuiAlertService\n  ) {}\n\n  ngOnDestroy(): void {\n    this.sub?.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      this.apiName = params['name'];\n      if (this.apiName) {\n        this.loadApiStructure();\n      }\n    });\n  }\n\n  private loadApiStructure(): void {\n    this.sub = this.apiService.getApiStructureList(this.apiName).subscribe({\n      next: (apiStructure) => this.handleApiStructureResponse(apiStructure),\n      error: () => {\n        this.loading = false;\n        this.cd.markForCheck();\n      },\n    });\n  }\n\n  private handleApiStructureResponse(apiStructure: ApiServiceStructure): void {\n    if (apiStructure) {\n      this.entities = apiStructure.entities;\n      this.apiInfo.isActive = apiStructure.isActive; // Set the API state here\n      this.loading = false;\n      this.cd.markForCheck();\n    }\n  }\n\n  copyToClipboard(entityName: string, endpoint: Endpoint): void {\n    const url = this.getUrl(entityName, endpoint);\n    this.copyTextToClipboard(url);\n  }\n\n  private copyTextToClipboard(text: string): void {\n    const textarea = document.createElement('textarea');\n    textarea.value = text;\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      document.execCommand('copy');\n      this.showCopySuccess(text);\n    } catch (err) {\n      console.error('Error copying URL:', err);\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n\n  private showCopySuccess(url: string): void {\n    this.isCopied = url;\n    this.cd.markForCheck();\n    setTimeout(() => {\n      this.isCopied = null;\n      this.cd.markForCheck();\n    }, 2000);\n  }\n\n  getUrl(entityName: string, endpoint: Endpoint): string {\n    return `${window.location.origin}/api/ApiEmu/${this.apiName}/${entityName}/${endpoint.route}`;\n  }\n\n  onApiToggleChange(newState: boolean): void {\n    this.apiInfo.isActive = newState;\n    this.apiServiceRepository\n      .updateApiServiceStatus(this.apiName, newState)\n      .subscribe({\n        next: (response) => {\n          console.log('Состояние API обновлено:', response);\n        },\n        error: (error) => {\n          console.error('Ошибка при обновлении состояния API:', error);\n        },\n      });\n  }\n\n  onEntityToggleChange(entity: Entity, newState: boolean): void {\n    entity.isActive = newState;\n    this.entityRepositoryService\n      .updateEntityStatus(this.apiName, entity.name, newState)\n      .subscribe({\n        next: (response) => {\n          console.log('Состояние сущности обновлено:', response);\n        },\n        error: (error) => {\n          console.error('Ошибка при обновлении состояния сущности:', error);\n        },\n      });\n  }\n\n  onEndpointToggleChange(\n    entity: Entity,\n    endpoint: Endpoint,\n    newState: boolean\n  ): void {\n    endpoint.isActive = newState;\n    this.endpointRepositoryService\n      .updateEndpointStatus(this.apiName, entity.name, endpoint.route, newState)\n      .subscribe({\n        next: (response) => {\n          console.log('Состояние эндпоинта обновлено:', response);\n        },\n        error: (error) => {\n          console.error('Ошибка при обновлении состояния эндпоинта:', error);\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n@if (loading) {\n\n} @else {\n\n  \n    {{ apiName }}\n    \n  \n   0; else noEntities\">\n    \n      \n        \n          {{ entity.name }}\n          \n        \n        \n           0;\n              else emptyEntityOrApi\n            \"\n          >\n            \n              \n                \n                  {{ endpoint.route }}\n                  {{ endpoint.type }}\n                  \n                \n                \n                  \n                    \n                    \n                      \n                    \n                  \n                \n              \n            \n          \n          \n            \n              Нет доступных эндпоинтов.\n              \n                Перейти к деталям сущности\n              \n            \n            \n              \n                Перейти к деталям API\n              \n            \n          \n        \n      \n    \n  \n  \n    Нет доступных сущностей и эндпоинтов\n  \n\n}\n\n    \n\n    \n                \n                    ./api-endpoint-list.component.css\n                \n                /* Общие стили */\n.container {\n  padding: 20px;\n  gap: 20px;\n}\n\n.endpoint-list {\n  padding: 20px;\n}\n\nh1 {\n  font-size: 2.5rem;\n  color: #333;\n  margin-bottom: 3rem;\n  font-weight: 600;\n  text-align: center;\n}\n\n/* Ensure the accordion button is positioned relatively */\n.accordion {\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 20px;\n    background: transparent;\n    border-radius: 0px;\n    transition: box-shadow 0.3s ease;\n  }\n  \n  /* Position the switch absolutely within the accordion button */\n  .accordion app-switch {\n    position: absolute;\n    right: 45px; /* Increase this value to position the switch further from the default icon */\n    margin-left: auto;\n    margin-right: 0;\n  }\n  \n  /* Ensure the chevron icon is still visible and positioned correctly */\n  .accordion::after {\n    content: var(--t-icon-end);\n    display: inline-block;\n    width: 16px;\n    height: 16px;\n    margin-left: 5px;\n    order: 3;\n  }\n  \n  /* Ensure the switch in the API header stays in line */\n  .api-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 20px;\n    background: transparent;\n    border-radius: 0px;\n    transition: box-shadow 0.3s ease;\n  }\n  \n  .api-header h1 {\n    margin: 0;\n    flex-grow: 1;\n  }\n  \n  .api-header app-switch {\n    margin-left: 10px;\n  }\n  \n.tui-expand {\n  padding: 15px;\n  background: #f9f9f9;\n  border-radius: 0 0 8px 8px;\n}\n\n\n/* Список эндпоинтов */\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\n.endpoint-item {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 10px 5px;\n  border-bottom: 1px solid #eee;\n  transition: background-color 0.3s ease;\n}\n\n.endpoint-item:last-child {\n  border-bottom: none;\n}\n\n/* Заголовок эндпоинта */\n.endpoint-header {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  margin-bottom: 10px;\n}\n.endpoint-route {\n  font-weight: bold;\n  color: #0056a6; /* Установлено на черный цвет */\n  word-wrap: break-word;\n  font-size: 1rem;\n}\n.endpoint-type {\n  color: #000; /* Установлено на черный цвет */\n  word-wrap: break-word;\n  font-size: 1rem;\n}\n\n/* Блок URL */\n.url-container {\n  width: 100%;\n}\n\n.copy-url-field {\n  display: flex;\n  align-items: center;\n  width: 100%;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  overflow: hidden;\n}\n\n.url-input {\n  flex: 1;\n  padding: 8px 12px; /* Отступы внутри текстового поля */\n  border: 1px solid #ddd; /* Граница текстового поля */\n  outline: none;\n  background: #ffffff;\n  font-size: 0.9rem;\n  color: #333;\n  border-radius: 4px 0 0 4px; /* Закругление левой стороны */\n  height: 40px; /* Высота текстового поля */\n  box-sizing: border-box; /* Учитываем padding и border в общей высоте */\n}\n\n.copy-button {\n  background: #f0f0f0;\n  border: 1px solid #ddd; /* Граница кнопки */\n  color: #555;\n  cursor: pointer;\n  transition: background-color 0.3s ease, color 0.3s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 12px; /* Отступы внутри кнопки */\n  border-radius: 0 4px 4px 0; /* Закругление правой стороны */\n  height: 40px; /* Высота кнопки */\n  font-size: 1rem;\n  box-sizing: border-box; /* Учитываем padding и border в общей высоте */\n}\n\n.copy-button:hover {\n  background: #e0e0e0;\n  color: #333;\n}\n\n.copy-button.copied {\n  background: #d1e7dd;\n  color: #0f5132;\n}\n\n.copy-button.copied i {\n  transform: rotate(360deg);\n  margin-right: 0; /* Убираем отступ для галочки */\n}\n\n/* Медиа-запросы */\n@media (max-width: 768px) {\n  h1 {\n    font-size: 2rem;\n  }\n\n  .endpoint-header {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .endpoint-type,\n  .endpoint-route {\n    margin-bottom: 5px;\n  }\n}\n\n.primary-button {\n  margin: 0px !important;\n}\n\n                \n                    ../../styles/button.css\n                \n                .primary-button {\n    background-color: #0056a6;\n    color: white;\n    border: none;\n    block-size: auto;\n    padding: 7px 13px;\n    border-radius: 5px;\n    cursor: pointer;\n    font-weight: bold;\n    transition: background-color 0.3s;\n    margin-left: 1rem;\n    margin-bottom: 1rem;\n  }\n  \n  .primary-button:hover {\n    background-color: #004080;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (loading) {} @else {      {{ apiName }}         0; else noEntities\">                            {{ entity.name }}                                     0;              else emptyEntityOrApi            \"          >                                                            {{ endpoint.route }}                  {{ endpoint.type }}                                                                                                                                                                                                                                                                Нет доступных эндпоинтов.                              Перейти к деталям сущности                                                                    Перейти к деталям API                                                              Нет доступных сущностей и эндпоинтов  }'\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ApiEndpointListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiHubServiceService.html":{"url":"injectables/ApiHubServiceService.html","title":"injectable - ApiHubServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiHubServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api-hub-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiListSubject\n                            \n                            \n                                    Private\n                                baseUrl\n                            \n                            \n                                    Private\n                                hubConnection\n                            \n                            \n                                ordersUpdated$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api-hub-service.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeData\n                        \n                    \n                \n            \n            \n                \ninitializeData(initialData: apiServiceShortStructure[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-hub-service.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                initialData\n                                            \n                                                            apiServiceShortStructure[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiListSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-hub-service.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/hubs`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-hub-service.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hubConnection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     signalR.HubConnection\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-hub-service.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ordersUpdated$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.apiListSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-hub-service.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Input, NgZone } from '@angular/core';\nimport * as signalR from '@microsoft/signalr';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { apiServiceShortStructure } from \"../interfaces/apiServiceShortStructure\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiHubServiceService {\n  private hubConnection!: signalR.HubConnection;\n  private apiListSubject = new BehaviorSubject([]);\n  private baseUrl = `${window.location.origin}/hubs`;\n  ordersUpdated$: Observable = this.apiListSubject.asObservable();\n  constructor() {\n    this.hubConnection = new signalR.HubConnectionBuilder()\n      .withUrl(`hubs/apilisthub`, {\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets\n      })\n      .withAutomaticReconnect([1000, 3000, 5000])\n      .build();\n\n    this.hubConnection\n      .start()\n      .then(() => console.log('Connected to SignalR hub'))\n      .catch(err => console.error('Error connecting to SignalR hub:', err));\n\n    this.hubConnection.on('RecieveMessage', (apiList: apiServiceShortStructure[]) => {\n      this.apiListSubject.next(apiList);\n      console.log(apiList);\n    });\n\n    this.hubConnection.on('AddService', (api: apiServiceShortStructure) => {\n      const currentList = this.apiListSubject.getValue();\n      currentList.push(api);\n      this.apiListSubject.next(currentList);\n      console.log(currentList);\n    });\n    \n    this.hubConnection.on('UpdateService', (oldName: string, api: apiServiceShortStructure) => {\n      const currentList = this.apiListSubject.getValue();\n      const index = currentList.findIndex((apiService: apiServiceShortStructure) => {\n        return apiService.name === oldName\n      });\n      currentList[index] = api;\n      this.apiListSubject.next(currentList);\n    });\n    \n    this.hubConnection.on('RemoveService', (name: string) => {\n      const currentList = this.apiListSubject.getValue();\n      const index = currentList.findIndex((apiService: apiServiceShortStructure) => {\n        return apiService.name === name\n      });\n      currentList.splice(index, 1);\n      this.apiListSubject.next(currentList);\n    });\n\n    this.hubConnection.on('UpdateStatusService', (name: string, isActive: boolean) => {\n      this.apiListSubject.next(\n        this.apiListSubject.getValue().map(apiService => \n          apiService.name === name ? { ...apiService, isActive } : apiService\n        )\n      );\n    });\n  }\n  \n  initializeData(initialData: apiServiceShortStructure[]) {\n    this.apiListSubject.next(initialData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createApiService\n                            \n                            \n                                createFullApiService\n                            \n                            \n                                deleteApiService\n                            \n                            \n                                getApiList\n                            \n                            \n                                getApiStructureList\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                updateApiService\n                            \n                            \n                                updateApiServiceStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorHandler: ErrorHandlerService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api-service.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createApiService\n                        \n                    \n                \n            \n            \n                \ncreateApiService(service: apiServiceShortStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                service\n                                            \n                                                            apiServiceShortStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createFullApiService\n                        \n                    \n                \n            \n            \n                \ncreateFullApiService(service: ApiServiceStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                service\n                                            \n                                                            ApiServiceStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteApiService\n                        \n                    \n                \n            \n            \n                \ndeleteApiService(serviceName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiList\n                        \n                    \n                \n            \n            \n                \ngetApiList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiStructureList\n                        \n                    \n                \n            \n            \n                \ngetApiStructureList(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiService\n                        \n                    \n                \n            \n            \n                \nupdateApiService(oldName: string, service: apiServiceShortStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                service\n                                            \n                                                            apiServiceShortStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiServiceStatus\n                        \n                    \n                \n            \n            \n                \nupdateApiServiceStatus(serviceName: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/api`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-service.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { ApiServiceStructure } from \"../interfaces/ApiServiceStructure\";\nimport { apiServiceShortStructure } from \"../interfaces/apiServiceShortStructure\";\nimport { ErrorHandlerService } from './error-handler.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  private baseUrl = `${window.location.origin}/api`;\n\n  constructor(\n    private http: HttpClient,\n    private errorHandler: ErrorHandlerService,\n    private alerts: TuiAlertService\n  ) {}\n\n  getApiList(): Observable {\n    return this.http\n      .get(`${this.baseUrl}/ApiService`)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  getApiStructureList(name: string): Observable {\n    return this.http\n      .get(\n        `${this.baseUrl}/ApiService/${encodeURIComponent(name)}`\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  createApiService(\n    service: apiServiceShortStructure\n  ): Observable {\n    return this.http\n      .post(`${this.baseUrl}/ApiService`, service)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  createFullApiService(service: ApiServiceStructure): Observable {\n    return this.http\n      .post(`${this.baseUrl}/ApiService`, service)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  updateApiService(\n    oldName: string,\n    service: apiServiceShortStructure\n  ): Observable {\n    return this.http\n      .put(\n        `${this.baseUrl}/ApiService/${encodeURIComponent(oldName)}`,\n        service\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  deleteApiService(serviceName: string): Observable {\n    return this.http\n      .delete(\n        `${this.baseUrl}/ApiService/${encodeURIComponent(serviceName)}`\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  updateApiServiceStatus(\n    serviceName: string,\n    isActive: boolean\n  ): Observable {\n    return this.http\n      .patch(\n        `${this.baseUrl}/ApiService/${encodeURIComponent(\n          serviceName\n        )}/${isActive}`,\n        null\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  private handleError(error: HttpErrorResponse): Observable {\n    this.errorHandler.handleError(error);\n    this.alerts.open(error.message, { appearance: 'negative' }).subscribe();\n    return throwError(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiServiceRepositoryService.html":{"url":"injectables/ApiServiceRepositoryService.html","title":"injectable - ApiServiceRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiServiceRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/api-service-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createApiService\n                            \n                            \n                                createFullApiService\n                            \n                            \n                                deleteApiService\n                            \n                            \n                                getApiList\n                            \n                            \n                                getApiStructureList\n                            \n                            \n                                updateApiService\n                            \n                            \n                                updateApiServiceStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/api-service-repository.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createApiService\n                        \n                    \n                \n            \n            \n                \ncreateApiService(service: apiServiceShortStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                service\n                                            \n                                                            apiServiceShortStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createFullApiService\n                        \n                    \n                \n            \n            \n                \ncreateFullApiService(service: ApiServiceStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                service\n                                            \n                                                            ApiServiceStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteApiService\n                        \n                    \n                \n            \n            \n                \ndeleteApiService(serviceName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiList\n                        \n                    \n                \n            \n            \n                \ngetApiList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiStructureList\n                        \n                    \n                \n            \n            \n                \ngetApiStructureList(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiService\n                        \n                    \n                \n            \n            \n                \nupdateApiService(oldName: string, service: apiServiceShortStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                service\n                                            \n                                                            apiServiceShortStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiServiceStatus\n                        \n                    \n                \n            \n            \n                \nupdateApiServiceStatus(serviceName: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiServiceStructure } from \"../interfaces/ApiServiceStructure\";\nimport { apiServiceShortStructure } from \"../interfaces/apiServiceShortStructure\";\nimport { ApiService } from '../services/api-service.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiServiceRepositoryService {\n  constructor(private apiService: ApiService) {}\n\n  getApiList(): Observable {\n    return this.apiService.getApiList();\n  }\n\n  getApiStructureList(name: string): Observable {\n    return this.apiService.getApiStructureList(name);\n  }\n\n  createApiService(\n    service: apiServiceShortStructure\n  ): Observable {\n    return this.apiService.createApiService(service);\n  }\n\n  createFullApiService(service: ApiServiceStructure): Observable {\n    return this.apiService.createFullApiService(service);\n  }\n\n  updateApiService(\n    oldName: string,\n    service: apiServiceShortStructure\n  ): Observable {\n    return this.apiService.updateApiService(oldName, service);\n  }\n\n  deleteApiService(serviceName: string): Observable {\n    return this.apiService.deleteApiService(serviceName);\n  }\n\n  updateApiServiceStatus(\n    serviceName: string,\n    isActive: boolean\n  ): Observable {\n    return this.apiService.updateApiServiceStatus(serviceName, isActive);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiServiceStructure.html":{"url":"interfaces/ApiServiceStructure.html","title":"interface - ApiServiceStructure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiServiceStructure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/ApiServiceStructure.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            entities\n                                        \n                                \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entities\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entities:         Entity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Entity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity } from \"./Entity\";\n\n\nexport interface ApiServiceStructure {\n  name: string;\n  isActive: boolean;\n  description: string;\n  entities: Entity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                            TuiRoot\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ApiEasier'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { TuiRoot } from \"@taiga-ui/core\";\nimport { Component } from '@angular/core';\nimport { RouterModule, RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  imports: [\n    RouterOutlet, \n    TuiRoot, \n    RouterModule,\n  ],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  title = 'ApiEasier';\n}\n\n    \n\n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BackButtonComponent.html":{"url":"components/BackButtonComponent.html","title":"component - BackButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BackButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/back-button/back-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент BackButtonComponent предназначен для возврата пользователя на предыдущую страницу.\nИспользует Angular Router и Location для управления навигацией.\nЭтот компонент предоставляет функциональность кнопки \"Назад\", которая позволяет пользователю вернуться\nна предыдущую страницу или на главную страницу, если история навигации пуста.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-back-button\n            \n\n\n\n            \n                styleUrls\n                ./back-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./back-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(location: Location, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/back-button/back-button.component.ts:24\n                            \n                        \n\n                \n                    \n                            Конструктор компонента BackButtonComponent.\nВнедряет сервисы Location и Router для управления навигацией.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для работы с историей навигации.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для управления маршрутизацией.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/back-button/back-button.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Метод для возврата на предыдущую страницу.\nПроверяет текущий URL и предыдущий URL. Если предыдущий URL начинается с базового домена,\nвозвращает пользователя на предыдущую страницу. В противном случае перенаправляет на главную страницу.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n\n/**\n * Компонент BackButtonComponent предназначен для возврата пользователя на предыдущую страницу.\n * Использует Angular Router и Location для управления навигацией.\n *\n * @remarks\n * Этот компонент предоставляет функциональность кнопки \"Назад\", которая позволяет пользователю вернуться\n * на предыдущую страницу или на главную страницу, если история навигации пуста.\n *\n * @example\n * html\n * \n *\n */\n@Component({\n  selector: 'app-back-button',\n  imports: [],\n  templateUrl: './back-button.component.html',\n  styleUrls: ['./back-button.component.css'], // Исправлено с styleUrl на styleUrls\n})\nexport class BackButtonComponent {\n  /**\n   * Конструктор компонента BackButtonComponent.\n   *\n   * @param location - Сервис для работы с историей навигации.\n   * @param router - Сервис для управления маршрутизацией.\n   *\n   * @remarks\n   * Внедряет сервисы Location и Router для управления навигацией.\n   *\n   * @memberof BackButtonComponent\n   */\n  constructor(private location: Location, private router: Router) {}\n\n  /**\n   * Метод для возврата на предыдущую страницу.\n   *\n   * @remarks\n   * Проверяет текущий URL и предыдущий URL. Если предыдущий URL начинается с базового домена,\n   * возвращает пользователя на предыдущую страницу. В противном случае перенаправляет на главную страницу.\n   *\n   * @memberof BackButtonComponent\n   */\n  goBack(): void {\n    const currentUrl = this.router.url;\n    try {\n      const previousUrl = this.location.path(true);\n      const baseDomain = '/';\n      if (previousUrl.startsWith(baseDomain)) {\n        this.location.back();\n      } else {\n        this.router.navigateByUrl('/');\n      }\n    } catch (error) {\n      this.router.navigateByUrl('/');\n    }\n  }\n}\n\n    \n\n    \n        \n  Назад\n\n\n    \n\n    \n                \n                    ./back-button.component.css\n                \n                button {\n    background-color: white;\n    border: none;\n    padding: 0.625rem 1.25rem;\n    /* Относительные отступы */\n    margin: 0.625rem 0.625rem;\n    /* Относительные отступы */\n    border-radius: 0.3125rem;\n    /* Относительный радиус скругления */\n    cursor: pointer;\n    font-weight: bold;\n    transition: background-color 0.3s;\n    font-size: 1rem;\n    /* Относительный размер шрифта */\n}\n\nbutton:hover {\n    background-color: #e6e6e6;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Назад'\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BackButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardApiComponent.html":{"url":"components/CardApiComponent.html","title":"component - CardApiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardApiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/card-api/card-api.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент CardApiComponent предназначен для отображения и управления информацией о API.\nПозволяет редактировать, удалять и изменять состояние API.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует сервисы для взаимодействия с репозиторием API и управления состоянием.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-api\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            TuiAppearance\n                            TuiButton\n                            RouterModule\n                                SwitchComponent\n                                IconTrashComponent\n                                ExportApiButtonComponent\n                \n            \n\n            \n                styleUrls\n                ./card-api.component.css,../../styles/card.css,../../styles/button.css,../../styles/icon.css\n            \n\n\n\n            \n                templateUrl\n                ./card-api.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                dialog\n                            \n                            \n                                location\n                            \n                            \n                                oldName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onDeleteConfirmed\n                            \n                            \n                                onToggleChange\n                            \n                            \n                                openEditDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiDeleted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiServiceRepository: ApiServiceRepositoryService, cd: ChangeDetectorRef, alerts: TuiAlertService, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/card-api/card-api.component.ts:87\n                            \n                        \n\n                \n                    \n                            Конструктор компонента CardApiComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apiServiceRepository\n                                                  \n                                                        \n                                                                        ApiServiceRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для взаимодействия с репозиторием API.\n\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для управления изменением состояния.\n\n\n                                                        \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для отображения уведомлений.\n\n\n                                                        \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для работы с историей навигации.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        apiInfo\n                    \n                \n                \n                    \n                        Type :         apiServiceShortStructure\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-api/card-api.component.ts:65\n                            \n                        \n                \n                    \n                        Входной параметр для получения информации о API.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        apiDeleted\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-api/card-api.component.ts:73\n                            \n                        \n                \n                    \n                        Событие, которое вызывается при удалении API.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteConfirmed\n                        \n                    \n                \n            \n            \n                \nonDeleteConfirmed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-api/card-api.component.ts:191\n                        \n                    \n\n\n            \n                \n                        Обработчик подтверждения удаления API.\nУдаляет API из репозитория и уведомляет родительский компонент об удалении.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToggleChange\n                        \n                    \n                \n            \n            \n                \nonToggleChange(newState: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-api/card-api.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Обработчик изменения состояния переключателя.\nОбновляет состояние API и сохраняет изменения в репозитории.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовое состояние переключателя.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-api/card-api.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Открывает диалог для редактирования информации о API.\nСохраняет старое имя API и открывает диалог для редактирования.\nОбновляет информацию о API после закрытия диалога.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : tuiDialog(ApiDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-api/card-api.component.ts:84\n                        \n                    \n\n            \n                \n                    Диалог для редактирования информации о API.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Location\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-api/card-api.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oldName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-api/card-api.component.ts:75\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport {\n  TuiAppearance,\n  TuiButton,\n  tuiDialog,\n  TuiAlertService,\n} from '@taiga-ui/core';\nimport { RouterModule } from '@angular/router';\nimport { apiServiceShortStructure } from \"../../../interfaces/apiServiceShortStructure\";\nimport { SwitchComponent } from '../switch/switch.component';\nimport { ApiDialogComponent } from '../api-dialog/api-dialog.component';\nimport { Location } from '@angular/common';\nimport { IconTrashComponent } from '../icon-trash/icon-trash.component';\nimport { ApiServiceRepositoryService } from '../../../repositories/api-service-repository.service';\nimport { ExportApiButtonComponent } from '../export-api-button/export-api-button.component';\n\n/**\n * Компонент CardApiComponent предназначен для отображения и управления информацией о API.\n * Позволяет редактировать, удалять и изменять состояние API.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует сервисы для взаимодействия с репозиторием API и управления состоянием.\n *\n * @example\n * html\n * \n *\n */\n@Component({\n  selector: 'app-card-api',\n  imports: [\n    CommonModule,\n    TuiAppearance,\n    TuiButton,\n    RouterModule,\n    SwitchComponent,\n    IconTrashComponent,\n    ExportApiButtonComponent,\n  ],\n  templateUrl: './card-api.component.html',\n  styleUrls: [\n    './card-api.component.css',\n    '../../styles/card.css',\n    '../../styles/button.css',\n    '../../styles/icon.css',\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CardApiComponent {\n  /**\n   * Входной параметр для получения информации о API.\n   *\n   * @type {apiServiceShortStructure}\n   * @memberof CardApiComponent\n   */\n  @Input() apiInfo!: apiServiceShortStructure;\n\n  /**\n   * Событие, которое вызывается при удалении API.\n   *\n   * @type {EventEmitter}\n   * @memberof CardApiComponent\n   */\n  @Output() apiDeleted = new EventEmitter();\n\n  oldName: string = '';\n  location: Location;\n\n  /**\n   * Диалог для редактирования информации о API.\n   *\n   * @type {tuiDialog}\n   * @memberof CardApiComponent\n   */\n  private readonly dialog = tuiDialog(ApiDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  });\n\n  /**\n   * Конструктор компонента CardApiComponent.\n   *\n   * @param apiServiceRepository - Сервис для взаимодействия с репозиторием API.\n   * @param cd - Сервис для управления изменением состояния.\n   * @param alerts - Сервис для отображения уведомлений.\n   * @param location - Сервис для работы с историей навигации.\n   *\n   * @memberof CardApiComponent\n   */\n  constructor(\n    private apiServiceRepository: ApiServiceRepositoryService,\n    private cd: ChangeDetectorRef,\n    private alerts: TuiAlertService,\n    location: Location\n  ) {\n    this.location = location;\n  }\n\n  /**\n   * Обработчик изменения состояния переключателя.\n   *\n   * @param newState - Новое состояние переключателя.\n   * @remarks\n   * Обновляет состояние API и сохраняет изменения в репозитории.\n   *\n   * @memberof CardApiComponent\n   */\n  onToggleChange(newState: boolean) {\n    this.apiInfo.isActive = newState;\n    console.log('Состояние переключателя изменилось на:', newState);\n    this.apiServiceRepository\n      .updateApiServiceStatus(this.apiInfo.name, newState)\n      .subscribe({\n        next: (response) => {\n          console.log('Состояние сервиса обновлено:', response);\n        },\n        error: (error) => {\n          console.error('Ошибка при обновлении состояния сервиса:', error);\n        },\n      });\n  }\n\n  /**\n   * Открывает диалог для редактирования информации о API.\n   *\n   * @remarks\n   * Сохраняет старое имя API и открывает диалог для редактирования.\n   * Обновляет информацию о API после закрытия диалога.\n   *\n   * @memberof CardApiComponent\n   */\n  openEditDialog(): void {\n    this.oldName = this.apiInfo.name;\n    this.dialog({ ...this.apiInfo }).subscribe({\n      next: (data) => {\n        console.info(`Dialog emitted data = ${data} - ${this.apiInfo.name}}`);\n\n        this.apiServiceRepository\n          .updateApiService(this.oldName, data)\n          .subscribe({\n            next: (response) => {\n              console.log('API обновлена:', response);\n              this.apiInfo = data;\n              this.cd.markForCheck();\n              this.alerts\n                .open('API успешно обновлено', {\n                  appearance: 'success',\n                })\n                .subscribe();\n            },\n            error: (error) => {\n              if (error.status === 409) {\n                this.alerts\n                  .open('Ошибка: API с таким именем уже существует', {\n                    appearance: 'negative',\n                  })\n                  .subscribe();\n              } else {\n                this.alerts\n                  .open('Ошибка при обновлении API', {\n                    appearance: 'negative',\n                  })\n                  .subscribe();\n              }\n            },\n          });\n      },\n      complete: () => {\n        console.info('Dialog closed');\n      },\n    });\n  }\n\n  /**\n   * Обработчик подтверждения удаления API.\n   *\n   * @remarks\n   * Удаляет API из репозитория и уведомляет родительский компонент об удалении.\n   *\n   * @memberof CardApiComponent\n   */\n  onDeleteConfirmed(): void {\n    this.apiServiceRepository.deleteApiService(this.apiInfo.name).subscribe({\n      next: () => {\n        console.log(`Сервис \"${this.apiInfo.name}\" удален.`);\n        this.apiDeleted.emit();\n      },\n      error: (error) => {\n        console.error('Ошибка при удалении сервиса:', error);\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n    \n    \n    \n\n{{ apiInfo.name }}\n{{ apiInfo.description }}\n\n    К тестам\n    Детали\n    \n\n    \n\n    \n                \n                    ./card-api.component.css\n                \n                \n                \n                    ../../styles/card.css\n                \n                \nh3 {\n    margin: 0;\n    font-size: 24px;\n    color: #0056a6;\n    width: 65%; /* Ширина элемента */\n    text-overflow: ellipsis; /* Добавляем троеточие */\n    white-space: nowrap; /* Запрещаем перенос текста на новую строку */\n    overflow: hidden; /* Скрываем текст, который не помещается */\n    height: 2rem;\n}\n  \n  p {\n    margin: 10px 0;\n    color: #666;\n    font-size: 16px;\n    line-height: 1.5; /* Установите желаемую высоту строки */\n    height: calc(1.5em * 2); /* Высота равна трём строкам */\n    overflow-y: auto; /* Добавляем вертикальную прокрутку при необходимости */\n    overflow-x: hidden; /* Запрещаем горизонтальную прокрутку */\n    box-sizing: border-box; /* Включаем отступы и границы в размер элемента */\n    word-wrap: break-word; /* Перенос слов на новую строку, если они не помещаются */\n    white-space: normal; /* Разрешаем перенос текста на новую строку */\n}\n\n  /* Стилизация полосы прокрутки для WebKit-браузеров (Chrome, Safari, Edge) */\n  p::-webkit-scrollbar {\n    width: 8px; /* Ширина полосы прокрутки */\n  }\n\n  p::-webkit-scrollbar-track {\n    background: #f1f1f1; /* Цвет фона полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb {\n    background: #888; /* Цвет полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb:hover {\n    background: #555; /* Цвет полосы прокрутки при наведении */\n  }\n  \n.actions {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    flex-wrap: wrap;\n  }\n  \n.top-right {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    display: flex;\n    align-items: center;\n  }\n\n                \n                    ../../styles/button.css\n                \n                .primary-button {\n    background-color: #0056a6;\n    color: white;\n    border: none;\n    block-size: auto;\n    padding: 7px 13px;\n    border-radius: 5px;\n    cursor: pointer;\n    font-weight: bold;\n    transition: background-color 0.3s;\n    margin-left: 1rem;\n    margin-bottom: 1rem;\n  }\n  \n  .primary-button:hover {\n    background-color: #004080;\n  }\n                \n                    ../../styles/icon.css\n                \n                  \ni {\n    margin-right: 15px; /* 10px * 1.2 */\n    cursor: pointer;\n    color: #666;\n    transition: color 0.3s;\n    font-size: 20px; /* Увеличиваем размер шрифта на 20% */\n}\n\ni:hover {\n    color: #000;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ apiInfo.name }}{{ apiInfo.description }}    К тестам    Детали    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardApiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardEndpointComponent.html":{"url":"components/CardEndpointComponent.html","title":"component - CardEndpointComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardEndpointComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/card-endpoint/card-endpoint.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент CardEndpointComponent предназначен для отображения и управления информацией об эндпоинтах API.\nПозволяет редактировать, удалять и изменять состояние эндпоинтов.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует сервисы для взаимодействия с репозиторием эндпоинтов и управления состоянием.\nExample :html\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-endpoint\n            \n\n\n            \n                imports\n                \n                                SwitchComponent\n                                IconTrashComponent\n                            CommonModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./card-endpoint.component.css,../../styles/card.css,../../styles/icon.css\n            \n\n\n\n            \n                templateUrl\n                ./card-endpoint.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleEndpointUpdate\n                            \n                            \n                                    Private\n                                handleEndpointUpdateError\n                            \n                            \n                                onDeleteConfirmed\n                            \n                            \n                                onToggleChange\n                            \n                            \n                                openEditDialog\n                            \n                            \n                                    Private\n                                processEditDialogData\n                            \n                            \n                                    Private\n                                updateEndpoint\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiName\n                            \n                            \n                                endpointInfo\n                            \n                            \n                                entityInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                endpointDeleted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(endpointRepositoryService: EndpointRepositoryService, cd: ChangeDetectorRef, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:90\n                            \n                        \n\n                \n                    \n                            Конструктор компонента CardEndpointComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        endpointRepositoryService\n                                                  \n                                                        \n                                                                        EndpointRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для взаимодействия с репозиторием эндпоинтов.\n\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для управления изменением состояния.\n\n\n                                                        \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для отображения уведомлений.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        apiName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:71\n                            \n                        \n                \n                    \n                        Входной параметр для получения имени API.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        endpointInfo\n                    \n                \n                \n                    \n                        Type :         Endpoint\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:62\n                            \n                        \n                \n                    \n                        Входной параметр для получения информации об эндпоинте.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        entityInfo\n                    \n                \n                \n                    \n                        Type :         Entity\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:54\n                            \n                        \n                \n                    \n                        Входной параметр для получения информации о сущности.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        endpointDeleted\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:79\n                            \n                        \n                \n                    \n                        Событие, которое вызывается при удалении эндпоинта.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEndpointUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEndpointUpdate(response: Endpoint, data: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:192\n                        \n                    \n\n\n            \n                \n                        Обрабатывает успешное обновление эндпоинта.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОтвет от сервера.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовые данные эндпоинта.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEndpointUpdateError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEndpointUpdateError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:210\n                        \n                    \n\n\n            \n                \n                        Обрабатывает ошибку при обновлении эндпоинта.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОбъект ошибки.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteConfirmed\n                        \n                    \n                \n            \n            \n                \nonDeleteConfirmed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:235\n                        \n                    \n\n\n            \n                \n                        Обработчик подтверждения удаления эндпоинта.\nУдаляет эндпоинт из репозитория и уведомляет родительский компонент об удалении.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToggleChange\n                        \n                    \n                \n            \n            \n                \nonToggleChange(newState: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Обработчик изменения состояния переключателя.\nОбновляет состояние эндпоинта и сохраняет изменения в репозитории.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовое состояние переключателя.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:144\n                        \n                    \n\n\n            \n                \n                        Открывает диалог для редактирования информации об эндпоинте.\nОбновляет информацию об эндпоинте после закрытия диалога.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        processEditDialogData\n                        \n                    \n                \n            \n            \n                \n                        \n                    processEditDialogData(data: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:158\n                        \n                    \n\n\n            \n                \n                        Обрабатывает данные, полученные из диалога редактирования.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nДанные эндпоинта, полученные из диалога.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateEndpoint\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEndpoint(data: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Обновляет информацию об эндпоинте в репозитории.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовые данные эндпоинта.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : tuiDialog(EndpointDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:87\n                        \n                    \n\n            \n                \n                    Диалог для редактирования информации об эндпоинте.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { Endpoint } from \"../../../interfaces/Endpoint\";\nimport { Entity } from \"../../../interfaces/Entity\";\nimport { apiServiceShortStructure } from \"../../../interfaces/apiServiceShortStructure\";\nimport { Subscription } from 'rxjs';\nimport { SwitchComponent } from '../switch/switch.component';\nimport { IconTrashComponent } from '../icon-trash/icon-trash.component';\nimport { tuiDialog, TuiAlertService } from '@taiga-ui/core';\nimport { EndpointDialogComponent } from '../endpoint-dialog/endpoint-dialog.component';\nimport { EndpointRepositoryService } from '../../../repositories/endpoint-repository.service';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Компонент CardEndpointComponent предназначен для отображения и управления информацией об эндпоинтах API.\n * Позволяет редактировать, удалять и изменять состояние эндпоинтов.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует сервисы для взаимодействия с репозиторием эндпоинтов и управления состоянием.\n *\n * @example\n * html\n * \n * \n */\n@Component({\n  selector: 'app-card-endpoint',\n  imports: [SwitchComponent, IconTrashComponent, CommonModule, RouterModule],\n  templateUrl: './card-endpoint.component.html',\n  styleUrls: [\n    './card-endpoint.component.css',\n    '../../styles/card.css',\n    '../../styles/icon.css',\n  ],\n})\nexport class CardEndpointComponent {\n  /**\n   * Входной параметр для получения информации о сущности.\n   *\n   * @type {Entity}\n   * @memberof CardEndpointComponent\n   */\n  @Input() entityInfo!: Entity;\n\n  /**\n   * Входной параметр для получения информации об эндпоинте.\n   *\n   * @type {Endpoint}\n   * @memberof CardEndpointComponent\n   */\n  @Input() endpointInfo!: Endpoint;\n\n  /**\n   * Входной параметр для получения имени API.\n   *\n   * @type {string}\n   * @default ''\n   * @memberof CardEndpointComponent\n   */\n  @Input() apiName: string = '';\n\n  /**\n   * Событие, которое вызывается при удалении эндпоинта.\n   *\n   * @type {EventEmitter}\n   * @memberof CardEndpointComponent\n   */\n  @Output() endpointDeleted = new EventEmitter();\n\n  /**\n   * Диалог для редактирования информации об эндпоинте.\n   *\n   * @type {tuiDialog}\n   * @memberof CardEndpointComponent\n   */\n  private readonly dialog = tuiDialog(EndpointDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  });\n\n  /**\n   * Конструктор компонента CardEndpointComponent.\n   *\n   * @param endpointRepositoryService - Сервис для взаимодействия с репозиторием эндпоинтов.\n   * @param cd - Сервис для управления изменением состояния.\n   * @param alerts - Сервис для отображения уведомлений.\n   *\n   * @memberof CardEndpointComponent\n   */\n  constructor(\n    private endpointRepositoryService: EndpointRepositoryService,\n    private cd: ChangeDetectorRef,\n    private alerts: TuiAlertService\n  ) {}\n\n  /**\n   * Обработчик изменения состояния переключателя.\n   *\n   * @param newState - Новое состояние переключателя.\n   * @remarks\n   * Обновляет состояние эндпоинта и сохраняет изменения в репозитории.\n   *\n   * @memberof CardEndpointComponent\n   */\n  onToggleChange(newState: boolean): void {\n    this.endpointInfo.isActive = newState;\n    console.log('Состояние переключателя изменилось на:', newState);\n    this.endpointRepositoryService\n      .updateEndpointStatus(\n        this.apiName,\n        this.entityInfo.name,\n        this.endpointInfo.route,\n        newState\n      )\n      .subscribe({\n        next: (response) => {\n          console.log('Состояние сервиса обновлено:', response);\n        },\n        error: (error) => {\n          console.error('Ошибка при обновлении состояния сервиса:', error);\n        },\n      });\n  }\n\n  /**\n   * Открывает диалог для редактирования информации об эндпоинте.\n   *\n   * @remarks\n   * Обновляет информацию об эндпоинте после закрытия диалога.\n   *\n   * @memberof CardEndpointComponent\n   */\n  openEditDialog(): void {\n    this.dialog({ ...this.endpointInfo }).subscribe({\n      next: (data) => this.processEditDialogData(data),\n      complete: () => console.info('Dialog closed'),\n    });\n  }\n\n  /**\n   * Обрабатывает данные, полученные из диалога редактирования.\n   *\n   * @param data - Данные эндпоинта, полученные из диалога.\n   * @private\n   * @memberof CardEndpointComponent\n   */\n  private processEditDialogData(data: Endpoint): void {\n    console.info(`Dialog emitted data = ${data} - ${this.apiName}`);\n    this.updateEndpoint(data);\n  }\n\n  /**\n   * Обновляет информацию об эндпоинте в репозитории.\n   *\n   * @param data - Новые данные эндпоинта.\n   * @private\n   * @memberof CardEndpointComponent\n   */\n  private updateEndpoint(data: Endpoint): void {\n    this.endpointRepositoryService\n      .updateEndpoint(\n        this.apiName,\n        this.entityInfo.name,\n        this.endpointInfo.route,\n        data\n      )\n      .subscribe({\n        next: (response) => this.handleEndpointUpdate(response, data),\n        error: (error) => this.handleEndpointUpdateError(error),\n      });\n  }\n\n  /**\n   * Обрабатывает успешное обновление эндпоинта.\n   *\n   * @param response - Ответ от сервера.\n   * @param data - Новые данные эндпоинта.\n   * @private\n   * @memberof CardEndpointComponent\n   */\n  private handleEndpointUpdate(response: Endpoint, data: Endpoint): void {\n    console.log('Эндпоинт обновлен:', response);\n    this.endpointInfo = data;\n    this.cd.markForCheck();\n    this.alerts\n      .open('Эндпоинт успешно обновлен', {\n        appearance: 'success',\n      })\n      .subscribe();\n  }\n\n  /**\n   * Обрабатывает ошибку при обновлении эндпоинта.\n   *\n   * @param error - Объект ошибки.\n   * @private\n   * @memberof CardEndpointComponent\n   */\n  private handleEndpointUpdateError(error: any): void {\n    if (error.status === 409) {\n      this.alerts\n        .open('Ошибка: Эндпоинт с таким именем уже существует', {\n          appearance: 'negative',\n        })\n        .subscribe();\n    } else {\n      this.alerts\n        .open('Ошибка при обновлении эндпоинта', {\n          appearance: 'negative',\n        })\n        .subscribe();\n    }\n    console.error('Ошибка при обновлении эндпоинта:', error);\n  }\n\n  /**\n   * Обработчик подтверждения удаления эндпоинта.\n   *\n   * @remarks\n   * Удаляет эндпоинт из репозитория и уведомляет родительский компонент об удалении.\n   *\n   * @memberof CardEndpointComponent\n   */\n  onDeleteConfirmed(): void {\n    this.endpointRepositoryService\n      .deleteEndpoint(\n        this.apiName,\n        this.entityInfo.name,\n        this.endpointInfo.route\n      )\n      .subscribe({\n        next: () => {\n          console.log(`Действие \"${this.endpointInfo.route}\" удалено.`);\n          this.endpointDeleted.emit(this.endpointInfo.route);\n        },\n        error: (error) => {\n          console.error('Ошибка при удалении действия:', error);\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n    \n      \n      \n      \n    \n    {{ endpointInfo.route }}\n    Тип: {{ endpointInfo.type }}\n  \n  \n    \n\n    \n                \n                    ./card-endpoint.component.css\n                \n                \n                \n                    ../../styles/card.css\n                \n                \nh3 {\n    margin: 0;\n    font-size: 24px;\n    color: #0056a6;\n    width: 65%; /* Ширина элемента */\n    text-overflow: ellipsis; /* Добавляем троеточие */\n    white-space: nowrap; /* Запрещаем перенос текста на новую строку */\n    overflow: hidden; /* Скрываем текст, который не помещается */\n    height: 2rem;\n}\n  \n  p {\n    margin: 10px 0;\n    color: #666;\n    font-size: 16px;\n    line-height: 1.5; /* Установите желаемую высоту строки */\n    height: calc(1.5em * 2); /* Высота равна трём строкам */\n    overflow-y: auto; /* Добавляем вертикальную прокрутку при необходимости */\n    overflow-x: hidden; /* Запрещаем горизонтальную прокрутку */\n    box-sizing: border-box; /* Включаем отступы и границы в размер элемента */\n    word-wrap: break-word; /* Перенос слов на новую строку, если они не помещаются */\n    white-space: normal; /* Разрешаем перенос текста на новую строку */\n}\n\n  /* Стилизация полосы прокрутки для WebKit-браузеров (Chrome, Safari, Edge) */\n  p::-webkit-scrollbar {\n    width: 8px; /* Ширина полосы прокрутки */\n  }\n\n  p::-webkit-scrollbar-track {\n    background: #f1f1f1; /* Цвет фона полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb {\n    background: #888; /* Цвет полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb:hover {\n    background: #555; /* Цвет полосы прокрутки при наведении */\n  }\n  \n.actions {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    flex-wrap: wrap;\n  }\n  \n.top-right {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    display: flex;\n    align-items: center;\n  }\n\n                \n                    ../../styles/icon.css\n                \n                  \ni {\n    margin-right: 15px; /* 10px * 1.2 */\n    cursor: pointer;\n    color: #666;\n    transition: color 0.3s;\n    font-size: 20px; /* Увеличиваем размер шрифта на 20% */\n}\n\ni:hover {\n    color: #000;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ endpointInfo.route }}    Тип: {{ endpointInfo.type }}    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardEndpointComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardEntityComponent.html":{"url":"components/CardEntityComponent.html","title":"component - CardEntityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardEntityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/card-entity/card-entity.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент CardEntityComponent предназначен для отображения и управления информацией о сущностях API.\nПозволяет редактировать, удалять и изменять состояние сущностей.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует сервисы для взаимодействия с репозиторием сущностей и управления состоянием.\nExample :html\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-entity\n            \n\n\n            \n                imports\n                \n                                IconTrashComponent\n                                SwitchComponent\n                            CommonModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./card-entity.component.css,../../styles/card.css,../../styles/button.css,../../styles/icon.css\n            \n\n\n\n            \n                templateUrl\n                ./card-entity.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                dialog\n                            \n                            \n                                    Private\n                                loading\n                            \n                            \n                                    Private\n                                oldName\n                            \n                            \n                                    Private\n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleEditDialogData\n                            \n                            \n                                    Private\n                                handleEntityDeletion\n                            \n                            \n                                    Private\n                                handleEntityUpdate\n                            \n                            \n                                    Private\n                                handleEntityUpdateError\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                onDeleteConfirmed\n                            \n                            \n                                onToggleChange\n                            \n                            \n                                openEditDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiName\n                            \n                            \n                                entityInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                entityDeleted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cd: ChangeDetectorRef, entityRepositoryService: EntityRepositoryService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/card-entity/card-entity.component.ts:85\n                            \n                        \n\n                \n                    \n                            Конструктор компонента CardEntityComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для управления изменением состояния.\n\n\n                                                        \n                                                \n                                                \n                                                        entityRepositoryService\n                                                  \n                                                        \n                                                                        EntityRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для взаимодействия с репозиторием сущностей.\n\n\n                                                        \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для отображения уведомлений.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        apiName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-entity/card-entity.component.ts:62\n                            \n                        \n                \n                    \n                        Входной параметр для получения имени API.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        entityInfo\n                    \n                \n                \n                    \n                        Type :         Entity\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-entity/card-entity.component.ts:53\n                            \n                        \n                \n                    \n                        Входной параметр для получения информации о сущности.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        entityDeleted\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-entity/card-entity.component.ts:70\n                            \n                        \n                \n                    \n                        Событие, которое вызывается при удалении сущности.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEditDialogData\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEditDialogData(data: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:164\n                        \n                    \n\n\n            \n                \n                        Обрабатывает данные, полученные из диалога редактирования.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nДанные сущности, полученные из диалога.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEntityDeletion\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEntityDeletion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:207\n                        \n                    \n\n\n            \n                \n                        Обрабатывает удаление сущности.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEntityUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEntityUpdate(response: Entity, data: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:181\n                        \n                    \n\n\n            \n                \n                        Обрабатывает успешное обновление сущности.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОтвет от сервера.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовые данные сущности.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEntityUpdateError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEntityUpdateError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:197\n                        \n                    \n\n\n            \n                \n                        Обрабатывает ошибку при обновлении сущности.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОбъект ошибки.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(message: string, error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:220\n                        \n                    \n\n\n            \n                \n                        Обрабатывает ошибки и отображает уведомления.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСообщение об ошибке.\n\n\n                                            \n                                        \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОбъект ошибки.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteConfirmed\n                        \n                    \n                \n            \n            \n                \nonDeleteConfirmed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:147\n                        \n                    \n\n\n            \n                \n                        Обработчик подтверждения удаления сущности.\nУдаляет сущность из репозитория и уведомляет родительский компонент об удалении.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToggleChange\n                        \n                    \n                \n            \n            \n                \nonToggleChange(newState: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:111\n                        \n                    \n\n\n            \n                \n                        Обработчик изменения состояния переключателя.\nОбновляет состояние сущности и сохраняет изменения в репозитории.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовое состояние переключателя.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:131\n                        \n                    \n\n\n            \n                \n                        Открывает диалог для редактирования информации о сущности.\nОбновляет информацию о сущности после закрытия диалога.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : tuiDialog(EntityDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-entity/card-entity.component.ts:82\n                        \n                    \n\n            \n                \n                    Диалог для редактирования информации о сущности.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-entity/card-entity.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        oldName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-entity/card-entity.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-entity/card-entity.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { Entity } from \"../../../interfaces/Entity\";\nimport { RouterModule } from '@angular/router';\nimport { IconTrashComponent } from '../icon-trash/icon-trash.component';\nimport { SwitchComponent } from '../switch/switch.component';\nimport { Subscription } from 'rxjs';\nimport { tuiDialog, TuiAlertService } from '@taiga-ui/core';\nimport { EntityDialogComponent } from '../entity-dialog/entity-dialog.component';\nimport { CommonModule } from '@angular/common';\nimport { EntityRepositoryService } from '../../../repositories/entity-repository.service';\n\n/**\n * Компонент CardEntityComponent предназначен для отображения и управления информацией о сущностях API.\n * Позволяет редактировать, удалять и изменять состояние сущностей.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует сервисы для взаимодействия с репозиторием сущностей и управления состоянием.\n *\n * @example\n * html\n * \n * \n * \n */\n@Component({\n  selector: 'app-card-entity',\n  imports: [IconTrashComponent, SwitchComponent, CommonModule, RouterModule],\n  templateUrl: './card-entity.component.html',\n  styleUrls: [\n    './card-entity.component.css',\n    '../../styles/card.css',\n    '../../styles/button.css',\n    '../../styles/icon.css',\n  ],\n})\nexport class CardEntityComponent {\n  /**\n   * Входной параметр для получения информации о сущности.\n   *\n   * @type {Entity}\n   * @memberof CardEntityComponent\n   */\n  @Input() entityInfo!: Entity;\n\n  /**\n   * Входной параметр для получения имени API.\n   *\n   * @type {string}\n   * @default ''\n   * @memberof CardEntityComponent\n   */\n  @Input() apiName: string = '';\n\n  /**\n   * Событие, которое вызывается при удалении сущности.\n   *\n   * @type {EventEmitter}\n   * @memberof CardEntityComponent\n   */\n  @Output() entityDeleted = new EventEmitter();\n\n  private oldName: string = '';\n  private sub: Subscription | null = null;\n  private loading: boolean = false;\n\n  /**\n   * Диалог для редактирования информации о сущности.\n   *\n   * @type {tuiDialog}\n   * @memberof CardEntityComponent\n   */\n  private readonly dialog = tuiDialog(EntityDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  });\n\n  /**\n   * Конструктор компонента CardEntityComponent.\n   *\n   * @param cd - Сервис для управления изменением состояния.\n   * @param entityRepositoryService - Сервис для взаимодействия с репозиторием сущностей.\n   * @param alerts - Сервис для отображения уведомлений.\n   *\n   * @memberof CardEntityComponent\n   */\n  constructor(\n    private cd: ChangeDetectorRef,\n    private entityRepositoryService: EntityRepositoryService,\n    private alerts: TuiAlertService\n  ) {}\n\n  /**\n   * Обработчик изменения состояния переключателя.\n   *\n   * @param newState - Новое состояние переключателя.\n   * @remarks\n   * Обновляет состояние сущности и сохраняет изменения в репозитории.\n   *\n   * @memberof CardEntityComponent\n   */\n  onToggleChange(newState: boolean): void {\n    this.entityInfo.isActive = newState;\n    this.entityRepositoryService\n      .updateEntityStatus(this.apiName, this.entityInfo.name, newState)\n      .subscribe({\n        next: (response) =>\n          console.log('Состояние сервиса обновлено:', response),\n        error: (error) =>\n          this.handleError('Ошибка при обновлении состояния сервиса', error),\n      });\n  }\n\n  /**\n   * Открывает диалог для редактирования информации о сущности.\n   *\n   * @remarks\n   * Обновляет информацию о сущности после закрытия диалога.\n   *\n   * @memberof CardEntityComponent\n   */\n  openEditDialog(): void {\n    this.oldName = this.entityInfo.name;\n    this.dialog({ ...this.entityInfo }).subscribe({\n      next: (data) => this.handleEditDialogData(data),\n      complete: () => console.info('Dialog closed'),\n    });\n  }\n\n  /**\n   * Обработчик подтверждения удаления сущности.\n   *\n   * @remarks\n   * Удаляет сущность из репозитория и уведомляет родительский компонент об удалении.\n   *\n   * @memberof CardEntityComponent\n   */\n  onDeleteConfirmed(): void {\n    this.entityRepositoryService\n      .deleteApiEntity(this.apiName, this.entityInfo.name)\n      .subscribe({\n        next: () => this.handleEntityDeletion(),\n        error: (error) =>\n          this.handleError('Ошибка при удалении сущности', error),\n      });\n  }\n\n  /**\n   * Обрабатывает данные, полученные из диалога редактирования.\n   *\n   * @param data - Данные сущности, полученные из диалога.\n   * @private\n   * @memberof CardEntityComponent\n   */\n  private handleEditDialogData(data: Entity): void {\n    this.entityRepositoryService\n      .updateApiEntity(this.apiName, this.oldName, data)\n      .subscribe({\n        next: (response) => this.handleEntityUpdate(response, data),\n        error: (error) => this.handleEntityUpdateError(error),\n      });\n  }\n\n  /**\n   * Обрабатывает успешное обновление сущности.\n   *\n   * @param response - Ответ от сервера.\n   * @param data - Новые данные сущности.\n   * @private\n   * @memberof CardEntityComponent\n   */\n  private handleEntityUpdate(response: Entity, data: Entity): void {\n    console.log('Сущность обновлена:', response);\n    this.entityInfo = data;\n    this.cd.markForCheck();\n    this.alerts\n      .open('Сущность успешно обновлена', { appearance: 'success' })\n      .subscribe();\n  }\n\n  /**\n   * Обрабатывает ошибку при обновлении сущности.\n   *\n   * @param error - Объект ошибки.\n   * @private\n   * @memberof CardEntityComponent\n   */\n  private handleEntityUpdateError(error: any): void {\n    this.handleError('Ошибка при обновлении сущности', error);\n  }\n\n  /**\n   * Обрабатывает удаление сущности.\n   *\n   * @private\n   * @memberof CardEntityComponent\n   */\n  private handleEntityDeletion(): void {\n    console.log(`Сущность \"${this.entityInfo.name}\" удалена.`);\n    this.entityDeleted.emit(this.entityInfo.name);\n  }\n\n  /**\n   * Обрабатывает ошибки и отображает уведомления.\n   *\n   * @param message - Сообщение об ошибке.\n   * @param error - Объект ошибки.\n   * @private\n   * @memberof CardEntityComponent\n   */\n  private handleError(message: string, error: any): void {\n    console.error(message, error);\n    if (error.status === 409) {\n      this.alerts\n        .open(`${message}: Сущность с таким именем уже существует`, {\n          appearance: 'negative',\n        })\n        .subscribe();\n    } else {\n      this.alerts.open(message, { appearance: 'negative' }).subscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n    \n    \n    \n  \n  {{ entityInfo.name }}\n  Структура \n    @if(entityInfo.structure == null){\n      отсутствует\n    }\n    @else{\n      есть\n    }\n  \n  \n    Детали\n  \n  \n    \n\n    \n                \n                    ./card-entity.component.css\n                \n                \n                \n                    ../../styles/card.css\n                \n                \nh3 {\n    margin: 0;\n    font-size: 24px;\n    color: #0056a6;\n    width: 65%; /* Ширина элемента */\n    text-overflow: ellipsis; /* Добавляем троеточие */\n    white-space: nowrap; /* Запрещаем перенос текста на новую строку */\n    overflow: hidden; /* Скрываем текст, который не помещается */\n    height: 2rem;\n}\n  \n  p {\n    margin: 10px 0;\n    color: #666;\n    font-size: 16px;\n    line-height: 1.5; /* Установите желаемую высоту строки */\n    height: calc(1.5em * 2); /* Высота равна трём строкам */\n    overflow-y: auto; /* Добавляем вертикальную прокрутку при необходимости */\n    overflow-x: hidden; /* Запрещаем горизонтальную прокрутку */\n    box-sizing: border-box; /* Включаем отступы и границы в размер элемента */\n    word-wrap: break-word; /* Перенос слов на новую строку, если они не помещаются */\n    white-space: normal; /* Разрешаем перенос текста на новую строку */\n}\n\n  /* Стилизация полосы прокрутки для WebKit-браузеров (Chrome, Safari, Edge) */\n  p::-webkit-scrollbar {\n    width: 8px; /* Ширина полосы прокрутки */\n  }\n\n  p::-webkit-scrollbar-track {\n    background: #f1f1f1; /* Цвет фона полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb {\n    background: #888; /* Цвет полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb:hover {\n    background: #555; /* Цвет полосы прокрутки при наведении */\n  }\n  \n.actions {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    flex-wrap: wrap;\n  }\n  \n.top-right {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    display: flex;\n    align-items: center;\n  }\n\n                \n                    ../../styles/button.css\n                \n                .primary-button {\n    background-color: #0056a6;\n    color: white;\n    border: none;\n    block-size: auto;\n    padding: 7px 13px;\n    border-radius: 5px;\n    cursor: pointer;\n    font-weight: bold;\n    transition: background-color 0.3s;\n    margin-left: 1rem;\n    margin-bottom: 1rem;\n  }\n  \n  .primary-button:hover {\n    background-color: #004080;\n  }\n                \n                    ../../styles/icon.css\n                \n                  \ni {\n    margin-right: 15px; /* 10px * 1.2 */\n    cursor: pointer;\n    color: #666;\n    transition: color 0.3s;\n    font-size: 20px; /* Увеличиваем размер шрифта на 20% */\n}\n\ni:hover {\n    color: #000;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ entityInfo.name }}  Структура     @if(entityInfo.structure == null){      отсутствует    }    @else{      есть    }        Детали    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardEntityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Endpoint.html":{"url":"interfaces/Endpoint.html","title":"interface - Endpoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Endpoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/Endpoint.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            route\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Endpoint {\n  route: string;\n  type: string;\n  isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EndpointCardListComponent.html":{"url":"components/EndpointCardListComponent.html","title":"component - EndpointCardListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EndpointCardListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-endpoint-card-list\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            TuiCardLarge\n                                CardEndpointComponent\n                            RouterModule\n                                HeaderComponent\n                                SwitchComponent\n                                LoadingComponent\n                \n            \n\n            \n                styleUrls\n                ./endpoint-card-list.component.css,../../../styles/card-list.css\n            \n\n\n\n            \n                templateUrl\n                ./endpoint-card-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiName\n                            \n                            \n                                    Private\n                                    Readonly\n                                dialog\n                            \n                            \n                                endpoint\n                            \n                            \n                                endpoints\n                            \n                            \n                                entityInfo\n                            \n                            \n                                entityName\n                            \n                            \n                                loading\n                            \n                            \n                                location\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createEndpoint\n                            \n                            \n                                    Private\n                                handleEndpointCreation\n                            \n                            \n                                    Private\n                                handleEntityInfoResponse\n                            \n                            \n                                    Private\n                                isRouteExists\n                            \n                            \n                                    Private\n                                loadData\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onEndpointDeleted\n                            \n                            \n                                onToggleChange\n                            \n                            \n                                openCreateDialog\n                            \n                            \n                                    Private\n                                processCreateDialogData\n                            \n                            \n                                    Private\n                                showRouteExistsError\n                            \n                            \n                                    Private\n                                updateEntityStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cd: ChangeDetectorRef, route: ActivatedRoute, endpointRepositoryService: EndpointRepositoryService, entityRepositoryService: EntityRepositoryService, alerts: TuiAlertService, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endpointRepositoryService\n                                                  \n                                                        \n                                                                        EndpointRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityRepositoryService\n                                                  \n                                                        \n                                                                        EntityRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createEndpoint\n                        \n                    \n                \n            \n            \n                \n                        \n                    createEndpoint(data: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEndpointCreation\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEndpointCreation(response: Endpoint, data: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEntityInfoResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEntityInfoResponse(entity: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isRouteExists\n                        \n                    \n                \n            \n            \n                \n                        \n                    isRouteExists(route: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadData\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEndpointDeleted\n                        \n                    \n                \n            \n            \n                \nonEndpointDeleted(endpointRoute: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:174\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpointRoute\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToggleChange\n                        \n                    \n                \n            \n            \n                \nonToggleChange(newState: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openCreateDialog\n                        \n                    \n                \n            \n            \n                \nopenCreateDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:105\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        processCreateDialogData\n                        \n                    \n                \n            \n            \n                \n                        \n                    processCreateDialogData(data: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showRouteExistsError\n                        \n                    \n                \n            \n            \n                \n                        \n                    showRouteExistsError()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateEntityStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEntityStatus(newState: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : tuiDialog(EndpointDialogComponent, {\n    dismissible: true,\n    label: 'Создать',\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endpoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Endpoint\n\n                    \n                \n                \n                    \n                        Default value : {\n    route: '',\n    type: 'get',\n    isActive: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endpoints\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Endpoint[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        entityInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Entity\n\n                    \n                \n                \n                    \n                        Default value : {} as Entity\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        entityName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Location\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Endpoint } from \"../../../../interfaces/Endpoint\";\nimport { Entity } from \"../../../../interfaces/Entity\";\nimport { CommonModule, Location } from '@angular/common';\nimport { TuiCardLarge } from '@taiga-ui/layout';\nimport { tuiDialog, TuiAlertService } from '@taiga-ui/core';\nimport { CardEndpointComponent } from '../../../components/card-endpoint/card-endpoint.component';\nimport { HeaderComponent } from '../../../components/header/header.component';\nimport { Router, RouterModule } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport { EndpointDialogComponent } from '../../../components/endpoint-dialog/endpoint-dialog.component';\nimport { SwitchComponent } from '../../../components/switch/switch.component';\nimport { EntityRepositoryService } from '../../../../repositories/entity-repository.service';\nimport { LoadingComponent } from '../../../components/loading/loading.component';\nimport { EndpointRepositoryService } from '../../../../repositories/endpoint-repository.service';\n\n@Component({\n  selector: 'app-endpoint-card-list',\n  imports: [\n    CommonModule,\n    TuiCardLarge,\n    CardEndpointComponent,\n    RouterModule,\n    HeaderComponent,\n    SwitchComponent,\n    LoadingComponent,\n  ],\n  templateUrl: './endpoint-card-list.component.html',\n  styleUrls: [\n    './endpoint-card-list.component.css',\n    '../../../styles/card-list.css',\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EndpointCardListComponent implements OnInit, OnDestroy {\n  apiName!: string;\n  entityName!: string;\n  loading: boolean = true;\n  private subscription: Subscription | null = null;\n  endpoints: Endpoint[] = [];\n  entityInfo: Entity = {} as Entity;\n  location: Location;\n\n  private readonly dialog = tuiDialog(EndpointDialogComponent, {\n    dismissible: true,\n    label: 'Создать',\n  });\n\n  endpoint: Endpoint = {\n    route: '',\n    type: 'get',\n    isActive: false,\n  };\n\n  constructor(\n    private router: Router,\n    private cd: ChangeDetectorRef,\n    private route: ActivatedRoute,\n    private endpointRepositoryService: EndpointRepositoryService,\n    private entityRepositoryService: EntityRepositoryService,\n    private alerts: TuiAlertService,\n    location: Location\n  ) {\n    this.location = location;\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      this.apiName = params['apiServiceName'];\n      this.entityName = params['entityName'];\n      this.loadData();\n    });\n  }\n\n  private loadData(): void {\n    this.subscription = this.entityRepositoryService\n      .getApiEntity(this.apiName, this.entityName)\n      .subscribe({\n        next: (entity) => this.handleEntityInfoResponse(entity),\n        error: () => {\n          this.loading = false;\n          this.cd.markForCheck();\n        },\n      });\n  }\n\n  private handleEntityInfoResponse(entity: Entity): void {\n    this.entityInfo = entity;\n    this.endpoints = entity.endpoints || [];\n    this.loading = false;\n    this.cd.detectChanges();\n  }\n\n  openCreateDialog(): void {\n    this.dialog({ ...this.endpoint }).subscribe({\n      next: (data) => this.processCreateDialogData(data),\n      complete: () => console.info('Dialog closed'),\n    });\n  }\n\n  private processCreateDialogData(data: Endpoint): void {\n    if (this.isRouteExists(data.route)) {\n      this.showRouteExistsError();\n      return;\n    }\n\n    this.createEndpoint(data);\n  }\n\n  private isRouteExists(route: string): boolean {\n    return this.endpoints.some((endpoint) => endpoint.route === route);\n  }\n\n  private showRouteExistsError(): void {\n    this.alerts\n      .open('Ошибка: Эндпоинт с таким маршрутом уже существует', {\n        appearance: 'negative',\n      })\n      .subscribe();\n  }\n\n  private createEndpoint(data: Endpoint): void {\n    this.endpointRepositoryService\n      .createEndpoint(this.apiName, this.entityName, data)\n      .subscribe({\n        next: (response) => this.handleEndpointCreation(response, data),\n        error: () => {\n          this.loading = false;\n          this.cd.markForCheck();\n        },\n      });\n  }\n\n  private handleEndpointCreation(response: Endpoint, data: Endpoint): void {\n    console.log('Эндпоинт добавлен:', response);\n    this.endpoints.push(data);\n    this.cd.markForCheck();\n    this.alerts\n      .open('Эндпоинт успешно создан', {\n        appearance: 'success',\n      })\n      .subscribe();\n  }\n\n  onToggleChange(newState: boolean): void {\n    this.entityInfo.isActive = newState;\n    this.updateEntityStatus(newState);\n  }\n\n  private updateEntityStatus(newState: boolean): void {\n    this.entityRepositoryService\n      .updateEntityStatus(this.apiName, this.entityName, newState)\n      .subscribe({\n        next: (response) =>\n          console.log('Состояние сервиса обновлено:', response),\n        error: () => {\n          this.loading = false;\n          this.cd.markForCheck();\n        },\n      });\n  }\n\n  onEndpointDeleted(endpointRoute: string): void {\n    this.endpoints = this.endpoints.filter(\n      (endpoint) => endpoint.route !== endpointRoute\n    );\n    this.cd.markForCheck();\n  }\n}\n\n    \n\n    \n        \n@if (loading)\n{\n  \n}\n@else \n{\n\n    \n        \n            \n        \n        {{ entityInfo.name }}\n        \n            @if(entityInfo.structure != null){\n                 Структура сущности\n                {{ entityInfo.structure | json }}\n            }\n            @else{\n                Структура сущности отсутствует\n            }\n        \n    \n\n    \n        Эндпоинты\n        \n    \n\n    \n        \n            \n            \n        \n    \n\n}\n\n    \n\n    \n                \n                    ./endpoint-card-list.component.css\n                \n                \n                \n                    ../../../styles/card-list.css\n                \n                .container {\n    padding: 20px;\n    position: relative; /* Добавляем относительное позиционирование для контейнера */\n}\n\n.mb-40 {\n    margin-bottom: 40px; /* Добавляем отступ снизу для разделения секций */\n}\n\n.header-section {\n    position: relative; /* Добавляем относительное позиционирование для заголовочной секции */\n    margin-bottom: 20px;\n    padding-right: 1.5rem;\n}\n\n.actions {\n    display: flex;\n    gap: 10px; /* Расстояние между кнопками */\n}\n\n.edit-button, .delete-button {\n    padding: 8px 16px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    font-weight: bold;\n    transition: background-color 0.3s;\n}\n\n.edit-button {\n    background-color: #0056a6;\n    color: white;\n}\n\n.edit-button:hover {\n    background-color: #004080;\n}\n\n.delete-button {\n    background-color: #ff4d4d;\n    color: white;\n}\n\n.delete-button:hover {\n    background-color: #cc0000;\n}\n\n.separator-section {\n    margin: 20px 0;\n    text-align: center;\n}\n\n.separator-section h2 {\n    margin: 0;\n    font-size: 1.5rem;\n    color: #333;\n    margin-bottom: 10px;\n}\n\n.separator {\n    border: 0;\n    height: 1px;\n    background-color: #ddd;\n    margin: 0 auto;\n    width: 50%;\n}\n\n.grid {\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    gap: 20px;\n}\n\n.card {\n    background: rgb(0 0 0 / 3%);\n    border-radius: 10px;\n    box-shadow: 0 2px 4px rgb(0 0 0 / 22%);\n    padding: 20px;\n    padding-bottom: 10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: normal;\n    position: relative;\n    transition: transform 0.3s, box-shadow 0.3s;\n    max-height: 300px; /* Ограничиваем высоту карточки */\n    overflow-y: auto; /* Добавляем вертикальную прокрутку */\n}\n\n.card:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n}\n\n@media (max-width: 1200px) {\n    .grid {\n        grid-template-columns: repeat(3, 1fr);\n    }\n}\n\n@media (max-width: 992px) {\n    .grid {\n        grid-template-columns: repeat(2, 1fr);\n    }\n}\n\n@media (max-width: 768px) {\n    .grid {\n        grid-template-columns: 1fr;\n    }\n}\n\np {\n    word-wrap: break-word; /* Перенос слов на новую строку, если они не помещаются */\n    white-space: normal; /* Разрешаем перенос текста на новую строку */\n}\n\n.top-right {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    display: flex;\n    align-items: center;\n}\n\n.structure-content {\n    width: 100%;\n    height: 150px;\n    padding: 10px;\n    background-color: #f9f9f9;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    resize: none; /* Запрещаем изменение размера */\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (loading){  }@else {                                        {{ entityInfo.name }}                    @if(entityInfo.structure != null){                 Структура сущности                {{ entityInfo.structure | json }}            }            @else{                Структура сущности отсутствует            }                        Эндпоинты                                                            }'\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EndpointCardListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EndpointDialogComponent.html":{"url":"components/EndpointDialogComponent.html","title":"component - EndpointDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EndpointDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент EndpointDialogComponent предназначен для отображения диалогового окна редактирования эндпоинта.\nПозволяет пользователю вводить и изменять данные эндпоинта, такие как маршрут и тип запроса.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует сервисы для управления диалоговыми окнами и вводом данных.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-endpoint-dialog\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            TuiAutoFocus\n                            TuiButton\n                            TuiDataListWrapper\n                            TuiInputModule\n                            TuiSelectModule\n                            TuiSlider\n                            TuiTextfield\n                            TuiTextfieldControllerModule\n                \n            \n\n            \n                styleUrls\n                ./endpoint-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./endpoint-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                context\n                            \n                            \n                                    Private\n                                    Readonly\n                                dialogs\n                            \n                            \n                                    Readonly\n                                types\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                onInput\n                            \n                            \n                                    Protected\n                                showDialog\n                            \n                            \n                                    Protected\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasValue\n                                \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        onInput\n                        \n                    \n                \n            \n            \n                \n                        \n                    onInput(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:129\n                        \n                    \n\n\n            \n                \n                        Обработчик ввода данных в поле маршрута.\nОчищает значение от недопустимых символов и обновляет данные эндпоинта.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСобытие ввода данных.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        showDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    showDialog(content: TemplateRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Открывает диалоговое окно с заданным содержимым.\nИспользует сервис TuiDialogService для открытия диалога.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                        TemplateRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nШаблон содержимого диалогового окна.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        submit\n                        \n                    \n                \n            \n            \n                \n                        \n                    submit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:98\n                        \n                    \n\n\n            \n                \n                        Обработчик отправки формы.\nПредотвращает стандартное поведение отправки формы и завершает диалог, если маршрут не пустой.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext>()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:67\n                        \n                    \n\n            \n                \n                    Контекст диалогового окна, содержащий данные эндпоинта.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:51\n                        \n                    \n\n            \n                \n                    Сервис для управления диалоговыми окнами.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        types\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['get', 'post', 'put', 'delete', 'getbyindex']\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:59\n                        \n                    \n\n            \n                \n                    Список доступных типов запросов для эндпоинта.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasValue\n                    \n                \n\n                \n                    \n                        gethasValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:76\n                                \n                            \n                    \n                        \n                                Флаг, указывающий, есть ли значение в поле маршрута.\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:86\n                                \n                            \n                    \n                        \n                                Данные эндпоинта, которые редактируются в диалоговом окне.\n\n\n                                \n                                \n                                \n                                    Returns :         Endpoint\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import type { TemplateRef } from '@angular/core';\nimport { Component, inject } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TuiAutoFocus } from '@taiga-ui/cdk';\nimport type { TuiDialogContext } from '@taiga-ui/core';\nimport { TuiButton, TuiDialogService, TuiTextfield } from '@taiga-ui/core';\nimport { TuiDataListWrapper, TuiSlider } from '@taiga-ui/kit';\nimport {\n  TuiInputModule,\n  TuiSelectModule,\n  TuiTextfieldControllerModule,\n} from '@taiga-ui/legacy';\nimport { injectContext } from '@taiga-ui/polymorpheus';\nimport { Endpoint } from \"../../../interfaces/Endpoint\";\n\n/**\n * Компонент EndpointDialogComponent предназначен для отображения диалогового окна редактирования эндпоинта.\n * Позволяет пользователю вводить и изменять данные эндпоинта, такие как маршрут и тип запроса.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует сервисы для управления диалоговыми окнами и вводом данных.\n *\n * @example\n * html\n * \n */\n@Component({\n  selector: 'app-endpoint-dialog',\n  imports: [\n    FormsModule,\n    TuiAutoFocus,\n    TuiButton,\n    TuiDataListWrapper,\n    TuiInputModule,\n    TuiSelectModule,\n    TuiSlider,\n    TuiTextfield,\n    TuiTextfieldControllerModule,\n  ],\n  templateUrl: './endpoint-dialog.component.html',\n  styleUrls: ['./endpoint-dialog.component.css'],\n})\nexport class EndpointDialogComponent {\n  /**\n   * Сервис для управления диалоговыми окнами.\n   *\n   * @type {TuiDialogService}\n   * @memberof EndpointDialogComponent\n   */\n  private readonly dialogs = inject(TuiDialogService);\n\n  /**\n   * Список доступных типов запросов для эндпоинта.\n   *\n   * @type {string[]}\n   * @memberof EndpointDialogComponent\n   */\n  readonly types: string[] = ['get', 'post', 'put', 'delete', 'getbyindex'];\n\n  /**\n   * Контекст диалогового окна, содержащий данные эндпоинта.\n   *\n   * @type {TuiDialogContext}\n   * @memberof EndpointDialogComponent\n   */\n  public readonly context = injectContext>();\n\n  /**\n   * Флаг, указывающий, есть ли значение в поле маршрута.\n   *\n   * @type {boolean}\n   * @returns {boolean} Возвращает true, если маршрут не пустой.\n   * @memberof EndpointDialogComponent\n   */\n  protected get hasValue(): boolean {\n    return this.data.route.trim() !== '';\n  }\n\n  /**\n   * Данные эндпоинта, которые редактируются в диалоговом окне.\n   *\n   * @type {Endpoint}\n   * @memberof EndpointDialogComponent\n   */\n  protected get data(): Endpoint {\n    return this.context.data;\n  }\n\n  /**\n   * Обработчик отправки формы.\n   *\n   * @remarks\n   * Предотвращает стандартное поведение отправки формы и завершает диалог, если маршрут не пустой.\n   *\n   * @memberof EndpointDialogComponent\n   */\n  protected submit(): void {\n    if (event) {\n      event.preventDefault();\n    }\n    if (this.hasValue) {\n      this.context.completeWith(this.data);\n    }\n  }\n\n  /**\n   * Открывает диалоговое окно с заданным содержимым.\n   *\n   * @param content - Шаблон содержимого диалогового окна.\n   * @remarks\n   * Использует сервис TuiDialogService для открытия диалога.\n   *\n   * @memberof EndpointDialogComponent\n   */\n  protected showDialog(content: TemplateRef): void {\n    this.dialogs.open(content, { dismissible: true }).subscribe();\n  }\n\n  /**\n   * Обработчик ввода данных в поле маршрута.\n   *\n   * @param event - Событие ввода данных.\n   * @remarks\n   * Очищает значение от недопустимых символов и обновляет данные эндпоинта.\n   *\n   * @memberof EndpointDialogComponent\n   */\n  protected onInput(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    const value = input.value;\n    const cleanedValue = value.replace(/[^a-zA-Z0-9]/g, '');\n    input.value = cleanedValue;\n    this.data.route = cleanedValue;\n  }\n}\n\n    \n\n    \n        \n  Имя эндпоинта\n\n\n\n  Тип\n  \n\n\n\n  \n    Отправить\n  \n\n\n    \n\n    \n                \n                    ./endpoint-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Имя эндпоинта  Тип        Отправить  '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EndpointDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EndpointRepositoryService.html":{"url":"injectables/EndpointRepositoryService.html","title":"injectable - EndpointRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EndpointRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/endpoint-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEndpoint\n                            \n                            \n                                deleteEndpoint\n                            \n                            \n                                getEndpointByName\n                            \n                            \n                                getEndpointList\n                            \n                            \n                                updateEndpoint\n                            \n                            \n                                updateEndpointStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(endpointService: EndpointService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/endpoint-repository.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        endpointService\n                                                  \n                                                        \n                                                                        EndpointService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createEndpoint\n                        \n                    \n                \n            \n            \n                \ncreateEndpoint(apiServiceName: string, entityName: string, endpoint: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpoint\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEndpoint\n                        \n                    \n                \n            \n            \n                \ndeleteEndpoint(apiServiceName: string, entityName: string, endpointName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpointName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEndpointByName\n                        \n                    \n                \n            \n            \n                \ngetEndpointByName(apiServiceName: string, entityName: string, endpointName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpointName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEndpointList\n                        \n                    \n                \n            \n            \n                \ngetEndpointList(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEndpoint\n                        \n                    \n                \n            \n            \n                \nupdateEndpoint(apiServiceName: string, entityName: string, endpointName: string, endpoint: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpointName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpoint\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEndpointStatus\n                        \n                    \n                \n            \n            \n                \nupdateEndpointStatus(apiServiceName: string, entityName: string, endpointName: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpointName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EndpointService as EndpointService } from '../services/endpoint-service.service';\nimport { Endpoint as Endpoint } from \"../interfaces/Endpoint\";\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EndpointRepositoryService {\n\n  constructor(private endpointService: EndpointService) { }\n\n  getEndpointList(apiServiceName: string, entityName: string): Observable {\n    return this.endpointService.getEndpointList(apiServiceName, entityName);\n  }\n\n  createEndpoint(apiServiceName: string, entityName: string, endpoint: Endpoint): Observable {\n    return this.endpointService.createEndpoint(apiServiceName, entityName, endpoint);\n  }\n\n  getEndpointByName(apiServiceName: string, entityName: string, endpointName: string): Observable {\n    return this.endpointService.getEndpointByName(apiServiceName, entityName, endpointName);\n  }\n\n  updateEndpoint(apiServiceName: string, entityName: string, endpointName: string, endpoint: Endpoint): Observable {\n    return this.endpointService.updateEndpoint(apiServiceName, entityName, endpointName, endpoint);\n  }\n\n  deleteEndpoint(apiServiceName: string, entityName: string, endpointName: string): Observable {\n    return this.endpointService.deleteEndpoint(apiServiceName, entityName, endpointName);\n  }\n  \n  updateEndpointStatus(apiServiceName: string, entityName: string, endpointName: string, isActive: boolean): Observable {\n    return this.endpointService.updateEndpointStatus(apiServiceName, entityName, endpointName, isActive);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EndpointService.html":{"url":"injectables/EndpointService.html","title":"injectable - EndpointService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EndpointService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/endpoint-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEndpoint\n                            \n                            \n                                deleteEndpoint\n                            \n                            \n                                getEndpointByName\n                            \n                            \n                                getEndpointList\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                updateEndpoint\n                            \n                            \n                                updateEndpointStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorHandler: ErrorHandlerService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/endpoint-service.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createEndpoint\n                        \n                    \n                \n            \n            \n                \ncreateEndpoint(apiServiceName: string, entityName: string, action: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                action\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEndpoint\n                        \n                    \n                \n            \n            \n                \ndeleteEndpoint(apiServiceName: string, entityName: string, actionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEndpointByName\n                        \n                    \n                \n            \n            \n                \ngetEndpointByName(apiServiceName: string, entityName: string, actionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEndpointList\n                        \n                    \n                \n            \n            \n                \ngetEndpointList(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEndpoint\n                        \n                    \n                \n            \n            \n                \nupdateEndpoint(apiServiceName: string, entityName: string, actionName: string, action: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                action\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEndpointStatus\n                        \n                    \n                \n            \n            \n                \nupdateEndpointStatus(serviceName: string, entityName: string, endpoint: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/api`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/endpoint-service.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { Endpoint } from \"../interfaces/Endpoint\";\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { ErrorHandlerService } from './error-handler.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EndpointService {\n  private baseUrl = `${window.location.origin}/api`;\n\n  constructor(\n    private http: HttpClient,\n    private errorHandler: ErrorHandlerService,\n    private alerts: TuiAlertService\n  ) {}\n\n  getEndpointList(\n    apiServiceName: string,\n    entityName: string\n  ): Observable {\n    return this.http\n      .get(\n        `${this.baseUrl}/ApiEndpoint/${apiServiceName}/${entityName}`\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  createEndpoint(\n    apiServiceName: string,\n    entityName: string,\n    action: Endpoint\n  ): Observable {\n    return this.http\n      .post(\n        `${this.baseUrl}/ApiEndpoint/${apiServiceName}/${entityName}`,\n        action\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  getEndpointByName(\n    apiServiceName: string,\n    entityName: string,\n    actionName: string\n  ): Observable {\n    return this.http\n      .get(\n        `${this.baseUrl}/ApiEndpoint/${apiServiceName}/${entityName}/${actionName}`\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  updateEndpoint(\n    apiServiceName: string,\n    entityName: string,\n    actionName: string,\n    action: Endpoint\n  ): Observable {\n    return this.http\n      .put(\n        `${this.baseUrl}/ApiEndpoint/${apiServiceName}/${entityName}/${actionName}`,\n        action\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  deleteEndpoint(\n    apiServiceName: string,\n    entityName: string,\n    actionName: string\n  ): Observable {\n    return this.http\n      .delete(\n        `${this.baseUrl}/ApiEndpoint/${apiServiceName}/${entityName}/${actionName}`\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  updateEndpointStatus(\n    serviceName: string,\n    entityName: string,\n    endpoint: string,\n    isActive: boolean\n  ): Observable {\n    return this.http\n      .patch(\n        `${this.baseUrl}/ApiEndpoint/${serviceName}/${entityName}/${endpoint}/${isActive}`,\n        null\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  private handleError(error: HttpErrorResponse): Observable {\n    this.errorHandler.handleError(error);\n    this.alerts.open(error.message, { appearance: 'negative' }).subscribe();\n    return throwError(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Entity.html":{"url":"interfaces/Entity.html","title":"interface - Entity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Entity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/Entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            endpoints\n                                        \n                                \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            structure\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endpoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endpoints:         Endpoint[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Endpoint[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        structure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        structure:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Endpoint } from \"./Endpoint\";\n\n\nexport interface Entity {\n  name: string;\n  isActive: boolean;\n  structure: any;\n  endpoints: Endpoint[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EntityDialogComponent.html":{"url":"components/EntityDialogComponent.html","title":"component - EntityDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EntityDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/entity-dialog/entity-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент EntityDialogComponent предназначен для отображения диалогового окна редактирования сущности.\nПозволяет пользователю вводить и изменять данные сущности, такие как имя и структура.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует сервисы для управления диалоговыми окнами и вводом данных.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-entity-edit-dialog\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            TuiAutoFocus\n                            TuiButton\n                            TuiDataListWrapper\n                            TuiInputModule\n                            TuiSelectModule\n                            TuiSlider\n                            TuiTextfield\n                            TuiTextfieldControllerModule\n                            TuiTextareaModule\n                \n            \n\n            \n                styleUrls\n                ./entity-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./entity-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                alerts\n                            \n                            \n                                    Public\n                                    Readonly\n                                context\n                            \n                            \n                                    Private\n                                    Readonly\n                                dialogs\n                            \n                            \n                                    Private\n                                isCanSubmit\n                            \n                            \n                                    \n                                nameInputRef\n                            \n                            \n                                    \n                                structureInputRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                handleKeyboardEvent\n                            \n                            \n                                    Protected\n                                handleSubmit\n                            \n                            \n                                    Protected\n                                moveFocus\n                            \n                            \n                                    Protected\n                                onInput\n                            \n                            \n                                    Protected\n                                showDialog\n                            \n                            \n                                    Private\n                                showError\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:keydown\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasValue\n                                \n                                \n                                    data\n                                \n                                \n                                    structure\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:keydown\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:keydown(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Обработчик событий клавиатуры.\nОбрабатывает нажатия клавиш \"Enter\" и \"Escape\".\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСобытие клавиатуры.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleKeyboardEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleKeyboardEvent(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Обработчик событий клавиатуры.\nОбрабатывает нажатия клавиш \"Enter\" и \"Escape\".\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСобытие клавиатуры.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        handleSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:194\n                        \n                    \n\n\n            \n                \n                        Обработчик отправки формы.\nПроверяет корректность данных и завершает диалог, если данные валидны.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moveFocus\n                        \n                    \n                \n            \n            \n                \n                        \n                    moveFocus(targetInput: ElementRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:263\n                        \n                    \n\n\n            \n                \n                        Перемещает фокус на указанное поле ввода.\nИспользуется для управления фокусом между полями ввода.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                targetInput\n                                            \n                                                        ElementRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСсылка на элемент ввода.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        onInput\n                        \n                    \n                \n            \n            \n                \n                        \n                    onInput(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:246\n                        \n                    \n\n\n            \n                \n                        Обработчик ввода данных в поле имени.\nОчищает значение от недопустимых символов и обновляет данные сущности.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСобытие ввода данных.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        showDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    showDialog(content: TemplateRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:216\n                        \n                    \n\n\n            \n                \n                        Открывает диалоговое окно с заданным содержимым.\nИспользует сервис TuiDialogService для открытия диалога.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                        TemplateRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nШаблон содержимого диалогового окна.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showError\n                        \n                    \n                \n            \n            \n                \n                        \n                    showError(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:227\n                        \n                    \n\n\n            \n                \n                        Отображает сообщение об ошибке.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСообщение об ошибке.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:91\n                        \n                    \n\n            \n                \n                    Сервис для отображения уведомлений.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext>()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:108\n                        \n                    \n\n            \n                \n                    Контекст диалогового окна, содержащий данные сущности.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:83\n                        \n                    \n\n            \n                \n                    Сервис для управления диалоговыми окнами.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isCanSubmit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:100\n                        \n                    \n\n            \n                \n                    Флаг, указывающий, можно ли отправить данные.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nameInputRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('nameInput', {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:66\n                        \n                    \n\n            \n                \n                    Ссылка на элемент ввода имени.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        structureInputRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('descriptionInput', {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:75\n                        \n                    \n\n            \n                \n                    Ссылка на элемент ввода структуры.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasValue\n                    \n                \n\n                \n                    \n                        gethasValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:117\n                                \n                            \n                    \n                        \n                                Флаг, указывающий, есть ли значение в поле имени.\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:127\n                                \n                            \n                    \n                        \n                                Данные сущности, которые редактируются в диалоговом окне.\n\n\n                                \n                                \n                                \n                                    Returns :         Entity\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        structure\n                    \n                \n\n                \n                    \n                        getstructure()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:138\n                                \n                            \n                    \n                        \n                                Возвращает структуру сущности в формате JSON.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setstructure(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:154\n                                \n                            \n                    \n                        \n                                Устанавливает структуру сущности из строки JSON.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nСтрока JSON для установки структуры.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import type { TemplateRef } from '@angular/core';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  HostListener,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TuiAutoFocus } from '@taiga-ui/cdk';\nimport type { TuiDialogContext } from '@taiga-ui/core';\nimport {\n  TuiButton,\n  TuiDialogService,\n  TuiTextfield,\n  TuiAlertService,\n} from '@taiga-ui/core';\nimport { TuiDataListWrapper, TuiSlider } from '@taiga-ui/kit';\nimport { TuiTextareaModule } from '@taiga-ui/legacy';\nimport {\n  TuiInputModule,\n  TuiSelectModule,\n  TuiTextfieldControllerModule,\n} from '@taiga-ui/legacy';\nimport { injectContext } from '@taiga-ui/polymorpheus';\nimport { Entity } from \"../../../interfaces/Entity\";\n\n/**\n * Компонент EntityDialogComponent предназначен для отображения диалогового окна редактирования сущности.\n * Позволяет пользователю вводить и изменять данные сущности, такие как имя и структура.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует сервисы для управления диалоговыми окнами и вводом данных.\n *\n * @example\n * html\n * \n */\n@Component({\n  selector: 'app-entity-edit-dialog',\n  imports: [\n    FormsModule,\n    TuiAutoFocus,\n    TuiButton,\n    TuiDataListWrapper,\n    TuiInputModule,\n    TuiSelectModule,\n    TuiSlider,\n    TuiTextfield,\n    TuiTextfieldControllerModule,\n    TuiTextareaModule,\n  ],\n  templateUrl: './entity-dialog.component.html',\n  styleUrls: ['./entity-dialog.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EntityDialogComponent {\n  /**\n   * Ссылка на элемент ввода имени.\n   *\n   * @type {ElementRef}\n   * @memberof EntityDialogComponent\n   */\n  @ViewChild('nameInput', { read: ElementRef }) nameInputRef!: ElementRef;\n\n  /**\n   * Ссылка на элемент ввода структуры.\n   *\n   * @type {ElementRef}\n   * @memberof EntityDialogComponent\n   */\n  @ViewChild('descriptionInput', { read: ElementRef })\n  structureInputRef!: ElementRef;\n\n  /**\n   * Сервис для управления диалоговыми окнами.\n   *\n   * @type {TuiDialogService}\n   * @memberof EntityDialogComponent\n   */\n  private readonly dialogs = inject(TuiDialogService);\n\n  /**\n   * Сервис для отображения уведомлений.\n   *\n   * @type {TuiAlertService}\n   * @memberof EntityDialogComponent\n   */\n  private readonly alerts = inject(TuiAlertService);\n\n  /**\n   * Флаг, указывающий, можно ли отправить данные.\n   *\n   * @type {boolean}\n   * @default true\n   * @memberof EntityDialogComponent\n   */\n  private isCanSubmit: boolean = true;\n\n  /**\n   * Контекст диалогового окна, содержащий данные сущности.\n   *\n   * @type {TuiDialogContext}\n   * @memberof EntityDialogComponent\n   */\n  public readonly context = injectContext>();\n\n  /**\n   * Флаг, указывающий, есть ли значение в поле имени.\n   *\n   * @type {boolean}\n   * @returns {boolean} Возвращает true, если имя не пустое.\n   * @memberof EntityDialogComponent\n   */\n  protected get hasValue(): boolean {\n    return this.data.name.trim() !== '';\n  }\n\n  /**\n   * Данные сущности, которые редактируются в диалоговом окне.\n   *\n   * @type {Entity}\n   * @memberof EntityDialogComponent\n   */\n  protected get data(): Entity {\n    return this.context.data;\n  }\n\n  /**\n   * Возвращает структуру сущности в формате JSON.\n   *\n   * @type {string}\n   * @returns {string} Структура сущности в формате JSON.\n   * @memberof EntityDialogComponent\n   */\n  protected get structure(): string {\n    try {\n      if (this.data.structure == null) return '';\n      return JSON.stringify(this.data.structure, null, 2);\n    } catch (error) {\n      console.error('Ошибка при преобразовании структуры в JSON:', error);\n      return '';\n    }\n  }\n\n  /**\n   * Устанавливает структуру сущности из строки JSON.\n   *\n   * @param value - Строка JSON для установки структуры.\n   * @memberof EntityDialogComponent\n   */\n  protected set structure(value: string) {\n    try {\n      this.data.structure = JSON.parse(value);\n      this.isCanSubmit = true;\n    } catch {\n      if (value.length === 0) {\n        this.data.structure = null;\n        this.isCanSubmit = true;\n        return;\n      }\n      this.isCanSubmit = false;\n    }\n  }\n\n  /**\n   * Обработчик событий клавиатуры.\n   *\n   * @param event - Событие клавиатуры.\n   * @remarks\n   * Обрабатывает нажатия клавиш \"Enter\" и \"Escape\".\n   *\n   * @memberof EntityDialogComponent\n   */\n  @HostListener('document:keydown', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent): void {\n    if (event.key === 'Enter') {\n      this.handleSubmit();\n    } else if (event.key === 'Escape') {\n      // Обработка нажатия клавиши \"Escape\"\n    }\n  }\n\n  /**\n   * Обработчик отправки формы.\n   *\n   * @remarks\n   * Проверяет корректность данных и завершает диалог, если данные валидны.\n   *\n   * @memberof EntityDialogComponent\n   */\n  protected handleSubmit(): void {\n    if (!this.isCanSubmit) {\n      this.showError('JSON не правильной структуры');\n      return;\n    }\n    if (event) {\n      event.preventDefault();\n    }\n    if (this.hasValue) {\n      this.context.completeWith(this.data);\n    }\n  }\n\n  /**\n   * Открывает диалоговое окно с заданным содержимым.\n   *\n   * @param content - Шаблон содержимого диалогового окна.\n   * @remarks\n   * Использует сервис TuiDialogService для открытия диалога.\n   *\n   * @memberof EntityDialogComponent\n   */\n  protected showDialog(content: TemplateRef): void {\n    this.dialogs.open(content, { dismissible: true }).subscribe();\n  }\n\n  /**\n   * Отображает сообщение об ошибке.\n   *\n   * @param message - Сообщение об ошибке.\n   * @private\n   * @memberof EntityDialogComponent\n   */\n  private showError(message: string): void {\n    this.alerts\n      .open(message, {\n        label: 'Ошибка',\n        appearance: 'negative',\n        autoClose: 5000,\n      })\n      .subscribe();\n  }\n\n  /**\n   * Обработчик ввода данных в поле имени.\n   *\n   * @param event - Событие ввода данных.\n   * @remarks\n   * Очищает значение от недопустимых символов и обновляет данные сущности.\n   *\n   * @memberof EntityDialogComponent\n   */\n  protected onInput(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    const value = input.value;\n    const cleanedValue = value.replace(/[^a-zA-Z0-9]/g, '');\n    input.value = cleanedValue;\n    this.data.name = cleanedValue;\n  }\n\n  /**\n   * Перемещает фокус на указанное поле ввода.\n   *\n   * @param targetInput - Ссылка на элемент ввода.\n   * @remarks\n   * Используется для управления фокусом между полями ввода.\n   *\n   * @memberof EntityDialogComponent\n   */\n  protected moveFocus(targetInput: ElementRef): void {\n    targetInput.nativeElement.querySelector('input, textarea').focus();\n  }\n}\n\n    \n\n    \n        \n    \n      Имя сущности\n    \n    \n  \n    \n      Структура\n    \n  \n    \n      \n        Отправить\n      \n    \n  \n  \n    \n\n    \n                \n                    ./entity-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Имя сущности                    Структура                        Отправить              '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EntityDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EntityRepositoryService.html":{"url":"injectables/EntityRepositoryService.html","title":"injectable - EntityRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EntityRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/entity-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createApiEntity\n                            \n                            \n                                deleteApiEntity\n                            \n                            \n                                getApiEntity\n                            \n                            \n                                getApiEntityList\n                            \n                            \n                                updateApiEntity\n                            \n                            \n                                updateEntityStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entityService: EntityService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/entity-repository.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entityService\n                                                  \n                                                        \n                                                                        EntityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createApiEntity\n                        \n                    \n                \n            \n            \n                \ncreateApiEntity(apiServiceName: string, entity: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteApiEntity\n                        \n                    \n                \n            \n            \n                \ndeleteApiEntity(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiEntity\n                        \n                    \n                \n            \n            \n                \ngetApiEntity(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiEntityList\n                        \n                    \n                \n            \n            \n                \ngetApiEntityList(apiServiceName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiEntity\n                        \n                    \n                \n            \n            \n                \nupdateApiEntity(apiServiceName: string, entityName: string, entity: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEntityStatus\n                        \n                    \n                \n            \n            \n                \nupdateEntityStatus(serviceName: string, entityName: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityService } from '../services/entity-service.service';\nimport { Observable } from 'rxjs';\nimport { Entity } from \"../interfaces/Entity\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EntityRepositoryService {\n\n  constructor(private entityService: EntityService) { }\n\n  getApiEntityList(apiServiceName: string): Observable {\n    return this.entityService.getApiEntityList(apiServiceName);\n  } \n\n  getApiEntity(apiServiceName: string, entityName: string): Observable {\n    return this.entityService.getApiEntity(apiServiceName, entityName);\n  }\n\n  createApiEntity(apiServiceName: string, entity: Entity): Observable {\n    return this.entityService.createApiEntity(apiServiceName, entity);\n  }\n\n  updateApiEntity(apiServiceName: string, entityName: string, entity: Entity): Observable {\n    return this.entityService.updateApiEntity(apiServiceName, entityName, entity);\n  }\n\n  deleteApiEntity(apiServiceName: string, entityName: string): Observable {\n    return this.entityService.deleteApiEntity(apiServiceName, entityName);\n  } \n\n  updateEntityStatus(serviceName: string, entityName: string, isActive: boolean): Observable {\n    return this.entityService.updateEntityStatus(serviceName, entityName, isActive);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EntityService.html":{"url":"injectables/EntityService.html","title":"injectable - EntityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/entity-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createApiEntity\n                            \n                            \n                                deleteApiEntity\n                            \n                            \n                                getAllApiServices\n                            \n                            \n                                getApiEntity\n                            \n                            \n                                getApiEntityList\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                updateApiEntity\n                            \n                            \n                                updateEntityStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorHandler: ErrorHandlerService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/entity-service.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createApiEntity\n                        \n                    \n                \n            \n            \n                \ncreateApiEntity(apiServiceName: string, entity: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteApiEntity\n                        \n                    \n                \n            \n            \n                \ndeleteApiEntity(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllApiServices\n                        \n                    \n                \n            \n            \n                \ngetAllApiServices()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiEntity\n                        \n                    \n                \n            \n            \n                \ngetApiEntity(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiEntityList\n                        \n                    \n                \n            \n            \n                \ngetApiEntityList(apiServiceName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiEntity\n                        \n                    \n                \n            \n            \n                \nupdateApiEntity(apiServiceName: string, entityName: string, entity: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEntityStatus\n                        \n                    \n                \n            \n            \n                \nupdateEntityStatus(serviceName: string, entityName: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/api`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/entity-service.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { Entity } from \"../interfaces/Entity\";\nimport { ApiServiceStructure } from \"../interfaces/ApiServiceStructure\";\nimport { apiServiceShortStructure } from \"../interfaces/apiServiceShortStructure\";\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { ErrorHandlerService } from './error-handler.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EntityService {\n  private baseUrl = `${window.location.origin}/api`;\n\n  constructor(\n    private http: HttpClient,\n    private errorHandler: ErrorHandlerService,\n    private alerts: TuiAlertService\n  ) {}\n\n  getApiEntityList(apiServiceName: string): Observable {\n    return this.http\n      .get(`${this.baseUrl}/ApiEntity/${apiServiceName}`)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  getApiEntity(apiServiceName: string, entityName: string): Observable {\n    return this.http\n      .get(`${this.baseUrl}/ApiEntity/${apiServiceName}/${entityName}`)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  createApiEntity(apiServiceName: string, entity: Entity): Observable {\n    return this.http\n      .post(`${this.baseUrl}/ApiEntity/${apiServiceName}`, entity)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  updateApiEntity(\n    apiServiceName: string,\n    entityName: string,\n    entity: Entity\n  ): Observable {\n    return this.http\n      .put(\n        `${this.baseUrl}/ApiEntity/${apiServiceName}/${entityName}`,\n        entity\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  deleteApiEntity(\n    apiServiceName: string,\n    entityName: string\n  ): Observable {\n    return this.http\n      .delete(`${this.baseUrl}/ApiEntity/${apiServiceName}/${entityName}`)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  updateEntityStatus(\n    serviceName: string,\n    entityName: string,\n    isActive: boolean\n  ): Observable {\n    return this.http\n      .patch(\n        `${this.baseUrl}/ApiEntity/${serviceName}/${entityName}/${isActive}`,\n        null\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  getAllApiServices(): Observable {\n    return this.http\n      .get(`${this.baseUrl}/ApiServices`)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  private handleError(error: HttpErrorResponse): Observable {\n    this.errorHandler.handleError(error);\n    this.alerts.open(error.message, { appearance: 'negative' }).subscribe();\n    return throwError(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityShort.html":{"url":"interfaces/EntityShort.html","title":"interface - EntityShort","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EntityShort\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/EntityShort.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            structure\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        structure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        structure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EntityShort {\n  name: string;\n  isActive: boolean;\n  structure: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorDisplayComponent.html":{"url":"components/ErrorDisplayComponent.html","title":"component - ErrorDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/pages/error-display/error-display.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-display\n            \n\n\n            \n                imports\n                \n                            TuiButton\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./error-display.component.html\n            \n\n\n\n            \n                styleUrl\n                ./error-display.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorCode\n                            \n                            \n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/pages/error-display/error-display.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/error-display/error-display.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/error-display/error-display.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/error-display/error-display.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/error-display/error-display.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TuiButton } from '@taiga-ui/core';\n\n@Component({\n  selector: 'app-error-display',\n  imports: [TuiButton],\n  templateUrl: './error-display.component.html',\n  styleUrl: './error-display.component.css',\n})\nexport class ErrorDisplayComponent implements OnInit {\n  errorCode!: string;\n  errorMessage!: string;\n\n  constructor(private route: ActivatedRoute, private router: Router) {}\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      this.errorCode = params['code'] || 'Unknown Error';\n      this.errorMessage =\n        params['message'] || 'Произошла непредвиденная ошибка.';\n    });\n  }\n\n  goBack(): void {\n    this.router.navigate(['/']);\n  }\n}\n\n    \n\n    \n        \n    {{ errorCode }}\n    {{ errorMessage }}\n    \n      Go Back\n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ errorCode }}    {{ errorMessage }}          Go Back        '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/error-handler.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, alertService: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/error-handler.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/error-handler.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { TuiAlertService } from '@taiga-ui/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHandlerService {\n  constructor(private router: Router, private alertService: TuiAlertService) {}\n\n  handleError(error: HttpErrorResponse): void {\n    let errorMessage = 'Произошла ошибка при обработке запроса';\n    let errorCode = error.status || 'Unknown';\n\n    switch (error.status) {\n      case 400:\n        errorMessage = 'Неверный запрос. Проверьте данные и попробуйте снова. 🤦‍♂️';\n        this.alertService.open(`Error ${errorCode}: ${errorMessage}`).subscribe();\n        break;\n      case 404:\n        errorMessage = 'Страница не найдена. Возможно, она была удалена или перемещена. 🕵️‍♂️';\n        this.router.navigate(['/page-not-found']);\n        return;\n      case 408:\n        errorMessage = 'Время ожидания запроса истекло. Попробуйте еще раз. ⏳';\n        break;\n      case 500:\n        errorMessage = 'Внутренняя ошибка сервера. Мы уже работаем над этим! 🛠️';\n        break;\n      case 502:\n        errorMessage = 'Плохой шлюз. Сервер недоступен. Попробуйте позже. 🌐';\n        break;\n      case 503:\n        errorMessage = 'Сервис временно недоступен. Мы на ремонте! 🔧';\n        break;\n      case 504:\n        errorMessage = 'Время ожидания ответа от сервера истекло. Попробуйте еще раз. ⏰';\n        break;\n      default:\n        errorMessage = `Неизвестная ошибка: ${errorMessage}. Код: ${errorCode}. 🤷‍♂️`;\n        break;\n    }\n\n    // Переход на страницу ошибки для всех остальных случаев\n    this.router.navigate(['/error'], {\n      queryParams: { code: errorCode, message: errorMessage },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExportApiButtonComponent.html":{"url":"components/ExportApiButtonComponent.html","title":"component - ExportApiButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExportApiButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/export-api-button/export-api-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент ExportApiButtonComponent предназначен для экспорта структуры API в формате JSON.\nПозволяет пользователю скачать структуру API в виде файла.\nЭтот компонент интегрируется с сервисом репозитория API для получения структуры API.\nИспользует Taiga UI для создания интерактивного интерфейса.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-export-api-button\n            \n\n\n            \n                imports\n                \n                            TuiButton\n                \n            \n\n            \n                styleUrls\n                ./export-api-button.component.css,../../styles/button.css\n            \n\n\n\n            \n                templateUrl\n                ./export-api-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiInfo\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiServiceRepository: ApiServiceRepositoryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/export-api-button/export-api-button.component.ts:32\n                            \n                        \n\n                \n                    \n                            Конструктор компонента ExportApiButtonComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apiServiceRepository\n                                                  \n                                                        \n                                                                        ApiServiceRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для взаимодействия с репозиторием API.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        apiInfo\n                    \n                \n                \n                    \n                        Type :         apiServiceShortStructure\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/export-api-button/export-api-button.component.ts:32\n                            \n                        \n                \n                    \n                        Входной параметр для получения информации о API.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/export-api-button/export-api-button.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Обработчик нажатия на кнопку экспорта.\nПолучает структуру API из репозитория и инициирует скачивание файла JSON.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { TuiButton } from '@taiga-ui/core';\nimport { ApiServiceStructure } from \"../../../interfaces/ApiServiceStructure\";\nimport { apiServiceShortStructure } from \"../../../interfaces/apiServiceShortStructure\";\nimport { ApiServiceRepositoryService } from '../../../repositories/api-service-repository.service';\n\n/**\n * Компонент ExportApiButtonComponent предназначен для экспорта структуры API в формате JSON.\n * Позволяет пользователю скачать структуру API в виде файла.\n *\n * @remarks\n * Этот компонент интегрируется с сервисом репозитория API для получения структуры API.\n * Использует Taiga UI для создания интерактивного интерфейса.\n *\n * @example\n * html\n * \n */\n@Component({\n  selector: 'app-export-api-button',\n  imports: [TuiButton],\n  templateUrl: './export-api-button.component.html',\n  styleUrls: ['./export-api-button.component.css', '../../styles/button.css'],\n})\nexport class ExportApiButtonComponent {\n  /**\n   * Входной параметр для получения информации о API.\n   *\n   * @type {apiServiceShortStructure}\n   * @memberof ExportApiButtonComponent\n   */\n  @Input() apiInfo!: apiServiceShortStructure;\n\n  /**\n   * Конструктор компонента ExportApiButtonComponent.\n   *\n   * @param apiServiceRepository - Сервис для взаимодействия с репозиторием API.\n   *\n   * @memberof ExportApiButtonComponent\n   */\n  constructor(private apiServiceRepository: ApiServiceRepositoryService) {}\n\n  /**\n   * Обработчик нажатия на кнопку экспорта.\n   *\n   * @remarks\n   * Получает структуру API из репозитория и инициирует скачивание файла JSON.\n   *\n   * @memberof ExportApiButtonComponent\n   */\n  onClick(): void {\n    this.apiServiceRepository.getApiStructureList(this.apiInfo.name).subscribe({\n      next: (data: ApiServiceStructure) => {\n        const { name, ...dataWithoutName } = data;\n        const jsonString = JSON.stringify(dataWithoutName, null, 2);\n\n        const blob = new Blob([jsonString], { type: 'application/json' });\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = `${data.name}.json`;\n        a.click();\n        window.URL.revokeObjectURL(url);\n      },\n      error: (error) => {\n        console.log(error);\n      },\n    });\n  }\n}\n\n    \n\n    \n        Экспортировать\n    \n\n    \n                \n                    ./export-api-button.component.css\n                \n                \n                \n                    ../../styles/button.css\n                \n                .primary-button {\n    background-color: #0056a6;\n    color: white;\n    border: none;\n    block-size: auto;\n    padding: 7px 13px;\n    border-radius: 5px;\n    cursor: pointer;\n    font-weight: bold;\n    transition: background-color 0.3s;\n    margin-left: 1rem;\n    margin-bottom: 1rem;\n  }\n  \n  .primary-button:hover {\n    background-color: #004080;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Экспортировать'\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExportApiButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileStatus.html":{"url":"interfaces/FileStatus.html","title":"interface - FileStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/FileStatus.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errorMessage\n                                        \n                                \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     TuiFileLike\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TuiFileLike\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \"loading\" | \"normal\" | \"error\" | \"success\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"loading\" | \"normal\" | \"error\" | \"success\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { TuiFileLike } from '@taiga-ui/kit';\n\nexport interface FileStatus {\n  file: TuiFileLike;\n  status: 'loading' | 'normal' | 'error' | 'success';\n  errorMessage: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterByInputComponent.html":{"url":"components/FilterByInputComponent.html","title":"component - FilterByInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FilterByInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/filter-by-input/filter-by-input.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент FilterByInputComponent предназначен для фильтрации элементов на основе ввода пользователя.\nПозволяет пользователю вводить текст для поиска и фильтрации списка элементов.\nЭтот компонент использует реактивные формы Angular для управления вводом и фильтрацией данных.\nИнтегрируется с Taiga UI для создания интерактивного интерфейса.\nExample :html\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter-by-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            TuiDataListWrapper\n                            TuiInputModule\n                \n            \n\n            \n                styleUrls\n                ./filter-by-input.component.css\n            \n\n\n\n            \n                templateUrl\n                ./filter-by-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onKeyPress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                controlName\n                            \n                            \n                                items\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                searchQuery\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filteredItems\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:97\n                            \n                        \n\n                \n                    \n                            Конструктор компонента FilterByInputComponent.\nПодписывается на изменения значения контрола формы и вызывает событие searchQuery.\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        controlName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'search'\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:53\n                            \n                        \n                \n                    \n                        Имя контрола формы.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:62\n                            \n                        \n                \n                    \n                        Список элементов для фильтрации.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Search'\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:44\n                            \n                        \n                \n                    \n                        Метка для поля ввода.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        searchQuery\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:70\n                            \n                        \n                \n                    \n                        Событие, которое вызывается при изменении поискового запроса.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onKeyPress\n                        \n                    \n                \n            \n            \n                \nonKeyPress(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Обработчик нажатия клавиш.\nПредотвращает ввод недопустимых символов.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСобытие нажатия клавиши.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    [this.controlName]: new FormControl('', [Validators.pattern('^[a-zA-Z0-9]*$')]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:78\n                        \n                    \n\n            \n                \n                    Реактивная форма для управления вводом.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filteredItems\n                    \n                \n\n                \n                    \n                        getfilteredItems()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:89\n                                \n                            \n                    \n                        \n                                Возвращает отфильтрованные элементы на основе введенного значения.\n\n\n                                \n                                \n                                \n                                    Returns :     string[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { TuiDataListWrapper } from '@taiga-ui/kit';\nimport { TuiInputModule } from '@taiga-ui/legacy';\n\n/**\n * Компонент FilterByInputComponent предназначен для фильтрации элементов на основе ввода пользователя.\n * Позволяет пользователю вводить текст для поиска и фильтрации списка элементов.\n *\n * @remarks\n * Этот компонент использует реактивные формы Angular для управления вводом и фильтрацией данных.\n * Интегрируется с Taiga UI для создания интерактивного интерфейса.\n *\n * @example\n * html\n * \n * \n\n */\n@Component({\n  selector: 'app-filter-by-input',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    TuiDataListWrapper,\n    TuiInputModule,\n  ],\n  templateUrl: './filter-by-input.component.html',\n  styleUrls: ['./filter-by-input.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilterByInputComponent {\n  /**\n   * Метка для поля ввода.\n   *\n   * @type {string}\n   * @default 'Search'\n   * @memberof FilterByInputComponent\n   */\n  @Input() label: string = 'Search';\n\n  /**\n   * Имя контрола формы.\n   *\n   * @type {string}\n   * @default 'search'\n   * @memberof FilterByInputComponent\n   */\n  @Input() controlName: string = 'search';\n\n  /**\n   * Список элементов для фильтрации.\n   *\n   * @type {string[]}\n   * @default []\n   * @memberof FilterByInputComponent\n   */\n  @Input() items: string[] = [];\n\n  /**\n   * Событие, которое вызывается при изменении поискового запроса.\n   *\n   * @type {EventEmitter}\n   * @memberof FilterByInputComponent\n   */\n  @Output() searchQuery = new EventEmitter();\n\n  /**\n   * Реактивная форма для управления вводом.\n   *\n   * @type {FormGroup}\n   * @memberof FilterByInputComponent\n   */\n  form = new FormGroup({\n    [this.controlName]: new FormControl('', [Validators.pattern('^[a-zA-Z0-9]*$')]),\n  });\n\n  /**\n   * Возвращает отфильтрованные элементы на основе введенного значения.\n   *\n   * @type {string[]}\n   * @returns {string[]} Отфильтрованные элементы.\n   * @memberof FilterByInputComponent\n   */\n  get filteredItems(): string[] {\n    const control = this.form.get(this.controlName);\n    if (control) {\n      const value = control.value ?? '';\n      this.searchQuery.emit(value);\n      return this.items.filter(item => item.includes(value));\n    }\n    return this.items;\n  }\n\n  /**\n   * Конструктор компонента FilterByInputComponent.\n   *\n   * @remarks\n   * Подписывается на изменения значения контрола формы и вызывает событие searchQuery.\n   *\n   * @memberof FilterByInputComponent\n   */\n  constructor() {\n    this.form.controls[this.controlName].valueChanges.subscribe(value => {\n      this.searchQuery.emit(value ?? '');\n    });\n  }\n\n  /**\n   * Обработчик нажатия клавиш.\n   *\n   * @param event - Событие нажатия клавиши.\n   * @remarks\n   * Предотвращает ввод недопустимых символов.\n   *\n   * @memberof FilterByInputComponent\n   */\n  onKeyPress(event: KeyboardEvent): void {\n    const inputChar = event.key;\n    const allowedChars = /^[a-zA-Z0-9]$/;\n    if (!allowedChars.test(inputChar) && !event.ctrlKey && !event.metaKey) {\n      event.preventDefault();\n    }\n  }\n}\n\n    \n\n    \n        \n    \n      {{ label }}\n      \n    \n  \n  \n    \n\n    \n                \n                    ./filter-by-input.component.css\n                \n                tui-input {\n    min-width: 300px;\n    max-width: 50%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ label }}              '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterByInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент HeaderComponent предназначен для отображения заголовка страницы с логотипом и кнопкой.\nПозволяет пользователю выполнять действия, такие как возврат на предыдущую страницу или импорт данных.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует диалоговые окна для выполнения операций импорта.\nExample :html\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n            \n                imports\n                \n                                BackButtonComponent\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Click\n                            \n                            \n                                Import\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonText\n                            \n                            \n                                isApiPage\n                            \n                            \n                                logoUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/header/header.component.ts:46\n                            \n                        \n                \n                    \n                        Текст кнопки в заголовке.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isApiPage\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/header/header.component.ts:63\n                            \n                        \n                \n                    \n                        Флаг, указывающий, является ли текущая страница страницей API.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        logoUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://www.titan2.ru/images/temp/logo__ru.jpg\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/header/header.component.ts:37\n                            \n                        \n                \n                    \n                        URL логотипа для отображения в заголовке.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        buttonClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/header/header.component.ts:54\n                            \n                        \n                \n                    \n                        Событие, которое вызывается при нажатии на кнопку.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Click\n                        \n                    \n                \n            \n            \n                \nClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/header/header.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Обработчик нажатия на кнопку.\nВызывает событие buttonClick для уведомления родительского компонента о нажатии.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Import\n                        \n                    \n                \n            \n            \n                \nImport()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/header/header.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Открывает диалоговое окно для импорта данных.\nИспользует сервис tuiDialog для отображения диалогового окна.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : tuiDialog(ImportDialogComponent, {\n    closeable: true,\n    dismissible: true,\n    label: \"Импортировать\",\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/header/header.component.ts:71\n                        \n                    \n\n            \n                \n                    Диалог для импорта данных.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { BackButtonComponent } from '../back-button/back-button.component';\nimport { CommonModule } from '@angular/common';\nimport { tuiDialog } from '@taiga-ui/core';\nimport { ImportDialogComponent } from '../import-dialog/import-dialog.component';\n\n/**\n * Компонент HeaderComponent предназначен для отображения заголовка страницы с логотипом и кнопкой.\n * Позволяет пользователю выполнять действия, такие как возврат на предыдущую страницу или импорт данных.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует диалоговые окна для выполнения операций импорта.\n *\n * @example\n * html\n * \n * \n */\n@Component({\n  selector: 'app-header',\n  imports: [BackButtonComponent, CommonModule],\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'], // Исправлено с styleUrl на styleUrls\n})\nexport class HeaderComponent {\n  /**\n   * URL логотипа для отображения в заголовке.\n   *\n   * @type {string}\n   * @default \"https://www.titan2.ru/images/temp/logo__ru.jpg\"\n   * @memberof HeaderComponent\n   */\n  @Input() logoUrl: string = \"https://www.titan2.ru/images/temp/logo__ru.jpg\";\n\n  /**\n   * Текст кнопки в заголовке.\n   *\n   * @type {string}\n   * @default ''\n   * @memberof HeaderComponent\n   */\n  @Input() buttonText: string = '';\n\n  /**\n   * Событие, которое вызывается при нажатии на кнопку.\n   *\n   * @type {EventEmitter}\n   * @memberof HeaderComponent\n   */\n  @Output() buttonClick: EventEmitter = new EventEmitter();\n\n  /**\n   * Флаг, указывающий, является ли текущая страница страницей API.\n   *\n   * @type {boolean}\n   * @default false\n   * @memberof HeaderComponent\n   */\n  @Input() isApiPage: boolean = false;\n\n  /**\n   * Диалог для импорта данных.\n   *\n   * @type {tuiDialog}\n   * @memberof HeaderComponent\n   */\n  private readonly dialog = tuiDialog(ImportDialogComponent, {\n    closeable: true,\n    dismissible: true,\n    label: \"Импортировать\",\n  });\n\n  /**\n   * Обработчик нажатия на кнопку.\n   *\n   * @remarks\n   * Вызывает событие buttonClick для уведомления родительского компонента о нажатии.\n   *\n   * @memberof HeaderComponent\n   */\n  Click(): void {\n    this.buttonClick.emit();\n  }\n\n  /**\n   * Открывает диалоговое окно для импорта данных.\n   *\n   * @remarks\n   * Использует сервис tuiDialog для отображения диалогового окна.\n   *\n   * @memberof HeaderComponent\n   */\n  Import(): void {\n    this.dialog().subscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    @if(isApiPage){\n      Импортировать\n    }\n    @if(buttonText != ''){\n      {{ buttonText }}\n    }\n    \n  \n\n    \n\n    \n                \n                    ./header.component.css\n                \n                .header {\n    background-color: #0056a6;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n.header a{\n    height: 4rem;\n}\n\n.header a {\n    outline: none; /* Убирает стандартное выделение */\n}\n\n.header a img{\n    height: 4rem;\n}\n\n.header button {\n    background-color: white;\n    border: none;\n    padding: 0.625rem 1.25rem;\n    /* Относительные отступы */\n    margin: 0.625rem 0.5rem;\n    /* Относительные отступы */\n    border-radius: 0.3125rem;\n    /* Относительный радиус скругления */\n    cursor: pointer;\n    font-weight: bold;\n    transition: background-color 0.3s;\n    font-size: 1rem;\n    /* Относительный размер шрифта */\n}\n\n.header button:hover {\n    background-color: #e6e6e6;\n}\n\n@media only screen and (max-width: 768px) {\n    .header {\n        display: flex;  \n        justify-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n    }\n\n    .header a{\n        width: -webkit-fill-available;\n        height: auto;\n    }\n\n    .header a img{\n        width: -webkit-fill-available;\n        height: auto;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              @if(isApiPage){      Импортировать    }    @if(buttonText != \\'\\'){      {{ buttonText }}    }      '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpErrorInterceptor.html":{"url":"interceptors/HttpErrorInterceptor.html","title":"interceptor - HttpErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interceptors/http-error.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorHandler: ErrorHandlerService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/interceptors/http-error.interceptor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/interceptors/http-error.interceptor.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { ErrorHandlerService } from '../services/error-handler.service';\n\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n\n  constructor(private errorHandler: ErrorHandlerService, private alerts: TuiAlertService) {}\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        this.errorHandler.handleError(error);\n        this.alerts.open(error.message, { appearance: 'negative' }).subscribe();\n        return throwError(error);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconTrashComponent.html":{"url":"components/IconTrashComponent.html","title":"component - IconTrashComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IconTrashComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/icon-trash/icon-trash.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент IconTrashComponent предназначен для отображения иконки корзины и управления удалением элементов.\nПозволяет пользователю подтверждать удаление элементов с помощью уведомлений.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует сервисы для управления уведомлениями и маршрутизацией.\nExample :html\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-icon-trash\n            \n\n\n\n            \n                styleUrls\n                ./icon-trash.component.css,../../styles/icon.css\n            \n\n\n\n            \n                templateUrl\n                ./icon-trash.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                showNotification\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiInfo\n                            \n                            \n                                endpointInfo\n                            \n                            \n                                entityInfo\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                responseAlert\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alerts: TuiAlertService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/icon-trash/icon-trash.component.ts:74\n                            \n                        \n\n                \n                    \n                            Конструктор компонента IconTrashComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для отображения уведомлений.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для управления маршрутизацией.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        apiInfo\n                    \n                \n                \n                    \n                        Type :         apiServiceShortStructure\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/icon-trash/icon-trash.component.ts:50\n                            \n                        \n                \n                    \n                        Информация об API, связанная с элементом.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        endpointInfo\n                    \n                \n                \n                    \n                        Type :         Endpoint\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/icon-trash/icon-trash.component.ts:66\n                            \n                        \n                \n                    \n                        Информация об эндпоинте, связанная с элементом.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        entityInfo\n                    \n                \n                \n                    \n                        Type :         EntityShort\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/icon-trash/icon-trash.component.ts:58\n                            \n                        \n                \n                    \n                        Информация о сущности, связанная с элементом.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/icon-trash/icon-trash.component.ts:42\n                            \n                        \n                \n                    \n                        Элемент, который будет удален.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        responseAlert\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/icon-trash/icon-trash.component.ts:74\n                            \n                        \n                \n                    \n                        Событие, которое вызывается при подтверждении удаления элемента.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        showNotification\n                        \n                    \n                \n            \n            \n                \n                        \n                    showNotification()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/icon-trash/icon-trash.component.ts:98\n                        \n                    \n\n\n            \n                \n                        Отображает уведомление для подтверждения удаления элемента.\nИспользует сервис TuiAlertService для отображения уведомлений.\nПодписывается на события маршрутизации для автоматического закрытия уведомлений.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { switchMap, takeUntil } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { PolymorpheusComponent } from '@taiga-ui/polymorpheus';\nimport { AlertDeleteComponent } from '../alert-delete/alert-delete.component';\nimport { Endpoint } from \"../../../interfaces/Endpoint\";\nimport { apiServiceShortStructure } from \"../../../interfaces/apiServiceShortStructure\";\nimport { EntityShort } from \"../../../interfaces/EntityShort\";\n\n/**\n * Компонент IconTrashComponent предназначен для отображения иконки корзины и управления удалением элементов.\n * Позволяет пользователю подтверждать удаление элементов с помощью уведомлений.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует сервисы для управления уведомлениями и маршрутизацией.\n *\n * @example\n * html\n * \n * \n */\n@Component({\n  selector: 'app-icon-trash',\n  imports: [],\n  templateUrl: './icon-trash.component.html',\n  styleUrls: ['./icon-trash.component.css', '../../styles/icon.css'],\n})\nexport class IconTrashComponent {\n  /**\n   * Элемент, который будет удален.\n   *\n   * @type {any}\n   * @memberof IconTrashComponent\n   */\n  @Input() item: any;\n\n  /**\n   * Информация об API, связанная с элементом.\n   *\n   * @type {apiServiceShortStructure}\n   * @memberof IconTrashComponent\n   */\n  @Input() apiInfo!: apiServiceShortStructure;\n\n  /**\n   * Информация о сущности, связанная с элементом.\n   *\n   * @type {EntityShort}\n   * @memberof IconTrashComponent\n   */\n  @Input() entityInfo!: EntityShort;\n\n  /**\n   * Информация об эндпоинте, связанная с элементом.\n   *\n   * @type {Endpoint}\n   * @memberof IconTrashComponent\n   */\n  @Input() endpointInfo!: Endpoint;\n\n  /**\n   * Событие, которое вызывается при подтверждении удаления элемента.\n   *\n   * @type {EventEmitter}\n   * @memberof IconTrashComponent\n   */\n  @Output() responseAlert = new EventEmitter();\n\n  /**\n   * Конструктор компонента IconTrashComponent.\n   *\n   * @param alerts - Сервис для отображения уведомлений.\n   * @param router - Сервис для управления маршрутизацией.\n   *\n   * @memberof IconTrashComponent\n   */\n  constructor(\n    private alerts: TuiAlertService,\n    private router: Router,\n  ) {}\n\n  /**\n   * Отображает уведомление для подтверждения удаления элемента.\n   *\n   * @remarks\n   * Использует сервис TuiAlertService для отображения уведомлений.\n   * Подписывается на события маршрутизации для автоматического закрытия уведомлений.\n   *\n   * @memberof IconTrashComponent\n   */\n  protected showNotification(): void {\n    const notification = this.alerts\n      .open(new PolymorpheusComponent(AlertDeleteComponent), {\n        label: 'Вы уверены, что хотите удалить?',\n        appearance: 'negative',\n        autoClose: 0,\n      })\n      .pipe(\n        switchMap((response) => {\n          if (response) {\n            this.responseAlert.emit(true);\n            console.log(`Удаление карточки: ${this.item.name}`);\n            return this.alerts.open(`Карточка \"${this.item.name}\" удалена.`, { label: 'Успех' });\n          } else {\n            return this.alerts.open(`Удаление карточки \"${this.item.name}\" отменено.`, { label: 'Информация' });\n          }\n        }),\n        takeUntil(this.router.events),\n      );\n\n    notification.subscribe();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./icon-trash.component.css\n                \n                \n                \n                    ../../styles/icon.css\n                \n                  \ni {\n    margin-right: 15px; /* 10px * 1.2 */\n    cursor: pointer;\n    color: #666;\n    transition: color 0.3s;\n    font-size: 20px; /* Увеличиваем размер шрифта на 20% */\n}\n\ni:hover {\n    color: #000;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IconTrashComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImportDialogComponent.html":{"url":"components/ImportDialogComponent.html","title":"component - ImportDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ImportDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/import-dialog/import-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент ImportDialogComponent предназначен для импорта данных API через диалоговое окно.\nПозволяет пользователю загружать файлы и обрабатывать их содержимое для создания новых API сервисов.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует реактивные формы для управления загрузкой файлов и обработки данных.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-import-dialog\n            \n\n\n            \n                imports\n                \n                            NgIf\n                            ReactiveFormsModule\n                            TuiAvatar\n                            TuiFiles\n                            TuiLink\n                            NgFor\n                            TuiButton\n                \n            \n\n            \n                styleUrls\n                ./import-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./import-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                context\n                            \n                            \n                                    Protected\n                                    Readonly\n                                control\n                            \n                            \n                                    Protected\n                                files\n                            \n                            \n                                    Protected\n                                hasFiles\n                            \n                            \n                                    Protected\n                                processedData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getFileStatus\n                            \n                            \n                                    Protected\n                                getFileStatusText\n                            \n                            \n                                    Private\n                                processJson\n                            \n                            \n                                    Private\n                                readFiles\n                            \n                            \n                                    Protected\n                                removeFile\n                            \n                            \n                                    Protected\n                                submit\n                            \n                            \n                                    Private\n                                updateFileStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cd: ChangeDetectorRef, apiService: ApiServiceRepositoryService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:71\n                            \n                        \n\n                \n                    \n                            Конструктор компонента ImportDialogComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для управления изменением состояния.\n\n\n                                                        \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiServiceRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для взаимодействия с репозиторием API.\n\n\n                                                        \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для отображения уведомлений.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getFileStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFileStatus(file: FileStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:172\n                        \n                    \n\n\n            \n                \n                        Возвращает текущий статус файла.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            FileStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nФайл, для которого нужно получить статус.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     \"loading\" | \"normal\" | \"error\"\n\n                        \n                            \n                                Статус файла.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getFileStatusText\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFileStatusText(file: FileStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:150\n                        \n                    \n\n\n            \n                \n                        Возвращает текстовое описание статуса файла.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            FileStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nФайл, для которого нужно получить статус.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Текстовое описание статуса файла.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        processJson\n                        \n                    \n                \n            \n            \n                \n                        \n                    processJson(json: any, fileName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:193\n                        \n                    \n\n\n            \n                \n                        Обрабатывает JSON данные из файла.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                json\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nJSON данные для обработки.\n\n\n                                            \n                                        \n                                        \n                                                fileName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя файла.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    readFiles(files: File[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:108\n                        \n                    \n\n\n            \n                \n                        Читает содержимое загруженных файлов.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСписок файлов для чтения.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        removeFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeFile(fileToRemove: FileStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:260\n                        \n                    \n\n\n            \n                \n                        Удаляет файл из списка загруженных.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fileToRemove\n                                            \n                                                            FileStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nФайл, который нужно удалить.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        submit\n                        \n                    \n                \n            \n            \n                \n                        \n                    submit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:213\n                        \n                    \n\n\n            \n                \n                        Отправляет обработанные данные на сервер.\nОбновляет статус файлов и отображает уведомления о результатах отправки.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateFileStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateFileStatus(file: File, status: \"loading\" | \"normal\" | \"error\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:134\n                        \n                    \n\n\n            \n                \n                        Обновляет статус файла.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nФайл, статус которого нужно обновить.\n\n\n                                            \n                                        \n                                        \n                                                status\n                                            \n                                                        \"loading\" | \"normal\" | \"error\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовый статус файла.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext>()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:71\n                        \n                    \n\n            \n                \n                    Контекст диалогового окна.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        control\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl([])\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:38\n                        \n                    \n\n            \n                \n                    Контрол для управления загрузкой файлов.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileStatus[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:46\n                        \n                    \n\n            \n                \n                    Список загруженных файлов с их статусами.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        hasFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:55\n                        \n                    \n\n            \n                \n                    Флаг, указывающий, есть ли загруженные файлы.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        processedData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiServiceStructure[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:63\n                        \n                    \n\n            \n                \n                    Массив для хранения обработанных данных API.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { NgIf, NgFor } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, ChangeDetectorRef } from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { TuiIcon, TuiLink, TuiButton, TuiAlertService } from '@taiga-ui/core';\nimport { TuiAvatar, TuiFiles } from '@taiga-ui/kit';\nimport { ApiServiceStructure } from \"../../../interfaces/ApiServiceStructure\";\nimport { ApiServiceRepositoryService } from '../../../repositories/api-service-repository.service';\nimport { TuiDialogContext } from '@taiga-ui/core';\nimport { injectContext } from '@taiga-ui/polymorpheus';\nimport { FileStatus } from '../../../interfaces/FileStatus';\n\n/**\n * Компонент ImportDialogComponent предназначен для импорта данных API через диалоговое окно.\n * Позволяет пользователю загружать файлы и обрабатывать их содержимое для создания новых API сервисов.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует реактивные формы для управления загрузкой файлов и обработки данных.\n *\n * @example\n * html\n * \n */\n@Component({\n  selector: 'app-import-dialog',\n  imports: [NgIf, ReactiveFormsModule, TuiAvatar, TuiFiles, TuiLink, NgFor, TuiButton],\n  templateUrl: './import-dialog.component.html',\n  styleUrls: ['./import-dialog.component.css'], // Исправлено с styleUrl на styleUrls\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ImportDialogComponent {\n  /**\n   * Контрол для управления загрузкой файлов.\n   *\n   * @type {FormControl}\n   * @memberof ImportDialogComponent\n   */\n  protected readonly control = new FormControl([]);\n\n  /**\n   * Список загруженных файлов с их статусами.\n   *\n   * @type {FileStatus[]}\n   * @memberof ImportDialogComponent\n   */\n  protected files: FileStatus[] = [];\n\n  /**\n   * Флаг, указывающий, есть ли загруженные файлы.\n   *\n   * @type {boolean}\n   * @default false\n   * @memberof ImportDialogComponent\n   */\n  protected hasFiles = false;\n\n  /**\n   * Массив для хранения обработанных данных API.\n   *\n   * @type {ApiServiceStructure[]}\n   * @memberof ImportDialogComponent\n   */\n  protected processedData: ApiServiceStructure[] = [];\n\n  /**\n   * Контекст диалогового окна.\n   *\n   * @type {TuiDialogContext}\n   * @memberof ImportDialogComponent\n   */\n  private readonly context = injectContext>();\n\n  /**\n   * Конструктор компонента ImportDialogComponent.\n   *\n   * @param cd - Сервис для управления изменением состояния.\n   * @param apiService - Сервис для взаимодействия с репозиторием API.\n   * @param alerts - Сервис для отображения уведомлений.\n   *\n   * @memberof ImportDialogComponent\n   */\n  constructor(\n    private cd: ChangeDetectorRef,\n    private apiService: ApiServiceRepositoryService,\n    private readonly alerts: TuiAlertService\n  ) {\n    this.control.valueChanges.subscribe((files) => {\n      if (files) {\n        // Обновляем только новые файлы\n        const newFiles = files.filter(file => !this.files.some(f => f.file.name === file.name));\n        this.files = [\n          ...this.files,\n          ...newFiles.map(file => ({ file, status: 'loading' as const, errorMessage: '' }))\n        ];\n        this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n        this.readFiles(newFiles);\n      }\n    });\n  }\n\n  /**\n   * Читает содержимое загруженных файлов.\n   *\n   * @param files - Список файлов для чтения.\n   * @private\n   * @memberof ImportDialogComponent\n   */\n  private readFiles(files: File[]): void {\n    files.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = (e: ProgressEvent) => {\n        const text = e.target?.result as string;\n        try {\n          const json = JSON.parse(text);\n          this.updateFileStatus(file, 'normal');\n          this.processJson(json, file.name);\n        } catch (error) {\n          console.error('Ошибка при чтении JSON файла:', error);\n          this.updateFileStatus(file, 'error');\n        }\n      };\n      reader.readAsText(file);\n    });\n  }\n\n  /**\n   * Обновляет статус файла.\n   *\n   * @param file - Файл, статус которого нужно обновить.\n   * @param status - Новый статус файла.\n   * @private\n   * @memberof ImportDialogComponent\n   */\n  private updateFileStatus(file: File, status: 'loading' | 'normal' | 'error'): void {\n    const fileStatus = this.files.find(f => f.file.name === file.name);\n    if (fileStatus) {\n      fileStatus.status = status;\n      this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n      this.cd.markForCheck();\n    }\n  }\n\n  /**\n   * Возвращает текстовое описание статуса файла.\n   *\n   * @param file - Файл, для которого нужно получить статус.\n   * @returns {string} Текстовое описание статуса файла.\n   * @memberof ImportDialogComponent\n   */\n  protected getFileStatusText(file: FileStatus): string {\n    switch (file.status) {\n      case 'loading':\n        return 'Файл на проверке';\n      case 'normal':\n        return 'Файл проверен';\n      case 'error':\n        return 'Ошибка загрузки файла';\n      case 'success':\n        return 'Файл загружен';\n      default:\n        return '';\n    }\n  }\n\n  /**\n   * Возвращает текущий статус файла.\n   *\n   * @param file - Файл, для которого нужно получить статус.\n   * @returns {'loading' | 'normal' | 'error'} Статус файла.\n   * @memberof ImportDialogComponent\n   */\n  protected getFileStatus(file: FileStatus): 'loading' | 'normal' | 'error' {\n    switch (file.status) {\n      case 'loading':\n        return 'loading';\n      case 'normal':\n        return 'normal';\n      case 'error':\n        return 'error';\n      case 'success':\n        return 'normal';\n    }\n  }\n\n  /**\n   * Обрабатывает JSON данные из файла.\n   *\n   * @param json - JSON данные для обработки.\n   * @param fileName - Имя файла.\n   * @private\n   * @memberof ImportDialogComponent\n   */\n  private processJson(json: any, fileName: string): void {\n    const name = fileName.replace(/\\.[^/.]+$/, \"\");\n    const apiServiceStructure: ApiServiceStructure = {\n      name: name,\n      isActive: json.isActive || false,\n      description: json.description || '',\n      entities: json.entities || []\n    };\n    this.processedData.push(apiServiceStructure);\n    console.log('Обработанный JSON:', apiServiceStructure);\n  }\n\n  /**\n   * Отправляет обработанные данные на сервер.\n   *\n   * @remarks\n   * Обновляет статус файлов и отображает уведомления о результатах отправки.\n   *\n   * @memberof ImportDialogComponent\n   */\n  protected submit(): void {\n    if (this.processedData.length > 0) {\n      this.files.filter(f => f.status == 'normal').forEach(file => file.status = 'loading');\n      this.cd.markForCheck();\n\n      this.processedData.forEach(service => {\n        this.apiService.createFullApiService(service).subscribe({\n          next: (response) => {\n            console.log('Сервис успешно создан:', response);\n            const file = this.files.find(f => f.file.name === service.name + '.json');\n            if (file) {\n              file.status = 'success';\n              file.errorMessage = '';\n              this.cd.markForCheck();\n            }\n            this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n            if (this.files.every(file => file.status == 'success')) {\n              this.alerts\n                .open('Файлы успешно загружены', {\n                  appearance: 'success',\n                })\n                .subscribe();\n              this.context.completeWith(false);\n            }\n          },\n          error: (response) => {\n            const file = this.files.find(f => f.file.name === service.name + '.json');\n            if (file) {\n              file.status = 'error';\n              file.errorMessage = `Ошибка при создании сервиса: ${response.error}`;\n              this.cd.markForCheck();\n            }\n            this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n          }\n        });\n      });\n    } else {\n      console.warn('Нет данных для отправки.');\n    }\n  }\n\n  /**\n   * Удаляет файл из списка загруженных.\n   *\n   * @param fileToRemove - Файл, который нужно удалить.\n   * @memberof ImportDialogComponent\n   */\n  protected removeFile(fileToRemove: FileStatus): void {\n    this.files = this.files.filter(file => file !== fileToRemove);\n    this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n\n    const currentFiles = this.control.value ? this.control.value.filter(file => file !== fileToRemove.file) : [];\n    this.control.setValue(currentFiles);\n\n    this.cd.markForCheck();\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n            \n            \n                Файлы готовы к загрузке!\n                \n                \n            \n        \n        \n            \n                \n                \n                    Перетащите файлы сюда или\n                    кликните для загрузки\n                \n            \n        \n    \n\n\n\n    \n        {{ getFileStatusText(file) }}\n        {{ file.errorMessage }}\n        \n    \n\n\n\n    \n        Отправить\n    \n\n\n    \n\n    \n                \n                    ./import-dialog.component.css\n                \n                .content {\n    display: flex;\n    block-size: 10rem;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 1rem;\n}\n\nbutton[tuiIconButton] {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    color: red; /* Красный цвет для кнопки удаления */\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        Файлы готовы к загрузке!                                                                                                                            Перетащите файлы сюда или                    кликните для загрузки                                                    {{ getFileStatusText(file) }}        {{ file.errorMessage }}                        Отправить    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImportDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingComponent.html":{"url":"components/LoadingComponent.html","title":"component - LoadingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoadingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/loading/loading.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент LoadingComponent предназначен для отображения анимации загрузки с изображением.\nИспользуется для индикации процесса загрузки данных или выполнения операций.\nЭтот компонент отображает статическое изображение, которое может быть заменено на анимацию или другой индикатор загрузки.\nПодходит для использования в различных частях приложения, где требуется показать пользователю, что выполняется загрузка.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading\n            \n\n\n\n            \n                styleUrls\n                ./loading.component.css\n            \n\n\n\n            \n                templateUrl\n                ./loading.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"assets/dora.png\"\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/loading/loading.component.ts:29\n                        \n                    \n\n            \n                \n                    Путь к изображению, отображаемому во время загрузки.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Компонент LoadingComponent предназначен для отображения анимации загрузки с изображением.\n * Используется для индикации процесса загрузки данных или выполнения операций.\n *\n * @remarks\n * Этот компонент отображает статическое изображение, которое может быть заменено на анимацию или другой индикатор загрузки.\n * Подходит для использования в различных частях приложения, где требуется показать пользователю, что выполняется загрузка.\n *\n * @example\n * html\n * \n */\n@Component({\n  selector: 'app-loading',\n  imports: [],\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.css'], // Исправлено с styleUrl на styleUrls\n})\nexport class LoadingComponent {\n  /**\n   * Путь к изображению, отображаемому во время загрузки.\n   *\n   * @type {string}\n   * @default \"assets/dora.png\"\n   * @memberof LoadingComponent\n   */\n  path: string = \"assets/dora.png\";\n}\n\n    \n\n    \n        \n    \n\n    \n\n    \n                \n                    ./loading.component.css\n                \n                .loading {\n    display: flex;\n    justify-content: center; \n    align-items: center;    \n    height: 100vh;\n}\n\n.loader {\n    width: 100px;\n    height: 46px;\n    position: relative;\n    border-bottom: 8px solid #0056a6; /* Увеличиваем толщину линии */\n    border-top: 8px solid #0056a6;    /* Увеличиваем толщину линии */\n    box-sizing: border-box;\n}\n\n.loader:before, .loader:after {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    top: -20px;\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    background: #fff;\n    border: 8px solid #0056a6; /* Увеличиваем толщину линии */\n    box-sizing: border-box;\n    animation: slide 1s infinite ease-in-out alternate;\n}\n\n.loader:after {\n    top: 20px;\n    animation-direction: alternate-reverse;\n}\n\n@keyframes slide {\n    0%, 20% { transform: translateX(70px); }\n    80%, 100% { transform: translateX(-1px); }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/pages/page-not-found/page-not-found.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            TuiButton\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n            \n                styleUrl\n                ./page-not-found.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cd: ChangeDetectorRef, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/pages/page-not-found/page-not-found.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ChangeDetectorRef, Component } from '@angular/core';\nimport { ActivatedRoute, RouterModule } from '@angular/router';\nimport { AlertDeleteComponent } from \"../../components/alert-delete/alert-delete.component\";\nimport { HeaderComponent } from '../../components/header/header.component';\nimport { TuiButton } from '@taiga-ui/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  imports: [\n    CommonModule,\n     TuiButton,\n     RouterModule\n],\n  templateUrl: './page-not-found.component.html',\n  styleUrl: './page-not-found.component.css'\n})\nexport class PageNotFoundComponent {\n\nconstructor(\n   private cd: ChangeDetectorRef,\n    private route: ActivatedRoute,\n  ) {}\n}\n\n    \n\n    \n        \n\n\n\n    \n    \n\n\n\n    \n        \n            Ой!🙈🍌\n            Страница не найдена\n            \n            На главную\n        \n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Ой!🙈🍌            Страница не найдена                        На главную            '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaginationComponent.html":{"url":"components/PaginationComponent.html","title":"component - PaginationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PaginationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/pagination/pagination.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент PaginationComponent предназначен для управления пагинацией в Angular-приложениях.\nОн предоставляет удобный интерфейс для навигации по страницам с данными.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует реактивные формы для управления состоянием пагинации.\nExample :HTML:\n```html\n\nExample :TypeScript:\n```typescript\nonPageChange(page: number): void {\n  console.log('Текущая страница:', page);\n}\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pagination\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            TuiInputSliderModule\n                            TuiPagination\n                            TuiTextfieldControllerModule\n                \n            \n\n            \n                styleUrls\n                ./pagination.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pagination.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToPage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                itemsPerPage\n                            \n                            \n                                totalItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    totalPages\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentPage\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/pagination/pagination.component.ts:76\n                            \n                        \n                \n                    \n                        Текущая страница.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        itemsPerPage\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 16\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/pagination/pagination.component.ts:68\n                            \n                        \n                \n                    \n                        Количество элементов на одной странице.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        totalItems\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/pagination/pagination.component.ts:60\n                            \n                        \n                \n                    \n                        Общее количество элементов.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        pageChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/pagination/pagination.component.ts:83\n                            \n                        \n                \n                    \n                        Событие, которое срабатывает при изменении страницы.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToPage\n                        \n                    \n                \n            \n            \n                \ngoToPage(page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/pagination/pagination.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Переходит на указанную страницу.\nExample :goToPage(2); // Переходит на вторую страницу.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНомер страницы, на которую нужно перейти.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        totalPages\n                    \n                \n\n                \n                    \n                        gettotalPages()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/pagination/pagination.component.ts:91\n                                \n                            \n                    \n                        \n                                Возвращает общее количество страниц.\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TuiPagination } from '@taiga-ui/kit';\nimport {\n  TuiInputSliderModule,\n  TuiTextfieldControllerModule,\n} from '@taiga-ui/legacy';\n\n/**\n * Компонент PaginationComponent предназначен для управления пагинацией в Angular-приложениях.\n * Он предоставляет удобный интерфейс для навигации по страницам с данными.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует реактивные формы для управления состоянием пагинации.\n *\n * @example\n * HTML:\n * ```html\n * \n * \n * ```\n *\n * TypeScript:\n * ```typescript\n * onPageChange(page: number): void {\n *   console.log('Текущая страница:', page);\n * }\n * ```\n */\n@Component({\n  selector: 'app-pagination',\n  imports: [\n    FormsModule,\n    TuiInputSliderModule,\n    TuiPagination,\n    TuiTextfieldControllerModule,\n  ],\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaginationComponent {\n  /**\n   * Общее количество элементов.\n   * @type {number}\n   * @default 0\n   * @memberof PaginationComponent\n   */\n  @Input() totalItems: number = 0;\n\n  /**\n   * Количество элементов на одной странице.\n   * @type {number}\n   * @default 16\n   * @memberof PaginationComponent\n   */\n  @Input() itemsPerPage: number = 16;\n\n  /**\n   * Текущая страница.\n   * @type {number}\n   * @default 1\n   * @memberof PaginationComponent\n   */\n  @Input() currentPage: number = 1;\n\n  /**\n   * Событие, которое срабатывает при изменении страницы.\n   * @type {EventEmitter}\n   * @memberof PaginationComponent\n   */\n  @Output() pageChange = new EventEmitter();\n\n  /**\n   * Возвращает общее количество страниц.\n   * @readonly\n   * @type {number}\n   * @memberof PaginationComponent\n   */\n  get totalPages(): number {\n    return Math.ceil(this.totalItems / this.itemsPerPage);\n  }\n\n  /**\n   * Переходит на указанную страницу.\n   * @param {number} page - Номер страницы, на которую нужно перейти.\n   * @memberof PaginationComponent\n   * @example\n   * goToPage(2); // Переходит на вторую страницу.\n   */\n  goToPage(page: number): void {\n    if (page >= 1 && page \n    \n\n    \n        Page {{ currentPage }}\n\n\n\n    \n\n    \n                \n                    ./pagination.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Page {{ currentPage }}'\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaginationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SwitchComponent.html":{"url":"components/SwitchComponent.html","title":"component - SwitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SwitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/switch/switch.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент SwitchComponent представляет собой переключатель, который позволяет пользователю включать или выключать определенную функцию.\nОн интегрируется с Taiga UI для создания стилизованного и интерактивного интерфейса.\nЭтот компонент использует реактивные формы для управления состоянием переключателя.\nПоддерживает валидацию и может быть настроен для отображения иконки и изменения внешнего вида.\nExample :HTML:\n```html\nExample :TypeScript:\n```typescript\nisFeatureEnabled: boolean = false;\n\nonToggle(value: boolean): void {\n  this.isFeatureEnabled = value;\n  console.log('Функция переключена:', value);\n}\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            tuiSwitchOptionsProvider({ showIcons: false, appearance: () =>  })\n                \n            \n\n\n            \n                selector\n                app-switch\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiSwitch\n                \n            \n\n            \n                styleUrls\n                ./switch.component.css\n            \n\n\n\n            \n                templateUrl\n                ./switch.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                invalidFalse\n                            \n                            \n                                    Protected\n                                    Readonly\n                                invalidTrue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                onToggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/switch/switch.component.ts:54\n                            \n                        \n                \n                    \n                        Значение переключателя.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/switch/switch.component.ts:61\n                            \n                        \n                \n                    \n                        Событие, которое срабатывает при переключении состояния.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/switch/switch.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Инициализация компонента.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToggle\n                        \n                    \n                \n            \n            \n                \nonToggle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/switch/switch.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Обработчик события переключения.\nExample :onToggle(); // Вызывает событие toggle с текущим значением переключателя.\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        invalidFalse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(false, () => ({\n    invalid: true,\n  }))\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/switch/switch.component.ts:77\n                        \n                    \n\n            \n                \n                    Контрол для валидации состояния переключателя (ложь).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        invalidTrue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(true, () => ({\n    invalid: true,\n  }))\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/switch/switch.component.ts:68\n                        \n                    \n\n            \n                \n                    Контроль для валидации состояния переключателя (истина).\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  OnInit,\n} from '@angular/core';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TuiSwitch, tuiSwitchOptionsProvider } from '@taiga-ui/kit';\n\n/**\n * Компонент SwitchComponent представляет собой переключатель, который позволяет пользователю включать или выключать определенную функцию.\n * Он интегрируется с Taiga UI для создания стилизованного и интерактивного интерфейса.\n *\n * @remarks\n * Этот компонент использует реактивные формы для управления состоянием переключателя.\n * Поддерживает валидацию и может быть настроен для отображения иконки и изменения внешнего вида.\n *\n * @example\n * HTML:\n * ```html\n * \n * ```\n *\n * TypeScript:\n * ```typescript\n * isFeatureEnabled: boolean = false;\n *\n * onToggle(value: boolean): void {\n *   this.isFeatureEnabled = value;\n *   console.log('Функция переключена:', value);\n * }\n * ```\n */\n@Component({\n  selector: 'app-switch',\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, TuiSwitch],\n  templateUrl: './switch.component.html',\n  styleUrls: ['./switch.component.css'],\n  providers: [\n    tuiSwitchOptionsProvider({ showIcons: false, appearance: () => 'primary' }),\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SwitchComponent implements OnInit {\n  /**\n   * Значение переключателя.\n   * @type {boolean}\n   * @default false\n   * @memberof SwitchComponent\n   */\n  @Input() value: boolean = false;\n\n  /**\n   * Событие, которое срабатывает при переключении состояния.\n   * @type {EventEmitter}\n   * @memberof SwitchComponent\n   */\n  @Output() toggle: EventEmitter = new EventEmitter();\n\n  /**\n   * Контроль для валидации состояния переключателя (истина).\n   * @type {FormControl}\n   * @memberof SwitchComponent\n   */\n  protected readonly invalidTrue = new FormControl(true, () => ({\n    invalid: true,\n  }));\n\n  /**\n   * Контрол для валидации состояния переключателя (ложь).\n   * @type {FormControl}\n   * @memberof SwitchComponent\n   */\n  protected readonly invalidFalse = new FormControl(false, () => ({\n    invalid: true,\n  }));\n\n  /**\n   * Инициализация компонента.\n   * @memberof SwitchComponent\n   */\n  public ngOnInit(): void {\n    this.invalidTrue.markAsTouched();\n    this.invalidFalse.markAsTouched();\n  }\n\n  /**\n   * Обработчик события переключения.\n   * @memberof SwitchComponent\n   * @example\n   * onToggle(); // Вызывает событие toggle с текущим значением переключателя.\n   */\n  onToggle(): void {\n    this.toggle.emit(this.value);\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./switch.component.css\n                \n                .switch {\n    position: relative;\n    display: inline-block;\n    width: 40.8px; /* 34px * 1.2 */\n    height: 24px;  /* 20px * 1.2 */\n}\n\n.switch input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n}\n\n.slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #f44336;\n    transition: .4s;\n    border-radius: 34px; /* Можно оставить без изменений, если не хотите менять форму */\n}\n\n.slider:before {\n    position: absolute;\n    content: \"\";\n    height: 16.8px; /* 14px * 1.2 */\n    width: 16.8px;  /* 14px * 1.2 */\n    left: 4px;      /* 3px * 1.2 */\n    bottom: 4px;    /* 3px * 1.2 */\n    background-color: white;\n    transition: .4s;\n    border-radius: 50%;\n}\n\ninput:checked + .slider {\n    background-color: #4caf50;\n}\n\ninput:checked + .slider:before {\n    transform: translateX(16.8px); /* 14px * 1.2 */\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SwitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/apiServiceShortStructure.html":{"url":"interfaces/apiServiceShortStructure.html","title":"interface - apiServiceShortStructure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  apiServiceShortStructure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/apiServiceShortStructure.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface apiServiceShortStructure {\n  name: string;\n  isActive: boolean;\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/components/alert-delete/alert-delete.component.ts\n            \n            component\n            AlertDeleteComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/data/components/api-dialog/api-dialog.component.ts\n            \n            component\n            ApiDialogComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/data/components/back-button/back-button.component.ts\n            \n            component\n            BackButtonComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/data/components/card-api/card-api.component.ts\n            \n            component\n            CardApiComponent\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/data/components/card-endpoint/card-endpoint.component.ts\n            \n            component\n            CardEndpointComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/data/components/card-entity/card-entity.component.ts\n            \n            component\n            CardEntityComponent\n            \n                82 %\n                (14/17)\n            \n        \n        \n            \n                \n                src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts\n            \n            component\n            EndpointDialogComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/data/components/entity-dialog/entity-dialog.component.ts\n            \n            component\n            EntityDialogComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/data/components/export-api-button/export-api-button.component.ts\n            \n            component\n            ExportApiButtonComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/data/components/filter-by-input/filter-by-input.component.ts\n            \n            component\n            FilterByInputComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/data/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/data/components/icon-trash/icon-trash.component.ts\n            \n            component\n            IconTrashComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/data/components/import-dialog/import-dialog.component.ts\n            \n            component\n            ImportDialogComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/data/components/loading/loading.component.ts\n            \n            component\n            LoadingComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/data/components/pagination/pagination.component.ts\n            \n            component\n            PaginationComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/data/components/switch/switch.component.ts\n            \n            component\n            SwitchComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts\n            \n            component\n            ApiEndpointListComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/data/pages/card-api-list/card-api-list.component.ts\n            \n            component\n            CardApiListComponent\n            \n                0 %\n                (0/46)\n            \n        \n        \n            \n                \n                src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts\n            \n            component\n            EndpointCardListComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/data/pages/entity-card-list/entity-card-list.component.ts\n            \n            component\n            EntityCardListComponent\n            \n                0 %\n                (0/34)\n            \n        \n        \n            \n                \n                src/app/data/pages/error-display/error-display.component.ts\n            \n            component\n            ErrorDisplayComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/data/pages/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/interceptors/http-error.interceptor.ts\n            \n            interceptor\n            HttpErrorInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/ApiServiceStructure.ts\n            \n            interface\n            ApiServiceStructure\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/Endpoint.ts\n            \n            interface\n            Endpoint\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/Entity.ts\n            \n            interface\n            Entity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/EntityShort.ts\n            \n            interface\n            EntityShort\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/FileStatus.ts\n            \n            interface\n            FileStatus\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/apiServiceShortStructure.ts\n            \n            interface\n            apiServiceShortStructure\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/repositories/api-service-repository.service.ts\n            \n            injectable\n            ApiServiceRepositoryService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/repositories/endpoint-repository.service.ts\n            \n            injectable\n            EndpointRepositoryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/repositories/entity-repository.service.ts\n            \n            injectable\n            EntityRepositoryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/api-hub-service.service.ts\n            \n            injectable\n            ApiHubServiceService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/api-service.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/endpoint-service.service.ts\n            \n            injectable\n            EndpointService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/entity-service.service.ts\n            \n            injectable\n            EntityService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/error-handler.service.ts\n            \n            injectable\n            ErrorHandlerService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^19.1.0\n        \n            @angular/common : ^19.1.0\n        \n            @angular/compiler : ^19.1.0\n        \n            @angular/core : ^19.1.0\n        \n            @angular/forms : ^19.1.0\n        \n            @angular/platform-browser : ^19.1.0\n        \n            @angular/platform-browser-dynamic : ^19.1.0\n        \n            @angular/router : ^19.1.0\n        \n            @microsoft/signalr : ^8.0.7\n        \n            @taiga-ui/addon-charts : ^4.21.0\n        \n            @taiga-ui/addon-commerce : ^4.21.0\n        \n            @taiga-ui/addon-doc : ^4.21.0\n        \n            @taiga-ui/addon-mobile : ^4.21.0\n        \n            @taiga-ui/addon-table : ^4.21.0\n        \n            @taiga-ui/cdk : ^4.21.0\n        \n            @taiga-ui/core : ^4.21.0\n        \n            @taiga-ui/event-plugins : ^4.0.2\n        \n            @taiga-ui/experimental : ^4.21.0\n        \n            @taiga-ui/icons : ^4.22.0\n        \n            @taiga-ui/icons-fontawesome : ^4.22.0\n        \n            @taiga-ui/icons-material : ^4.22.0\n        \n            @taiga-ui/kit : ^4.21.0\n        \n            @taiga-ui/layout : ^4.21.0\n        \n            @taiga-ui/legacy : ^4.24.0\n        \n            jszip : ^3.10.1\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nApiEasier\nThis project was generated using Angular CLI version 19.1.3.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    23 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideHttpClient(),\n    { provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true },\n    provideAnimations(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(APP_ROUTES),\n    NG_EVENT_PLUGINS,\n  ],\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
