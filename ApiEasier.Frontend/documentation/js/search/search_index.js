var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AlertDeleteComponent.html",[0,0.033,1,0.639]],["body/components/AlertDeleteComponent.html",[0,0.055,1,1.127,2,0.952,3,0.217,4,0.185,5,0.83,6,0.83,7,0.83,8,0.185,9,4.354,10,3.461,11,3.324,12,0.83,13,1.424,14,1.424,15,1.396,16,3.157,17,1.018,18,2.595,19,1.018,20,5.129,21,2.327,22,5.129,23,0.185,24,0.659,25,2.784,26,2.131,27,3.238,28,0.679,29,0.83,30,0.025,31,3.238,32,0.952,33,0.425,34,3.916,35,0.661,36,3.916,37,1.369,38,1.66,39,2.642,40,0.351,41,0.203,42,3.916,43,0.911,44,2.41,45,3.916,46,0.952,47,1.209,48,3.324,49,2.05,50,3.324,51,3.324,52,1.209,53,0.284,54,0.387,55,2.327,56,0.83,57,1.087,58,1.087,59,0.83,60,1.287,61,0.83,62,0.284,63,0.83,64,0.727,65,0.658,66,1.087,67,1.287,68,0.727,69,0.62,70,1.287,71,0.727,72,0.83,73,0.727,74,0.83,75,1.087,76,0.727,77,1.283,78,0.83,79,0.777,80,0.727,81,0.83,82,0.727,83,0.83,84,0.727,85,0.727,86,0.777,87,0.556,88,0.727,89,0.727,90,0.545,91,0.83,92,0.727,93,0.727,94,0.83,95,0.83,96,0.727,97,0.83,98,0.727,99,0.83,100,0.83,101,0.679,102,0.727,103,0.83,104,0.727,105,0.777,106,0.83,107,0.727,108,0.83,109,0.727,110,0.727,111,0.777,112,0.83,113,0.017,114,0.017]],["title/components/ApiDialogComponent.html",[0,0.033,64,0.639]],["body/components/ApiDialogComponent.html",[0,0.048,1,0.552,2,0.788,3,0.164,4,0.141,5,0.63,6,0.63,7,0.63,8,0.141,12,0.63,13,1.392,14,1.392,15,0.63,17,0.843,19,0.843,23,0.141,24,0.546,25,3.267,26,2.215,27,2.804,28,0.736,29,1.05,30,0.025,31,2.804,32,0.552,33,0.701,35,0.647,39,2.006,40,0.381,41,0.242,43,0.892,44,1.829,46,0.788,49,1.556,53,0.235,54,0.294,56,0.63,57,0.9,58,0.9,59,0.63,60,1.146,61,0.63,62,0.329,63,0.63,64,1.003,65,0.728,66,1.146,67,1.146,68,0.552,69,0.537,70,1.146,71,0.552,72,0.63,73,0.552,74,0.63,75,0.9,76,0.552,77,1.18,78,0.63,79,0.59,80,0.552,81,0.63,82,0.552,83,0.63,84,0.552,85,0.552,86,0.59,87,0.461,88,0.552,89,0.552,90,0.413,91,0.63,92,0.552,93,0.552,94,0.63,95,0.63,96,0.552,97,0.63,98,0.552,99,0.63,100,0.63,101,0.515,102,0.552,103,0.63,104,0.552,105,0.59,106,0.63,107,0.552,108,0.63,109,0.552,110,0.552,111,0.59,112,0.63,113,0.014,114,0.014,115,1.039,116,5.552,117,4.9,118,1.682,119,1.801,120,3.049,121,3.712,122,2.101,123,3.343,124,3.343,125,3.712,126,3.712,127,3.712,128,3.343,129,1.485,130,3.049,131,2.613,132,3.343,133,4.954,134,0.983,135,3.712,136,4.205,137,0.637,138,3.604,139,3.181,140,3.181,141,2.866,142,2.613,143,3.712,144,2.411,145,3.604,146,5.608,147,2.972,148,0.873,149,0.873,150,2.523,151,0.811,152,1.415,153,3.181,154,3.921,155,2.523,156,3.181,157,4.05,158,2.523,159,1.348,160,4.246,161,2.523,162,2.972,163,2.523,164,3.604,165,3.604,166,4.588,167,2.972,168,3.181,169,2.972,170,3.604,171,2.523,172,2.227,173,2.972,174,2.227,175,2.523,176,2.523,177,1.348,178,1.829,179,2.227,180,1.348,181,1.682,182,1.233,183,0.918,184,0.48,185,1.023,186,2.523,187,2.227,188,2.006,189,2.227,190,2.227,191,2.227,192,1.446,193,1.039,194,0.976,195,1.968,196,0.976,197,2.227,198,2.227,199,3.181,200,3.712,201,2.227,202,2.006,203,2.006,204,2.227,205,2.523,206,2.972]],["title/components/ApiEndpointListComponent.html",[0,0.033,68,0.639]],["body/components/ApiEndpointListComponent.html",[0,0.031,1,0.28,2,0.465,3,0.083,4,0.071,5,0.319,6,0.319,7,0.319,8,0.071,12,0.319,13,1.275,14,1.288,15,0.319,17,0.497,18,1.459,19,0.497,23,0.071,24,0.322,28,0.778,29,0.952,30,0.025,32,1.039,33,0.662,35,0.59,37,0.527,38,0.639,40,0.135,41,0.243,43,0.483,46,0.465,47,1.157,52,0.465,53,0.139,54,0.149,55,2.037,56,0.319,57,0.531,58,0.531,59,0.319,60,0.882,61,0.319,62,0.303,63,0.319,64,0.28,65,0.679,66,0.531,67,0.794,68,0.696,69,0.767,70,0.794,71,0.28,72,0.319,73,0.28,74,0.319,75,0.531,76,0.28,77,0.891,78,0.319,79,0.299,80,0.28,81,0.319,82,0.28,83,0.319,84,0.28,85,0.28,86,0.299,87,0.629,88,0.28,89,0.28,90,0.762,91,0.319,92,0.28,93,0.28,94,0.319,95,0.319,96,0.696,97,0.319,98,0.28,99,0.794,100,0.319,101,0.261,102,0.696,103,0.319,104,0.28,105,0.299,106,0.319,107,0.28,108,0.319,109,0.696,110,0.833,111,0.299,112,0.319,113,0.008,114,0.008,115,0.527,122,1.364,129,0.876,134,1.26,137,0.376,148,0.835,149,0.835,151,0.822,152,1.404,159,1.887,183,0.465,184,0.243,185,0.363,193,0.876,194,1.057,195,0.995,196,0.495,207,5.227,208,5.227,209,1.129,210,1.542,211,2.17,212,2.73,213,1.137,214,1.137,215,2.808,216,3.216,217,1.684,218,1.507,219,2.127,220,2.17,221,2.807,222,1.565,223,3.216,224,2.355,225,2.73,226,2.505,227,2.505,228,2.505,229,2.505,230,3.748,231,3.181,232,2.529,233,2.505,234,3.216,235,2.505,236,2.505,237,0.531,238,1.279,239,2.529,240,1.89,241,2.316,242,2.41,243,1.824,244,2.694,245,2.694,246,1.82,247,1.824,248,1.125,249,2.127,250,1.7,251,2.505,252,0.915,253,1.507,254,1.684,255,2.505,256,1.507,257,1.418,258,2.505,259,1.507,260,2.505,261,1.231,262,1.507,263,3.216,264,1.507,265,1.507,266,1.507,267,2.505,268,1.507,269,3.512,270,1.507,271,1.507,272,2.505,273,1.507,274,2.505,275,1.507,276,4.23,277,1.507,278,0.934,279,1.824,280,1.279,281,1.279,282,1.279,283,2.517,284,1.279,285,2.17,286,1.279,287,1.279,288,0.437,289,1.279,290,1.017,291,1.279,292,1.129,293,0.927,294,0.598,295,1.565,296,1.129,297,1.129,298,1.279,299,2.127,300,1.691,301,1.507,302,1.279,303,1.877,304,1.507,305,1.507,306,1.507,307,1.507,308,1.7,309,1.507,310,2.127,311,2.306,312,1.507,313,1.507,314,2.127,315,1.507,316,1.279,317,1.279,318,1.507,319,1.507,320,1.507,321,1.507,322,1.507,323,1.507,324,1.507,325,1.507,326,0.927,327,1.507,328,1.507,329,0.927,330,2.127,331,1.279,332,1.507,333,1.507,334,1.507,335,2.505,336,1.507,337,1.507,338,1.507,339,1.279,340,1.507,341,1.565,342,1.82,343,1.507,344,1.129,345,1.129,346,3.748,347,1.507,348,1.129,349,1.507,350,2.73,351,2.161,352,2.505,353,2.505,354,2.505,355,2.127,356,3.283,357,2.179,358,1.279,359,3.216,360,2.709,361,2.492,362,1.507,363,2.824,364,2.73,365,3.039,366,2.82,367,1.507,368,1.979,369,1.507,370,2.929,371,2.763,372,3.216,373,3.748,374,2.355,375,2.505,376,1.507,377,2.121,378,1.129,379,2.492,380,3.445,381,2.541,382,2.306,383,1.979,384,2.73,385,2.931,386,2.505,387,3.161,388,2.492,389,3.216,390,2.024,391,2.763,392,2.127,393,2.351,394,4.16,395,1.507,396,1.507,397,0.853,398,1.684,399,1.507,400,1.507,401,1.507,402,2.306,403,1.418,404,1.507,405,1.507,406,1.507,407,1.507,408,1.507,409,1.507,410,0.927,411,1.279,412,1.542,413,2.179,414,1.542,415,1.82,416,2.306,417,1.507,418,1.279,419,3.364,420,1.507,421,1.017,422,1.507,423,1.542,424,1.82,425,1.279,426,1.507,427,0.927,428,1.279,429,2.306,430,1.507,431,1.507,432,2.306,433,1.279,434,2.127,435,2.127,436,1.877,437,3.181,438,3.181,439,1.507,440,1.507,441,1.507,442,2.73,443,1.542,444,1.418,445,2.306,446,1.542,447,1.418,448,2.807,449,0.927,450,4.16,451,1.507,452,2.73,453,3.117,454,0.927,455,1.017,456,2.505,457,1.507,458,1.507,459,1.507,460,2.127,461,1.691,462,1.507,463,1.017,464,1.219,465,1.219,466,1.542,467,1.507,468,2.505,469,1.507,470,1.507,471,1.129,472,1.507,473,1.279,474,1.129,475,1.279,476,1.017,477,1.979,478,1.507,479,0.789,480,1.017,481,1.017,482,0.927]],["title/injectables/ApiHubServiceService.html",[483,0.882,484,2.578]],["body/injectables/ApiHubServiceService.html",[3,0.216,4,0.185,8,0.185,23,0.27,24,0.659,28,0.991,29,1.212,30,0.025,32,0.726,33,0.701,35,0.6,40,0.351,41,0.226,52,1.208,53,0.216,54,0.387,62,0.348,65,0.658,113,0.017,114,0.017,134,1.341,137,0.769,148,0.631,149,0.631,151,0.587,152,0.884,182,1.962,184,0.631,185,1.234,193,1.368,195,2.502,196,1.285,237,1.212,241,2.494,252,0.858,278,1.488,294,1.553,330,3.32,331,3.32,423,2.407,436,2.93,483,1.314,484,3.84,485,1.774,486,4.934,487,5.735,488,2.407,489,5.717,490,3.858,491,5.717,492,5.717,493,5.125,494,5.125,495,5.125,496,3.911,497,3.911,498,1.878,499,5.717,500,3.911,501,5.125,502,3.911,503,5.125,504,3.911,505,2.782,506,5.125,507,3.911,508,5.717,509,3.32,510,3.911,511,1.903,512,1.774,513,5.125,514,3.911,515,3.911,516,3.911,517,3.911,518,3.911,519,3.911,520,3.911,521,3.32,522,3.32,523,3.911,524,3.911,525,3.911,526,3.911,527,3.911,528,3.911,529,3.911,530,3.911,531,5.717,532,5.717,533,3.911,534,5.717,535,3.911,536,3.911,537,3.154,538,5.125,539,5.717,540,3.911,541,3.911,542,3.911,543,3.911,544,3.911,545,3.911,546,3.911]],["title/injectables/ApiService.html",[241,1.675,483,0.882]],["body/injectables/ApiService.html",[3,0.193,4,0.165,8,0.165,16,2.148,23,0.165,24,0.611,28,0.605,29,0.74,30,0.025,32,1.002,33,0.724,35,0.644,40,0.313,41,0.257,43,0.524,46,0.648,47,1.79,52,1.078,53,0.193,54,0.345,62,0.365,65,0.379,90,0.661,113,0.016,114,0.016,134,1.311,137,0.713,148,1.052,149,1.052,151,0.977,182,1.858,184,0.563,185,1.569,194,1.147,237,1.007,240,1.386,241,2.311,248,1.888,252,1.02,261,1.904,278,1.683,283,1.698,288,1.013,294,2.652,483,1.218,485,1.583,486,5.05,488,2.148,490,3.644,505,3.392,511,1.698,512,1.583,537,2.923,547,4.583,548,4.032,549,4.032,550,4.92,551,4.032,552,2.923,553,4.583,554,4.583,555,2.615,556,4.343,557,3.644,558,3.035,559,4.75,560,3.559,561,2.962,562,3.49,563,4.032,564,3.49,565,4.032,566,3.49,567,3.567,568,3.49,569,4.032,570,3.49,571,3.205,572,4.149,573,3.49,574,2.962,575,3.49,576,2.962,577,3.49,578,3.559,579,2.148,580,2.355,581,2.355,582,2.355,583,2.355,584,4.795,585,3.49,586,4.795,587,4.795,588,3.49,589,4.75,590,2.355,591,3.49,592,3.49,593,2.615,594,3.49,595,2.355,596,2.355,597,1.22,598,1.48,599,2.355]],["title/injectables/ApiServiceRepositoryService.html",[243,1.675,483,0.882]],["body/injectables/ApiServiceRepositoryService.html",[3,0.222,4,0.19,8,0.19,23,0.19,30,0.025,32,1.074,33,0.728,35,0.606,40,0.359,41,0.262,52,1.238,53,0.222,54,0.396,62,0.371,65,0.435,113,0.018,114,0.018,137,0.782,148,1.07,149,1.07,151,0.994,182,1.923,183,1.238,184,0.647,185,1.596,237,0.849,241,3.166,243,2.534,252,1.041,261,2.012,278,1.778,289,3.402,290,2.705,294,2.802,483,1.335,485,1.818,505,3.422,511,1.95,512,1.818,537,3.205,547,4.91,548,4.42,549,4.42,550,5.199,551,4.42,553,4.91,554,4.91,561,3.402,563,4.42,565,4.42,567,3.56,569,4.42,574,3.402,576,3.402,600,5.762,601,2.705,602,4.008,603,4.008,604,4.008,605,3.003,606,4.008,607,4.008,608,4.008,609,3.003,610,4.008,611,1.818,612,4.008,613,4.008,614,4.008,615,4.008,616,4.008,617,4.008,618,4.008]],["title/interfaces/ApiServiceStructure.html",[261,1.131,619,1.131]],["body/interfaces/ApiServiceStructure.html",[3,0.269,4,0.23,8,0.23,23,0.23,24,0.756,30,0.024,32,1.283,41,0.266,53,0.372,62,0.382,69,0.638,87,0.712,113,0.02,114,0.02,182,1.413,184,1.021,222,3.196,250,2.208,252,1.072,261,1.933,278,2.024,619,2.209,620,2.549,621,2.755,622,2.755,623,3.521,624,2.755,625,2.369]],["title/components/AppComponent.html",[0,0.033,71,0.639]],["body/components/AppComponent.html",[0,0.057,1,0.772,2,0.99,3,0.23,4,0.197,5,0.882,6,0.882,7,0.882,8,0.197,12,0.882,13,1.43,14,1.43,15,0.882,17,1.059,19,1.059,21,2.42,23,0.197,24,0.686,28,0.721,29,0.882,30,0.024,33,0.451,35,0.614,40,0.373,41,0.164,43,0.624,46,0.772,53,0.295,54,0.411,56,0.882,57,1.131,58,1.131,59,0.882,60,1.316,61,0.882,62,0.295,63,0.882,64,0.772,65,0.674,66,1.131,67,1.316,68,0.772,69,0.639,70,1.316,71,1.153,72,0.882,73,0.772,74,0.882,75,1.131,76,0.772,77,1.304,78,0.882,79,0.826,80,0.772,81,0.882,82,0.772,83,0.882,84,0.772,85,0.772,86,0.826,87,0.579,88,0.772,89,0.772,90,0.579,91,0.882,92,0.772,93,0.772,94,0.882,95,0.882,96,0.772,97,0.882,98,0.772,99,0.882,100,0.882,101,0.721,102,0.772,103,0.882,104,0.772,105,0.826,106,0.882,107,0.772,108,0.882,109,0.772,110,0.772,111,0.826,112,0.882,113,0.018,114,0.018,217,3.084,252,0.624,288,1.208,512,2.42,626,3.531,627,5.889,628,5.889,629,5.334,630,5.334,631,5.889,632,4.528,633,4.16]],["title/components/BackButtonComponent.html",[0,0.033,73,0.639]],["body/components/BackButtonComponent.html",[0,0.055,1,0.727,2,0.952,3,0.217,4,0.185,5,0.83,6,0.83,7,0.83,8,0.185,12,0.83,13,1.424,14,1.424,15,0.83,17,0.777,19,1.018,21,2.327,23,0.185,30,0.025,33,0.556,35,0.6,37,1.369,40,0.351,41,0.155,53,0.284,54,0.387,56,0.83,57,1.087,58,1.087,59,0.83,60,1.287,61,0.83,62,0.316,63,0.83,64,0.727,65,0.658,66,1.087,67,1.287,68,0.727,69,0.62,70,1.287,71,0.727,72,0.83,73,1.127,74,1.396,75,1.087,76,0.727,77,1.283,78,0.83,79,0.777,80,0.727,81,0.83,82,0.727,83,0.83,84,0.727,85,0.727,86,0.777,87,0.556,88,0.727,89,0.727,90,0.714,91,0.83,92,0.727,93,0.727,94,0.83,95,0.83,96,0.727,97,0.83,98,0.727,99,0.83,100,0.83,101,0.679,102,0.727,103,0.83,104,0.727,105,0.777,106,0.83,107,0.727,108,0.83,109,0.727,110,0.727,111,0.777,112,0.83,113,0.017,114,0.017,134,0.777,137,0.77,148,0.632,149,0.632,151,0.588,152,1.159,195,2.272,237,0.83,240,2.616,288,1.137,326,2.41,329,2.41,374,2.903,611,1.776,634,4.855,635,4.286,636,2.934,637,4.354,638,4.354,639,5.152,640,3.916,641,4.844,642,3.916,643,3.916,644,3.916,645,3.916,646,3.916,647,3.916,648,3.916,649,3.916,650,3.916,651,5.129]],["title/components/CardApiComponent.html",[0,0.033,76,0.639]],["body/components/CardApiComponent.html",[0,0.045,1,0.406,2,0.627,3,0.121,4,0.103,5,0.463,6,0.463,7,0.463,8,0.103,12,0.463,13,1.346,14,1.346,15,0.463,17,0.671,18,1.873,19,0.671,23,0.103,24,0.434,26,1.538,28,0.585,29,0.716,30,0.025,32,0.766,33,0.636,35,0.613,37,1.181,38,0.927,40,0.196,41,0.21,43,0.328,46,0.406,47,1.434,53,0.228,54,0.216,55,2.107,56,0.463,57,0.716,58,0.716,59,0.463,60,0.985,61,0.463,62,0.257,63,0.463,64,0.627,65,0.672,66,0.716,67,0.985,68,0.406,69,0.448,70,0.985,71,0.406,72,0.463,73,0.406,74,0.463,75,0.716,76,0.862,77,1.245,78,0.463,79,0.434,80,0.406,81,0.463,82,0.406,83,0.463,84,0.406,85,0.406,86,0.434,87,0.366,88,0.406,89,0.406,90,0.816,91,0.463,92,0.862,93,0.406,94,0.463,95,0.463,96,0.406,97,0.463,98,0.862,99,0.716,100,0.463,101,0.379,102,0.406,103,0.463,104,0.406,105,0.434,106,0.463,107,0.406,108,0.463,109,0.862,110,0.406,111,0.434,112,0.463,113,0.011,114,0.011,115,0.764,117,1.638,119,1.751,122,1.751,129,1.181,134,1.054,137,0.507,144,2.444,148,0.545,149,0.545,151,0.62,152,1.135,154,1.345,159,0.992,182,1.199,183,0.675,184,0.353,192,1.644,193,1.181,194,1.744,196,1.11,213,1.533,214,1.533,217,2.162,220,2.786,237,0.716,242,2.531,243,2.26,246,2.337,247,2.26,248,1.444,252,0.507,254,1.145,269,2.859,288,0.635,293,1.345,294,0.868,295,1.064,300,2.28,308,2.107,311,1.345,314,1.855,339,2.867,341,2.009,342,1.912,351,1.258,356,1.345,357,1.145,360,2.432,361,2.432,363,2.855,365,2.63,366,1.237,368,1.345,370,2.079,371,2.079,374,1.237,377,1.237,379,1.769,380,2.859,381,1.912,382,1.345,383,2.079,385,2.78,387,2.63,388,2.162,390,1.644,391,2.079,393,1.769,397,1.237,398,2.162,402,1.345,403,1.912,410,1.345,412,1.345,413,1.769,414,1.345,415,2.337,416,1.345,421,1.475,424,3.005,427,1.345,429,1.345,432,1.345,443,1.345,444,1.912,445,2.079,446,2.541,447,1.237,448,2.28,449,1.345,454,2.859,455,2.28,461,1.475,463,1.475,464,1.644,465,1.644,466,1.345,476,1.475,477,2.079,479,2.162,480,1.475,481,1.475,482,1.345,498,0.718,537,2.541,597,1.444,598,1.433,641,4.701,652,4.045,653,5.088,654,1.855,655,4.129,656,2.186,657,3.378,658,3.48,659,2.28,660,3.48,661,1.533,662,1.644,663,4.129,664,1.855,665,2.186,666,2.186,667,2.009,668,2.186,669,2.186,670,2.28,671,2.186,672,2.186,673,3.378,674,1.644,675,2.186,676,2.186,677,2.186,678,1.644,679,1.345,680,1.638,681,1.345,682,1.345,683,1.638,684,1.638,685,1.855,686,3.378,687,2.531,688,2.28,689,1.855,690,2.186,691,1.855,692,4.129,693,1.475,694,3.378,695,1.855,696,1.855,697,2.186,698,2.186,699,2.009,700,2.186,701,1.237,702,1.475,703,1.638,704,1.769,705,1.345,706,1.475,707,1.475,708,2.186,709,2.186,710,2.186,711,2.186,712,1.855,713,3.378,714,3.378,715,1.638,716,1.475,717,1.638,718,1.638,719,1.638,720,3.389,721,2.28,722,1.638,723,1.638,724,1.345,725,1.475,726,1.638,727,1.237,728,3.763,729,1.638,730,1.638,731,1.638,732,3.48,733,1.638,734,1.638,735,1.638,736,1.638,737,1.638,738,1.475,739,2.079,740,1.345,741,1.475,742,1.475]],["title/components/CardEndpointComponent.html",[0,0.033,80,0.639]],["body/components/CardEndpointComponent.html",[0,0.044,1,0.395,2,0.614,3,0.118,4,0.101,5,0.451,6,0.451,7,0.451,8,0.101,12,0.451,13,1.342,14,1.342,15,0.451,17,0.657,18,1.841,19,0.657,23,0.101,24,0.425,26,1.512,28,0.573,29,0.701,30,0.025,32,0.753,33,0.676,35,0.599,37,0.744,40,0.191,41,0.235,43,0.319,46,0.395,47,1.414,52,0.657,53,0.183,54,0.21,55,2.25,56,0.451,57,0.701,58,0.701,59,0.451,60,0.97,61,0.451,62,0.313,63,0.451,64,0.395,65,0.538,66,0.701,67,0.97,68,0.395,69,0.721,70,0.97,71,0.395,72,0.451,73,0.395,74,0.451,75,0.701,76,0.395,77,1.238,78,0.451,79,0.422,80,0.85,81,0.451,82,0.395,83,0.451,84,0.395,85,0.614,86,0.422,87,0.538,88,0.395,89,0.395,90,0.843,91,0.451,92,0.395,93,0.395,94,0.451,95,0.451,96,0.395,97,0.451,98,0.85,99,0.701,100,0.451,101,0.369,102,0.395,103,0.451,104,0.395,105,0.422,106,0.451,107,0.395,108,0.451,109,0.85,110,0.395,111,0.422,112,0.451,113,0.011,114,0.011,115,0.744,119,1.721,129,1.157,134,1.296,137,0.496,144,2.948,148,0.848,149,0.848,151,0.822,152,1.426,159,0.965,182,0.617,183,0.657,184,0.343,192,1.61,193,1.157,194,1.8,196,1.504,217,2.125,221,2.739,237,0.701,240,0.845,245,2.972,246,2.297,247,2.228,248,1.419,252,0.496,254,1.114,269,2.818,285,1.435,288,0.617,295,1.035,296,1.594,303,3.43,308,2.077,311,1.309,317,1.805,341,2.228,342,2.297,348,3.041,351,1.232,357,1.114,360,2.125,361,2.125,363,2.413,365,2.125,370,2.036,371,2.036,377,1.204,379,1.732,380,2.818,381,1.872,382,1.309,383,2.036,385,2.125,387,2.125,388,1.732,390,1.035,391,2.036,393,1.114,397,1.204,398,2.125,403,1.204,410,1.309,413,1.732,414,1.309,415,2.297,421,1.435,424,2.972,427,1.309,429,1.309,444,1.204,445,2.036,446,2.498,447,1.204,449,1.309,454,2.818,455,2.232,461,1.435,463,1.435,464,1.035,465,1.035,476,1.435,479,1.732,498,0.699,597,1.419,598,1.403,652,4.258,658,3.43,659,2.232,660,3.43,661,1.501,662,1.61,667,1.975,670,2.232,674,1.61,678,1.61,679,1.309,680,1.594,681,1.309,682,1.309,683,1.594,687,2.478,688,2.232,693,1.435,695,1.805,696,1.805,699,1.975,701,1.204,702,1.435,703,1.594,704,2.125,705,1.309,706,1.435,707,1.435,712,1.805,715,1.594,716,1.435,717,1.594,718,1.594,719,1.594,720,3.347,721,2.232,722,1.594,723,1.594,724,1.309,725,1.435,726,1.594,727,1.204,728,3.715,729,1.594,730,1.594,731,1.594,732,3.43,733,1.594,734,1.594,735,1.594,736,1.594,737,1.594,738,1.435,739,2.036,740,1.309,741,1.435,742,1.435,743,4.727,744,1.805,745,2.127,746,3.308,747,3.308,748,3.308,749,3.308,750,3.041,751,3.445,752,2.739,753,4.058,754,2.127,755,2.127,756,2.127,757,2.127,758,2.127,759,2.127,760,3.308,761,2.127,762,3.308,763,2.127,764,2.127,765,2.127,766,2.127,767,3.308,768,2.127,769,3.308,770,2.127,771,2.808,772,2.127,773,1.435,774,3.308,775,2.127,776,2.127,777,1.594,778,3.445,779,4.578,780,3.308,781,2.127,782,2.127,783,2.127,784,2.127,785,1.594,786,2.127,787,3.308,788,3.308]],["title/components/CardEntityComponent.html",[0,0.033,82,0.639]],["body/components/CardEntityComponent.html",[0,0.038,1,0.374,2,0.588,3,0.111,4,0.095,5,0.427,6,0.427,7,0.427,8,0.095,12,0.427,13,1.332,14,1.332,15,0.427,17,0.629,18,1.778,19,0.629,23,0.095,24,0.407,26,1.459,28,0.837,29,1.024,30,0.025,32,0.897,33,0.69,35,0.591,37,0.704,40,0.181,41,0.24,43,0.302,46,0.374,47,1.372,52,0.622,53,0.175,54,0.199,55,2.192,56,0.427,57,0.672,58,0.672,59,0.427,60,0.942,61,0.427,62,0.308,63,0.427,64,0.374,65,0.524,66,0.672,67,0.942,68,0.374,69,0.425,70,0.942,71,0.374,72,0.427,73,0.374,74,0.427,75,0.672,76,0.374,77,1.222,78,0.427,79,0.4,80,0.374,81,0.427,82,0.825,83,0.427,84,0.374,85,0.374,86,0.4,87,0.696,88,0.588,89,0.374,90,0.877,91,0.427,92,0.374,93,0.374,94,0.427,95,0.427,96,0.374,97,0.427,98,0.825,99,0.672,100,0.427,101,0.349,102,0.374,103,0.427,104,0.374,105,0.4,106,0.427,107,0.374,108,0.427,109,0.825,110,0.374,111,0.4,112,0.427,113,0.011,114,0.011,115,0.704,119,1.662,129,1.108,134,1.354,137,0.476,144,2.707,148,0.829,149,0.829,151,0.835,152,1.438,159,0.914,183,0.622,184,0.325,192,1.542,193,1.108,194,1.764,196,1.287,217,2.052,221,2.644,224,2.218,225,3.326,237,0.672,244,3.039,246,1.794,247,2.162,248,1.37,252,0.806,254,1.055,269,2.412,279,1.542,283,2.497,285,2.644,288,0.585,295,0.98,297,1.509,300,2.139,308,2.016,311,1.239,341,1.907,344,2.936,345,1.509,351,1.18,356,1.239,357,1.055,360,2.327,361,2.327,363,2.784,365,2.53,366,1.14,368,1.239,370,1.95,371,1.95,374,1.14,377,1.14,379,1.659,380,2.735,381,1.794,382,1.239,383,1.95,385,2.687,387,2.53,388,2.052,390,1.542,391,1.95,393,1.659,397,1.14,398,2.052,402,1.239,403,1.794,410,1.239,412,1.239,413,1.659,414,1.239,415,2.218,416,1.239,421,1.359,424,2.904,427,1.239,429,1.239,432,1.239,443,1.239,444,1.794,445,1.95,446,2.412,447,1.14,448,2.139,449,1.239,454,2.735,455,2.139,461,1.359,463,1.359,464,1.542,465,1.542,466,1.239,476,1.359,477,1.95,479,2.052,480,1.359,481,1.359,482,1.239,498,0.662,537,2.412,552,1.95,597,1.37,598,1.344,652,4.331,658,3.329,659,2.139,660,3.329,661,1.438,662,1.542,667,1.907,670,2.139,674,1.542,678,1.542,679,1.239,680,1.509,681,1.239,682,1.239,683,1.509,687,2.374,688,2.139,691,2.69,693,1.359,699,1.542,701,1.14,702,1.359,703,1.509,704,1.055,705,1.239,706,1.359,707,1.359,715,1.509,716,1.359,717,1.509,718,1.509,719,1.509,720,3.261,721,2.139,722,1.509,723,1.509,724,1.239,725,1.359,726,1.509,727,1.14,728,3.62,729,1.509,730,1.509,731,1.509,732,3.329,733,1.509,734,1.509,735,1.509,736,1.509,737,1.509,738,1.359,739,1.95,740,1.239,741,1.359,742,1.359,752,2.644,778,3.772,789,5.447,790,1.709,791,2.014,792,3.169,793,3.169,794,4.444,795,3.169,796,3.169,797,3.918,798,1.709,799,2.014,800,2.014,801,2.014,802,2.014,803,3.169,804,2.014,805,2.014,806,3.169,807,2.014,808,3.169,809,2.014,810,3.169,811,2.014,812,1.509,813,2.014,814,2.014,815,2.014,816,3.169,817,2.014,818,2.014,819,2.014,820,2.014,821,1.509,822,3.169,823,1.709,824,3.918,825,2.69,826,2.014,827,2.014,828,2.014,829,2.014,830,2.014,831,2.014,832,2.014,833,2.014,834,2.014,835,2.014,836,2.69,837,2.69]],["title/interfaces/Endpoint.html",[69,0.373,619,1.131]],["body/interfaces/Endpoint.html",[3,0.272,4,0.233,8,0.233,23,0.233,24,0.761,30,0.024,32,1.286,41,0.274,53,0.373,62,0.364,69,0.689,87,0.642,113,0.02,114,0.02,182,1.427,184,1.025,222,2.393,250,2.99,252,1.073,261,1.615,278,2.028,619,2.215,620,2.575,621,2.783,622,2.783,623,3.099,624,2.783,625,2.393]],["title/components/EndpointCardListComponent.html",[0,0.033,84,0.639]],["body/components/EndpointCardListComponent.html",[0,0.033,1,0.305,2,0.5,3,0.091,4,0.078,5,0.924,6,0.348,7,0.348,8,0.078,12,0.348,13,1.293,14,1.293,15,0.348,16,2.105,17,0.534,18,1.551,19,0.534,23,0.078,24,0.346,26,1.274,28,0.812,29,0.993,30,0.025,32,1.02,33,0.699,35,0.603,37,0.575,38,0.697,40,0.147,41,0.248,43,0.404,46,0.305,47,1.221,52,0.508,53,0.149,54,0.163,55,1.979,56,0.348,57,0.571,58,0.571,59,0.348,60,0.838,61,0.348,62,0.311,63,0.348,64,0.305,65,0.473,66,0.924,67,0.838,68,0.305,69,0.724,70,0.838,71,0.305,72,0.348,73,0.305,74,0.348,75,0.571,76,0.305,77,1.396,78,0.348,79,0.326,80,0.734,81,0.348,82,0.305,83,0.348,84,0.734,85,0.5,86,0.326,87,0.634,88,0.305,89,0.305,90,0.55,91,0.348,92,0.305,93,0.305,94,0.348,95,0.348,96,0.734,97,0.348,98,0.305,99,0.348,100,0.348,101,0.285,102,0.734,103,0.348,104,0.305,105,0.326,106,0.348,107,0.305,108,0.348,109,0.734,110,0.305,111,0.326,112,0.348,113,0.009,114,0.009,115,0.575,119,1.45,129,0.942,134,1.344,137,0.404,144,2.512,148,0.863,149,0.863,151,0.878,152,1.465,159,1.222,183,0.508,184,0.435,185,0.649,192,1.31,193,1.382,194,1.539,209,1.232,210,1.657,211,2.308,212,2.903,213,1.222,214,1.222,215,2.017,217,1.791,219,2.286,221,2.308,224,2.469,231,3.356,232,2.668,237,0.571,239,2.668,240,1.86,244,2.799,245,2.799,246,1.936,247,1.924,248,1.196,249,1.396,250,2.244,252,0.825,254,0.861,257,1.936,269,2.433,278,0.782,279,2.279,280,1.396,281,1.396,282,1.396,283,2.279,284,1.396,285,3.161,286,1.396,288,0.782,291,1.396,292,1.232,295,1.31,296,1.232,297,1.232,298,1.396,299,2.286,302,1.396,303,1.232,308,1.794,310,3.356,311,2.684,341,1.31,344,2.017,345,1.232,348,1.232,350,2.286,351,2.141,355,1.396,356,2.883,357,2.284,358,2.286,360,1.41,361,0.861,363,2.675,364,1.396,365,2.453,366,2.238,368,1.012,370,2.105,371,1.657,374,2.238,377,2.238,378,2.562,379,2.07,380,2.433,381,1.524,382,1.012,383,1.657,384,1.396,385,2.703,387,2.453,388,1.791,390,1.31,391,2.105,392,2.903,393,1.791,397,0.931,398,1.791,403,1.524,413,2.284,414,1.657,415,1.936,416,2.105,418,1.396,419,1.232,424,2.799,428,1.396,429,1.657,432,1.657,434,1.396,435,1.396,437,2.286,438,1.396,442,1.396,443,1.012,444,0.931,445,1.657,446,1.012,447,0.931,452,2.286,453,1.232,454,1.012,460,1.396,464,0.8,465,0.8,466,1.657,471,2.017,473,2.903,474,2.962,475,1.396,479,1.791,482,1.012,597,0.942,598,0.697,624,1.936,641,4.382,659,1.817,670,1.817,674,1.31,679,1.012,681,1.012,689,1.396,693,1.11,699,1.31,701,0.931,704,1.41,705,1.012,706,1.11,707,1.11,720,1.11,725,1.11,727,1.524,738,1.11,739,1.657,743,1.232,752,2.308,771,2.286,773,1.11,823,1.396,825,1.396,836,2.286,837,2.286,838,5.502,839,5.502,840,5.502,841,3.42,842,1.644,843,3.42,844,2.017,845,2.693,846,2.693,847,2.693,848,3.953,849,2.693,850,3.953,851,2.693,852,3.953,853,2.017,854,1.396,855,1.644,856,2.693,857,1.644,858,2.693,859,1.644,860,2.693,861,1.644,862,2.693,863,1.644,864,1.644,865,1.644,866,1.644,867,2.693,868,1.644,869,2.693,870,1.644,871,1.644,872,2.693,873,1.644,874,1.644,875,2.693,876,1.644,877,1.644,878,1.644,879,1.644,880,1.396,881,1.644,882,1.644,883,1.644,884,2.693,885,1.644,886,1.644,887,3.953,888,1.644,889,1.644,890,1.644,891,1.644,892,1.644,893,2.693,894,1.644,895,1.644,896,1.644,897,1.644,898,1.644,899,1.644,900,1.644,901,1.644,902,1.644,903,1.644,904,1.644,905,1.644,906,1.644,907,2.693,908,1.817,909,1.644,910,1.644,911,3.42,912,2.693,913,1.644,914,1.644,915,3.42,916,1.644,917,1.232,918,5.343,919,3.953,920,1.644,921,3.953,922,2.693,923,1.644,924,1.644,925,1.396,926,1.644,927,1.644,928,1.644,929,1.644,930,1.644,931,1.644,932,1.644,933,1.644,934,1.644,935,1.644]],["title/components/EndpointDialogComponent.html",[0,0.033,85,0.639]],["body/components/EndpointDialogComponent.html",[0,0.049,1,0.581,2,0.818,3,0.173,4,0.148,5,0.664,6,0.664,7,0.664,8,0.148,12,0.664,13,1.399,14,1.399,15,0.664,16,2.711,17,0.875,19,0.875,23,0.148,24,0.566,25,3.215,26,2.402,27,2.885,28,0.883,29,1.173,30,0.025,31,2.885,32,0.581,33,0.688,35,0.654,39,2.113,40,0.395,41,0.23,43,0.908,44,1.927,46,0.818,49,1.639,53,0.244,54,0.31,56,0.664,57,0.934,58,0.934,59,0.664,60,1.173,61,0.664,62,0.306,63,0.664,64,0.581,65,0.632,66,0.934,67,1.173,68,0.581,69,0.723,70,1.173,71,0.581,72,0.664,73,0.581,74,0.664,75,0.934,76,0.581,77,1.2,78,0.664,79,0.621,80,0.581,81,0.664,82,0.581,83,0.664,84,0.581,85,1.027,86,0.621,87,0.478,88,0.581,89,0.581,90,0.435,91,0.664,92,0.581,93,0.581,94,0.664,95,0.664,96,0.581,97,0.664,98,0.581,99,0.664,100,0.664,101,0.543,102,0.581,103,0.664,104,0.581,105,0.621,106,0.664,107,0.581,108,0.664,109,0.581,110,0.581,111,0.621,112,0.664,113,0.015,114,0.015,115,1.095,118,1.772,119,1.868,120,3.137,121,3.819,122,2.162,123,3.44,124,3.44,125,3.819,126,3.819,127,3.819,128,3.44,129,1.541,130,3.137,131,2.711,132,3.44,134,1.012,135,3.819,137,0.661,139,3.301,140,3.301,141,3.733,142,2.711,143,3.819,144,2.481,148,0.711,149,0.711,151,0.765,152,1.367,153,3.301,154,3.588,156,3.301,157,4.145,159,1.42,163,2.657,168,3.301,171,2.657,172,2.345,174,2.345,177,1.42,178,1.927,179,2.345,180,1.42,181,1.772,183,0.967,184,0.505,185,1.061,187,2.345,188,2.113,189,2.345,190,2.345,191,2.345,192,1.523,193,1.095,194,1.029,195,2.025,196,1.029,197,2.345,198,2.345,199,3.301,200,3.819,201,2.345,202,2.113,203,2.113,204,2.345,252,0.661,590,2.973,773,4.352,936,5.474,937,5.098,938,3.131,939,3.131,940,3.131,941,3.131,942,3.74,943,4.406,944,3.131,945,3.131,946,3.131,947,3.131]],["title/injectables/EndpointRepositoryService.html",[245,1.948,483,0.882]],["body/injectables/EndpointRepositoryService.html",[3,0.21,4,0.179,8,0.179,23,0.179,30,0.025,32,1.045,33,0.709,35,0.593,40,0.34,41,0.258,52,1.17,53,0.21,54,0.375,62,0.361,65,0.411,69,0.761,113,0.017,114,0.017,137,0.753,148,1.055,149,1.055,151,0.961,183,1.17,184,0.612,185,1.543,237,0.803,245,2.841,252,1.094,257,4.045,278,1.74,290,2.557,483,1.287,485,1.719,505,3.368,511,1.844,512,1.719,601,2.557,605,2.839,609,2.839,611,1.719,750,3.761,777,3.761,785,3.761,844,3.761,948,5.632,949,4.261,950,4.261,951,3.789,952,4.41,953,3.216,954,4.261,955,3.216,956,4.323,957,4.261,958,7.012,959,4.261,960,3.216,961,4.261,962,3.216,963,4.261,964,3.216,965,5.02,966,3.789,967,3.789,968,3.789,969,3.789,970,3.789,971,3.789,972,3.789]],["title/injectables/EndpointService.html",[483,0.882,952,2.322]],["body/injectables/EndpointService.html",[3,0.183,4,0.157,8,0.157,16,2.041,23,0.157,24,0.59,28,0.575,29,0.703,30,0.025,32,0.976,33,0.709,35,0.636,40,0.297,41,0.254,43,0.498,46,0.616,47,1.752,52,1.024,53,0.183,54,0.328,62,0.356,65,0.36,69,0.717,90,0.638,113,0.016,114,0.016,134,1.297,137,0.688,148,1.039,149,1.039,151,0.947,184,0.535,185,1.521,194,1.09,237,0.972,240,1.317,248,1.839,252,1.087,257,3.936,278,1.526,283,1.614,288,0.963,294,1.317,483,1.176,485,1.505,488,2.041,490,3.548,505,3.341,511,1.614,512,1.505,552,2.823,555,2.485,556,4.25,557,3.548,558,2.971,560,3.436,567,2.823,571,3.095,572,4.07,578,3.436,579,2.041,580,2.238,581,2.238,582,2.238,583,2.238,584,4.615,586,4.615,587,4.615,590,2.238,593,2.485,595,2.238,596,2.238,597,1.16,598,1.406,599,2.238,750,3.939,777,3.939,785,3.939,844,3.939,942,2.815,949,4.463,950,4.463,952,3.095,954,2.815,956,4.462,957,2.815,959,2.815,961,2.815,963,2.815,973,5.613,974,4.587,975,6.435,976,3.317,977,6.532,978,3.317,979,3.317,980,3.317,981,3.317,982,3.317,983,3.317,984,3.317,985,4.587,986,5.258,987,3.317]],["title/interfaces/Entity.html",[87,0.373,619,1.131]],["body/interfaces/Entity.html",[3,0.27,4,0.231,8,0.231,23,0.231,24,0.757,30,0.024,32,1.284,41,0.266,53,0.372,62,0.383,69,0.713,87,0.687,113,0.02,114,0.02,182,1.417,184,1.104,222,2.375,250,2.215,252,1.065,261,1.604,278,2.025,619,2.211,620,2.556,621,2.763,622,2.763,623,3.086,624,3.721,625,2.375]],["title/components/EntityDialogComponent.html",[0,0.033,88,0.639]],["body/components/EntityDialogComponent.html",[0,0.043,1,0.468,2,0.698,3,0.139,4,0.119,5,0.534,6,0.534,7,0.534,8,0.119,12,0.534,13,1.369,14,1.369,15,0.534,17,0.747,19,0.747,23,0.119,24,0.484,25,3.145,26,2.275,27,2.549,28,0.866,29,1.189,30,0.025,31,2.549,32,0.836,33,0.719,35,0.632,38,1.068,39,1.7,40,0.337,41,0.25,43,0.872,44,1.55,46,0.698,47,0.778,49,1.319,53,0.208,54,0.249,56,0.534,57,0.798,58,0.798,59,0.534,60,1.059,61,0.534,62,0.331,63,0.534,64,0.468,65,0.58,66,1.059,67,1.059,68,0.468,69,0.489,70,1.059,71,0.468,72,0.534,73,0.468,74,0.534,75,0.798,76,0.468,77,1.113,78,0.534,79,0.5,80,0.468,81,0.534,82,0.468,83,0.534,84,0.468,85,0.468,86,0.5,87,0.685,88,0.927,89,0.468,90,0.627,91,0.534,92,0.468,93,0.468,94,0.534,95,0.534,96,0.468,97,0.534,98,0.468,99,0.534,100,0.534,101,0.437,102,0.468,103,0.534,104,0.468,105,0.5,106,0.534,107,0.468,108,0.534,109,0.468,110,0.468,111,0.5,112,0.534,113,0.013,114,0.013,115,0.881,118,1.426,119,1.596,120,2.772,121,3.375,122,1.91,123,3.04,124,3.04,125,3.375,126,3.375,127,3.375,128,3.04,129,1.316,130,2.772,131,2.316,132,3.04,134,1.269,135,3.375,136,3.823,137,0.565,138,3.194,139,2.819,140,2.819,142,2.316,143,3.375,144,2.192,145,3.194,146,5.427,148,0.906,149,0.906,150,2.138,151,0.872,152,1.461,153,2.819,154,3.452,155,2.138,156,2.819,157,3.743,158,2.138,159,1.143,161,2.138,164,3.194,165,3.194,166,4.241,168,2.819,170,3.194,172,1.887,174,1.887,175,2.138,176,2.138,177,1.143,178,1.55,179,1.887,180,1.143,181,2.13,183,0.778,184,0.807,185,1.4,186,2.138,187,1.887,188,1.7,189,1.887,190,1.887,191,1.887,192,1.226,193,1.87,194,1.236,195,1.789,196,0.828,197,1.887,198,1.887,199,2.819,200,3.375,201,1.887,202,1.7,203,1.7,204,1.887,205,2.138,213,1.707,214,1.707,248,1.575,252,0.872,279,1.226,283,2.192,316,2.138,326,2.316,329,2.316,342,1.426,351,0.938,521,2.138,597,0.881,598,1.068,674,1.226,699,1.226,724,1.55,812,1.887,821,4.996,908,1.7,988,5.66,989,4.504,990,4.504,991,4.504,992,3.763,993,4.996,994,3.763,995,3.763,996,3.823,997,2.519,998,2.519,999,2.519,1000,2.519,1001,2.519,1002,3.763,1003,2.519,1004,3.763,1005,2.519,1006,2.519,1007,2.519,1008,2.138,1009,2.519,1010,2.519,1011,2.519,1012,2.519,1013,2.519,1014,4.504,1015,2.519,1016,2.519,1017,2.519,1018,4.996,1019,2.519,1020,3.194,1021,2.519,1022,2.519,1023,2.519,1024,2.519,1025,2.519,1026,2.138,1027,2.519,1028,2.519]],["title/injectables/EntityRepositoryService.html",[244,1.948,483,0.882]],["body/injectables/EntityRepositoryService.html",[3,0.22,4,0.189,8,0.189,23,0.189,30,0.025,32,1.071,33,0.717,35,0.604,40,0.357,41,0.261,52,1.23,53,0.22,54,0.394,62,0.366,65,0.432,87,0.762,113,0.018,114,0.018,137,0.779,148,1.068,149,1.068,151,0.975,183,1.23,184,0.643,185,1.565,237,0.845,244,2.936,252,1.084,257,3.991,278,1.774,290,2.689,483,1.33,485,1.808,505,3.391,511,1.939,512,1.808,567,2.452,601,2.689,605,2.985,609,2.985,611,1.808,853,3.887,953,3.382,955,3.382,956,4.276,960,3.382,962,3.382,964,3.382,1029,5.693,1030,4.404,1031,4.404,1032,4.404,1033,4.404,1034,4.404,1035,3.984,1036,4.384,1037,4.404,1038,4.404,1039,4.404,1040,4.404,1041,4.404,1042,4.404,1043,3.984,1044,3.984,1045,3.984,1046,3.984,1047,3.984,1048,3.984,1049,3.984]],["title/injectables/EntityService.html",[483,0.882,1036,2.322]],["body/injectables/EntityService.html",[3,0.188,4,0.161,8,0.161,23,0.161,24,0.6,28,0.59,29,0.721,30,0.025,32,0.989,33,0.721,35,0.64,40,0.305,41,0.256,43,0.511,46,0.632,47,1.771,52,1.051,53,0.188,54,0.337,62,0.358,65,0.369,87,0.747,90,0.649,113,0.016,114,0.016,134,1.304,137,0.701,148,1.045,149,1.045,151,0.972,182,0.988,184,0.549,185,1.559,194,1.118,237,0.99,240,1.351,248,1.864,252,1.073,257,3.829,261,1.118,278,1.547,283,1.656,288,0.988,294,1.351,483,1.197,485,1.544,488,2.094,490,3.596,505,3.381,511,1.656,512,1.544,552,2.873,555,2.549,556,4.297,557,3.596,558,3.003,560,3.498,567,2.873,571,3.151,572,4.13,578,3.498,579,2.094,580,2.296,581,2.296,582,2.296,583,2.296,584,4.763,586,4.763,587,4.763,590,2.296,593,2.549,595,2.296,596,2.296,597,1.19,598,1.443,599,2.296,853,3.993,956,4.29,1030,3.963,1031,4.523,1032,3.963,1033,3.963,1034,4.523,1036,3.151,1037,3.963,1038,2.888,1039,3.963,1040,3.963,1041,2.888,1042,2.888,1050,5.696,1051,5.735,1052,4.668,1053,3.403,1054,3.403,1055,3.403,1056,3.403,1057,3.403,1058,3.403,1059,3.403,1060,3.403,1061,3.403,1062,3.403,1063,3.403,1064,3.403,1065,3.403,1066,3.403,1067,3.403]],["title/interfaces/EntityShort.html",[619,1.131,625,1.675]],["body/interfaces/EntityShort.html",[3,0.272,4,0.233,8,0.233,23,0.233,24,0.761,30,0.024,32,1.286,41,0.26,53,0.373,62,0.383,69,0.642,87,0.642,113,0.02,114,0.02,182,1.427,184,1.106,222,2.393,250,2.231,252,1.073,261,1.615,278,2.028,619,2.215,620,2.575,621,2.783,622,2.783,623,3.099,624,2.783,625,2.88]],["title/components/ErrorDisplayComponent.html",[0,0.033,89,0.639]],["body/components/ErrorDisplayComponent.html",[0,0.053,1,0.685,2,0.916,3,0.204,4,0.175,5,0.782,6,0.782,7,0.782,8,0.175,12,0.782,13,1.418,14,1.418,15,0.782,17,0.979,19,0.979,21,2.238,23,0.175,24,0.634,30,0.025,33,0.67,35,0.587,40,0.331,41,0.22,43,0.554,46,0.685,53,0.273,54,0.365,56,0.782,57,1.045,58,1.045,59,0.782,60,1.257,61,0.782,62,0.307,63,0.782,64,0.685,65,0.643,66,1.045,67,1.257,68,0.685,69,0.603,70,1.257,71,0.685,72,0.782,73,0.685,74,1.177,75,1.045,76,0.685,77,1.262,78,0.782,79,0.733,80,0.685,81,0.782,82,0.685,83,0.782,84,0.685,85,0.685,86,0.733,87,0.535,88,0.685,89,1.101,90,0.918,91,0.782,92,0.685,93,0.685,94,0.782,95,0.782,96,0.685,97,0.782,98,0.685,99,0.782,100,0.782,101,0.64,102,0.685,103,0.782,104,0.685,105,0.733,106,0.782,107,0.685,108,0.782,109,0.685,110,0.685,111,0.733,112,0.782,113,0.017,114,0.017,122,2.356,134,0.733,137,0.74,148,0.596,149,0.596,151,0.74,152,1.34,210,3.036,211,3.749,232,4.002,237,0.782,238,3.133,239,4.002,240,2.579,250,2.238,252,0.89,288,1.071,379,2.583,611,1.674,639,5.033,1068,5.397,1069,5.397,1070,3.133,1071,4.932,1072,4.932,1073,5.246,1074,4.17,1075,4.932,1076,3.691,1077,3.691,1078,3.691,1079,3.691,1080,3.691,1081,3.691,1082,3.133,1083,3.691,1084,3.691,1085,3.691,1086,4.932]],["title/injectables/ErrorHandlerService.html",[483,0.882,558,1.802]],["body/injectables/ErrorHandlerService.html",[3,0.226,4,0.194,8,0.194,23,0.194,28,0.71,30,0.025,33,0.573,35,0.611,40,0.367,41,0.209,43,0.614,46,0.76,47,1.907,53,0.226,54,0.405,62,0.292,90,0.57,110,0.76,113,0.018,114,0.018,134,0.813,137,0.792,148,0.853,149,0.853,151,0.614,152,1.194,185,0.986,237,0.868,240,2.599,288,1.189,447,3.768,483,1.354,485,1.858,511,1.992,512,1.858,552,3.25,558,2.765,571,3.563,572,3.8,579,2.52,611,1.858,702,3.563,812,3.068,854,3.476,1073,5.241,1074,4.67,1082,3.476,1087,4.961,1088,3.476,1089,5.845,1090,4.095,1091,4.095,1092,4.988,1093,4.095,1094,4.095,1095,4.095,1096,4.095,1097,4.095,1098,3.476,1099,4.095,1100,4.095,1101,4.095,1102,4.095,1103,4.095,1104,4.095,1105,4.095,1106,3.476]],["title/components/ExportApiButtonComponent.html",[0,0.033,92,0.639]],["body/components/ExportApiButtonComponent.html",[0,0.052,1,0.645,2,0.879,3,0.192,4,0.164,5,0.736,6,0.736,7,0.736,8,0.164,12,0.736,13,1.411,14,1.411,15,0.736,17,0.94,19,0.94,23,0.164,30,0.025,33,0.584,35,0.599,40,0.311,41,0.213,43,0.521,46,0.645,53,0.365,54,0.343,56,0.736,57,1.003,58,1.003,59,0.736,60,1.226,61,0.736,62,0.32,63,0.736,64,0.645,65,0.763,66,1.003,67,1.226,68,0.645,69,0.584,70,1.226,71,0.645,72,0.736,73,0.645,74,0.736,75,1.003,76,0.645,77,1.24,78,0.736,79,0.689,80,0.645,81,0.736,82,0.645,83,0.736,84,0.645,85,0.645,86,0.689,87,0.513,88,0.645,89,0.645,90,0.749,91,0.736,92,1.074,93,0.645,94,0.736,95,0.736,96,0.645,97,0.736,98,0.645,99,0.736,100,0.736,101,0.602,102,0.645,103,0.736,104,0.645,105,0.689,106,0.736,107,0.645,108,0.736,109,0.645,110,0.645,111,0.689,112,0.736,113,0.016,114,0.016,115,1.214,122,2.284,129,1.655,134,0.689,137,0.71,144,2.303,148,0.561,149,0.561,151,0.521,152,1.07,182,1.563,183,1.072,184,0.561,195,2.404,196,1.555,220,3.634,237,1.003,242,3.546,243,2.814,261,1.555,276,4.018,283,1.69,293,2.137,294,1.379,295,1.69,300,3.194,308,1.575,356,2.137,360,1.818,361,1.818,363,2.814,365,2.479,366,1.965,368,2.137,374,3.048,385,2.82,387,2.479,388,1.818,390,1.69,393,1.818,402,2.137,403,1.965,412,2.137,416,2.137,432,2.137,443,2.137,444,1.965,448,3.194,464,1.69,465,1.69,466,2.137,477,2.913,479,1.818,480,2.343,481,2.343,482,2.137,498,1.141,636,2.602,637,4.018,638,4.018,661,2.148,664,2.947,684,4.333,724,2.137,1107,4.909,1108,3.472,1109,5.784,1110,4.733,1111,3.472,1112,3.472,1113,3.472,1114,3.472,1115,3.472,1116,3.472,1117,3.472,1118,3.472,1119,3.472,1120,3.472,1121,3.472,1122,3.472,1123,3.472,1124,3.472,1125,3.472,1126,3.472]],["title/interfaces/FileStatus.html",[619,1.131,1127,2.322]],["body/interfaces/FileStatus.html",[0,0.037,3,0.144,4,0.123,8,0.31,13,0.515,14,0.515,17,0.515,19,0.515,21,1.178,23,0.256,24,0.495,25,2.934,26,1.708,27,1.469,28,0.45,30,0.025,31,2.178,35,0.654,37,0.908,38,1.101,40,0.345,41,0.2,43,0.851,46,0.851,47,1.188,49,1.359,53,0.144,54,0.257,55,2.08,62,0.254,65,0.282,90,0.904,101,0.45,110,0.714,113,0.013,114,0.013,118,1.469,119,1.101,122,1.632,130,1.598,131,1.598,134,1.126,141,1.752,152,1.224,177,1.178,178,1.598,180,1.746,183,0.802,184,0.419,185,1.483,194,0.853,195,2.605,213,1.178,214,1.178,222,1.263,224,3.546,241,1.263,243,1.872,247,1.872,248,0.908,252,0.851,254,1.359,261,1.779,278,0.754,279,1.872,293,1.598,294,1.031,295,1.263,308,1.178,326,1.598,329,1.598,341,1.872,342,1.469,351,2.112,423,3.121,498,1.264,597,0.908,611,1.178,619,0.853,620,1.359,623,1.359,699,1.263,701,3.546,704,1.359,727,3.546,908,3.654,1074,3.654,1092,4.517,1127,4.069,1128,1.945,1129,1.752,1130,4.983,1131,4.304,1132,3.266,1133,3.266,1134,3.094,1135,2.597,1136,3.266,1137,3.266,1138,3.266,1139,3.266,1140,1.945,1141,2.883,1142,2.203,1143,2.203,1144,2.203,1145,2.203,1146,2.203,1147,2.203,1148,2.203,1149,4.304,1150,3.892,1151,3.892,1152,2.203,1153,4.596,1154,4.814,1155,4.814,1156,4.596,1157,2.203,1158,2.203,1159,2.203,1160,2.203,1161,2.203,1162,2.203,1163,2.203,1164,2.203,1165,2.203,1166,2.203,1167,3.266,1168,2.203,1169,2.203,1170,2.203,1171,2.203,1172,3.892,1173,2.203,1174,4.596,1175,2.203,1176,4.814,1177,2.203,1178,2.203,1179,2.203,1180,2.203,1181,2.203,1182,2.203,1183,2.203,1184,2.203,1185,2.203,1186,2.203,1187,2.203,1188,2.203,1189,3.266,1190,3.266,1191,4.304,1192,3.266,1193,3.266,1194,2.203,1195,2.203,1196,2.203,1197,2.203,1198,2.203,1199,2.203,1200,2.203,1201,2.203,1202,2.203,1203,2.203,1204,2.203,1205,2.203]],["title/components/FilterByInputComponent.html",[0,0.033,93,0.639]],["body/components/FilterByInputComponent.html",[0,0.05,1,0.604,2,0.841,3,0.18,4,0.154,5,0.69,6,0.69,7,0.69,8,0.154,12,0.69,13,1.403,14,1.403,15,0.69,17,0.899,19,0.899,23,0.154,24,0.582,28,0.975,29,1.254,30,0.025,33,0.695,35,0.585,38,1.381,40,0.292,41,0.234,43,0.68,53,0.25,54,0.322,56,0.69,57,0.96,58,0.96,59,0.69,60,1.193,61,0.69,62,0.288,63,0.69,64,0.604,65,0.61,66,0.96,67,1.193,68,0.604,69,0.565,70,1.193,71,0.604,72,0.69,73,0.604,74,0.69,75,0.96,76,0.604,77,1.216,78,0.69,79,0.646,80,0.604,81,0.69,82,0.604,83,0.69,84,0.604,85,0.604,86,0.646,87,0.491,88,0.604,89,0.604,90,0.453,91,0.69,92,0.604,93,1.045,94,1.358,95,0.69,96,0.604,97,0.69,98,0.604,99,0.69,100,0.69,101,0.564,102,0.604,103,0.69,104,0.604,105,0.646,106,0.69,107,0.604,108,0.69,109,0.604,110,0.604,111,0.646,112,0.69,113,0.015,114,0.015,115,1.139,123,3.514,124,3.514,129,1.584,137,0.68,142,2.787,148,0.526,149,0.526,151,0.489,152,1.024,154,2.004,177,1.477,180,1.477,181,1.843,185,1.091,188,2.198,193,1.584,195,2.235,196,2.064,202,3.514,203,3.514,213,2.055,214,2.055,237,1.104,252,0.919,381,2.947,413,2.371,425,2.764,474,2.44,498,1.944,661,2.055,662,2.204,667,2.534,674,2.879,678,2.204,917,2.44,925,2.764,996,4.42,1020,2.764,1134,3.514,1135,3.514,1140,3.393,1206,5.522,1207,5.522,1208,2.764,1209,4.529,1210,5.207,1211,4.529,1212,5.207,1213,4.529,1214,5.207,1215,5.207,1216,5.207,1217,3.256,1218,5.628,1219,3.256,1220,3.256,1221,3.256,1222,3.256,1223,4.529,1224,3.256,1225,5.207,1226,4.529,1227,4.529,1228,5.207,1229,3.256,1230,3.256,1231,3.256,1232,3.256,1233,3.256,1234,3.256,1235,4.529,1236,3.256,1237,3.256,1238,3.256,1239,3.256,1240,3.256,1241,3.256,1242,3.256,1243,3.256,1244,3.256,1245,3.256]],["title/components/HeaderComponent.html",[0,0.033,96,0.639]],["body/components/HeaderComponent.html",[0,0.052,1,0.657,2,0.89,3,0.196,4,0.168,5,0.751,6,0.751,7,0.751,8,0.168,12,0.751,13,1.413,14,1.413,15,0.751,17,0.952,18,2.176,19,0.952,21,2.176,23,0.168,24,0.617,26,2.026,28,1.01,29,1.236,30,0.025,32,0.89,33,0.697,35,0.668,37,1.238,40,0.317,41,0.23,43,0.531,46,0.657,53,0.265,54,0.35,56,0.751,57,1.017,58,1.017,59,0.751,60,1.236,61,0.751,62,0.265,63,0.751,64,0.657,65,0.632,66,1.017,67,1.236,68,0.657,69,0.59,70,1.236,71,0.657,72,0.751,73,1.01,74,1.017,75,1.017,76,0.657,77,1.247,78,0.751,79,0.703,80,0.657,81,0.751,82,0.657,83,0.751,84,0.657,85,0.657,86,0.703,87,0.52,88,0.657,89,0.657,90,0.493,91,0.751,92,0.657,93,0.657,94,0.751,95,0.751,96,1.082,97,0.751,98,0.657,99,0.751,100,0.751,101,0.831,102,0.657,103,0.751,104,0.657,105,0.703,106,0.751,107,0.657,108,0.751,109,0.657,110,0.657,111,0.703,112,0.751,113,0.016,114,0.016,119,2.307,134,1.08,137,0.72,151,0.72,152,1.318,192,2.334,193,2.039,196,1.916,252,0.875,279,2.334,419,3.594,498,1.163,635,2.653,661,2.176,662,2.334,667,2.837,674,2.334,678,2.334,679,2.179,681,2.179,685,3.006,1129,2.39,1246,3.006,1247,4.797,1248,4.797,1249,5.831,1250,6.094,1251,5.44,1252,5.44,1253,5.44,1254,3.541,1255,3.541,1256,4.797,1257,3.541,1258,3.541,1259,3.541,1260,3.541,1261,4.797,1262,4.797,1263,3.541,1264,3.541,1265,3.541,1266,3.541,1267,4.797,1268,4.797]],["title/interceptors/HttpErrorInterceptor.html",[1269,2.921,1270,2.322]],["body/interceptors/HttpErrorInterceptor.html",[3,0.258,4,0.221,8,0.221,23,0.221,30,0.025,33,0.622,35,0.678,40,0.418,41,0.227,43,0.7,46,0.866,47,1.999,52,1.441,53,0.258,54,0.462,62,0.317,90,0.649,113,0.019,114,0.019,134,0.926,137,0.861,148,0.926,149,0.926,151,0.7,185,1.381,194,1.533,210,2.872,237,0.989,240,1.854,248,2.171,288,1.355,308,2.816,483,1.47,505,3.02,557,3.87,558,3.39,572,3.529,579,2.872,580,3.15,581,3.15,582,3.15,583,3.15,595,3.15,596,3.15,597,1.632,598,1.979,599,3.15,611,2.118,1270,3.87,1271,4.667,1272,5.269,1273,3.962,1274,5.734,1275,4.667,1276,4.667,1277,5.734,1278,6.474,1279,6.474,1280,4.667,1281,4.667,1282,4.667,1283,5.734,1284,4.667,1285,4.667]],["title/components/IconTrashComponent.html",[0,0.033,98,0.639]],["body/components/IconTrashComponent.html",[0,0.05,1,0.849,2,0.849,3,0.183,4,0.156,5,0.7,6,0.7,7,0.7,8,0.156,10,2.227,12,0.7,13,1.405,14,1.405,15,0.969,17,0.655,19,0.907,23,0.156,25,2.552,30,0.025,33,0.684,35,0.636,40,0.296,41,0.243,43,0.686,46,0.613,47,1.748,48,2.802,49,1.728,50,2.802,51,2.802,52,1.019,53,0.253,54,0.326,55,1.497,56,0.7,57,0.969,58,0.969,59,0.7,60,1.2,61,0.7,62,0.29,63,0.7,64,0.613,65,0.645,66,0.969,67,1.2,68,0.613,69,0.667,70,1.2,71,0.613,72,0.7,73,0.613,74,0.7,75,0.969,76,0.613,77,1.221,78,0.7,79,0.655,80,0.613,81,0.7,82,0.613,83,0.7,84,0.613,85,0.613,86,0.655,87,0.496,88,0.613,89,0.613,90,0.459,91,0.7,92,0.613,93,0.613,94,0.7,95,0.7,96,0.613,97,0.7,98,1.051,99,1.362,100,0.7,101,0.572,102,0.613,103,0.7,104,0.613,105,0.655,106,0.7,107,0.613,108,0.7,109,0.613,110,0.613,111,0.655,112,0.7,113,0.015,114,0.015,115,1.154,129,1.599,134,0.907,137,0.686,148,0.533,149,0.533,151,0.495,152,1.033,182,1.522,183,1.019,184,0.533,185,1.101,195,1.311,196,1.953,220,3.539,237,0.969,240,2.504,248,1.599,288,0.958,341,1.606,351,1.229,357,1.728,360,1.728,361,1.728,363,2.552,365,1.728,390,1.606,393,1.728,398,1.728,424,1.868,427,2.031,433,4.451,449,2.031,464,1.606,465,1.606,498,1.084,597,1.154,598,1.4,625,2.552,661,2.074,662,2.224,667,2.552,674,2.552,678,2.224,682,3.956,688,3.085,699,1.606,721,2.227,740,2.031,741,2.227,742,2.227,751,4.451,752,3.539,1026,2.802,1286,5.456,1287,2.802,1288,4.571,1289,3.301,1290,4.571,1291,5.661,1292,5.244,1293,3.301,1294,4.571,1295,3.301,1296,3.301,1297,3.301,1298,3.301,1299,3.301,1300,2.802,1301,4.571,1302,3.301,1303,3.301,1304,3.301,1305,3.301,1306,3.301,1307,3.301,1308,5.244,1309,4.571,1310,3.301,1311,3.301]],["title/components/ImportDialogComponent.html",[0,0.033,101,0.596]],["body/components/ImportDialogComponent.html",[0,0.037,1,0.366,2,0.579,3,0.109,4,0.093,5,0.418,6,0.418,7,0.418,8,0.305,12,0.418,13,1.328,14,1.328,15,0.418,17,0.619,19,0.619,21,1.414,23,0.226,24,0.401,25,3.243,26,1.984,27,2.188,28,0.881,29,1.014,30,0.025,31,2.188,33,0.665,35,0.642,37,0.69,38,0.836,40,0.279,41,0.23,43,0.763,46,0.717,47,1.356,49,1.033,53,0.172,54,0.195,55,1.753,56,0.418,57,0.661,58,0.661,59,0.418,60,0.931,61,0.418,62,0.334,63,0.418,64,0.366,65,0.519,66,0.661,67,0.931,68,0.366,69,0.419,70,0.931,71,0.366,72,0.418,73,0.366,74,0.418,75,0.661,76,0.366,77,1.009,78,0.418,79,0.391,80,0.366,81,0.418,82,0.366,83,0.418,84,0.366,85,0.366,86,0.391,87,0.338,88,0.366,89,0.366,90,0.873,91,0.418,92,0.366,93,0.366,94,0.418,95,0.418,96,0.366,97,0.418,98,0.366,99,0.418,100,0.418,101,0.761,102,0.366,103,0.418,104,0.366,105,0.391,106,0.418,107,0.366,108,0.418,109,0.366,110,0.717,111,0.391,112,0.418,113,0.011,114,0.011,118,1.116,119,1.322,122,1.639,130,1.918,131,1.918,134,1.232,137,0.468,141,2.964,148,0.86,149,0.86,151,0.799,152,1.316,177,0.895,178,1.214,180,1.414,183,0.609,184,0.318,185,1.369,194,0.648,195,2.464,213,1.414,214,1.414,222,0.959,224,3.361,237,0.418,241,1.881,243,2.137,247,2.137,248,1.352,252,0.799,254,1.033,261,1.671,278,0.572,279,1.881,293,1.214,294,0.783,295,0.959,308,0.895,326,1.214,329,1.214,341,1.517,342,1.116,351,1.894,423,2.703,498,1.27,597,0.69,611,0.895,619,0.648,623,1.033,699,0.959,701,3.125,704,1.033,727,3.361,908,3.432,1008,1.674,1074,2.103,1092,4.137,1127,4.188,1128,4.649,1129,4.188,1130,4.317,1131,2.646,1132,3.281,1133,3.281,1134,2.964,1135,2.608,1136,3.281,1137,3.281,1138,3.281,1139,3.281,1140,2.896,1141,3.584,1142,3.281,1143,3.281,1144,2.646,1145,1.674,1146,1.674,1147,1.674,1148,1.674,1149,3.728,1150,3.281,1151,3.281,1152,1.674,1153,4.06,1154,4.317,1155,4.317,1156,4.06,1157,1.674,1158,2.646,1159,1.674,1160,1.674,1161,1.674,1162,1.674,1163,1.674,1164,1.674,1165,1.674,1166,1.674,1167,2.646,1168,1.674,1169,3.281,1170,1.674,1171,2.646,1172,3.281,1173,1.674,1174,4.06,1175,3.728,1176,4.317,1177,2.646,1178,2.646,1179,3.281,1180,1.674,1181,1.674,1182,1.674,1183,1.674,1184,1.674,1185,1.674,1186,1.674,1187,1.674,1188,1.674,1189,2.646,1190,2.646,1191,3.728,1192,2.646,1193,3.728,1194,1.674,1195,1.674,1196,1.674,1197,1.674,1198,2.646,1199,1.674,1200,2.646,1201,1.674,1202,1.674,1203,1.674,1204,1.674,1205,1.674,1312,3.117,1313,3.117,1314,3.117,1315,3.117,1316,3.117,1317,1.972,1318,3.117,1319,1.972,1320,1.972,1321,1.972,1322,1.972,1323,1.972,1324,1.972,1325,1.972,1326,1.972,1327,1.972,1328,1.972]],["title/components/LoadingComponent.html",[0,0.033,102,0.639]],["body/components/LoadingComponent.html",[0,0.057,1,0.791,2,1.005,3,0.236,4,0.201,5,0.903,6,0.903,7,0.903,8,0.201,12,0.903,13,1.433,14,1.433,15,0.903,17,0.845,19,1.075,21,2.457,23,0.201,24,0.696,28,0.738,29,0.903,30,0.024,33,0.462,35,0.536,40,0.382,41,0.168,53,0.299,54,0.421,56,0.903,57,1.148,58,1.148,59,0.903,60,1.328,61,0.903,62,0.299,63,0.903,64,0.791,65,0.68,66,1.148,67,1.328,68,0.791,69,0.646,70,1.328,71,0.791,72,0.903,73,0.791,74,0.903,75,1.148,76,0.791,77,1.312,78,0.903,79,0.845,80,0.791,81,0.903,82,0.791,83,0.903,84,0.791,85,0.791,86,0.845,87,0.587,88,0.791,89,0.791,90,0.592,91,0.903,92,0.791,93,0.791,94,0.903,95,0.903,96,0.791,97,0.903,98,0.791,99,0.903,100,0.903,101,0.738,102,1.163,103,0.903,104,0.791,105,0.845,106,0.903,107,0.791,108,0.903,109,0.791,110,0.791,111,0.845,112,0.903,113,0.018,114,0.018,224,3.065,252,0.813,1329,3.615,1330,5.415,1331,5.415,1332,5.954,1333,5.415,1334,4.259]],["title/components/PageNotFoundComponent.html",[0,0.033,104,0.639]],["body/components/PageNotFoundComponent.html",[0,0.055,1,0.954,2,0.954,3,0.217,4,0.186,5,0.833,6,0.833,7,0.833,8,0.186,10,2.652,12,0.833,13,1.425,14,1.425,15,0.833,17,1.02,18,2.6,19,1.02,21,2.332,30,0.025,33,0.426,35,0.652,37,1.374,40,0.352,41,0.155,43,0.59,46,0.729,53,0.284,54,0.389,56,0.833,57,1.09,58,1.09,59,0.833,60,1.288,61,0.833,62,0.317,63,0.833,64,0.729,65,0.659,66,1.09,67,1.288,68,0.729,69,0.621,70,1.288,71,0.729,72,0.833,73,0.729,74,0.833,75,1.09,76,0.729,77,1.285,78,0.833,79,0.78,80,0.729,81,0.833,82,0.729,83,0.833,84,0.729,85,0.729,86,0.78,87,0.558,88,0.729,89,0.729,90,0.547,91,0.833,92,0.729,93,0.729,94,0.833,95,0.833,96,0.954,97,0.833,98,0.729,99,0.833,100,0.833,101,0.681,102,0.729,103,0.833,104,1.128,105,1.309,106,0.833,107,0.729,108,0.833,109,0.729,110,0.729,111,0.78,112,0.833,113,0.017,114,0.017,122,2.43,134,1.02,148,0.634,149,0.634,217,3,237,1.09,239,4.102,246,2.91,247,2.958,250,2.6,288,1.141,292,2.944,798,3.335,1098,4.364,1300,3.335,1335,4.364,1336,4.364,1337,3.335,1338,5.141,1339,5.141,1340,3.929,1341,3.929]],["title/components/PaginationComponent.html",[0,0.033,107,0.639]],["body/components/PaginationComponent.html",[0,0.053,1,0.678,2,0.91,3,0.202,4,0.173,5,0.775,6,0.775,7,0.775,8,0.173,12,0.775,13,1.417,14,1.417,15,0.775,17,0.973,19,0.973,23,0.173,28,0.958,29,1.172,30,0.025,33,0.688,35,0.609,38,1.55,40,0.328,41,0.243,43,0.735,53,0.271,54,0.362,56,0.775,57,1.039,58,1.039,59,0.775,60,1.252,61,0.775,62,0.306,63,0.775,64,0.678,65,0.641,66,1.039,67,1.252,68,0.678,69,0.6,70,1.252,71,0.678,72,0.775,73,0.678,74,0.775,75,1.039,76,0.678,77,1.259,78,0.775,79,0.726,80,0.678,81,0.775,82,0.678,83,0.775,84,0.678,85,0.678,86,0.726,87,0.532,88,0.678,89,0.678,90,0.508,91,0.775,92,0.678,93,0.678,94,0.775,95,0.775,96,0.678,97,0.775,98,0.678,99,0.775,100,0.775,101,0.633,102,0.678,103,0.775,104,0.678,105,1.259,106,0.775,107,1.096,108,0.775,109,0.678,110,0.678,111,0.726,112,0.775,113,0.017,114,0.017,115,1.278,120,3.402,128,3.731,129,1.714,137,0.735,142,3.016,148,0.59,149,0.59,151,0.548,152,1.108,177,1.658,180,1.658,181,2.069,185,0.88,196,1.941,213,2.223,214,2.223,351,1.825,423,3.402,498,1.201,661,2.223,662,2.385,667,2.69,678,2.385,1342,3.102,1343,4.9,1344,5.528,1345,5.528,1346,5.528,1347,4.9,1348,4.9,1349,6.16,1350,5.528,1351,5.528,1352,5.528,1353,5.528,1354,6.737,1355,3.655,1356,4.9,1357,3.655,1358,3.655,1359,3.655,1360,4.9,1361,3.655,1362,3.655,1363,3.655,1364,3.655,1365,3.655]],["title/components/SwitchComponent.html",[0,0.033,109,0.639]],["body/components/SwitchComponent.html",[0,0.049,1,0.574,2,0.81,3,0.171,4,0.146,5,0.655,6,0.655,7,0.655,8,0.146,12,0.655,13,1.397,14,1.397,15,0.655,17,0.867,18,2.297,19,0.867,23,0.146,24,0.561,25,2.931,26,2.243,28,0.877,29,1.277,30,0.025,32,0.81,33,0.653,35,0.574,37,1.081,38,1.311,40,0.277,41,0.173,43,0.464,53,0.241,54,0.306,56,0.655,57,0.925,58,0.925,59,0.655,60,1.166,61,0.655,62,0.241,63,0.655,64,0.574,65,0.597,66,0.925,67,1.166,68,0.574,69,0.549,70,1.166,71,0.574,72,0.655,73,0.574,74,0.655,75,0.925,76,0.574,77,1.196,78,0.655,79,0.614,80,0.574,81,0.655,82,0.574,83,0.655,84,0.574,85,0.574,86,0.614,87,0.474,88,0.574,89,0.574,90,0.43,91,0.655,92,0.574,93,0.574,94,0.655,95,0.655,96,0.574,97,0.655,98,0.574,99,0.655,100,0.655,101,0.536,102,0.574,103,0.655,104,0.574,105,0.614,106,0.655,107,0.574,108,0.655,109,1.021,110,1.077,111,0.614,112,0.655,113,0.015,114,0.015,115,1.081,120,3.116,129,1.527,132,3.416,137,0.655,151,0.655,152,1.244,159,1.402,177,1.402,180,1.402,193,1.924,196,1.663,210,2.687,211,3.416,213,1.981,214,1.981,232,3.712,279,2.677,351,2.306,357,1.618,363,2.463,366,2.471,377,2.865,378,2.316,379,1.618,385,2.651,387,2.286,388,2.286,390,2.125,397,2.471,398,1.618,402,2.687,411,2.623,412,1.902,413,2.651,415,2.865,453,3.271,464,1.504,465,1.504,471,2.316,477,1.902,479,1.618,498,1.906,597,1.527,661,1.981,662,2.125,667,2.677,678,2.125,716,2.086,739,1.902,740,3.81,917,2.316,1134,2.086,1135,3.416,1366,2.623,1367,3.706,1368,5.062,1369,4.366,1370,5.062,1371,5.062,1372,4.366,1373,5.062,1374,5.062,1375,5.501,1376,5.062,1377,3.091,1378,3.091,1379,3.091,1380,3.091,1381,4.366,1382,5.501,1383,3.091,1384,4.366,1385,3.091,1386,3.091,1387,3.091,1388,3.091,1389,3.091,1390,4.366,1391,3.091,1392,4.366,1393,3.091,1394,4.366,1395,4.366,1396,4.366,1397,5.062,1398,4.366,1399,4.366,1400,3.091,1401,3.091]],["title/interfaces/apiServiceShortStructure.html",[182,0.999,619,1.131]],["body/interfaces/apiServiceShortStructure.html",[3,0.272,4,0.233,8,0.233,23,0.233,24,0.761,30,0.024,32,1.286,41,0.26,53,0.373,62,0.383,69,0.642,87,0.642,113,0.02,114,0.02,182,1.718,184,1.025,222,2.393,250,2.231,252,1.073,261,1.615,278,2.028,619,2.215,620,2.575,621,2.783,622,2.783,623,3.531,624,2.783,625,2.393]],["title/coverage.html",[1402,3.993]],["body/coverage.html",[0,0.068,1,0.691,8,0.176,9,3.16,10,2.512,11,3.16,30,0.025,41,0.147,64,0.691,65,0.645,68,0.691,69,0.605,71,0.691,73,0.691,76,0.691,77,1.181,79,0.739,80,0.691,82,0.691,84,0.691,85,0.691,86,0.739,87,0.404,88,0.691,89,0.691,92,0.691,93,0.691,96,0.691,98,0.691,101,0.645,102,0.691,104,0.691,107,0.691,109,0.691,113,0.017,114,0.017,116,3.16,117,2.789,118,3.508,182,1.081,184,1.001,207,3.16,208,3.16,209,4.458,241,1.812,243,1.812,244,2.107,245,2.107,261,1.223,294,1.479,351,2.7,483,1.695,484,2.789,486,3.717,487,3.16,488,3.662,498,1.223,558,1.95,600,3.16,601,3.765,619,2.094,621,3.508,622,3.508,625,1.812,626,3.16,634,3.16,635,2.789,636,3.717,652,3.765,653,3.16,654,3.16,682,2.291,684,2.789,743,2.789,744,3.16,773,2.512,789,3.16,790,3.16,821,2.789,838,3.16,839,3.16,840,3.16,936,3.16,948,3.16,952,2.512,973,3.16,988,3.16,1029,3.16,1036,2.512,1050,3.16,1068,3.16,1069,3.16,1070,3.16,1087,3.16,1088,3.16,1107,3.16,1127,2.512,1128,3.717,1129,3.348,1206,3.16,1207,3.16,1208,3.16,1246,3.16,1269,3.16,1270,2.512,1272,3.16,1273,3.16,1286,3.16,1287,3.16,1329,3.16,1335,3.16,1336,3.16,1337,3.16,1342,3.16,1366,3.16,1402,3.16,1403,3.723,1404,3.723,1405,3.723,1406,5.951,1407,3.16,1408,3.723,1409,3.16,1410,3.723,1411,4.961,1412,5.58,1413,4.961,1414,4.961,1415,3.723,1416,5.58,1417,3.723,1418,6.198,1419,6.198,1420,4.961,1421,3.723,1422,3.723,1423,3.723,1424,3.723,1425,3.723,1426,3.723,1427,3.723,1428,3.723,1429,4.961,1430,4.961,1431,3.723,1432,3.16]],["title/dependencies.html",[1433,2.436,1434,3.515]],["body/dependencies.html",[30,0.025,37,1.671,40,0.428,43,1.076,44,2.941,46,0.887,52,1.476,113,0.02,114,0.02,177,2.168,180,2.168,181,2.705,287,4.056,288,1.387,509,4.056,880,4.056,1432,4.056,1434,4.056,1435,4.779,1436,6.951,1437,4.779,1438,5.817,1439,4.938,1440,4.779,1441,4.779,1442,6.69,1443,4.779,1444,7.042,1445,4.779,1446,4.779,1447,4.779,1448,4.779,1449,4.779,1450,4.779,1451,6.272,1452,6.272,1453,4.779,1454,4.779,1455,4.779,1456,4.779,1457,4.779,1458,4.779,1459,4.779,1460,4.779,1461,4.779,1462,4.779]],["title/index.html",[23,0.136,1463,2.87,1464,2.87]],["body/index.html",[0,0.059,2,0.855,4,0.218,28,0.985,30,0.019,105,0.914,111,0.914,113,0.019,114,0.019,215,3.45,410,4.15,436,3.45,498,1.513,522,5.237,632,3.908,704,2.411,705,2.834,1106,4.827,1141,3.45,1439,3.908,1465,6.17,1466,4.604,1467,5.686,1468,6.443,1469,6.62,1470,3.908,1471,4.604,1472,5.686,1473,6.17,1474,4.604,1475,6.62,1476,6.743,1477,6.743,1478,4.604,1479,5.686,1480,4.604,1481,4.604,1482,5.686,1483,4.604,1484,4.604,1485,4.604,1486,4.604,1487,5.686,1488,4.604,1489,4.604,1490,4.604,1491,6.17,1492,4.604,1493,4.604,1494,4.604,1495,4.604,1496,4.604,1497,4.604,1498,4.604,1499,4.604,1500,4.604,1501,4.604,1502,4.604,1503,4.604,1504,4.604,1505,4.604,1506,4.604,1507,4.604,1508,5.686,1509,6.17,1510,4.604,1511,4.604,1512,4.604,1513,4.604,1514,4.604,1515,4.604,1516,6.17,1517,4.604,1518,4.604,1519,5.686,1520,4.604,1521,4.604,1522,4.604,1523,4.604,1524,4.604,1525,4.604,1526,4.604,1527,4.604,1528,4.604,1529,4.604,1530,4.604,1531,4.604,1532,4.604,1533,4.604,1534,4.604,1535,3.45,1536,4.604]],["title/modules.html",[1537,3.993]],["body/modules.html",[30,0.022,113,0.022,114,0.022,1537,4.797]],["title/overview.html",[1535,3.525]],["body/overview.html",[2,1.039,30,0.022,113,0.022,114,0.022,485,2.539,620,2.93,1535,4.192,1538,5.596,1539,5.596,1540,5.596]],["title/properties.html",[24,0.532,1433,2.436]],["body/properties.html",[24,0.723,30,0.023,113,0.022,114,0.022,1470,4.773,1541,5.623]],["title/miscellaneous/variables.html",[1542,2.436,1543,3.515]],["body/miscellaneous/variables.html",[23,0.253,28,0.928,29,1.136,30,0.024,41,0.212,113,0.021,114,0.021,193,2.178,1270,3.616,1367,4.548,1407,4.548,1409,5.286,1542,4.548,1543,4.548,1544,5.358,1545,5.358,1546,5.358,1547,5.358,1548,5.358,1549,5.358,1550,5.358,1551,5.358,1552,5.358,1553,5.358,1554,5.358,1555,5.358]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":351,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EntityDialogComponent.html":{},"interfaces/FileStatus.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1541,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":1462,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":929,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["0.3s",{"_index":393,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/IconTrashComponent.html":{}}}],["0.9rem",{"_index":459,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["0/1",{"_index":1410,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1413,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1429,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1417,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1414,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1415,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1421,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1406,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":1425,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1412,"title":{},"body":{"coverage.html":{}}}],["0/34",{"_index":1428,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1418,"title":{},"body":{"coverage.html":{}}}],["0/46",{"_index":1424,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1430,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1420,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1416,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1419,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1411,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":449,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{}}}],["004080",{"_index":482,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["0056a6",{"_index":444,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["0f5132",{"_index":470,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["0px",{"_index":389,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["1",{"_index":423,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{}}}],["1.2",{"_index":740,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{},"components/SwitchComponent.html":{}}}],["1.5",{"_index":722,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["1.5rem",{"_index":912,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["100",{"_index":442,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["10px",{"_index":424,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/IconTrashComponent.html":{}}}],["1200px",{"_index":930,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["12px",{"_index":456,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["13px",{"_index":481,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["14px",{"_index":1397,"title":{},"body":{"components/SwitchComponent.html":{}}}],["150px",{"_index":934,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["15px",{"_index":427,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{}}}],["16",{"_index":1356,"title":{},"body":{"components/PaginationComponent.html":{}}}],["16.8px",{"_index":1396,"title":{},"body":{"components/SwitchComponent.html":{}}}],["16px",{"_index":414,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["19.1.0",{"_index":1436,"title":{},"body":{"dependencies.html":{}}}],["19.1.3",{"_index":1471,"title":{},"body":{"index.html":{}}}],["1fr",{"_index":921,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["1px",{"_index":437,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["1rem",{"_index":448,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["2",{"_index":724,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["2.3.0",{"_index":1460,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":362,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["20",{"_index":741,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{}}}],["2000",{"_index":337,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["20px",{"_index":357,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/IconTrashComponent.html":{},"components/SwitchComponent.html":{}}}],["22",{"_index":924,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["23",{"_index":1538,"title":{},"body":{"overview.html":{}}}],["24px",{"_index":716,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/SwitchComponent.html":{}}}],["2px",{"_index":923,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["2rem",{"_index":476,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["3",{"_index":418,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["3.10.1",{"_index":1457,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":520,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["300px",{"_index":925,"title":{},"body":{"components/EndpointCardListComponent.html":{},"components/FilterByInputComponent.html":{}}}],["333",{"_index":364,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["34px",{"_index":1390,"title":{},"body":{"components/SwitchComponent.html":{}}}],["3px",{"_index":1398,"title":{},"body":{"components/SwitchComponent.html":{}}}],["3rem",{"_index":367,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["4.0.2",{"_index":1450,"title":{},"body":{"dependencies.html":{}}}],["4.21.0",{"_index":1444,"title":{},"body":{"dependencies.html":{}}}],["4.22.0",{"_index":1452,"title":{},"body":{"dependencies.html":{}}}],["4.24.0",{"_index":1455,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":910,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["40.8px",{"_index":1389,"title":{},"body":{"components/SwitchComponent.html":{}}}],["400",{"_index":1093,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["404",{"_index":1096,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["408",{"_index":1099,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["409",{"_index":703,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["40px",{"_index":460,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["45px",{"_index":399,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["4caf50",{"_index":1400,"title":{},"body":{"components/SwitchComponent.html":{}}}],["4px",{"_index":453,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/SwitchComponent.html":{}}}],["4s",{"_index":1394,"title":{},"body":{"components/SwitchComponent.html":{}}}],["50",{"_index":917,"title":{},"body":{"components/EndpointCardListComponent.html":{},"components/FilterByInputComponent.html":{},"components/SwitchComponent.html":{}}}],["500",{"_index":1100,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["5000",{"_index":521,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"components/EntityDialogComponent.html":{}}}],["502",{"_index":1101,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["503",{"_index":1102,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["504",{"_index":1103,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["555",{"_index":463,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["5px",{"_index":416,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["6",{"_index":1540,"title":{},"body":{"overview.html":{}}}],["600",{"_index":369,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["65",{"_index":717,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["666",{"_index":721,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{}}}],["7.8.0",{"_index":1458,"title":{},"body":{"dependencies.html":{}}}],["768px",{"_index":475,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["7px",{"_index":480,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["8",{"_index":1539,"title":{},"body":{"overview.html":{}}}],["8.0.7",{"_index":1441,"title":{},"body":{"dependencies.html":{}}}],["888",{"_index":736,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["8px",{"_index":429,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["9",{"_index":1228,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["992px",{"_index":932,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["9]/g",{"_index":204,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["a.click",{"_index":1124,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["a.download",{"_index":1122,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["a.href",{"_index":1121,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["absolute",{"_index":397,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/SwitchComponent.html":{}}}],["absolutely",{"_index":395,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["accessors",{"_index":142,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/PaginationComponent.html":{}}}],["accordion",{"_index":373,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["accordion::after",{"_index":408,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["action",{"_index":975,"title":{},"body":{"injectables/EndpointService.html":{}}}],["actionname",{"_index":977,"title":{},"body":{"injectables/EndpointService.html":{}}}],["actions",{"_index":738,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["activatedroute",{"_index":239,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["actual_component",{"_index":112,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["additional",{"_index":1527,"title":{},"body":{"index.html":{}}}],["alert",{"_index":15,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["alertdeletecomponent",{"_index":1,"title":{"components/AlertDeleteComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["alerts",{"_index":248,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interfaces/FileStatus.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["alertservice",{"_index":1089,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["align",{"_index":370,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["allowedchars",{"_index":1241,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["allowedchars.test(inputchar",{"_index":1242,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["angular",{"_index":1468,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1435,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":37,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"interfaces/FileStatus.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":579,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["angular/compiler",{"_index":1437,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":40,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":177,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1438,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":288,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{},"dependencies.html":{}}}],["api",{"_index":65,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["api'},{'name",{"_index":78,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["api.component.css",{"_index":686,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.css,../../styles/card.css,../../styles/button.css,../../styles/icon.css",{"_index":656,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.html",{"_index":657,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts",{"_index":654,"title":{},"body":{"components/CardApiComponent.html":{},"coverage.html":{}}}],["api.component.ts:122",{"_index":669,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:47",{"_index":666,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:48",{"_index":668,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:49",{"_index":677,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:50",{"_index":676,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:52",{"_index":675,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:55",{"_index":665,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:65",{"_index":671,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:80",{"_index":672,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.ts",{"_index":622,"title":{},"body":{"interfaces/ApiServiceStructure.html":{},"interfaces/Endpoint.html":{},"interfaces/Entity.html":{},"interfaces/EntityShort.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{}}}],["api/card",{"_index":653,"title":{},"body":{"components/CardApiComponent.html":{},"coverage.html":{}}}],["apideleted",{"_index":663,"title":{},"body":{"components/CardApiComponent.html":{}}}],["apidialogcomponent",{"_index":64,"title":{"components/ApiDialogComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["apieasier",{"_index":632,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["apiendpointlistcomponent",{"_index":68,"title":{"components/ApiEndpointListComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["apihubserviceservice",{"_index":484,"title":{"injectables/ApiHubServiceService.html":{}},"body":{"injectables/ApiHubServiceService.html":{},"coverage.html":{}}}],["apiinfo",{"_index":220,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/IconTrashComponent.html":{}}}],["apiinfo.description",{"_index":714,"title":{},"body":{"components/CardApiComponent.html":{}}}],["apiinfo.name",{"_index":713,"title":{},"body":{"components/CardApiComponent.html":{}}}],["apilist",{"_index":527,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["apilistsubject",{"_index":489,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["apiname",{"_index":221,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["apiservice",{"_index":241,"title":{"injectables/ApiService.html":{}},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["apiservice.name",{"_index":539,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["apiservicename",{"_index":956,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["apiservicerepository",{"_index":242,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["apiservicerepositoryservice",{"_index":243,"title":{"injectables/ApiServiceRepositoryService.html":{}},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["apiserviceshortstructure",{"_index":182,"title":{"interfaces/apiServiceShortStructure.html":{}},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"interfaces/Endpoint.html":{},"interfaces/Entity.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ExportApiButtonComponent.html":{},"components/IconTrashComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{}}}],["apiservicestructure",{"_index":261,"title":{"interfaces/ApiServiceStructure.html":{}},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"interfaces/Endpoint.html":{},"interfaces/Entity.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{}}}],["apistructure",{"_index":263,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["apistructure.entities",{"_index":313,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["apistructure.isactive",{"_index":315,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["app.component.css",{"_index":630,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":629,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":71,"title":{"components/AppComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1409,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appearance",{"_index":597,"title":{},"body":{"injectables/ApiService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interfaces/FileStatus.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["application",{"_index":1482,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":1118,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["applicationconfig",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artifacts",{"_index":1501,"title":{},"body":{"index.html":{}}}],["assets/dora.png",{"_index":1333,"title":{},"body":{"components/LoadingComponent.html":{}}}],["auto",{"_index":403,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["autoclose",{"_index":1026,"title":{},"body":{"components/EntityDialogComponent.html":{},"components/IconTrashComponent.html":{}}}],["automatically",{"_index":1483,"title":{},"body":{"index.html":{}}}],["available",{"_index":1493,"title":{},"body":{"index.html":{}}}],["back",{"_index":74,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["backbuttoncomponent",{"_index":73,"title":{"components/BackButtonComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["backbuttoncomponent,commonmodule",{"_index":1264,"title":{},"body":{"components/HeaderComponent.html":{}}}],["background",{"_index":385,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/SwitchComponent.html":{}}}],["basedomain",{"_index":648,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["baseurl",{"_index":490,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["behaviorsubject",{"_index":499,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["between",{"_index":384,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["blob",{"_index":1116,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["blob([jsonstring",{"_index":1117,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["block",{"_index":412,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/SwitchComponent.html":{}}}],["bold",{"_index":443,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["boolean",{"_index":32,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/HeaderComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["border",{"_index":387,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/SwitchComponent.html":{}}}],["bottom",{"_index":366,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/SwitchComponent.html":{}}}],["box",{"_index":391,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["break",{"_index":447,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["browser",{"_index":1439,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["build",{"_index":522,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"index.html":{}}}],["buildthis",{"_index":1498,"title":{},"body":{"index.html":{}}}],["button",{"_index":374,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["button'},{'name",{"_index":75,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["button.component",{"_index":685,"title":{},"body":{"components/CardApiComponent.html":{},"components/HeaderComponent.html":{}}}],["button.component.css",{"_index":638,"title":{},"body":{"components/BackButtonComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["button.component.css,../../styles/button.css",{"_index":1108,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["button.component.html",{"_index":637,"title":{},"body":{"components/BackButtonComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["button.component.ts",{"_index":636,"title":{},"body":{"components/BackButtonComponent.html":{},"components/ExportApiButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:11",{"_index":642,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["button.component.ts:14",{"_index":643,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["button.component.ts:15",{"_index":1110,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["button.component.ts:21",{"_index":1111,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["button.copied",{"_index":468,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["button/back",{"_index":635,"title":{},"body":{"components/BackButtonComponent.html":{},"components/HeaderComponent.html":{},"coverage.html":{}}}],["button/export",{"_index":684,"title":{},"body":{"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{},"coverage.html":{}}}],["button:hover",{"_index":466,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["buttonclick",{"_index":1253,"title":{},"body":{"components/HeaderComponent.html":{}}}],["buttontext",{"_index":1250,"title":{},"body":{"components/HeaderComponent.html":{}}}],["calc(1.5em",{"_index":723,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["card",{"_index":77,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["card:hover",{"_index":926,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["cardapicomponent",{"_index":76,"title":{"components/CardApiComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["cardapilistcomponent",{"_index":79,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["cardendpointcomponent",{"_index":80,"title":{"components/CardEndpointComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["cardentitycomponent",{"_index":82,"title":{"components/CardEntityComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["case",{"_index":1092,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["catch",{"_index":329,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/EntityDialogComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["catch(err",{"_index":524,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["catcherror",{"_index":581,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["catcherror((error",{"_index":1285,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["cc0000",{"_index":914,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["cd",{"_index":246,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["cdr",{"_index":1144,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["center",{"_index":371,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["changedetection",{"_index":213,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EntityDialogComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["changedetectionstrategy",{"_index":38,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EntityDialogComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":214,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EntityDialogComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["changedetectorref",{"_index":247,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["charts",{"_index":1443,"title":{},"body":{"dependencies.html":{}}}],["chevron",{"_index":404,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["child",{"_index":441,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["choose",{"_index":1523,"title":{},"body":{"index.html":{}}}],["chrome",{"_index":729,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["class",{"_index":54,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["cleanedvalue",{"_index":200,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["cli",{"_index":1469,"title":{},"body":{"index.html":{}}}],["click",{"_index":1249,"title":{},"body":{"components/HeaderComponent.html":{}}}],["closeable",{"_index":1262,"title":{},"body":{"components/HeaderComponent.html":{}}}],["closed",{"_index":707,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["code",{"_index":1106,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["color",{"_index":363,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/IconTrashComponent.html":{},"components/SwitchComponent.html":{}}}],["column",{"_index":435,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["columns",{"_index":919,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["come",{"_index":1521,"title":{},"body":{"index.html":{}}}],["command",{"_index":1516,"title":{},"body":{"index.html":{}}}],["commerce",{"_index":1445,"title":{},"body":{"dependencies.html":{}}}],["commonmodule",{"_index":18,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["compile",{"_index":1499,"title":{},"body":{"index.html":{}}}],["complete",{"_index":705,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"index.html":{}}}],["component",{"_index":0,"title":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":61,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"index.html":{},"overview.html":{}}}],["components/alert",{"_index":1341,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["components/card",{"_index":881,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["components/endpoint",{"_index":883,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["components/header/header.component",{"_index":292,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["components/loading/loading.component",{"_index":291,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["components/switch/switch.component",{"_index":298,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["connecting",{"_index":525,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["console.error",{"_index":342,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/EntityDialogComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["console.error('error",{"_index":331,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{}}}],["console.error(message",{"_index":833,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["console.info('dialog",{"_index":706,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["console.info(`dialog",{"_index":695,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{}}}],["console.log",{"_index":341,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"interfaces/FileStatus.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["console.log('api",{"_index":698,"title":{},"body":{"components/CardApiComponent.html":{}}}],["console.log('connected",{"_index":523,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["console.log(apilist",{"_index":529,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["console.log(currentlist",{"_index":535,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["console.log(error",{"_index":1126,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["console.warn",{"_index":1197,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["const",{"_index":195,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"components/BackButtonComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["constructor",{"_index":237,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["constructor(alerts",{"_index":1293,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["constructor(apiservice",{"_index":602,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["constructor(apiservicerepository",{"_index":664,"title":{},"body":{"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["constructor(cd",{"_index":798,"title":{},"body":{"components/CardEntityComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["constructor(cdr",{"_index":1317,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["constructor(endpointrepositoryservice",{"_index":754,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["constructor(endpointservice",{"_index":951,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["constructor(entityservice",{"_index":1035,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["constructor(errorhandler",{"_index":1275,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["constructor(http",{"_index":555,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["constructor(location",{"_index":640,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["constructor(private",{"_index":611,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/FileStatus.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/ImportDialogComponent.html":{}}}],["constructor(route",{"_index":238,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["constructor(router",{"_index":854,"title":{},"body":{"components/EndpointCardListComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["container",{"_index":355,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["content",{"_index":159,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["context",{"_index":27,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["control",{"_index":1140,"title":{},"body":{"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{}}}],["control.value",{"_index":1234,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["controlname",{"_index":1214,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["copy",{"_index":450,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["copying",{"_index":332,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["copytexttoclipboard",{"_index":226,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["copytexttoclipboard(text",{"_index":251,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["copytoclipboard",{"_index":227,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["copytoclipboard(entityname",{"_index":255,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["correctly",{"_index":407,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["coverage",{"_index":1402,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createapientity",{"_index":1030,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["createapientity(apiservicename",{"_index":1037,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["createapiservice",{"_index":547,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["createapiservice(service",{"_index":561,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["createendpoint",{"_index":844,"title":{},"body":{"components/EndpointCardListComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["createendpoint(apiservicename",{"_index":954,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["createendpoint(data",{"_index":856,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["createendpoint(this.apiname",{"_index":902,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["createfullapiservice",{"_index":548,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["createfullapiservice(service",{"_index":563,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["currentfiles",{"_index":1201,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["currentlist",{"_index":531,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["currentlist.findindex((apiservice",{"_index":538,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["currentlist.push(api",{"_index":533,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["currentlist.splice(index",{"_index":542,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["currentlist[index",{"_index":540,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["currentpage",{"_index":1349,"title":{},"body":{"components/PaginationComponent.html":{}}}],["currenturl",{"_index":644,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["cursor",{"_index":464,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/IconTrashComponent.html":{},"components/SwitchComponent.html":{}}}],["d.name",{"_index":1190,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["d1e7dd",{"_index":469,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["data",{"_index":144,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["data.name}.json",{"_index":1123,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["datawithoutname",{"_index":1113,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["ddd",{"_index":452,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["decorators",{"_index":164,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["default",{"_index":28,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":33,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["delete",{"_index":16,"title":{},"body":{"components/AlertDeleteComponent.html":{},"injectables/ApiService.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{}}}],["delete'},{'name",{"_index":63,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["delete(`${this.baseurl}/apientity/${apiservicename}/${entityname",{"_index":1065,"title":{},"body":{"injectables/EntityService.html":{}}}],["delete.component",{"_index":1300,"title":{},"body":{"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["delete.component.css",{"_index":22,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["delete.component.html",{"_index":20,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["delete.component.ts",{"_index":11,"title":{},"body":{"components/AlertDeleteComponent.html":{},"coverage.html":{}}}],["delete.component.ts:16",{"_index":34,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["delete/alert",{"_index":10,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["deleteapientity",{"_index":1031,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["deleteapientity(apiservicename",{"_index":1038,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["deleteapientity(this.apiname",{"_index":827,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["deleteapiservice",{"_index":549,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["deleteapiservice(servicename",{"_index":565,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["deleteendpoint",{"_index":785,"title":{},"body":{"components/CardEndpointComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["deleteendpoint(apiservicename",{"_index":957,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["dependencies",{"_index":1434,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":623,"title":{},"body":{"interfaces/ApiServiceStructure.html":{},"interfaces/Endpoint.html":{},"interfaces/Entity.html":{},"interfaces/EntityShort.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["descriptioninputref",{"_index":133,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["detailed",{"_index":1532,"title":{},"body":{"index.html":{}}}],["development",{"_index":1472,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":119,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"interfaces/FileStatus.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{}}}],["dialog'},{'name",{"_index":67,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["dialog.component",{"_index":681,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/HeaderComponent.html":{}}}],["dialog.component.css",{"_index":130,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["dialog.component.html",{"_index":131,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["dialog.component.ts",{"_index":118,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:105",{"_index":1321,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:109",{"_index":1001,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:113",{"_index":1003,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:117",{"_index":1323,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:123",{"_index":1000,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:131",{"_index":999,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:169",{"_index":1322,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:28",{"_index":1325,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:29",{"_index":1326,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":1327,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:31",{"_index":1328,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:32",{"_index":1318,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:33",{"_index":171,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:34",{"_index":944,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:35",{"_index":167,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:36",{"_index":941,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:37",{"_index":169,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:39",{"_index":163,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:43",{"_index":945,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:44",{"_index":173,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:47",{"_index":940,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:48",{"_index":175,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:50",{"_index":1008,"title":{},"body":{"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:52",{"_index":161,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:53",{"_index":1005,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:54",{"_index":1007,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:55",{"_index":1006,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:56",{"_index":939,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:57",{"_index":1009,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:60",{"_index":938,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:61",{"_index":158,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:65",{"_index":155,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:68",{"_index":1324,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:73",{"_index":147,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:75",{"_index":1012,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:77",{"_index":1320,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:89",{"_index":997,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:92",{"_index":1319,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:96",{"_index":998,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog/api",{"_index":117,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"coverage.html":{}}}],["dialog/endpoint",{"_index":773,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"coverage.html":{}}}],["dialog/entity",{"_index":821,"title":{},"body":{"components/CardEntityComponent.html":{},"components/EntityDialogComponent.html":{},"coverage.html":{}}}],["dialog/import",{"_index":1129,"title":{},"body":{"interfaces/FileStatus.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["dialogs",{"_index":135,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["direction",{"_index":434,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["directive",{"_index":59,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["directives",{"_index":111,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"index.html":{}}}],["directory",{"_index":1503,"title":{},"body":{"index.html":{}}}],["dismissible",{"_index":192,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/HeaderComponent.html":{}}}],["display",{"_index":379,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/SwitchComponent.html":{}}}],["display'},{'name",{"_index":91,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["display.component.css",{"_index":1072,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display.component.html",{"_index":1071,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display.component.ts",{"_index":1070,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"coverage.html":{}}}],["display.component.ts:12",{"_index":1078,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display.component.ts:13",{"_index":1075,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display.component.ts:17",{"_index":1077,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display.component.ts:25",{"_index":1076,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display/error",{"_index":1069,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"coverage.html":{}}}],["dist",{"_index":1502,"title":{},"body":{"index.html":{}}}],["doc",{"_index":1446,"title":{},"body":{"dependencies.html":{}}}],["document.body.appendchild(textarea",{"_index":324,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["document.body.removechild(textarea",{"_index":334,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["document.createelement('a",{"_index":1120,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["document.createelement('textarea",{"_index":322,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["document.execcommand('copy",{"_index":327,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["documentation",{"_index":1403,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["dynamic",{"_index":1440,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1163,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["e.target?.result",{"_index":1165,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["e0e0e0",{"_index":467,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["e2e",{"_index":1518,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":1520,"title":{},"body":{"index.html":{}}}],["ease",{"_index":394,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["edge",{"_index":731,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["edit",{"_index":66,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["eee",{"_index":439,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["element",{"_index":58,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["elementref",{"_index":146,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["ellipsis",{"_index":718,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["emit",{"_index":710,"title":{},"body":{"components/CardApiComponent.html":{}}}],["emitted",{"_index":696,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{}}}],["emptyentityorapi",{"_index":353,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["end",{"_index":410,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"index.html":{}}}],["endpoint",{"_index":69,"title":{"interfaces/Endpoint.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{}}}],["endpoint'},{'name",{"_index":81,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["endpoint.component",{"_index":882,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["endpoint.component.css",{"_index":774,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.css,../../styles/card.css,../../styles/icon.css",{"_index":745,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.html",{"_index":746,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts",{"_index":744,"title":{},"body":{"components/CardEndpointComponent.html":{},"coverage.html":{}}}],["endpoint.component.ts:106",{"_index":763,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:123",{"_index":764,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:33",{"_index":758,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:34",{"_index":757,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:35",{"_index":756,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:36",{"_index":759,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:38",{"_index":772,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:41",{"_index":755,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:49",{"_index":765,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:69",{"_index":766,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:76",{"_index":768,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:81",{"_index":770,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:95",{"_index":761,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.isactive",{"_index":347,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["endpoint.route",{"_index":350,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["endpoint.type",{"_index":354,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["endpoint/card",{"_index":743,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/EndpointCardListComponent.html":{},"coverage.html":{}}}],["endpointcardlistcomponent",{"_index":84,"title":{"components/EndpointCardListComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["endpointdeleted",{"_index":753,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpointdialogcomponent",{"_index":85,"title":{"components/EndpointDialogComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["endpointinfo",{"_index":751,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/IconTrashComponent.html":{}}}],["endpointinfo.route",{"_index":787,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpointinfo.type",{"_index":788,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpointname",{"_index":958,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["endpointrepositoryservice",{"_index":245,"title":{"injectables/EndpointRepositoryService.html":{}},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEndpointComponent.html":{},"components/EndpointCardListComponent.html":{},"injectables/EndpointRepositoryService.html":{},"coverage.html":{}}}],["endpointroute",{"_index":869,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["endpoints",{"_index":624,"title":{},"body":{"interfaces/ApiServiceStructure.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"interfaces/Entity.html":{},"interfaces/EntityShort.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["endpointservice",{"_index":952,"title":{"injectables/EndpointService.html":{}},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"coverage.html":{}}}],["ensure",{"_index":372,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["enter",{"_index":1021,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["entities",{"_index":222,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"interfaces/ApiServiceStructure.html":{},"interfaces/Endpoint.html":{},"interfaces/Entity.html":{},"interfaces/EntityShort.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["entity",{"_index":87,"title":{"interfaces/Entity.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{}}}],["entity'},{'name",{"_index":83,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["entity.component.css",{"_index":822,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.css,../../styles/card.css,../../styles/button.css,../../styles/icon.css",{"_index":791,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.html",{"_index":792,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts",{"_index":790,"title":{},"body":{"components/CardEntityComponent.html":{},"coverage.html":{}}}],["entity.component.ts:102",{"_index":805,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:107",{"_index":811,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:30",{"_index":801,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:31",{"_index":800,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:32",{"_index":802,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:34",{"_index":819,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:35",{"_index":820,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:36",{"_index":818,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:38",{"_index":817,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:41",{"_index":799,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:49",{"_index":814,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:60",{"_index":815,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:68",{"_index":813,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:80",{"_index":804,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:89",{"_index":807,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:98",{"_index":809,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.endpoints",{"_index":894,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["entity.isactive",{"_index":343,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["entity.name",{"_index":346,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["entity/card",{"_index":789,"title":{},"body":{"components/CardEntityComponent.html":{},"coverage.html":{}}}],["entitycardlistcomponent",{"_index":86,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["entitydeleted",{"_index":797,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entitydialogcomponent",{"_index":88,"title":{"components/EntityDialogComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["entityinfo",{"_index":752,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/IconTrashComponent.html":{}}}],["entityinfo.name",{"_index":836,"title":{},"body":{"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["entityinfo.structure",{"_index":907,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["entityname",{"_index":257,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["entityrepositoryservice",{"_index":244,"title":{"injectables/EntityRepositoryService.html":{}},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"injectables/EntityRepositoryService.html":{},"coverage.html":{}}}],["entityservice",{"_index":1036,"title":{"injectables/EntityService.html":{}},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"coverage.html":{}}}],["entityshort",{"_index":625,"title":{"interfaces/EntityShort.html":{}},"body":{"interfaces/ApiServiceStructure.html":{},"interfaces/Endpoint.html":{},"interfaces/Entity.html":{},"interfaces/EntityShort.html":{},"components/IconTrashComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{}}}],["err",{"_index":330,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{}}}],["error",{"_index":90,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["error.interceptor.ts",{"_index":1273,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["error.interceptor.ts:12",{"_index":1276,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error.interceptor.ts:16",{"_index":1280,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error.status",{"_index":702,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["errorcode",{"_index":1073,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["errordisplaycomponent",{"_index":89,"title":{"components/ErrorDisplayComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["errorhandler",{"_index":557,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["errorhandlerservice",{"_index":558,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["errormessage",{"_index":1074,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["errormessage}`).subscribe",{"_index":1095,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["escape",{"_index":1023,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["event",{"_index":154,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["event.ctrlkey",{"_index":1243,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["event.key",{"_index":1020,"title":{},"body":{"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["event.metakey",{"_index":1244,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["event.preventdefault",{"_index":188,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["event.target",{"_index":197,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["eventcoalescing",{"_index":1553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":667,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["example",{"_index":1476,"title":{},"body":{"index.html":{}}}],["execute",{"_index":1510,"title":{},"body":{"index.html":{}}}],["expand",{"_index":426,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["export",{"_index":53,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["exportapibuttoncomponent",{"_index":92,"title":{"components/ExportApiButtonComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["f.file.name",{"_index":1149,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["f.status",{"_index":1155,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["f0f0f0",{"_index":462,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["f1f1f1",{"_index":734,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["f44336",{"_index":1393,"title":{},"body":{"components/SwitchComponent.html":{}}}],["f9f9f9",{"_index":428,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["false",{"_index":279,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EntityDialogComponent.html":{},"interfaces/FileStatus.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["ff4d4d",{"_index":913,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["ffffff",{"_index":458,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["field",{"_index":451,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{}}}],["file.errormessage",{"_index":1193,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["file.name",{"_index":1150,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["file.status",{"_index":1176,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["filename",{"_index":1179,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["filename.replace",{"_index":1180,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["filereader",{"_index":1161,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["files",{"_index":1141,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{},"index.html":{}}}],["files.filter(file",{"_index":1147,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["files.foreach(file",{"_index":1159,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["filestatus",{"_index":1127,"title":{"interfaces/FileStatus.html":{}},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["filestatus.status",{"_index":1173,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["filetoremove",{"_index":1200,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["filetoremove.file",{"_index":1204,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["filter",{"_index":94,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["filterbyinputcomponent",{"_index":93,"title":{"components/FilterByInputComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["filtereditems",{"_index":1216,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["finally",{"_index":333,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["flex",{"_index":380,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["following",{"_index":1515,"title":{},"body":{"index.html":{}}}],["font",{"_index":360,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/IconTrashComponent.html":{}}}],["fontawesome",{"_index":1453,"title":{},"body":{"dependencies.html":{}}}],["form",{"_index":1212,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["formcontrol",{"_index":1134,"title":{},"body":{"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["formcontrol(false",{"_index":1381,"title":{},"body":{"components/SwitchComponent.html":{}}}],["formcontrol(true",{"_index":1384,"title":{},"body":{"components/SwitchComponent.html":{}}}],["formgroup",{"_index":1225,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["formsmodule",{"_index":120,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["found",{"_index":1098,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/PageNotFoundComponent.html":{}}}],["found'},{'name",{"_index":106,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["found.component.css",{"_index":1339,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.html",{"_index":1338,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1337,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:18",{"_index":1340,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":1336,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["framework",{"_index":1522,"title":{},"body":{"index.html":{}}}],["further",{"_index":401,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["gap",{"_index":358,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["generate",{"_index":1491,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1466,"title":{},"body":{"index.html":{}}}],["get(`${this.baseurl}/apientity/${apiservicename",{"_index":1061,"title":{},"body":{"injectables/EntityService.html":{}}}],["get(`${this.baseurl}/apientity/${apiservicename}/${entityname",{"_index":1062,"title":{},"body":{"injectables/EntityService.html":{}}}],["get(`${this.baseurl}/apiservice",{"_index":585,"title":{},"body":{"injectables/ApiService.html":{}}}],["get(`${this.baseurl}/apiservices",{"_index":1067,"title":{},"body":{"injectables/EntityService.html":{}}}],["getallapiservices",{"_index":1051,"title":{},"body":{"injectables/EntityService.html":{}}}],["getapientity",{"_index":1032,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["getapientity(apiservicename",{"_index":1039,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["getapientity(this.apiname",{"_index":891,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["getapientitylist",{"_index":1033,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["getapientitylist(apiservicename",{"_index":1040,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["getapilist",{"_index":550,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["getapistructurelist",{"_index":551,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["getapistructurelist(name",{"_index":569,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["getbyindex",{"_index":943,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["getdata",{"_index":174,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["getendpointbyname",{"_index":949,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["getendpointbyname(apiservicename",{"_index":959,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["getendpointlist",{"_index":950,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["getendpointlist(apiservicename",{"_index":961,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["getfilestatus",{"_index":1312,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["getfilestatus(file",{"_index":1177,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["getfilestatustext",{"_index":1313,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["getfilestatustext(file",{"_index":1175,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["getfiltereditems",{"_index":1230,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["gethasvalue",{"_index":172,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["getstructure",{"_index":1010,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["getting",{"_index":1463,"title":{"index.html":{}},"body":{}}],["gettotalpages",{"_index":1362,"title":{},"body":{"components/PaginationComponent.html":{}}}],["geturl",{"_index":228,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["geturl(entityname",{"_index":258,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["go",{"_index":1086,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["goback",{"_index":639,"title":{},"body":{"components/BackButtonComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["gotopage",{"_index":1348,"title":{},"body":{"components/PaginationComponent.html":{}}}],["gotopage(page",{"_index":1360,"title":{},"body":{"components/PaginationComponent.html":{}}}],["grid",{"_index":918,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["grow",{"_index":422,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["h1",{"_index":359,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["h2",{"_index":916,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["h3",{"_index":715,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["handleapistructureresponse",{"_index":229,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["handleapistructureresponse(apistructure",{"_index":260,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["handleeditdialogdata",{"_index":793,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleeditdialogdata(data",{"_index":803,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleendpointcreation",{"_index":845,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["handleendpointcreation(response",{"_index":858,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["handleendpointupdate",{"_index":747,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["handleendpointupdate(response",{"_index":760,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["handleendpointupdateerror",{"_index":748,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["handleendpointupdateerror(error",{"_index":762,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["handleentitydeletion",{"_index":794,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleentityinforesponse",{"_index":846,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["handleentityinforesponse(entity",{"_index":860,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["handleentityupdate",{"_index":795,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleentityupdate(response",{"_index":806,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleentityupdateerror",{"_index":796,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleentityupdateerror(error",{"_index":808,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleerror",{"_index":552,"title":{},"body":{"injectables/ApiService.html":{},"components/CardEntityComponent.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{}}}],["handleerror(error",{"_index":571,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{}}}],["handleerror(message",{"_index":810,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handlekeyboardevent",{"_index":992,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["handlekeyboardevent(event",{"_index":995,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["handler.service",{"_index":583,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["handler.service.ts",{"_index":1088,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:12",{"_index":1091,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:9",{"_index":1090,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handlesubmit",{"_index":993,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["hasfiles",{"_index":1142,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["hasvalue",{"_index":143,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["header",{"_index":419,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":97,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["header.component.css",{"_index":1248,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":1247,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":96,"title":{"components/HeaderComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["height",{"_index":415,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/SwitchComponent.html":{}}}],["helpbuilding",{"_index":1497,"title":{},"body":{"index.html":{}}}],["here",{"_index":318,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["hidden",{"_index":455,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["hostlistener",{"_index":1013,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["html",{"_index":57,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["htmlinputelement",{"_index":198,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["http",{"_index":560,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["http://localhost:4200",{"_index":1481,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":556,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["httperrorinterceptor",{"_index":1270,"title":{"interceptors/HttpErrorInterceptor.html":{}},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httperrorresponse",{"_index":572,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["httpevent",{"_index":1282,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["httphandler",{"_index":1279,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["httpinterceptor",{"_index":1283,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["httprequest",{"_index":1278,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["https://www.titan2.ru/images/temp/logo__ru.jpg",{"_index":1256,"title":{},"body":{"components/HeaderComponent.html":{}}}],["hub",{"_index":487,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"coverage.html":{}}}],["hubconnection",{"_index":491,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["i:hover",{"_index":742,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{}}}],["icon",{"_index":99,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["icontrashcomponent",{"_index":98,"title":{"components/IconTrashComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["identifier",{"_index":1404,"title":{},"body":{"coverage.html":{}}}],["if(buttontext",{"_index":1268,"title":{},"body":{"components/HeaderComponent.html":{}}}],["if(entityinfo.structure",{"_index":837,"title":{},"body":{"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["if(isapipage",{"_index":1267,"title":{},"body":{"components/HeaderComponent.html":{}}}],["implements",{"_index":210,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ErrorDisplayComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/SwitchComponent.html":{}}}],["import",{"_index":35,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["important",{"_index":478,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["importdialogcomponent",{"_index":101,"title":{"components/ImportDialogComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["imports",{"_index":17,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["includes",{"_index":1488,"title":{},"body":{"index.html":{}}}],["including",{"_index":1531,"title":{},"body":{"index.html":{}}}],["increase",{"_index":400,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["information",{"_index":1530,"title":{},"body":{"index.html":{}}}],["initialdata",{"_index":497,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["initializedata",{"_index":493,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["initializedata(initialdata",{"_index":495,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["inject",{"_index":39,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["inject(tuialertservice",{"_index":1004,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["inject(tuidialogservice",{"_index":168,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["injectable",{"_index":483,"title":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{}},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["injectables",{"_index":485,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"overview.html":{}}}],["injectcontext",{"_index":31,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["inline",{"_index":411,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/SwitchComponent.html":{}}}],["input",{"_index":196,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["input'},{'name",{"_index":95,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["input.component.css",{"_index":1210,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.html",{"_index":1211,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts",{"_index":1208,"title":{},"body":{"components/FilterByInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:19",{"_index":1221,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:20",{"_index":1219,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:21",{"_index":1220,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:22",{"_index":1222,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:24",{"_index":1229,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:28",{"_index":1231,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:36",{"_index":1217,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:44",{"_index":1224,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.value",{"_index":199,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["input/filter",{"_index":1207,"title":{},"body":{"components/FilterByInputComponent.html":{},"coverage.html":{}}}],["input:checked",{"_index":1399,"title":{},"body":{"components/SwitchComponent.html":{}}}],["inputchar",{"_index":1240,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["inputs",{"_index":661,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["intercept",{"_index":1274,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["intercept(req",{"_index":1277,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["interceptor",{"_index":1269,"title":{"interceptors/HttpErrorInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":1271,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["interface",{"_index":619,"title":{"interfaces/ApiServiceStructure.html":{},"interfaces/Endpoint.html":{},"interfaces/Entity.html":{},"interfaces/EntityShort.html":{},"interfaces/FileStatus.html":{},"interfaces/apiServiceShortStructure.html":{}},"body":{"interfaces/ApiServiceStructure.html":{},"interfaces/Endpoint.html":{},"interfaces/Entity.html":{},"interfaces/EntityShort.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{}}}],["interfaces",{"_index":620,"title":{},"body":{"interfaces/ApiServiceStructure.html":{},"interfaces/Endpoint.html":{},"interfaces/Entity.html":{},"interfaces/EntityShort.html":{},"interfaces/FileStatus.html":{},"interfaces/apiServiceShortStructure.html":{},"overview.html":{}}}],["invalid",{"_index":1382,"title":{},"body":{"components/SwitchComponent.html":{}}}],["invalidfalse",{"_index":1373,"title":{},"body":{"components/SwitchComponent.html":{}}}],["invalidtrue",{"_index":1374,"title":{},"body":{"components/SwitchComponent.html":{}}}],["isactive",{"_index":278,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["isapipage",{"_index":1251,"title":{},"body":{"components/HeaderComponent.html":{}}}],["iscansubmit",{"_index":990,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["iscopied",{"_index":223,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["isrouteexists",{"_index":847,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["isrouteexists(route",{"_index":862,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["item",{"_index":433,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/IconTrashComponent.html":{}}}],["item.includes(value",{"_index":1237,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["item:last",{"_index":440,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["items",{"_index":381,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/FilterByInputComponent.html":{}}}],["itemsperpage",{"_index":1350,"title":{},"body":{"components/PaginationComponent.html":{}}}],["json",{"_index":908,"title":{},"body":{"components/EndpointCardListComponent.html":{},"components/EntityDialogComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["json.description",{"_index":1182,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["json.entities",{"_index":1183,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["json.isactive",{"_index":1181,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["json.parse(text",{"_index":1166,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["json.parse(value",{"_index":1017,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["json.stringify(datawithoutname",{"_index":1115,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["json.stringify(this.data.structure",{"_index":1015,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["jsonstring",{"_index":1114,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["jszip",{"_index":1456,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":382,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["karma",{"_index":1511,"title":{},"body":{"index.html":{}}}],["keyboardevent",{"_index":996,"title":{},"body":{"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["label",{"_index":674,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{}}}],["left",{"_index":402,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/SwitchComponent.html":{}}}],["legend",{"_index":56,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["line",{"_index":421,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["list",{"_index":215,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"index.html":{}}}],["list'},{'name",{"_index":70,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["list.component.css",{"_index":299,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["list.component.css,../../../styles/card",{"_index":842,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.css,../../styles/button.css",{"_index":218,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["list.component.html",{"_index":219,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["list.component.ts",{"_index":209,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"coverage.html":{}}}],["list.component.ts:104",{"_index":871,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:111",{"_index":873,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:113",{"_index":275,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["list.component.ts:120",{"_index":863,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:122",{"_index":259,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["list.component.ts:124",{"_index":874,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:126",{"_index":268,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["list.component.ts:132",{"_index":857,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:140",{"_index":273,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["list.component.ts:144",{"_index":859,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:154",{"_index":271,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["list.component.ts:155",{"_index":870,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:160",{"_index":876,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:173",{"_index":868,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:42",{"_index":877,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:43",{"_index":282,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["list.component.ts:44",{"_index":286,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["list.component.ts:45",{"_index":284,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["list.component.ts:46",{"_index":281,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["list.component.ts:47",{"_index":280,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["list.component.ts:48",{"_index":249,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["list.component.ts:50",{"_index":878,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:55",{"_index":879,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:59",{"_index":855,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:61",{"_index":265,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["list.component.ts:65",{"_index":266,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["list.component.ts:73",{"_index":865,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:74",{"_index":264,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["list.component.ts:77",{"_index":866,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:84",{"_index":262,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["list.component.ts:85",{"_index":864,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:93",{"_index":256,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["list.component.ts:97",{"_index":861,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list.component.ts:98",{"_index":253,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["list.css",{"_index":843,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["list/api",{"_index":208,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"coverage.html":{}}}],["list/card",{"_index":1423,"title":{},"body":{"coverage.html":{}}}],["list/endpoint",{"_index":840,"title":{},"body":{"components/EndpointCardListComponent.html":{},"coverage.html":{}}}],["list/entity",{"_index":1427,"title":{},"body":{"coverage.html":{}}}],["literal",{"_index":277,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["loadapistructure",{"_index":230,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["loaddata",{"_index":848,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["loading",{"_index":224,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{}}}],["loading'},{'name",{"_index":103,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["loading.component.css",{"_index":1331,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading.component.html",{"_index":1330,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loadingcomponent",{"_index":102,"title":{"components/LoadingComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["local",{"_index":1474,"title":{},"body":{"index.html":{}}}],["location",{"_index":641,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["logourl",{"_index":1252,"title":{},"body":{"components/HeaderComponent.html":{}}}],["margin",{"_index":365,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/IconTrashComponent.html":{}}}],["matching",{"_index":114,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1454,"title":{},"body":{"dependencies.html":{}}}],["math.ceil(this.totalitems",{"_index":1364,"title":{},"body":{"components/PaginationComponent.html":{}}}],["max",{"_index":474,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/FilterByInputComponent.html":{}}}],["mb",{"_index":909,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["media",{"_index":473,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["message",{"_index":812,"title":{},"body":{"components/CardEntityComponent.html":{},"components/EntityDialogComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["methods",{"_index":137,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["microsoft/signalr",{"_index":509,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"dependencies.html":{}}}],["min",{"_index":1245,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["miscellaneous",{"_index":1542,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mobile",{"_index":1447,"title":{},"body":{"dependencies.html":{}}}],["modify",{"_index":1486,"title":{},"body":{"index.html":{}}}],["modules",{"_index":1537,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":1529,"title":{},"body":{"index.html":{}}}],["movefocus",{"_index":138,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["movefocus(targetinput",{"_index":145,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["multi",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":62,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["namefor",{"_index":1492,"title":{},"body":{"index.html":{}}}],["nameinputref",{"_index":136,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["navigate",{"_index":1480,"title":{},"body":{"index.html":{}}}],["needs",{"_index":1526,"title":{},"body":{"index.html":{}}}],["negative",{"_index":598,"title":{},"body":{"injectables/ApiService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{}}}],["new",{"_index":498,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{},"index.html":{}}}],["newfiles",{"_index":1146,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["newfiles.map(file",{"_index":1152,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["newstate",{"_index":269,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["next",{"_index":308,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/ImportDialogComponent.html":{}}}],["next.handle(req).pipe",{"_index":1284,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["ng",{"_index":1477,"title":{},"body":{"index.html":{}}}],["ng_event_plugins",{"_index":1555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngfor",{"_index":1133,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["ngforof",{"_index":36,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["ngif",{"_index":1132,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["ngondestroy",{"_index":231,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["ngoninit",{"_index":232,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/SwitchComponent.html":{}}}],["ngzone",{"_index":507,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["noentities",{"_index":352,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["none",{"_index":432,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["normal",{"_index":727,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["normal').foreach(file",{"_index":1186,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["normal').length",{"_index":1156,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["notification",{"_index":1302,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["notification.subscribe",{"_index":1311,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["notify",{"_index":711,"title":{},"body":{"components/CardApiComponent.html":{}}}],["nowrap",{"_index":719,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["null",{"_index":283,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiService.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"components/ExportApiButtonComponent.html":{}}}],["number",{"_index":1354,"title":{},"body":{"components/PaginationComponent.html":{}}}],["observable",{"_index":505,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["oldname",{"_index":537,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{}}}],["onapitogglechange",{"_index":233,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["onapitogglechange(newstate",{"_index":267,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["onclick",{"_index":1109,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["ondeleteconfirmed",{"_index":658,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["ondestroy",{"_index":212,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["one",{"_index":1524,"title":{},"body":{"index.html":{}}}],["onendpointdeleted",{"_index":849,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["onendpointdeleted(endpointroute",{"_index":867,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["onendpointtogglechange",{"_index":234,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["onendpointtogglechange(entity",{"_index":270,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["onentitytogglechange",{"_index":235,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["onentitytogglechange(entity",{"_index":272,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["oninit",{"_index":211,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/SwitchComponent.html":{}}}],["oninput",{"_index":139,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["oninput(event",{"_index":153,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["onkeypress",{"_index":1213,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["onkeypress(event",{"_index":1223,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["ontoggle",{"_index":1375,"title":{},"body":{"components/SwitchComponent.html":{}}}],["ontogglechange",{"_index":659,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["ontogglechange(newstate",{"_index":670,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["opacity",{"_index":1391,"title":{},"body":{"components/SwitchComponent.html":{}}}],["open",{"_index":704,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{},"index.html":{}}}],["open('api",{"_index":700,"title":{},"body":{"components/CardApiComponent.html":{}}}],["open(`${message",{"_index":834,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["open(message",{"_index":1025,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["open(new",{"_index":1303,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["opencreatedialog",{"_index":850,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["openeditdialog",{"_index":660,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["optimizes",{"_index":1505,"title":{},"body":{"index.html":{}}}],["optional",{"_index":149,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{}}}],["order",{"_index":417,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["ordersupdated",{"_index":492,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["outline",{"_index":457,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["output",{"_index":678,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["outputs",{"_index":662,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["overflow",{"_index":454,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["overview",{"_index":1535,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":720,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["package",{"_index":1433,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":356,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["page",{"_index":105,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"index.html":{}}}],["page/endpoin",{"_index":839,"title":{},"body":{"components/EndpointCardListComponent.html":{},"coverage.html":{}}}],["pagechange",{"_index":1352,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagenotfoundcomponent",{"_index":104,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["pagination",{"_index":1343,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination'},{'name",{"_index":108,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["pagination.component.css",{"_index":1346,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.component.html",{"_index":1347,"title":{},"body":{"components/PaginationComponent.html":{}}}],["paginationcomponent",{"_index":107,"title":{"components/PaginationComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["parameters",{"_index":148,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{}}}],["params['apiservicename",{"_index":886,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["params['code",{"_index":1081,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["params['entityname",{"_index":888,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["params['message",{"_index":1084,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["params['name",{"_index":304,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["parent",{"_index":712,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{}}}],["patch",{"_index":593,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["path",{"_index":1332,"title":{},"body":{"components/LoadingComponent.html":{}}}],["performance",{"_index":1506,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":1305,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["pipe(catcherror((err",{"_index":586,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["pipes",{"_index":1496,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":1449,"title":{},"body":{"dependencies.html":{}}}],["pointer",{"_index":465,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/IconTrashComponent.html":{},"components/SwitchComponent.html":{}}}],["polymorpheuscomponent",{"_index":48,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/IconTrashComponent.html":{}}}],["polymorpheuscomponent(alertdeletecomponent",{"_index":1304,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["position",{"_index":377,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/SwitchComponent.html":{}}}],["positioned",{"_index":375,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["post",{"_index":942,"title":{},"body":{"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{}}}],["post(`${this.baseurl}/apientity/${apiservicename",{"_index":1063,"title":{},"body":{"injectables/EntityService.html":{}}}],["post(`${this.baseurl}/apiservice",{"_index":589,"title":{},"body":{"injectables/ApiService.html":{}}}],["powerful",{"_index":1489,"title":{},"body":{"index.html":{}}}],["previousurl",{"_index":646,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["previousurl.startswith(basedomain",{"_index":649,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["primary",{"_index":477,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/SwitchComponent.html":{}}}],["private",{"_index":134,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["processcreatedialogdata",{"_index":851,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["processcreatedialogdata(data",{"_index":872,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["processeddata",{"_index":1143,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["processeditdialogdata",{"_index":749,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["processeditdialogdata(data",{"_index":767,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["processjson",{"_index":1169,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["processjson(json",{"_index":1178,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["production",{"_index":1504,"title":{},"body":{"index.html":{}}}],["progressevent",{"_index":1164,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["project",{"_index":1465,"title":{},"body":{"index.html":{}}}],["properties",{"_index":24,"title":{"properties.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"properties.html":{}}}],["protected",{"_index":25,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"interfaces/FileStatus.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["provide",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":511,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{}}}],["providehttpclient",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1367,"title":{},"body":{"components/SwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":132,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["put",{"_index":590,"title":{},"body":{"injectables/ApiService.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["queryparams",{"_index":1105,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["radius",{"_index":388,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/SwitchComponent.html":{}}}],["reactiveformsmodule",{"_index":1135,"title":{},"body":{"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["read",{"_index":166,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["reader",{"_index":1160,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["reader.onload",{"_index":1162,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["reader.readastext(file",{"_index":1170,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["readfiles",{"_index":1314,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["readfiles(files",{"_index":1158,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["readonly",{"_index":26,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"interfaces/FileStatus.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["reference",{"_index":1536,"title":{},"body":{"index.html":{}}}],["references",{"_index":1533,"title":{},"body":{"index.html":{}}}],["relative",{"_index":378,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/SwitchComponent.html":{}}}],["relatively",{"_index":376,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["reload",{"_index":1484,"title":{},"body":{"index.html":{}}}],["removefile",{"_index":1315,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["removefile(filetoremove",{"_index":1198,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["repeat(2",{"_index":933,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["repeat(3",{"_index":931,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["repeat(4",{"_index":920,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["repositories/api",{"_index":293,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["repositories/endpoint",{"_index":296,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEndpointComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["repositories/entity",{"_index":297,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["repository.service",{"_index":295,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["repository.service.ts",{"_index":601,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{},"coverage.html":{}}}],["repository.service.ts:12",{"_index":603,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:13",{"_index":962,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:15",{"_index":607,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:17",{"_index":955,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:19",{"_index":608,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:21",{"_index":960,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:23",{"_index":604,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:25",{"_index":964,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:29",{"_index":605,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:33",{"_index":609,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:40",{"_index":606,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:44",{"_index":610,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:9",{"_index":953,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["req",{"_index":1281,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["resize",{"_index":935,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["resources",{"_index":1528,"title":{},"body":{"index.html":{}}}],["response",{"_index":55,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"interfaces/FileStatus.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["response.error",{"_index":1196,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["responsealert",{"_index":1292,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["results",{"_index":113,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":185,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{}}}],["returns",{"_index":151,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["rgb(0",{"_index":922,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["rgba(0",{"_index":928,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["right",{"_index":398,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/IconTrashComponent.html":{},"components/SwitchComponent.html":{}}}],["root",{"_index":512,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/AppComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{}}}],["root'},{'name",{"_index":72,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["rotate(360deg",{"_index":472,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["route",{"_index":250,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"interfaces/ApiServiceStructure.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"interfaces/Entity.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["router",{"_index":240,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiService.html":{},"components/BackButtonComponent.html":{},"components/CardEndpointComponent.html":{},"components/EndpointCardListComponent.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{}}}],["routermodule",{"_index":217,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["routeroutlet",{"_index":627,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1475,"title":{},"body":{"index.html":{}}}],["runner",{"_index":1513,"title":{},"body":{"index.html":{}}}],["running",{"_index":1479,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":52,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":582,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["safari",{"_index":730,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["scaffolding",{"_index":1487,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":1494,"title":{},"body":{"index.html":{}}}],["scrollbar",{"_index":732,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["search",{"_index":1218,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["searchquery",{"_index":1215,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["section",{"_index":911,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["separator",{"_index":915,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["serveonce",{"_index":1478,"title":{},"body":{"index.html":{}}}],["server",{"_index":1473,"title":{},"body":{"index.html":{}}}],["service",{"_index":294,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/CardApiComponent.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["service.name",{"_index":1191,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["service.service",{"_index":290,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["service.service.ts",{"_index":488,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"coverage.html":{}}}],["service.service.ts:10",{"_index":504,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["service.service.ts:11",{"_index":500,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["service.service.ts:12",{"_index":502,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["service.service.ts:13",{"_index":494,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["service.service.ts:14",{"_index":974,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:17",{"_index":559,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:18",{"_index":1052,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:22",{"_index":980,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:25",{"_index":568,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:26",{"_index":1057,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:31",{"_index":570,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:32",{"_index":1056,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:33",{"_index":976,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:38",{"_index":1053,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:39",{"_index":562,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:44",{"_index":1059,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:46",{"_index":979,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:47",{"_index":564,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:53",{"_index":575,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:57",{"_index":1054,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:58",{"_index":982,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:65",{"_index":566,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:66",{"_index":1060,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:67",{"_index":496,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["service.service.ts:72",{"_index":978,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:73",{"_index":577,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:79",{"_index":1055,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:84",{"_index":984,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:85",{"_index":1058,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:87",{"_index":573,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:98",{"_index":981,"title":{},"body":{"injectables/EndpointService.html":{}}}],["servicename",{"_index":567,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["services/api",{"_index":289,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["services/endpoint",{"_index":966,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["services/entity",{"_index":1043,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["services/service",{"_index":183,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["set",{"_index":316,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EntityDialogComponent.html":{}}}],["setstructure(value",{"_index":1011,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["settimeout",{"_index":336,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["shadow",{"_index":392,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["showcopysuccess",{"_index":236,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["showcopysuccess(url",{"_index":274,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["showdialog",{"_index":140,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["showdialog(content",{"_index":156,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["showerror",{"_index":994,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["showerror(message",{"_index":1002,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["showicons",{"_index":1369,"title":{},"body":{"components/SwitchComponent.html":{}}}],["shownotification",{"_index":1291,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["showrouteexistserror",{"_index":852,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["signalr",{"_index":508,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["signalr.httptransporttype.websockets",{"_index":518,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["signalr.hubconnection",{"_index":503,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["signalr.hubconnectionbuilder",{"_index":514,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["size",{"_index":361,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/IconTrashComponent.html":{}}}],["sizing",{"_index":461,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["skipnegotiation",{"_index":516,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["slider",{"_index":1392,"title":{},"body":{"components/SwitchComponent.html":{}}}],["slider:before",{"_index":1395,"title":{},"body":{"components/SwitchComponent.html":{}}}],["solid",{"_index":438,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"index.html":{}}}],["space",{"_index":383,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["speed",{"_index":1507,"title":{},"body":{"index.html":{}}}],["src/.../app.config.ts",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":626,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":633,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1407,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/data/components/alert",{"_index":9,"title":{},"body":{"components/AlertDeleteComponent.html":{},"coverage.html":{}}}],["src/app/data/components/api",{"_index":116,"title":{},"body":{"components/ApiDialogComponent.html":{},"coverage.html":{}}}],["src/app/data/components/back",{"_index":634,"title":{},"body":{"components/BackButtonComponent.html":{},"coverage.html":{}}}],["src/app/data/components/card",{"_index":652,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"coverage.html":{}}}],["src/app/data/components/endpoint",{"_index":936,"title":{},"body":{"components/EndpointDialogComponent.html":{},"coverage.html":{}}}],["src/app/data/components/entity",{"_index":988,"title":{},"body":{"components/EntityDialogComponent.html":{},"coverage.html":{}}}],["src/app/data/components/export",{"_index":1107,"title":{},"body":{"components/ExportApiButtonComponent.html":{},"coverage.html":{}}}],["src/app/data/components/filter",{"_index":1206,"title":{},"body":{"components/FilterByInputComponent.html":{},"coverage.html":{}}}],["src/app/data/components/header/header.component.ts",{"_index":1246,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/data/components/header/header.component.ts:14",{"_index":1257,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:15",{"_index":1254,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:16",{"_index":1258,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:17",{"_index":1255,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:19",{"_index":1263,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:25",{"_index":1259,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:29",{"_index":1260,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/icon",{"_index":1286,"title":{},"body":{"components/IconTrashComponent.html":{},"coverage.html":{}}}],["src/app/data/components/import",{"_index":1128,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["src/app/data/components/loading/loading.component.ts",{"_index":1329,"title":{},"body":{"components/LoadingComponent.html":{},"coverage.html":{}}}],["src/app/data/components/loading/loading.component.ts:10",{"_index":1334,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts",{"_index":1342,"title":{},"body":{"components/PaginationComponent.html":{},"coverage.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:19",{"_index":1358,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:20",{"_index":1357,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:21",{"_index":1355,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:22",{"_index":1359,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:24",{"_index":1363,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:28",{"_index":1361,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts",{"_index":1366,"title":{},"body":{"components/SwitchComponent.html":{},"coverage.html":{}}}],["src/app/data/components/switch/switch.component.ts:24",{"_index":1377,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts:25",{"_index":1378,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts:27",{"_index":1385,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts:30",{"_index":1383,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts:34",{"_index":1379,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts:39",{"_index":1380,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/pages/api",{"_index":207,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"coverage.html":{}}}],["src/app/data/pages/card",{"_index":1422,"title":{},"body":{"coverage.html":{}}}],["src/app/data/pages/endpoints",{"_index":838,"title":{},"body":{"components/EndpointCardListComponent.html":{},"coverage.html":{}}}],["src/app/data/pages/entity",{"_index":1426,"title":{},"body":{"coverage.html":{}}}],["src/app/data/pages/error",{"_index":1068,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"coverage.html":{}}}],["src/app/data/pages/page",{"_index":1335,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/repositories/api",{"_index":600,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"coverage.html":{}}}],["src/app/repositories/endpoint",{"_index":948,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"coverage.html":{}}}],["src/app/repositories/entity",{"_index":1029,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"coverage.html":{}}}],["src/app/services/api",{"_index":486,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/services/endpoint",{"_index":973,"title":{},"body":{"injectables/EndpointService.html":{},"coverage.html":{}}}],["src/app/services/entity",{"_index":1050,"title":{},"body":{"injectables/EntityService.html":{},"coverage.html":{}}}],["src/app/services/error",{"_index":1087,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["src/app/services/http",{"_index":1272,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/services/service",{"_index":621,"title":{},"body":{"interfaces/ApiServiceStructure.html":{},"interfaces/Endpoint.html":{},"interfaces/Entity.html":{},"interfaces/EntityShort.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{}}}],["standalone",{"_index":1209,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["start",{"_index":436,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"index.html":{}}}],["started",{"_index":1464,"title":{"index.html":{}},"body":{}}],["state",{"_index":317,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEndpointComponent.html":{}}}],["statements",{"_index":1405,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":1130,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["stays",{"_index":420,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["still",{"_index":405,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["store",{"_index":1500,"title":{},"body":{"index.html":{}}}],["string",{"_index":252,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["structure",{"_index":184,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{}}}],["structure(value",{"_index":1016,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["structureinputref",{"_index":991,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["style",{"_index":431,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["styles",{"_index":115,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["styles/button.css",{"_index":300,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["styles/card",{"_index":884,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["styles/card.css",{"_index":687,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["styles/icon.css",{"_index":688,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{}}}],["styleurl",{"_index":21,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ErrorDisplayComponent.html":{},"interfaces/FileStatus.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["styleurls",{"_index":129,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["sub",{"_index":225,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEntityComponent.html":{}}}],["subject",{"_index":510,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["submit",{"_index":141,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["submit(event",{"_index":160,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["subscribe",{"_index":194,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interfaces/FileStatus.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/ImportDialogComponent.html":{}}}],["subscription",{"_index":285,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["success",{"_index":701,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["such",{"_index":1495,"title":{},"body":{"index.html":{}}}],["suits",{"_index":1525,"title":{},"body":{"index.html":{}}}],["switch",{"_index":110,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["switch.component.css",{"_index":1371,"title":{},"body":{"components/SwitchComponent.html":{}}}],["switch.component.html",{"_index":1372,"title":{},"body":{"components/SwitchComponent.html":{}}}],["switch/switch.component",{"_index":680,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["switchcomponent",{"_index":109,"title":{"components/SwitchComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["switchmap",{"_index":50,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/IconTrashComponent.html":{}}}],["switchmap((response",{"_index":1306,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["t",{"_index":409,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["table",{"_index":1432,"title":{},"body":{"coverage.html":{},"dependencies.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1431,"title":{},"body":{"coverage.html":{}}}],["taiga",{"_index":43,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"dependencies.html":{}}}],["takeuntil",{"_index":51,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/IconTrashComponent.html":{}}}],["takeuntil(this.router.events",{"_index":1310,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["targetinput",{"_index":150,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["targetinput.nativeelement.queryselector('input",{"_index":1027,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["targetinput.nativeelement.queryselector('input').focus",{"_index":206,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["templateref",{"_index":157,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["test",{"_index":1512,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1519,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":1517,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1509,"title":{},"body":{"index.html":{}}}],["text",{"_index":254,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["textarea",{"_index":321,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["textarea').focus",{"_index":1028,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["textarea.select",{"_index":325,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["textarea.value",{"_index":323,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["this.alerts",{"_index":699,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EntityDialogComponent.html":{},"interfaces/FileStatus.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["this.alerts.open",{"_index":1309,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["this.alerts.open(error.message",{"_index":596,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["this.alerts.open(message",{"_index":835,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.alertservice.open(`error",{"_index":1094,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.apideleted.emit",{"_index":709,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.apiinfo",{"_index":694,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.apiinfo.isactive",{"_index":314,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{}}}],["this.apiinfo.name",{"_index":692,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.apilistsubject.asobservable",{"_index":506,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.getvalue",{"_index":532,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.getvalue().map(apiservice",{"_index":545,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.next",{"_index":544,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.next(apilist",{"_index":528,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.next(currentlist",{"_index":534,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.next(initialdata",{"_index":546,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apiname",{"_index":303,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEndpointComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["this.apiservice.createapiservice(service",{"_index":614,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.createfullapiservice(service",{"_index":615,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.createfullapiservice(service).subscribe",{"_index":1188,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["this.apiservice.deleteapiservice(servicename",{"_index":617,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.getapilist",{"_index":612,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.getapistructurelist(name",{"_index":613,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.getapistructurelist(this.apiname).subscribe",{"_index":307,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["this.apiservice.updateapiservice(oldname",{"_index":616,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.updateapiservicestatus(servicename",{"_index":618,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservicerepository",{"_index":339,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{}}}],["this.apiservicerepository.deleteapiservice(this.apiinfo.name).subscribe",{"_index":708,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.apiservicerepository.getapistructurelist(this.apiinfo.name).subscribe",{"_index":1112,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["this.baseurl}/apiendpoint/${apiservicename}/${entityname",{"_index":985,"title":{},"body":{"injectables/EndpointService.html":{}}}],["this.baseurl}/apiendpoint/${apiservicename}/${entityname}/${actionname",{"_index":986,"title":{},"body":{"injectables/EndpointService.html":{}}}],["this.baseurl}/apiendpoint/${servicename}/${entityname}/${endpoint}/${isactive",{"_index":987,"title":{},"body":{"injectables/EndpointService.html":{}}}],["this.baseurl}/apientity/${apiservicename}/${entityname",{"_index":1064,"title":{},"body":{"injectables/EntityService.html":{}}}],["this.baseurl}/apientity/${servicename}/${entityname}/${isactive",{"_index":1066,"title":{},"body":{"injectables/EntityService.html":{}}}],["this.baseurl}/apiservice/${encodeuricomponent",{"_index":594,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.baseurl}/apiservice/${encodeuricomponent(name",{"_index":588,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.baseurl}/apiservice/${encodeuricomponent(oldname",{"_index":591,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.baseurl}/apiservice/${encodeuricomponent(servicename",{"_index":592,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.buttonclick.emit",{"_index":1265,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.cd.detectchanges",{"_index":895,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.cd.markforcheck",{"_index":311,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["this.cdr.markforcheck",{"_index":1174,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["this.context.completewith(false",{"_index":1195,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["this.context.completewith(this.data",{"_index":190,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.context.data",{"_index":187,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.control.setvalue(currentfiles",{"_index":1205,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["this.control.value",{"_index":1202,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["this.control.value.filter(file",{"_index":1203,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["this.control.valuechanges.subscribe((files",{"_index":1145,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["this.controlname",{"_index":1226,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.copytexttoclipboard(url",{"_index":320,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["this.createendpoint(data",{"_index":900,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.data.name",{"_index":205,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.data.name.trim",{"_index":186,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.data.route",{"_index":947,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["this.data.route.trim",{"_index":946,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["this.data.structure",{"_index":1014,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["this.dialog",{"_index":693,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["this.dialog().subscribe",{"_index":1266,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.dialogs.open(content",{"_index":191,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.endpoint",{"_index":896,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.endpointdeleted.emit(this.endpointinfo.route",{"_index":786,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.endpointinfo",{"_index":780,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.endpointinfo.isactive",{"_index":775,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.endpointinfo.route",{"_index":779,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.endpointrepositoryservice",{"_index":348,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEndpointComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["this.endpoints",{"_index":893,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.endpoints.filter",{"_index":906,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.endpoints.push(data",{"_index":904,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.endpoints.some((endpoint",{"_index":901,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.endpointservice.createendpoint(apiservicename",{"_index":968,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.endpointservice.deleteendpoint(apiservicename",{"_index":971,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.endpointservice.getendpointbyname(apiservicename",{"_index":969,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.endpointservice.getendpointlist(apiservicename",{"_index":967,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.endpointservice.updateendpoint(apiservicename",{"_index":970,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.endpointservice.updateendpointstatus(apiservicename",{"_index":972,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.entities",{"_index":312,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["this.entitydeleted.emit(this.entityinfo.name",{"_index":832,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.entityinfo",{"_index":825,"title":{},"body":{"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["this.entityinfo.isactive",{"_index":823,"title":{},"body":{"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["this.entityinfo.name",{"_index":778,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["this.entityname",{"_index":887,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.entityrepositoryservice",{"_index":344,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["this.entityservice.createapientity(apiservicename",{"_index":1046,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.entityservice.deleteapientity(apiservicename",{"_index":1048,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.entityservice.getapientity(apiservicename",{"_index":1045,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.entityservice.getapientitylist(apiservicename",{"_index":1044,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.entityservice.updateapientity(apiservicename",{"_index":1047,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.entityservice.updateentitystatus(servicename",{"_index":1049,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.errorcode",{"_index":1080,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["this.errorhandler.handleerror(error",{"_index":595,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["this.errormessage",{"_index":1083,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["this.files",{"_index":1151,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["this.files.every(file",{"_index":1194,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["this.files.filter(f",{"_index":1154,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["this.files.filter(file",{"_index":1199,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["this.files.find(f",{"_index":1172,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["this.files.some(f",{"_index":1148,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["this.form.controls[this.controlname].valuechanges.subscribe(value",{"_index":1239,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.form.get(this.controlname",{"_index":1233,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.geturl(entityname",{"_index":319,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["this.handleapistructureresponse(apistructure",{"_index":309,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["this.handleeditdialogdata(data",{"_index":826,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.handleendpointcreation(response",{"_index":903,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.handleendpointupdate(response",{"_index":783,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.handleendpointupdateerror(error",{"_index":784,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.handleentitydeletion",{"_index":828,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.handleentityinforesponse(entity",{"_index":892,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.handleentityupdate(response",{"_index":830,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.handleentityupdateerror(error",{"_index":831,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.handleerror",{"_index":824,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.handleerror(err",{"_index":587,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["this.handlesubmit",{"_index":1022,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["this.hasfiles",{"_index":1153,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["this.hasvalue",{"_index":189,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.http",{"_index":584,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["this.hubconnection",{"_index":513,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.hubconnection.on('addservice",{"_index":530,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.hubconnection.on('recievemessage",{"_index":526,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.hubconnection.on('removeservice",{"_index":541,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.hubconnection.on('updateservice",{"_index":536,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.hubconnection.on('updatestatusservice",{"_index":543,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.invalidfalse.markastouched",{"_index":1387,"title":{},"body":{"components/SwitchComponent.html":{}}}],["this.invalidtrue.markastouched",{"_index":1386,"title":{},"body":{"components/SwitchComponent.html":{}}}],["this.iscansubmit",{"_index":1018,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["this.iscopied",{"_index":335,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["this.isrouteexists(data.route",{"_index":898,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.item.name",{"_index":1308,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["this.items",{"_index":1238,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.items.filter(item",{"_index":1236,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.itemsperpage",{"_index":1365,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.loadapistructure",{"_index":305,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["this.loaddata",{"_index":889,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.loading",{"_index":310,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["this.location",{"_index":689,"title":{},"body":{"components/CardApiComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["this.location.back",{"_index":650,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["this.location.path(true",{"_index":647,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["this.oldname",{"_index":691,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{}}}],["this.processcreatedialogdata(data",{"_index":897,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.processeddata.findindex(d",{"_index":1189,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["this.processeddata.foreach(service",{"_index":1187,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["this.processeddata.length",{"_index":1185,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["this.processeddata.push(apiservicestructure",{"_index":1184,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["this.processeddata.splice(index",{"_index":1192,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["this.processeditdialogdata(data",{"_index":781,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.processjson(json",{"_index":1168,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["this.readfiles(newfiles",{"_index":1157,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["this.responsealert.emit(true",{"_index":1307,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["this.route.params.subscribe((params",{"_index":302,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["this.route.queryparams.subscribe((params",{"_index":1079,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["this.router.navigate",{"_index":1085,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["this.router.navigate(['/error",{"_index":1104,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.router.navigate(['/page",{"_index":1097,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.router.navigatebyurl",{"_index":651,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["this.router.url",{"_index":645,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["this.searchquery.emit(value",{"_index":1235,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.showcopysuccess(text",{"_index":328,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["this.showerror('json",{"_index":1024,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["this.showrouteexistserror",{"_index":899,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.sub",{"_index":306,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["this.sub?.unsubscribe",{"_index":301,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["this.subscription",{"_index":890,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.subscription?.unsubscribe",{"_index":885,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.toggle.emit(this.value",{"_index":1388,"title":{},"body":{"components/SwitchComponent.html":{}}}],["this.updateendpoint(data",{"_index":782,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.updateentitystatus(newstate",{"_index":905,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["this.updatefilestatus(file",{"_index":1167,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["throwerror",{"_index":580,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["throwerror(error",{"_index":599,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["thumb",{"_index":735,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["thumb:hover",{"_index":737,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["title",{"_index":631,"title":{},"body":{"components/AppComponent.html":{}}}],["toggle",{"_index":1376,"title":{},"body":{"components/SwitchComponent.html":{}}}],["tools",{"_index":1490,"title":{},"body":{"index.html":{}}}],["top",{"_index":739,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/SwitchComponent.html":{}}}],["totalitems",{"_index":1351,"title":{},"body":{"components/PaginationComponent.html":{}}}],["totalpages",{"_index":1353,"title":{},"body":{"components/PaginationComponent.html":{}}}],["track",{"_index":733,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["transform",{"_index":471,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/EndpointCardListComponent.html":{},"components/SwitchComponent.html":{}}}],["transition",{"_index":390,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/IconTrashComponent.html":{},"components/SwitchComponent.html":{}}}],["translatex(16.8px",{"_index":1401,"title":{},"body":{"components/SwitchComponent.html":{}}}],["translatey",{"_index":927,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["transparent",{"_index":386,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["transport",{"_index":517,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["trash",{"_index":1288,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash'},{'name",{"_index":100,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["trash.component",{"_index":683,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["trash.component.css",{"_index":1301,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.css,../../styles/icon.css",{"_index":1289,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.html",{"_index":1290,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts",{"_index":1287,"title":{},"body":{"components/IconTrashComponent.html":{},"coverage.html":{}}}],["trash.component.ts:16",{"_index":1298,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts:17",{"_index":1295,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts:18",{"_index":1297,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts:19",{"_index":1296,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts:20",{"_index":1294,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts:26",{"_index":1299,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash/icon",{"_index":682,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{},"coverage.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["true",{"_index":193,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/SwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":326,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/BackButtonComponent.html":{},"components/EntityDialogComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["tslib",{"_index":1459,"title":{},"body":{"dependencies.html":{}}}],["tui",{"_index":425,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/FilterByInputComponent.html":{}}}],["tuiaccordion",{"_index":216,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["tuialertoptions",{"_index":45,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["tuialertservice",{"_index":47,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/FileStatus.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["tuiappearance",{"_index":655,"title":{},"body":{"components/CardApiComponent.html":{}}}],["tuiautofocus",{"_index":121,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["tuiavatar",{"_index":1138,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["tuibutton",{"_index":122,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["tuicardlarge",{"_index":841,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["tuidatalistwrapper",{"_index":123,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["tuidialog",{"_index":679,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/HeaderComponent.html":{}}}],["tuidialog(apidialogcomponent",{"_index":673,"title":{},"body":{"components/CardApiComponent.html":{}}}],["tuidialog(endpointdialogcomponent",{"_index":771,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["tuidialog(entitydialogcomponent",{"_index":816,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["tuidialog(importdialogcomponent",{"_index":1261,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tuidialogcontext",{"_index":178,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["tuidialogservice",{"_index":179,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["tuifilelike",{"_index":1131,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["tuifiles",{"_index":1139,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["tuiicon",{"_index":1136,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["tuiinputmodule",{"_index":124,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["tuiinputslidermodule",{"_index":1344,"title":{},"body":{"components/PaginationComponent.html":{}}}],["tuilink",{"_index":1137,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["tuipagination",{"_index":1345,"title":{},"body":{"components/PaginationComponent.html":{}}}],["tuipopover",{"_index":42,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["tuiroot",{"_index":628,"title":{},"body":{"components/AppComponent.html":{}}}],["tuiselectmodule",{"_index":125,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["tuislider",{"_index":126,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["tuiswitch",{"_index":1370,"title":{},"body":{"components/SwitchComponent.html":{}}}],["tuiswitchoptionsprovider",{"_index":1368,"title":{},"body":{"components/SwitchComponent.html":{}}}],["tuitextareamodule",{"_index":989,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["tuitextfield",{"_index":127,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["tuitextfieldcontrollermodule",{"_index":128,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/PaginationComponent.html":{}}}],["type",{"_index":41,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":937,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["ui/addon",{"_index":1442,"title":{},"body":{"dependencies.html":{}}}],["ui/cdk",{"_index":44,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"dependencies.html":{}}}],["ui/core",{"_index":46,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{},"dependencies.html":{}}}],["ui/event",{"_index":1448,"title":{},"body":{"dependencies.html":{}}}],["ui/experimental",{"_index":287,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"dependencies.html":{}}}],["ui/icons",{"_index":1451,"title":{},"body":{"dependencies.html":{}}}],["ui/kit",{"_index":180,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"dependencies.html":{}}}],["ui/layout",{"_index":880,"title":{},"body":{"components/EndpointCardListComponent.html":{},"dependencies.html":{}}}],["ui/legacy",{"_index":181,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/PaginationComponent.html":{},"dependencies.html":{}}}],["ui/polymorpheus",{"_index":49,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"interfaces/FileStatus.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["ul",{"_index":430,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["unit",{"_index":1508,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":1082,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["update",{"_index":776,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["updateapientity",{"_index":1034,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["updateapientity(apiservicename",{"_index":1041,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["updateapientity(this.apiname",{"_index":829,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["updateapiservice",{"_index":553,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["updateapiservice(oldname",{"_index":574,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["updateapiservice(this.oldname",{"_index":697,"title":{},"body":{"components/CardApiComponent.html":{}}}],["updateapiservicestatus",{"_index":554,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["updateapiservicestatus(servicename",{"_index":576,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["updateapiservicestatus(this.apiinfo.name",{"_index":690,"title":{},"body":{"components/CardApiComponent.html":{}}}],["updateapiservicestatus(this.apiname",{"_index":340,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["updateendpoint",{"_index":750,"title":{},"body":{"components/CardEndpointComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["updateendpoint(apiservicename",{"_index":963,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["updateendpoint(data",{"_index":769,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["updateendpointstatus",{"_index":777,"title":{},"body":{"components/CardEndpointComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["updateendpointstatus(apiservicename",{"_index":965,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["updateendpointstatus(servicename",{"_index":983,"title":{},"body":{"injectables/EndpointService.html":{}}}],["updateendpointstatus(this.apiname",{"_index":349,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["updateentitystatus",{"_index":853,"title":{},"body":{"components/EndpointCardListComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["updateentitystatus(newstate",{"_index":875,"title":{},"body":{"components/EndpointCardListComponent.html":{}}}],["updateentitystatus(servicename",{"_index":1042,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["updateentitystatus(this.apiname",{"_index":345,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["updatefilestatus",{"_index":1316,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["updatefilestatus(file",{"_index":1171,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["url",{"_index":276,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["use",{"_index":1514,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":1467,"title":{},"body":{"index.html":{}}}],["validators",{"_index":1232,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["validators.pattern('^[a",{"_index":1227,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["value",{"_index":29,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":1019,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["value.replace(/[^a",{"_index":201,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["var",{"_index":60,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["variable",{"_index":1408,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1543,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1470,"title":{},"body":{"index.html":{},"properties.html":{}}}],["viewchild",{"_index":176,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["viewchild('descriptioninput",{"_index":165,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["viewchild('nameinput",{"_index":170,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["visible",{"_index":406,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["visit",{"_index":1534,"title":{},"body":{"index.html":{}}}],["void",{"_index":152,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/ApiEndpointListComponent.html":{},"injectables/ApiHubServiceService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["webkit",{"_index":728,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["weight",{"_index":368,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["whenever",{"_index":1485,"title":{},"body":{"index.html":{}}}],["white",{"_index":479,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/SwitchComponent.html":{}}}],["width",{"_index":413,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{},"components/FilterByInputComponent.html":{},"components/SwitchComponent.html":{}}}],["window.location.origin}/api",{"_index":578,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["window.location.origin}/api/apiemu/${this.apiname}/${entityname}/${endpoint.route",{"_index":338,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["window.location.origin}/hubs",{"_index":501,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["window.url.createobjecturl(blob",{"_index":1119,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["window.url.revokeobjecturl(url",{"_index":1125,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["withautomaticreconnect([1000",{"_index":519,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["within",{"_index":396,"title":{},"body":{"components/ApiEndpointListComponent.html":{}}}],["withurl(`hubs/apilisthub",{"_index":515,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["word",{"_index":445,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["wrap",{"_index":446,"title":{},"body":{"components/ApiEndpointListComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["x",{"_index":726,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["y",{"_index":725,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointCardListComponent.html":{}}}],["yes",{"_index":162,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["z0",{"_index":203,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["za",{"_index":202,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["zone.js",{"_index":1461,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AlertDeleteComponent.html":{"url":"components/AlertDeleteComponent.html","title":"component - AlertDeleteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AlertDeleteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/alert-delete/alert-delete.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alert-on-delete\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./alert-delete.component.html\n            \n\n\n\n            \n                styleUrl\n                ./alert-delete.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                context\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext, boolean>>()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/alert-delete/alert-delete.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule, NgForOf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport type { TuiPopover } from '@taiga-ui/cdk';\nimport type { TuiAlertOptions } from '@taiga-ui/core';\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { injectContext, PolymorpheusComponent } from '@taiga-ui/polymorpheus';\nimport { switchMap, takeUntil } from 'rxjs';\n\n@Component({\n  selector: 'app-alert-on-delete',\n  imports: [CommonModule],\n  templateUrl: './alert-delete.component.html',\n  styleUrl: './alert-delete.component.css'\n})\nexport class AlertDeleteComponent {\n  protected readonly context =\n  injectContext, boolean>>();\n}\n    \n\n    \n        \n    {{ response ? 'Да' : 'Нет' }}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ response ? \\'Да\\' : \\'Нет\\' }}'\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlertDeleteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ApiDialogComponent.html":{"url":"components/ApiDialogComponent.html","title":"component - ApiDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ApiDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/api-dialog/api-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-api-edit-dialog\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            TuiAutoFocus\n                            TuiButton\n                            TuiDataListWrapper\n                            TuiInputModule\n                            TuiSelectModule\n                            TuiSlider\n                            TuiTextfield\n                            TuiTextfieldControllerModule\n                \n            \n\n            \n                styleUrls\n                ./api-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./api-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                context\n                            \n                            \n                                    \n                                descriptionInputRef\n                            \n                            \n                                    Private\n                                    Readonly\n                                dialogs\n                            \n                            \n                                    \n                                nameInputRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                moveFocus\n                            \n                            \n                                    Protected\n                                onInput\n                            \n                            \n                                    Protected\n                                showDialog\n                            \n                            \n                                    Protected\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasValue\n                                \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moveFocus\n                        \n                    \n                \n            \n            \n                \n                        \n                    moveFocus(targetInput: ElementRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/api-dialog/api-dialog.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                targetInput\n                                            \n                                                        ElementRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        onInput\n                        \n                    \n                \n            \n            \n                \n                        \n                    onInput(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/api-dialog/api-dialog.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        showDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    showDialog(content: TemplateRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/api-dialog/api-dialog.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                        TemplateRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        submit\n                        \n                    \n                \n            \n            \n                \n                        \n                    submit(event?: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/api-dialog/api-dialog.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext\n    >()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/api-dialog/api-dialog.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        descriptionInputRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('descriptionInput', {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/api-dialog/api-dialog.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/api-dialog/api-dialog.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nameInputRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('nameInput', {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/api-dialog/api-dialog.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasValue\n                    \n                \n\n                \n                    \n                        gethasValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/api-dialog/api-dialog.component.ts:44\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/api-dialog/api-dialog.component.ts:48\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ElementRef, TemplateRef } from '@angular/core';\nimport { Component, inject, ViewChild } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TuiAutoFocus } from '@taiga-ui/cdk';\nimport type { TuiDialogContext } from '@taiga-ui/core';\nimport { TuiButton, TuiDialogService, TuiTextfield } from '@taiga-ui/core';\nimport { TuiDataListWrapper, TuiSlider } from '@taiga-ui/kit';\nimport {\n  TuiInputModule,\n  TuiSelectModule,\n  TuiTextfieldControllerModule,\n} from '@taiga-ui/legacy';\nimport { injectContext } from '@taiga-ui/polymorpheus';\nimport { apiServiceShortStructure } from '../../../services/service-structure-api';\n\n@Component({\n  selector: 'app-api-edit-dialog',\n  imports: [\n    FormsModule,\n    TuiAutoFocus,\n    TuiButton,\n    TuiDataListWrapper,\n    TuiInputModule,\n    TuiSelectModule,\n    TuiSlider,\n    TuiTextfield,\n    TuiTextfieldControllerModule,\n  ],\n  templateUrl: './api-dialog.component.html',\n  styleUrls: ['./api-dialog.component.css'],\n})\nexport class ApiDialogComponent {\n  @ViewChild('nameInput', { read: ElementRef }) nameInputRef!: ElementRef;\n  @ViewChild('descriptionInput', { read: ElementRef })\n  descriptionInputRef!: ElementRef;\n\n  private readonly dialogs = inject(TuiDialogService);\n\n  public readonly context =\n    injectContext\n    >();\n\n  protected get hasValue(): boolean {\n    return this.data.name.trim() !== '';\n  }\n\n  protected get data(): apiServiceShortStructure {\n    return this.context.data;\n  }\n\n  protected submit(event?: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n    if (this.hasValue) {\n      this.context.completeWith(this.data);\n    }\n  }\n\n  protected showDialog(content: TemplateRef): void {\n    this.dialogs.open(content, { dismissible: true }).subscribe();\n  }\n\n  protected onInput(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    const value = input.value;\n    const cleanedValue = value.replace(/[^a-zA-Z0-9]/g, '');\n    input.value = cleanedValue;\n    this.data.name = cleanedValue;\n  }\n\n  protected moveFocus(targetInput: ElementRef): void {\n    targetInput.nativeElement.querySelector('input').focus();\n  }\n}\n\n    \n\n    \n        \n  Имя API\n\n\n\n  Описание\n\n\n\n  \n    Отправить\n  \n\n\n    \n\n    \n                \n                    ./api-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Имя API  Описание      Отправить  '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ApiDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ApiEndpointListComponent.html":{"url":"components/ApiEndpointListComponent.html","title":"component - ApiEndpointListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ApiEndpointListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-api-endpoint-list\n            \n\n\n            \n                imports\n                \n                            TuiAccordion\n                                LoadingComponent\n                            CommonModule\n                            RouterModule\n                            TuiButton\n                                HeaderComponent\n                                SwitchComponent\n                \n            \n\n            \n                styleUrls\n                ./api-endpoint-list.component.css,../../styles/button.css\n            \n\n\n\n            \n                templateUrl\n                ./api-endpoint-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiInfo\n                            \n                            \n                                apiName\n                            \n                            \n                                entities\n                            \n                            \n                                isCopied\n                            \n                            \n                                loading\n                            \n                            \n                                    Private\n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                copyTextToClipboard\n                            \n                            \n                                copyToClipboard\n                            \n                            \n                                getUrl\n                            \n                            \n                                    Private\n                                handleApiStructureResponse\n                            \n                            \n                                    Private\n                                loadApiStructure\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onApiToggleChange\n                            \n                            \n                                onEndpointToggleChange\n                            \n                            \n                                onEntityToggleChange\n                            \n                            \n                                    Private\n                                showCopySuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, apiService: ApiService, apiServiceRepository: ApiServiceRepositoryService, entityRepositoryService: EntityRepositoryService, endpointRepositoryService: EndpointRepositoryService, cd: ChangeDetectorRef, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiServiceRepository\n                                                  \n                                                        \n                                                                        ApiServiceRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityRepositoryService\n                                                  \n                                                        \n                                                                        EntityRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endpointRepositoryService\n                                                  \n                                                        \n                                                                        EndpointRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        copyTextToClipboard\n                        \n                    \n                \n            \n            \n                \n                        \n                    copyTextToClipboard(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        copyToClipboard\n                        \n                    \n                \n            \n            \n                \ncopyToClipboard(entityName: string, endpoint: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpoint\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUrl\n                        \n                    \n                \n            \n            \n                \ngetUrl(entityName: string, endpoint: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpoint\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleApiStructureResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleApiStructureResponse(apiStructure: ApiServiceStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiStructure\n                                            \n                                                            ApiServiceStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadApiStructure\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadApiStructure()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onApiToggleChange\n                        \n                    \n                \n            \n            \n                \nonApiToggleChange(newState: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEndpointToggleChange\n                        \n                    \n                \n            \n            \n                \nonEndpointToggleChange(entity: Entity, endpoint: Endpoint, newState: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpoint\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newState\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEntityToggleChange\n                        \n                    \n                \n            \n            \n                \nonEntityToggleChange(entity: Entity, newState: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newState\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showCopySuccess\n                        \n                    \n                \n            \n            \n                \n                        \n                    showCopySuccess(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : { isActive: false }\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apiName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        entities\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Entity[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCopied\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  ApiServiceStructure,\n  Endpoint,\n  Entity,\n} from '../../../services/service-structure-api';\nimport { TuiAccordion } from '@taiga-ui/experimental';\nimport { Subscription } from 'rxjs';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { ApiService } from '../../../services/api-service.service';\nimport { LoadingComponent } from '../../components/loading/loading.component';\nimport { CommonModule } from '@angular/common';\nimport { TuiButton } from '@taiga-ui/core';\nimport { HeaderComponent } from '../../components/header/header.component';\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { ApiServiceRepositoryService } from '../../../repositories/api-service-repository.service';\nimport { EndpointRepositoryService } from '../../../repositories/endpoint-repository.service';\nimport { EntityRepositoryService } from '../../../repositories/entity-repository.service';\nimport { SwitchComponent } from '../../components/switch/switch.component';\n\n@Component({\n  selector: 'app-api-endpoint-list',\n  imports: [\n    TuiAccordion,\n    LoadingComponent,\n    CommonModule,\n    RouterModule,\n    TuiButton,\n    HeaderComponent,\n    SwitchComponent,\n  ],\n  templateUrl: './api-endpoint-list.component.html',\n  styleUrls: ['./api-endpoint-list.component.css', '../../styles/button.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ApiEndpointListComponent implements OnInit, OnDestroy {\n  entities: Entity[] = [];\n  private sub: Subscription | null = null;\n  loading: boolean = true;\n  apiName!: string;\n  apiInfo: { isActive: boolean } = { isActive: false };\n  isCopied: string | null = null;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private apiService: ApiService,\n    private apiServiceRepository: ApiServiceRepositoryService,\n    private entityRepositoryService: EntityRepositoryService,\n    private endpointRepositoryService: EndpointRepositoryService,\n    private cd: ChangeDetectorRef,\n    private alerts: TuiAlertService\n  ) {}\n\n  ngOnDestroy(): void {\n    this.sub?.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      this.apiName = params['name'];\n      if (this.apiName) {\n        this.loadApiStructure();\n      }\n    });\n  }\n\n  private loadApiStructure(): void {\n    this.sub = this.apiService.getApiStructureList(this.apiName).subscribe({\n      next: (apiStructure) => this.handleApiStructureResponse(apiStructure),\n      error: () => {\n        this.loading = false;\n        this.cd.markForCheck();\n      },\n    });\n  }\n\n  private handleApiStructureResponse(apiStructure: ApiServiceStructure): void {\n    if (apiStructure) {\n      this.entities = apiStructure.entities;\n      this.apiInfo.isActive = apiStructure.isActive; // Set the API state here\n      this.loading = false;\n      this.cd.markForCheck();\n    }\n  }\n\n  copyToClipboard(entityName: string, endpoint: Endpoint): void {\n    const url = this.getUrl(entityName, endpoint);\n    this.copyTextToClipboard(url);\n  }\n\n  private copyTextToClipboard(text: string): void {\n    const textarea = document.createElement('textarea');\n    textarea.value = text;\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      document.execCommand('copy');\n      this.showCopySuccess(text);\n    } catch (err) {\n      console.error('Error copying URL:', err);\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n\n  private showCopySuccess(url: string): void {\n    this.isCopied = url;\n    this.cd.markForCheck();\n    setTimeout(() => {\n      this.isCopied = null;\n      this.cd.markForCheck();\n    }, 2000);\n  }\n\n  getUrl(entityName: string, endpoint: Endpoint): string {\n    return `${window.location.origin}/api/ApiEmu/${this.apiName}/${entityName}/${endpoint.route}`;\n  }\n\n  onApiToggleChange(newState: boolean): void {\n    this.apiInfo.isActive = newState;\n    this.apiServiceRepository\n      .updateApiServiceStatus(this.apiName, newState)\n      .subscribe({\n        next: (response) => {\n          console.log('Состояние API обновлено:', response);\n        },\n        error: (error) => {\n          console.error('Ошибка при обновлении состояния API:', error);\n        },\n      });\n  }\n\n  onEntityToggleChange(entity: Entity, newState: boolean): void {\n    entity.isActive = newState;\n    this.entityRepositoryService\n      .updateEntityStatus(this.apiName, entity.name, newState)\n      .subscribe({\n        next: (response) => {\n          console.log('Состояние сущности обновлено:', response);\n        },\n        error: (error) => {\n          console.error('Ошибка при обновлении состояния сущности:', error);\n        },\n      });\n  }\n\n  onEndpointToggleChange(\n    entity: Entity,\n    endpoint: Endpoint,\n    newState: boolean\n  ): void {\n    endpoint.isActive = newState;\n    this.endpointRepositoryService\n      .updateEndpointStatus(this.apiName, entity.name, endpoint.route, newState)\n      .subscribe({\n        next: (response) => {\n          console.log('Состояние эндпоинта обновлено:', response);\n        },\n        error: (error) => {\n          console.error('Ошибка при обновлении состояния эндпоинта:', error);\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n@if (loading) {\n\n} @else {\n\n  \n    {{ apiName }}\n    \n  \n   0; else noEntities\">\n    \n      \n        \n          {{ entity.name }}\n          \n        \n        \n           0;\n              else emptyEntityOrApi\n            \"\n          >\n            \n              \n                \n                  {{ endpoint.route }}\n                  {{ endpoint.type }}\n                  \n                \n                \n                  \n                    \n                    \n                      \n                    \n                  \n                \n              \n            \n          \n          \n            \n              Нет доступных эндпоинтов.\n              \n                Перейти к деталям сущности\n              \n            \n            \n              \n                Перейти к деталям API\n              \n            \n          \n        \n      \n    \n  \n  \n    Нет доступных сущностей и эндпоинтов\n  \n\n}\n\n    \n\n    \n                \n                    ./api-endpoint-list.component.css\n                \n                /* Общие стили */\n.container {\n  padding: 20px;\n  gap: 20px;\n}\n\n.endpoint-list {\n  padding: 20px;\n}\n\nh1 {\n  font-size: 2.5rem;\n  color: #333;\n  margin-bottom: 3rem;\n  font-weight: 600;\n  text-align: center;\n}\n\n/* Ensure the accordion button is positioned relatively */\n.accordion {\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 20px;\n    background: transparent;\n    border-radius: 0px;\n    transition: box-shadow 0.3s ease;\n  }\n  \n  /* Position the switch absolutely within the accordion button */\n  .accordion app-switch {\n    position: absolute;\n    right: 45px; /* Increase this value to position the switch further from the default icon */\n    margin-left: auto;\n    margin-right: 0;\n  }\n  \n  /* Ensure the chevron icon is still visible and positioned correctly */\n  .accordion::after {\n    content: var(--t-icon-end);\n    display: inline-block;\n    width: 16px;\n    height: 16px;\n    margin-left: 5px;\n    order: 3;\n  }\n  \n  /* Ensure the switch in the API header stays in line */\n  .api-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 20px;\n    background: transparent;\n    border-radius: 0px;\n    transition: box-shadow 0.3s ease;\n  }\n  \n  .api-header h1 {\n    margin: 0;\n    flex-grow: 1;\n  }\n  \n  .api-header app-switch {\n    margin-left: 10px;\n  }\n  \n.tui-expand {\n  padding: 15px;\n  background: #f9f9f9;\n  border-radius: 0 0 8px 8px;\n}\n\n\n/* Список эндпоинтов */\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\n.endpoint-item {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 10px 5px;\n  border-bottom: 1px solid #eee;\n  transition: background-color 0.3s ease;\n}\n\n.endpoint-item:last-child {\n  border-bottom: none;\n}\n\n/* Заголовок эндпоинта */\n.endpoint-header {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  margin-bottom: 10px;\n}\n.endpoint-route {\n  font-weight: bold;\n  color: #0056a6; /* Установлено на черный цвет */\n  word-wrap: break-word;\n  font-size: 1rem;\n}\n.endpoint-type {\n  color: #000; /* Установлено на черный цвет */\n  word-wrap: break-word;\n  font-size: 1rem;\n}\n\n/* Блок URL */\n.url-container {\n  width: 100%;\n}\n\n.copy-url-field {\n  display: flex;\n  align-items: center;\n  width: 100%;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  overflow: hidden;\n}\n\n.url-input {\n  flex: 1;\n  padding: 8px 12px; /* Отступы внутри текстового поля */\n  border: 1px solid #ddd; /* Граница текстового поля */\n  outline: none;\n  background: #ffffff;\n  font-size: 0.9rem;\n  color: #333;\n  border-radius: 4px 0 0 4px; /* Закругление левой стороны */\n  height: 40px; /* Высота текстового поля */\n  box-sizing: border-box; /* Учитываем padding и border в общей высоте */\n}\n\n.copy-button {\n  background: #f0f0f0;\n  border: 1px solid #ddd; /* Граница кнопки */\n  color: #555;\n  cursor: pointer;\n  transition: background-color 0.3s ease, color 0.3s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 12px; /* Отступы внутри кнопки */\n  border-radius: 0 4px 4px 0; /* Закругление правой стороны */\n  height: 40px; /* Высота кнопки */\n  font-size: 1rem;\n  box-sizing: border-box; /* Учитываем padding и border в общей высоте */\n}\n\n.copy-button:hover {\n  background: #e0e0e0;\n  color: #333;\n}\n\n.copy-button.copied {\n  background: #d1e7dd;\n  color: #0f5132;\n}\n\n.copy-button.copied i {\n  transform: rotate(360deg);\n  margin-right: 0; /* Убираем отступ для галочки */\n}\n\n/* Медиа-запросы */\n@media (max-width: 768px) {\n  h1 {\n    font-size: 2rem;\n  }\n\n  .endpoint-header {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .endpoint-type,\n  .endpoint-route {\n    margin-bottom: 5px;\n  }\n}\n\n.primary-button {\n  margin: 0px !important;\n}\n\n                \n                    ../../styles/button.css\n                \n                .primary-button {\n    background-color: #0056a6;\n    color: white;\n    border: none;\n    block-size: auto;\n    padding: 7px 13px;\n    border-radius: 5px;\n    cursor: pointer;\n    font-weight: bold;\n    transition: background-color 0.3s;\n    margin-left: 1rem;\n    margin-bottom: 1rem;\n  }\n  \n  .primary-button:hover {\n    background-color: #004080;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (loading) {} @else {      {{ apiName }}         0; else noEntities\">                            {{ entity.name }}                                     0;              else emptyEntityOrApi            \"          >                                                            {{ endpoint.route }}                  {{ endpoint.type }}                                                                                                                                                                                                                                                                Нет доступных эндпоинтов.                              Перейти к деталям сущности                                                                    Перейти к деталям API                                                              Нет доступных сущностей и эндпоинтов  }'\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ApiEndpointListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiHubServiceService.html":{"url":"injectables/ApiHubServiceService.html","title":"injectable - ApiHubServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiHubServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api-hub-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiListSubject\n                            \n                            \n                                    Private\n                                baseUrl\n                            \n                            \n                                    Private\n                                hubConnection\n                            \n                            \n                                ordersUpdated$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api-hub-service.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeData\n                        \n                    \n                \n            \n            \n                \ninitializeData(initialData: apiServiceShortStructure[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-hub-service.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                initialData\n                                            \n                                                            apiServiceShortStructure[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiListSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-hub-service.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/hubs`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-hub-service.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hubConnection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     signalR.HubConnection\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-hub-service.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ordersUpdated$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.apiListSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-hub-service.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Input, NgZone } from '@angular/core';\nimport * as signalR from '@microsoft/signalr';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { apiServiceShortStructure } from './service-structure-api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiHubServiceService {\n  private hubConnection!: signalR.HubConnection;\n  private apiListSubject = new BehaviorSubject([]);\n  private baseUrl = `${window.location.origin}/hubs`;\n  ordersUpdated$: Observable = this.apiListSubject.asObservable();\n  constructor() {\n    this.hubConnection = new signalR.HubConnectionBuilder()\n      .withUrl(`hubs/apilisthub`, {\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets\n      })\n      .withAutomaticReconnect([1000, 3000, 5000])\n      .build();\n\n    this.hubConnection\n      .start()\n      .then(() => console.log('Connected to SignalR hub'))\n      .catch(err => console.error('Error connecting to SignalR hub:', err));\n\n    this.hubConnection.on('RecieveMessage', (apiList: apiServiceShortStructure[]) => {\n      this.apiListSubject.next(apiList);\n      console.log(apiList);\n    });\n\n    this.hubConnection.on('AddService', (api: apiServiceShortStructure) => {\n      const currentList = this.apiListSubject.getValue();\n      currentList.push(api);\n      this.apiListSubject.next(currentList);\n      console.log(currentList);\n    });\n    \n    this.hubConnection.on('UpdateService', (oldName: string, api: apiServiceShortStructure) => {\n      const currentList = this.apiListSubject.getValue();\n      const index = currentList.findIndex((apiService: apiServiceShortStructure) => {\n        return apiService.name === oldName\n      });\n      currentList[index] = api;\n      this.apiListSubject.next(currentList);\n    });\n    \n    this.hubConnection.on('RemoveService', (name: string) => {\n      const currentList = this.apiListSubject.getValue();\n      const index = currentList.findIndex((apiService: apiServiceShortStructure) => {\n        return apiService.name === name\n      });\n      currentList.splice(index, 1);\n      this.apiListSubject.next(currentList);\n    });\n\n    this.hubConnection.on('UpdateStatusService', (name: string, isActive: boolean) => {\n      this.apiListSubject.next(\n        this.apiListSubject.getValue().map(apiService => \n          apiService.name === name ? { ...apiService, isActive } : apiService\n        )\n      );\n    });\n  }\n  \n  initializeData(initialData: apiServiceShortStructure[]) {\n    this.apiListSubject.next(initialData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createApiService\n                            \n                            \n                                createFullApiService\n                            \n                            \n                                deleteApiService\n                            \n                            \n                                getApiList\n                            \n                            \n                                getApiStructureList\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                updateApiService\n                            \n                            \n                                updateApiServiceStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorHandler: ErrorHandlerService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api-service.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createApiService\n                        \n                    \n                \n            \n            \n                \ncreateApiService(service: apiServiceShortStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                service\n                                            \n                                                            apiServiceShortStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createFullApiService\n                        \n                    \n                \n            \n            \n                \ncreateFullApiService(service: ApiServiceStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                service\n                                            \n                                                            ApiServiceStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteApiService\n                        \n                    \n                \n            \n            \n                \ndeleteApiService(serviceName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiList\n                        \n                    \n                \n            \n            \n                \ngetApiList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiStructureList\n                        \n                    \n                \n            \n            \n                \ngetApiStructureList(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiService\n                        \n                    \n                \n            \n            \n                \nupdateApiService(oldName: string, service: apiServiceShortStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                service\n                                            \n                                                            apiServiceShortStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiServiceStatus\n                        \n                    \n                \n            \n            \n                \nupdateApiServiceStatus(serviceName: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/api`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-service.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { TuiAlertService } from '@taiga-ui/core';\nimport {\n  apiServiceShortStructure,\n  ApiServiceStructure,\n} from './service-structure-api';\nimport { ErrorHandlerService } from './error-handler.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  private baseUrl = `${window.location.origin}/api`;\n\n  constructor(\n    private http: HttpClient,\n    private errorHandler: ErrorHandlerService,\n    private alerts: TuiAlertService\n  ) {}\n\n  getApiList(): Observable {\n    return this.http\n      .get(`${this.baseUrl}/ApiService`)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  getApiStructureList(name: string): Observable {\n    return this.http\n      .get(\n        `${this.baseUrl}/ApiService/${encodeURIComponent(name)}`\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  createApiService(\n    service: apiServiceShortStructure\n  ): Observable {\n    return this.http\n      .post(`${this.baseUrl}/ApiService`, service)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  createFullApiService(service: ApiServiceStructure): Observable {\n    return this.http\n      .post(`${this.baseUrl}/ApiService`, service)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  updateApiService(\n    oldName: string,\n    service: apiServiceShortStructure\n  ): Observable {\n    return this.http\n      .put(\n        `${this.baseUrl}/ApiService/${encodeURIComponent(oldName)}`,\n        service\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  deleteApiService(serviceName: string): Observable {\n    return this.http\n      .delete(\n        `${this.baseUrl}/ApiService/${encodeURIComponent(serviceName)}`\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  updateApiServiceStatus(\n    serviceName: string,\n    isActive: boolean\n  ): Observable {\n    return this.http\n      .patch(\n        `${this.baseUrl}/ApiService/${encodeURIComponent(\n          serviceName\n        )}/${isActive}`,\n        null\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  private handleError(error: HttpErrorResponse): Observable {\n    this.errorHandler.handleError(error);\n    this.alerts.open(error.message, { appearance: 'negative' }).subscribe();\n    return throwError(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiServiceRepositoryService.html":{"url":"injectables/ApiServiceRepositoryService.html","title":"injectable - ApiServiceRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiServiceRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/api-service-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createApiService\n                            \n                            \n                                createFullApiService\n                            \n                            \n                                deleteApiService\n                            \n                            \n                                getApiList\n                            \n                            \n                                getApiStructureList\n                            \n                            \n                                updateApiService\n                            \n                            \n                                updateApiServiceStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/api-service-repository.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createApiService\n                        \n                    \n                \n            \n            \n                \ncreateApiService(service: apiServiceShortStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                service\n                                            \n                                                            apiServiceShortStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createFullApiService\n                        \n                    \n                \n            \n            \n                \ncreateFullApiService(service: ApiServiceStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                service\n                                            \n                                                            ApiServiceStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteApiService\n                        \n                    \n                \n            \n            \n                \ndeleteApiService(serviceName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiList\n                        \n                    \n                \n            \n            \n                \ngetApiList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiStructureList\n                        \n                    \n                \n            \n            \n                \ngetApiStructureList(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiService\n                        \n                    \n                \n            \n            \n                \nupdateApiService(oldName: string, service: apiServiceShortStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                service\n                                            \n                                                            apiServiceShortStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiServiceStatus\n                        \n                    \n                \n            \n            \n                \nupdateApiServiceStatus(serviceName: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {\n  apiServiceShortStructure,\n  ApiServiceStructure,\n} from '../services/service-structure-api';\nimport { ApiService } from '../services/api-service.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiServiceRepositoryService {\n  constructor(private apiService: ApiService) {}\n\n  getApiList(): Observable {\n    return this.apiService.getApiList();\n  }\n\n  getApiStructureList(name: string): Observable {\n    return this.apiService.getApiStructureList(name);\n  }\n\n  createApiService(\n    service: apiServiceShortStructure\n  ): Observable {\n    return this.apiService.createApiService(service);\n  }\n\n  createFullApiService(service: ApiServiceStructure): Observable {\n    return this.apiService.createFullApiService(service);\n  }\n\n  updateApiService(\n    oldName: string,\n    service: apiServiceShortStructure\n  ): Observable {\n    return this.apiService.updateApiService(oldName, service);\n  }\n\n  deleteApiService(serviceName: string): Observable {\n    return this.apiService.deleteApiService(serviceName);\n  }\n\n  updateApiServiceStatus(\n    serviceName: string,\n    isActive: boolean\n  ): Observable {\n    return this.apiService.updateApiServiceStatus(serviceName, isActive);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiServiceStructure.html":{"url":"interfaces/ApiServiceStructure.html","title":"interface - ApiServiceStructure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiServiceStructure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/service-structure-api.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            entities\n                                        \n                                \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entities\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entities:         Entity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Entity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Endpoint {\n  route: string;\n  type: string;\n  isActive: boolean;\n}\n\nexport interface Entity {\n  name: string;\n  isActive: boolean;\n  structure: any;\n  endpoints: Endpoint[];\n}\n\nexport interface ApiServiceStructure {\n  name: string;\n  isActive: boolean;\n  description: string;\n  entities: Entity[];\n}\n\nexport interface apiServiceShortStructure {\n  name: string;\n  isActive : boolean;\n  description: string;\n}\n\nexport interface EntityShort {\n  name: string;\n  isActive: boolean;\n  structure: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                            TuiRoot\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ApiEasier'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { TuiRoot } from \"@taiga-ui/core\";\nimport { Component } from '@angular/core';\nimport { RouterModule, RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  imports: [\n    RouterOutlet, \n    TuiRoot, \n    RouterModule,\n  ],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  title = 'ApiEasier';\n}\n\n    \n\n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BackButtonComponent.html":{"url":"components/BackButtonComponent.html","title":"component - BackButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BackButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/back-button/back-button.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-back-button\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./back-button.component.html\n            \n\n\n\n            \n                styleUrl\n                ./back-button.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(location: Location, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/back-button/back-button.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/back-button/back-button.component.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-back-button',\n  imports: [],\n  templateUrl: './back-button.component.html',\n  styleUrl: './back-button.component.css'\n})\nexport class BackButtonComponent {\n  constructor(private location: Location, private router: Router) {}\n\n  goBack(): void {\n    const currentUrl = this.router.url;\n    try {\n      const previousUrl = this.location.path(true); \n      const baseDomain = '/'; \n      if (previousUrl.startsWith(baseDomain)) {\n        this.location.back(); \n      } else {\n        this.router.navigateByUrl('/');\n      }\n    } catch (error) {\n      this.router.navigateByUrl('/');\n    }\n  }\n\n}\n    \n\n    \n        \n  Назад\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Назад'\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BackButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardApiComponent.html":{"url":"components/CardApiComponent.html","title":"component - CardApiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardApiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/card-api/card-api.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-api\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            TuiAppearance\n                            TuiButton\n                            RouterModule\n                                SwitchComponent\n                                IconTrashComponent\n                                ExportApiButtonComponent\n                \n            \n\n            \n                styleUrls\n                ./card-api.component.css,../../styles/card.css,../../styles/button.css,../../styles/icon.css\n            \n\n\n\n            \n                templateUrl\n                ./card-api.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                dialog\n                            \n                            \n                                location\n                            \n                            \n                                oldName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onDeleteConfirmed\n                            \n                            \n                                onToggleChange\n                            \n                            \n                                openEditDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiDeleted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiServiceRepository: ApiServiceRepositoryService, cd: ChangeDetectorRef, alerts: TuiAlertService, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/card-api/card-api.component.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiServiceRepository\n                                                  \n                                                        \n                                                                        ApiServiceRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        apiInfo\n                    \n                \n                \n                    \n                        Type :         apiServiceShortStructure\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-api/card-api.component.ts:47\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        apiDeleted\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-api/card-api.component.ts:48\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteConfirmed\n                        \n                    \n                \n            \n            \n                \nonDeleteConfirmed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-api/card-api.component.ts:122\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToggleChange\n                        \n                    \n                \n            \n            \n                \nonToggleChange(newState: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-api/card-api.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-api/card-api.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : tuiDialog(ApiDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-api/card-api.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Location\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-api/card-api.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oldName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-api/card-api.component.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport {\n  TuiAppearance,\n  TuiButton,\n  tuiDialog,\n  TuiAlertService,\n} from '@taiga-ui/core';\nimport { RouterModule } from '@angular/router';\nimport { apiServiceShortStructure } from '../../../services/service-structure-api';\nimport { SwitchComponent } from '../switch/switch.component';\nimport { ApiDialogComponent } from '../api-dialog/api-dialog.component';\nimport { Location } from '@angular/common';\nimport { IconTrashComponent } from '../icon-trash/icon-trash.component';\nimport { ApiServiceRepositoryService } from '../../../repositories/api-service-repository.service';\nimport { ExportApiButtonComponent } from '../export-api-button/export-api-button.component';\n\n@Component({\n  selector: 'app-card-api',\n  imports: [\n    CommonModule,\n    TuiAppearance,\n    TuiButton,\n    RouterModule,\n    SwitchComponent,\n    IconTrashComponent,\n    ExportApiButtonComponent,\n  ],\n\n  templateUrl: './card-api.component.html',\n  styleUrls: [\n    './card-api.component.css',\n    '../../styles/card.css',\n    '../../styles/button.css',\n    '../../styles/icon.css',\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CardApiComponent {\n  @Input() apiInfo!: apiServiceShortStructure;\n  @Output() apiDeleted = new EventEmitter();\n  oldName: string = '';\n  location: Location;\n\n  private readonly dialog = tuiDialog(ApiDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  });\n\n  constructor(\n    private apiServiceRepository: ApiServiceRepositoryService,\n    private cd: ChangeDetectorRef,\n    private alerts: TuiAlertService,\n    location: Location \n  ) {\n    this.location = location;\n  }\n  onToggleChange(newState: boolean) {\n    this.apiInfo.isActive = newState; \n    console.log('Состояние переключателя изменилось на:', newState);\n    this.apiServiceRepository\n      .updateApiServiceStatus(this.apiInfo.name, newState)\n      .subscribe({\n        next: (response) => {\n          console.log('Состояние сервиса обновлено:', response);\n        },\n        error: (error) => {\n          console.error('Ошибка при обновлении состояния сервиса:', error);\n        },\n      });\n  }\n\n  openEditDialog(): void {\n    this.oldName = this.apiInfo.name;\n    this.dialog({ ...this.apiInfo }).subscribe({\n      next: (data) => {\n        console.info(`Dialog emitted data = ${data} - ${this.apiInfo.name}}`);\n\n        this.apiServiceRepository\n          .updateApiService(this.oldName, data)\n          .subscribe({\n            next: (response) => {\n              console.log('API обновлена:', response);\n              this.apiInfo = data;\n              this.cd.markForCheck();\n              this.alerts\n                .open('API успешно обновлено', {\n                  appearance: 'success',\n                })\n                .subscribe();\n            },\n            error: (error) => {\n              if (error.status === 409) {\n                this.alerts\n                  .open('Ошибка: API с таким именем уже существует', {\n                    appearance: 'negative',\n                  })\n                  .subscribe();\n              } else {\n                this.alerts\n                  .open('Ошибка при обновлении API', {\n                    appearance: 'negative',\n                  })\n                  .subscribe();\n              }\n            },\n          });\n      },\n      complete: () => {\n        console.info('Dialog closed');\n      },\n    });\n  }\n\n  onDeleteConfirmed(): void {\n    this.apiServiceRepository.deleteApiService(this.apiInfo.name).subscribe({\n      next: () => {\n        console.log(`Сервис \"${this.apiInfo.name}\" удален.`);\n        this.apiDeleted.emit(); // Emit the event to notify the parent component\n      },\n      error: (error) => {\n        console.error('Ошибка при удалении сервиса:', error);\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n    \n    \n    \n\n{{ apiInfo.name }}\n{{ apiInfo.description }}\n\n    К тестам\n    Детали\n    \n\n    \n\n    \n                \n                    ./card-api.component.css\n                \n                \n                \n                    ../../styles/card.css\n                \n                \nh3 {\n    margin: 0;\n    font-size: 24px;\n    color: #0056a6;\n    width: 65%; /* Ширина элемента */\n    text-overflow: ellipsis; /* Добавляем троеточие */\n    white-space: nowrap; /* Запрещаем перенос текста на новую строку */\n    overflow: hidden; /* Скрываем текст, который не помещается */\n    height: 2rem;\n}\n  \n  p {\n    margin: 10px 0;\n    color: #666;\n    font-size: 16px;\n    line-height: 1.5; /* Установите желаемую высоту строки */\n    height: calc(1.5em * 2); /* Высота равна трём строкам */\n    overflow-y: auto; /* Добавляем вертикальную прокрутку при необходимости */\n    overflow-x: hidden; /* Запрещаем горизонтальную прокрутку */\n    box-sizing: border-box; /* Включаем отступы и границы в размер элемента */\n    word-wrap: break-word; /* Перенос слов на новую строку, если они не помещаются */\n    white-space: normal; /* Разрешаем перенос текста на новую строку */\n}\n\n  /* Стилизация полосы прокрутки для WebKit-браузеров (Chrome, Safari, Edge) */\n  p::-webkit-scrollbar {\n    width: 8px; /* Ширина полосы прокрутки */\n  }\n\n  p::-webkit-scrollbar-track {\n    background: #f1f1f1; /* Цвет фона полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb {\n    background: #888; /* Цвет полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb:hover {\n    background: #555; /* Цвет полосы прокрутки при наведении */\n  }\n  \n.actions {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    flex-wrap: wrap;\n  }\n  \n.top-right {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    display: flex;\n    align-items: center;\n  }\n\n                \n                    ../../styles/button.css\n                \n                .primary-button {\n    background-color: #0056a6;\n    color: white;\n    border: none;\n    block-size: auto;\n    padding: 7px 13px;\n    border-radius: 5px;\n    cursor: pointer;\n    font-weight: bold;\n    transition: background-color 0.3s;\n    margin-left: 1rem;\n    margin-bottom: 1rem;\n  }\n  \n  .primary-button:hover {\n    background-color: #004080;\n  }\n                \n                    ../../styles/icon.css\n                \n                  \ni {\n    margin-right: 15px; /* 10px * 1.2 */\n    cursor: pointer;\n    color: #666;\n    transition: color 0.3s;\n    font-size: 20px; /* Увеличиваем размер шрифта на 20% */\n}\n\ni:hover {\n    color: #000;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ apiInfo.name }}{{ apiInfo.description }}    К тестам    Детали    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardApiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardEndpointComponent.html":{"url":"components/CardEndpointComponent.html","title":"component - CardEndpointComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardEndpointComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/card-endpoint/card-endpoint.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-endpoint\n            \n\n\n            \n                imports\n                \n                                SwitchComponent\n                                IconTrashComponent\n                            CommonModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./card-endpoint.component.css,../../styles/card.css,../../styles/icon.css\n            \n\n\n\n            \n                templateUrl\n                ./card-endpoint.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleEndpointUpdate\n                            \n                            \n                                    Private\n                                handleEndpointUpdateError\n                            \n                            \n                                onDeleteConfirmed\n                            \n                            \n                                onToggleChange\n                            \n                            \n                                openEditDialog\n                            \n                            \n                                    Private\n                                processEditDialogData\n                            \n                            \n                                    Private\n                                updateEndpoint\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiName\n                            \n                            \n                                endpointInfo\n                            \n                            \n                                entityInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                endpointDeleted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(endpointRepositoryService: EndpointRepositoryService, cd: ChangeDetectorRef, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        endpointRepositoryService\n                                                  \n                                                        \n                                                                        EndpointRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        apiName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        endpointInfo\n                    \n                \n                \n                    \n                        Type :         Endpoint\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        entityInfo\n                    \n                \n                \n                    \n                        Type :         Entity\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:33\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        endpointDeleted\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEndpointUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEndpointUpdate(response: Endpoint, data: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEndpointUpdateError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEndpointUpdateError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteConfirmed\n                        \n                    \n                \n            \n            \n                \nonDeleteConfirmed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:123\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToggleChange\n                        \n                    \n                \n            \n            \n                \nonToggleChange(newState: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        processEditDialogData\n                        \n                    \n                \n            \n            \n                \n                        \n                    processEditDialogData(data: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateEndpoint\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEndpoint(data: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : tuiDialog(EndpointDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport {\n  Endpoint,\n  apiServiceShortStructure,\n  Entity,\n} from '../../../services/service-structure-api';\nimport { Subscription } from 'rxjs';\nimport { SwitchComponent } from '../switch/switch.component';\nimport { IconTrashComponent } from '../icon-trash/icon-trash.component';\nimport { tuiDialog, TuiAlertService } from '@taiga-ui/core';\nimport { EndpointDialogComponent } from '../endpoint-dialog/endpoint-dialog.component';\nimport { EndpointRepositoryService } from '../../../repositories/endpoint-repository.service';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-card-endpoint',\n  imports: [SwitchComponent, IconTrashComponent, CommonModule, RouterModule],\n  templateUrl: './card-endpoint.component.html',\n  styleUrls: [\n    './card-endpoint.component.css',\n    '../../styles/card.css',\n    '../../styles/icon.css',\n  ],\n})\nexport class CardEndpointComponent {\n  @Input() entityInfo!: Entity;\n  @Input() endpointInfo!: Endpoint;\n  @Input() apiName: string = '';\n  @Output() endpointDeleted = new EventEmitter();\n\n  private readonly dialog = tuiDialog(EndpointDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  });\n\n  constructor(\n    private endpointRepositoryService: EndpointRepositoryService,\n    private cd: ChangeDetectorRef,\n    private alerts: TuiAlertService\n  ) {}\n\n  onToggleChange(newState: boolean): void {\n    this.endpointInfo.isActive = newState; // Update the state in the parent component\n    console.log('Состояние переключателя изменилось на:', newState);\n    this.endpointRepositoryService\n      .updateEndpointStatus(\n        this.apiName,\n        this.entityInfo.name,\n        this.endpointInfo.route,\n        newState\n      )\n      .subscribe({\n        next: (response) => {\n          console.log('Состояние сервиса обновлено:', response);\n        },\n        error: (error) => {\n          console.error('Ошибка при обновлении состояния сервиса:', error);\n        },\n      });\n  }\n\n  openEditDialog(): void {\n    this.dialog({ ...this.endpointInfo }).subscribe({\n      next: (data) => this.processEditDialogData(data),\n      complete: () => console.info('Dialog closed'),\n    });\n  }\n\n  private processEditDialogData(data: Endpoint): void {\n    console.info(`Dialog emitted data = ${data} - ${this.apiName}`);\n    this.updateEndpoint(data);\n  }\n\n  private updateEndpoint(data: Endpoint): void {\n    this.endpointRepositoryService\n      .updateEndpoint(\n        this.apiName,\n        this.entityInfo.name,\n        this.endpointInfo.route,\n        data\n      )\n      .subscribe({\n        next: (response) => this.handleEndpointUpdate(response, data),\n        error: (error) => this.handleEndpointUpdateError(error),\n      });\n  }\n\n  private handleEndpointUpdate(response: Endpoint, data: Endpoint): void {\n    console.log('Эндпоинт обновлен:', response);\n    this.endpointInfo = data;\n    this.cd.markForCheck();\n    this.alerts\n      .open('Эндпоинт успешно обновлен', {\n        appearance: 'success',\n      })\n      .subscribe();\n  }\n\n  private handleEndpointUpdateError(error: any): void {\n    if (error.status === 409) {\n      this.alerts\n        .open('Ошибка: Эндпоинт с таким именем уже существует', {\n          appearance: 'negative',\n        })\n        .subscribe();\n    } else {\n      this.alerts\n        .open('Ошибка при обновлении эндпоинта', {\n          appearance: 'negative',\n        })\n        .subscribe();\n    }\n    console.error('Ошибка при обновлении эндпоинта:', error);\n  }\n\n  onDeleteConfirmed(): void {\n    this.endpointRepositoryService\n      .deleteEndpoint(\n        this.apiName,\n        this.entityInfo.name,\n        this.endpointInfo.route\n      )\n      .subscribe({\n        next: () => {\n          console.log(`Действие \"${this.endpointInfo.route}\" удалено.`);\n          this.endpointDeleted.emit(this.endpointInfo.route); \n        },\n        error: (error) => {\n          console.error('Ошибка при удалении действия:', error);\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n    \n      \n      \n      \n    \n    {{ endpointInfo.route }}\n    Тип: {{ endpointInfo.type }}\n  \n  \n    \n\n    \n                \n                    ./card-endpoint.component.css\n                \n                \n                \n                    ../../styles/card.css\n                \n                \nh3 {\n    margin: 0;\n    font-size: 24px;\n    color: #0056a6;\n    width: 65%; /* Ширина элемента */\n    text-overflow: ellipsis; /* Добавляем троеточие */\n    white-space: nowrap; /* Запрещаем перенос текста на новую строку */\n    overflow: hidden; /* Скрываем текст, который не помещается */\n    height: 2rem;\n}\n  \n  p {\n    margin: 10px 0;\n    color: #666;\n    font-size: 16px;\n    line-height: 1.5; /* Установите желаемую высоту строки */\n    height: calc(1.5em * 2); /* Высота равна трём строкам */\n    overflow-y: auto; /* Добавляем вертикальную прокрутку при необходимости */\n    overflow-x: hidden; /* Запрещаем горизонтальную прокрутку */\n    box-sizing: border-box; /* Включаем отступы и границы в размер элемента */\n    word-wrap: break-word; /* Перенос слов на новую строку, если они не помещаются */\n    white-space: normal; /* Разрешаем перенос текста на новую строку */\n}\n\n  /* Стилизация полосы прокрутки для WebKit-браузеров (Chrome, Safari, Edge) */\n  p::-webkit-scrollbar {\n    width: 8px; /* Ширина полосы прокрутки */\n  }\n\n  p::-webkit-scrollbar-track {\n    background: #f1f1f1; /* Цвет фона полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb {\n    background: #888; /* Цвет полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb:hover {\n    background: #555; /* Цвет полосы прокрутки при наведении */\n  }\n  \n.actions {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    flex-wrap: wrap;\n  }\n  \n.top-right {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    display: flex;\n    align-items: center;\n  }\n\n                \n                    ../../styles/icon.css\n                \n                  \ni {\n    margin-right: 15px; /* 10px * 1.2 */\n    cursor: pointer;\n    color: #666;\n    transition: color 0.3s;\n    font-size: 20px; /* Увеличиваем размер шрифта на 20% */\n}\n\ni:hover {\n    color: #000;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ endpointInfo.route }}    Тип: {{ endpointInfo.type }}    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardEndpointComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardEntityComponent.html":{"url":"components/CardEntityComponent.html","title":"component - CardEntityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardEntityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/card-entity/card-entity.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-entity\n            \n\n\n            \n                imports\n                \n                                IconTrashComponent\n                                SwitchComponent\n                            CommonModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./card-entity.component.css,../../styles/card.css,../../styles/button.css,../../styles/icon.css\n            \n\n\n\n            \n                templateUrl\n                ./card-entity.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                dialog\n                            \n                            \n                                    Private\n                                loading\n                            \n                            \n                                    Private\n                                oldName\n                            \n                            \n                                    Private\n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleEditDialogData\n                            \n                            \n                                    Private\n                                handleEntityDeletion\n                            \n                            \n                                    Private\n                                handleEntityUpdate\n                            \n                            \n                                    Private\n                                handleEntityUpdateError\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                onDeleteConfirmed\n                            \n                            \n                                onToggleChange\n                            \n                            \n                                openEditDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiName\n                            \n                            \n                                entityInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                entityDeleted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cd: ChangeDetectorRef, entityRepositoryService: EntityRepositoryService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/card-entity/card-entity.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityRepositoryService\n                                                  \n                                                        \n                                                                        EntityRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        apiName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-entity/card-entity.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        entityInfo\n                    \n                \n                \n                    \n                        Type :         Entity\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-entity/card-entity.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        entityDeleted\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-entity/card-entity.component.ts:32\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEditDialogData\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEditDialogData(data: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEntityDeletion\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEntityDeletion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEntityUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEntityUpdate(response: Entity, data: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEntityUpdateError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEntityUpdateError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(message: string, error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteConfirmed\n                        \n                    \n                \n            \n            \n                \nonDeleteConfirmed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToggleChange\n                        \n                    \n                \n            \n            \n                \nonToggleChange(newState: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : tuiDialog(EntityDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-entity/card-entity.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-entity/card-entity.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        oldName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-entity/card-entity.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-entity/card-entity.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { Entity } from '../../../services/service-structure-api';\nimport { RouterModule } from '@angular/router';\nimport { IconTrashComponent } from '../icon-trash/icon-trash.component';\nimport { SwitchComponent } from '../switch/switch.component';\nimport { Subscription } from 'rxjs';\nimport { tuiDialog, TuiAlertService } from '@taiga-ui/core';\nimport { EntityDialogComponent } from '../entity-dialog/entity-dialog.component';\nimport { CommonModule } from '@angular/common';\nimport { EntityRepositoryService } from '../../../repositories/entity-repository.service';\n\n@Component({\n  selector: 'app-card-entity',\n  imports: [IconTrashComponent, SwitchComponent, CommonModule, RouterModule],\n  templateUrl: './card-entity.component.html',\n  styleUrls: [\n    './card-entity.component.css',\n    '../../styles/card.css',\n    '../../styles/button.css',\n    '../../styles/icon.css',\n  ],\n})\nexport class CardEntityComponent {\n  @Input() entityInfo!: Entity;\n  @Input() apiName: string = '';\n  @Output() entityDeleted = new EventEmitter();\n\n  private oldName: string = '';\n  private sub: Subscription | null = null;\n  private loading: boolean = false;\n\n  private readonly dialog = tuiDialog(EntityDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  });\n\n  constructor(\n    private cd: ChangeDetectorRef,\n    private entityRepositoryService: EntityRepositoryService,\n    private alerts: TuiAlertService\n  ) {}\n\n  onToggleChange(newState: boolean): void {\n    this.entityInfo.isActive = newState;\n    this.entityRepositoryService\n      .updateEntityStatus(this.apiName, this.entityInfo.name, newState)\n      .subscribe({\n        next: (response) =>\n          console.log('Состояние сервиса обновлено:', response),\n        error: (error) =>\n          this.handleError('Ошибка при обновлении состояния сервиса', error),\n      });\n  }\n  openEditDialog(): void {\n    this.oldName = this.entityInfo.name;\n    this.dialog({ ...this.entityInfo }).subscribe({\n      next: (data) => this.handleEditDialogData(data),\n      complete: () => console.info('Dialog closed'),\n    });\n  }\n\n  onDeleteConfirmed(): void {\n    this.entityRepositoryService\n      .deleteApiEntity(this.apiName, this.entityInfo.name)\n      .subscribe({\n        next: () => this.handleEntityDeletion(),\n        error: (error) =>\n          this.handleError('Ошибка при удалении сущности', error),\n      });\n  }\n\n \n\n  private handleEditDialogData(data: Entity): void {\n    this.entityRepositoryService\n      .updateApiEntity(this.apiName, this.oldName, data)\n      .subscribe({\n        next: (response) => this.handleEntityUpdate(response, data),\n        error: (error) => this.handleEntityUpdateError(error),\n      });\n  }\n\n  private handleEntityUpdate(response: Entity, data: Entity): void {\n    console.log('Сущность обновлена:', response);\n    this.entityInfo = data;\n    this.cd.markForCheck();\n    this.alerts\n      .open('Сущность успешно обновлена', { appearance: 'success' })\n      .subscribe();\n  }\n\n  private handleEntityUpdateError(error: any): void {\n    this.handleError('Ошибка при обновлении сущности', error);\n  }\n\n  private handleEntityDeletion(): void {\n    console.log(`Сущность \"${this.entityInfo.name}\" удалена.`);\n    this.entityDeleted.emit(this.entityInfo.name);\n  }\n\n  private handleError(message: string, error: any): void {\n    console.error(message, error);\n    if (error.status === 409) {\n      this.alerts\n        .open(`${message}: Сущность с таким именем уже существует`, {\n          appearance: 'negative',\n        })\n        .subscribe();\n    } else {\n      this.alerts.open(message, { appearance: 'negative' }).subscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n    \n    \n    \n  \n  {{ entityInfo.name }}\n  Структура \n    @if(entityInfo.structure == null){\n      отсутствует\n    }\n    @else{\n      есть\n    }\n  \n  \n    Детали\n  \n  \n    \n\n    \n                \n                    ./card-entity.component.css\n                \n                \n                \n                    ../../styles/card.css\n                \n                \nh3 {\n    margin: 0;\n    font-size: 24px;\n    color: #0056a6;\n    width: 65%; /* Ширина элемента */\n    text-overflow: ellipsis; /* Добавляем троеточие */\n    white-space: nowrap; /* Запрещаем перенос текста на новую строку */\n    overflow: hidden; /* Скрываем текст, который не помещается */\n    height: 2rem;\n}\n  \n  p {\n    margin: 10px 0;\n    color: #666;\n    font-size: 16px;\n    line-height: 1.5; /* Установите желаемую высоту строки */\n    height: calc(1.5em * 2); /* Высота равна трём строкам */\n    overflow-y: auto; /* Добавляем вертикальную прокрутку при необходимости */\n    overflow-x: hidden; /* Запрещаем горизонтальную прокрутку */\n    box-sizing: border-box; /* Включаем отступы и границы в размер элемента */\n    word-wrap: break-word; /* Перенос слов на новую строку, если они не помещаются */\n    white-space: normal; /* Разрешаем перенос текста на новую строку */\n}\n\n  /* Стилизация полосы прокрутки для WebKit-браузеров (Chrome, Safari, Edge) */\n  p::-webkit-scrollbar {\n    width: 8px; /* Ширина полосы прокрутки */\n  }\n\n  p::-webkit-scrollbar-track {\n    background: #f1f1f1; /* Цвет фона полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb {\n    background: #888; /* Цвет полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb:hover {\n    background: #555; /* Цвет полосы прокрутки при наведении */\n  }\n  \n.actions {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    flex-wrap: wrap;\n  }\n  \n.top-right {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    display: flex;\n    align-items: center;\n  }\n\n                \n                    ../../styles/button.css\n                \n                .primary-button {\n    background-color: #0056a6;\n    color: white;\n    border: none;\n    block-size: auto;\n    padding: 7px 13px;\n    border-radius: 5px;\n    cursor: pointer;\n    font-weight: bold;\n    transition: background-color 0.3s;\n    margin-left: 1rem;\n    margin-bottom: 1rem;\n  }\n  \n  .primary-button:hover {\n    background-color: #004080;\n  }\n                \n                    ../../styles/icon.css\n                \n                  \ni {\n    margin-right: 15px; /* 10px * 1.2 */\n    cursor: pointer;\n    color: #666;\n    transition: color 0.3s;\n    font-size: 20px; /* Увеличиваем размер шрифта на 20% */\n}\n\ni:hover {\n    color: #000;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ entityInfo.name }}  Структура     @if(entityInfo.structure == null){      отсутствует    }    @else{      есть    }        Детали    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardEntityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Endpoint.html":{"url":"interfaces/Endpoint.html","title":"interface - Endpoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Endpoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/service-structure-api.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            route\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Endpoint {\n  route: string;\n  type: string;\n  isActive: boolean;\n}\n\nexport interface Entity {\n  name: string;\n  isActive: boolean;\n  structure: any;\n  endpoints: Endpoint[];\n}\n\nexport interface ApiServiceStructure {\n  name: string;\n  isActive: boolean;\n  description: string;\n  entities: Entity[];\n}\n\nexport interface apiServiceShortStructure {\n  name: string;\n  isActive : boolean;\n  description: string;\n}\n\nexport interface EntityShort {\n  name: string;\n  isActive: boolean;\n  structure: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EndpointCardListComponent.html":{"url":"components/EndpointCardListComponent.html","title":"component - EndpointCardListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EndpointCardListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-endpoint-card-list\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            TuiCardLarge\n                                CardEndpointComponent\n                            RouterModule\n                                HeaderComponent\n                                SwitchComponent\n                                LoadingComponent\n                \n            \n\n            \n                styleUrls\n                ./endpoint-card-list.component.css,../../../styles/card-list.css\n            \n\n\n\n            \n                templateUrl\n                ./endpoint-card-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiName\n                            \n                            \n                                    Private\n                                    Readonly\n                                dialog\n                            \n                            \n                                endpoint\n                            \n                            \n                                endpoints\n                            \n                            \n                                entityInfo\n                            \n                            \n                                entityName\n                            \n                            \n                                loading\n                            \n                            \n                                location\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createEndpoint\n                            \n                            \n                                    Private\n                                handleEndpointCreation\n                            \n                            \n                                    Private\n                                handleEntityInfoResponse\n                            \n                            \n                                    Private\n                                isRouteExists\n                            \n                            \n                                    Private\n                                loadData\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onEndpointDeleted\n                            \n                            \n                                onToggleChange\n                            \n                            \n                                openCreateDialog\n                            \n                            \n                                    Private\n                                processCreateDialogData\n                            \n                            \n                                    Private\n                                showRouteExistsError\n                            \n                            \n                                    Private\n                                updateEntityStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cd: ChangeDetectorRef, route: ActivatedRoute, endpointRepositoryService: EndpointRepositoryService, entityRepositoryService: EntityRepositoryService, alerts: TuiAlertService, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endpointRepositoryService\n                                                  \n                                                        \n                                                                        EndpointRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityRepositoryService\n                                                  \n                                                        \n                                                                        EntityRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createEndpoint\n                        \n                    \n                \n            \n            \n                \n                        \n                    createEndpoint(data: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEndpointCreation\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEndpointCreation(response: Endpoint, data: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:144\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEntityInfoResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEntityInfoResponse(entity: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isRouteExists\n                        \n                    \n                \n            \n            \n                \n                        \n                    isRouteExists(route: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadData\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEndpointDeleted\n                        \n                    \n                \n            \n            \n                \nonEndpointDeleted(endpointRoute: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:173\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpointRoute\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToggleChange\n                        \n                    \n                \n            \n            \n                \nonToggleChange(newState: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openCreateDialog\n                        \n                    \n                \n            \n            \n                \nopenCreateDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        processCreateDialogData\n                        \n                    \n                \n            \n            \n                \n                        \n                    processCreateDialogData(data: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showRouteExistsError\n                        \n                    \n                \n            \n            \n                \n                        \n                    showRouteExistsError()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:124\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateEntityStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEntityStatus(newState: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : tuiDialog(EndpointDialogComponent, {\n    dismissible: true,\n    label: 'Создать',\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endpoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Endpoint\n\n                    \n                \n                \n                    \n                        Default value : {\n    route: '',\n    type: 'get',\n    isActive: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endpoints\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Endpoint[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        entityInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Entity\n\n                    \n                \n                \n                    \n                        Default value : {} as Entity\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        entityName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Location\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Endpoint, Entity } from '../../../../services/service-structure-api';\nimport { CommonModule, Location } from '@angular/common';\nimport { TuiCardLarge } from '@taiga-ui/layout';\nimport { tuiDialog, TuiAlertService } from '@taiga-ui/core';\nimport { CardEndpointComponent } from '../../../components/card-endpoint/card-endpoint.component';\nimport { HeaderComponent } from '../../../components/header/header.component';\nimport { Router, RouterModule } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport { EndpointDialogComponent } from '../../../components/endpoint-dialog/endpoint-dialog.component';\nimport { SwitchComponent } from '../../../components/switch/switch.component';\nimport { EntityRepositoryService } from '../../../../repositories/entity-repository.service';\nimport { LoadingComponent } from '../../../components/loading/loading.component';\nimport { EndpointRepositoryService } from '../../../../repositories/endpoint-repository.service';\n\n@Component({\n  selector: 'app-endpoint-card-list',\n  imports: [\n    CommonModule,\n    TuiCardLarge,\n    CardEndpointComponent,\n    RouterModule,\n    HeaderComponent,\n    SwitchComponent,\n    LoadingComponent,\n  ],\n  templateUrl: './endpoint-card-list.component.html',\n  styleUrls: [\n    './endpoint-card-list.component.css',\n    '../../../styles/card-list.css',\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EndpointCardListComponent implements OnInit, OnDestroy {\n  apiName!: string;\n  entityName!: string;\n  loading: boolean = true;\n  private subscription: Subscription | null = null;\n  endpoints: Endpoint[] = [];\n  entityInfo: Entity = {} as Entity;\n  location: Location;\n\n  private readonly dialog = tuiDialog(EndpointDialogComponent, {\n    dismissible: true,\n    label: 'Создать',\n  });\n\n  endpoint: Endpoint = {\n    route: '',\n    type: 'get',\n    isActive: false,\n  };\n\n  constructor(\n    private router: Router,\n    private cd: ChangeDetectorRef,\n    private route: ActivatedRoute,\n    private endpointRepositoryService: EndpointRepositoryService,\n    private entityRepositoryService: EntityRepositoryService,\n    private alerts: TuiAlertService,\n    location: Location\n  ) {\n    this.location = location;\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      this.apiName = params['apiServiceName'];\n      this.entityName = params['entityName'];\n      this.loadData();\n    });\n  }\n\n  private loadData(): void {\n    this.subscription = this.entityRepositoryService\n      .getApiEntity(this.apiName, this.entityName)\n      .subscribe({\n        next: (entity) => this.handleEntityInfoResponse(entity),\n        error: () => {\n          this.loading = false;\n          this.cd.markForCheck();\n        },\n      });\n  }\n\n  private handleEntityInfoResponse(entity: Entity): void {\n    this.entityInfo = entity;\n    this.endpoints = entity.endpoints || [];\n    this.loading = false;\n    this.cd.detectChanges();\n  }\n\n  openCreateDialog(): void {\n    this.dialog({ ...this.endpoint }).subscribe({\n      next: (data) => this.processCreateDialogData(data),\n      complete: () => console.info('Dialog closed'),\n    });\n  }\n\n  private processCreateDialogData(data: Endpoint): void {\n    if (this.isRouteExists(data.route)) {\n      this.showRouteExistsError();\n      return;\n    }\n\n    this.createEndpoint(data);\n  }\n\n  private isRouteExists(route: string): boolean {\n    return this.endpoints.some((endpoint) => endpoint.route === route);\n  }\n\n  private showRouteExistsError(): void {\n    this.alerts\n      .open('Ошибка: Эндпоинт с таким маршрутом уже существует', {\n        appearance: 'negative',\n      })\n      .subscribe();\n  }\n\n  private createEndpoint(data: Endpoint): void {\n    this.endpointRepositoryService\n      .createEndpoint(this.apiName, this.entityName, data)\n      .subscribe({\n        next: (response) => this.handleEndpointCreation(response, data),\n        error: () => {\n          this.loading = false;\n          this.cd.markForCheck();\n        },\n      });\n  }\n\n  private handleEndpointCreation(response: Endpoint, data: Endpoint): void {\n    console.log('Эндпоинт добавлен:', response);\n    this.endpoints.push(data);\n    this.cd.markForCheck();\n    this.alerts\n      .open('Эндпоинт успешно создан', {\n        appearance: 'success',\n      })\n      .subscribe();\n  }\n\n  onToggleChange(newState: boolean): void {\n    this.entityInfo.isActive = newState;\n    this.updateEntityStatus(newState);\n  }\n\n  private updateEntityStatus(newState: boolean): void {\n    this.entityRepositoryService\n      .updateEntityStatus(this.apiName, this.entityName, newState)\n      .subscribe({\n        next: (response) =>\n          console.log('Состояние сервиса обновлено:', response),\n        error: () => {\n          this.loading = false;\n          this.cd.markForCheck();\n        },\n      });\n  }\n\n  onEndpointDeleted(endpointRoute: string): void {\n    this.endpoints = this.endpoints.filter(\n      (endpoint) => endpoint.route !== endpointRoute\n    );\n    this.cd.markForCheck();\n  }\n}\n\n    \n\n    \n        \n@if (loading)\n{\n  \n}\n@else \n{\n\n    \n        \n            \n        \n        {{ entityInfo.name }}\n        \n            @if(entityInfo.structure != null){\n                 Структура сущности\n                {{ entityInfo.structure | json }}\n            }\n            @else{\n                Структура сущности отсутствует\n            }\n        \n    \n\n    \n        Эндпоинты\n        \n    \n\n    \n        \n            \n            \n        \n    \n\n}\n\n    \n\n    \n                \n                    ./endpoint-card-list.component.css\n                \n                \n                \n                    ../../../styles/card-list.css\n                \n                .container {\n    padding: 20px;\n    position: relative; /* Добавляем относительное позиционирование для контейнера */\n}\n\n.mb-40 {\n    margin-bottom: 40px; /* Добавляем отступ снизу для разделения секций */\n}\n\n.header-section {\n    position: relative; /* Добавляем относительное позиционирование для заголовочной секции */\n    margin-bottom: 20px;\n    padding-right: 1.5rem;\n}\n\n.actions {\n    display: flex;\n    gap: 10px; /* Расстояние между кнопками */\n}\n\n.edit-button, .delete-button {\n    padding: 8px 16px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    font-weight: bold;\n    transition: background-color 0.3s;\n}\n\n.edit-button {\n    background-color: #0056a6;\n    color: white;\n}\n\n.edit-button:hover {\n    background-color: #004080;\n}\n\n.delete-button {\n    background-color: #ff4d4d;\n    color: white;\n}\n\n.delete-button:hover {\n    background-color: #cc0000;\n}\n\n.separator-section {\n    margin: 20px 0;\n    text-align: center;\n}\n\n.separator-section h2 {\n    margin: 0;\n    font-size: 1.5rem;\n    color: #333;\n    margin-bottom: 10px;\n}\n\n.separator {\n    border: 0;\n    height: 1px;\n    background-color: #ddd;\n    margin: 0 auto;\n    width: 50%;\n}\n\n.grid {\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    gap: 20px;\n}\n\n.card {\n    background: rgb(0 0 0 / 3%);\n    border-radius: 10px;\n    box-shadow: 0 2px 4px rgb(0 0 0 / 22%);\n    padding: 20px;\n    padding-bottom: 10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: normal;\n    position: relative;\n    transition: transform 0.3s, box-shadow 0.3s;\n    max-height: 300px; /* Ограничиваем высоту карточки */\n    overflow-y: auto; /* Добавляем вертикальную прокрутку */\n}\n\n.card:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n}\n\n@media (max-width: 1200px) {\n    .grid {\n        grid-template-columns: repeat(3, 1fr);\n    }\n}\n\n@media (max-width: 992px) {\n    .grid {\n        grid-template-columns: repeat(2, 1fr);\n    }\n}\n\n@media (max-width: 768px) {\n    .grid {\n        grid-template-columns: 1fr;\n    }\n}\n\np {\n    word-wrap: break-word; /* Перенос слов на новую строку, если они не помещаются */\n    white-space: normal; /* Разрешаем перенос текста на новую строку */\n}\n\n.top-right {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    display: flex;\n    align-items: center;\n}\n\n.structure-content {\n    width: 100%;\n    height: 150px;\n    padding: 10px;\n    background-color: #f9f9f9;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    resize: none; /* Запрещаем изменение размера */\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (loading){  }@else {                                        {{ entityInfo.name }}                    @if(entityInfo.structure != null){                 Структура сущности                {{ entityInfo.structure | json }}            }            @else{                Структура сущности отсутствует            }                        Эндпоинты                                                            }'\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EndpointCardListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EndpointDialogComponent.html":{"url":"components/EndpointDialogComponent.html","title":"component - EndpointDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EndpointDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-endpoint-dialog\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            TuiAutoFocus\n                            TuiButton\n                            TuiDataListWrapper\n                            TuiInputModule\n                            TuiSelectModule\n                            TuiSlider\n                            TuiTextfield\n                            TuiTextfieldControllerModule\n                \n            \n\n            \n                styleUrls\n                ./endpoint-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./endpoint-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                context\n                            \n                            \n                                    Private\n                                    Readonly\n                                dialogs\n                            \n                            \n                                    Readonly\n                                types\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                onInput\n                            \n                            \n                                    Protected\n                                showDialog\n                            \n                            \n                                    Protected\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasValue\n                                \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        onInput\n                        \n                    \n                \n            \n            \n                \n                        \n                    onInput(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        showDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    showDialog(content: TemplateRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                        TemplateRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        submit\n                        \n                    \n                \n            \n            \n                \n                        \n                    submit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext>()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        types\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['get', 'post', 'put', 'delete', 'getbyindex']\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasValue\n                    \n                \n\n                \n                    \n                        gethasValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:39\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:43\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import type { TemplateRef } from '@angular/core';\nimport { Component, inject } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TuiAutoFocus } from '@taiga-ui/cdk';\nimport type { TuiDialogContext } from '@taiga-ui/core';\nimport { TuiButton, TuiDialogService, TuiTextfield } from '@taiga-ui/core';\nimport { TuiDataListWrapper, TuiSlider } from '@taiga-ui/kit';\nimport {\n  TuiInputModule,\n  TuiSelectModule,\n  TuiTextfieldControllerModule,\n} from '@taiga-ui/legacy';\nimport { injectContext } from '@taiga-ui/polymorpheus';\nimport { Endpoint } from '../../../services/service-structure-api';\n\n@Component({\n  selector: 'app-endpoint-dialog',\n  imports: [\n    FormsModule,\n    TuiAutoFocus,\n    TuiButton,\n    TuiDataListWrapper,\n    TuiInputModule,\n    TuiSelectModule,\n    TuiSlider,\n    TuiTextfield,\n    TuiTextfieldControllerModule,\n  ],\n  templateUrl: './endpoint-dialog.component.html',\n  styleUrls: ['./endpoint-dialog.component.css'],\n})\nexport class EndpointDialogComponent {\n  private readonly dialogs = inject(TuiDialogService);\n  readonly types: string[] = ['get', 'post', 'put', 'delete', 'getbyindex'];\n\n  public readonly context =\n    injectContext>();\n\n  protected get hasValue(): boolean {\n    return this.data.route.trim() !== '';\n  }\n\n  protected get data(): Endpoint {\n    return this.context.data;\n  }\n\n  protected submit(): void {\n    if (event) {\n      event.preventDefault();\n    }\n    if (this.hasValue) {\n      this.context.completeWith(this.data);\n    }\n  }\n\n  protected showDialog(content: TemplateRef): void {\n    this.dialogs.open(content, { dismissible: true }).subscribe();\n  }\n\n  protected onInput(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    const value = input.value;\n    const cleanedValue = value.replace(/[^a-zA-Z0-9]/g, '');\n    input.value = cleanedValue;\n    this.data.route = cleanedValue;\n  }\n}\n\n    \n\n    \n        \n  Имя эндпоинта\n\n\n\n  Тип\n  \n\n\n\n  \n    Отправить\n  \n\n\n    \n\n    \n                \n                    ./endpoint-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Имя эндпоинта  Тип        Отправить  '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EndpointDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EndpointRepositoryService.html":{"url":"injectables/EndpointRepositoryService.html","title":"injectable - EndpointRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EndpointRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/endpoint-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEndpoint\n                            \n                            \n                                deleteEndpoint\n                            \n                            \n                                getEndpointByName\n                            \n                            \n                                getEndpointList\n                            \n                            \n                                updateEndpoint\n                            \n                            \n                                updateEndpointStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(endpointService: EndpointService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/endpoint-repository.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        endpointService\n                                                  \n                                                        \n                                                                        EndpointService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createEndpoint\n                        \n                    \n                \n            \n            \n                \ncreateEndpoint(apiServiceName: string, entityName: string, endpoint: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpoint\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEndpoint\n                        \n                    \n                \n            \n            \n                \ndeleteEndpoint(apiServiceName: string, entityName: string, endpointName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpointName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEndpointByName\n                        \n                    \n                \n            \n            \n                \ngetEndpointByName(apiServiceName: string, entityName: string, endpointName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpointName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEndpointList\n                        \n                    \n                \n            \n            \n                \ngetEndpointList(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEndpoint\n                        \n                    \n                \n            \n            \n                \nupdateEndpoint(apiServiceName: string, entityName: string, endpointName: string, endpoint: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpointName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpoint\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEndpointStatus\n                        \n                    \n                \n            \n            \n                \nupdateEndpointStatus(apiServiceName: string, entityName: string, endpointName: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpointName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EndpointService as EndpointService } from '../services/endpoint-service.service';\nimport { Endpoint as Endpoint } from '../services/service-structure-api';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EndpointRepositoryService {\n\n  constructor(private endpointService: EndpointService) { }\n\n  getEndpointList(apiServiceName: string, entityName: string): Observable {\n    return this.endpointService.getEndpointList(apiServiceName, entityName);\n  }\n\n  createEndpoint(apiServiceName: string, entityName: string, endpoint: Endpoint): Observable {\n    return this.endpointService.createEndpoint(apiServiceName, entityName, endpoint);\n  }\n\n  getEndpointByName(apiServiceName: string, entityName: string, endpointName: string): Observable {\n    return this.endpointService.getEndpointByName(apiServiceName, entityName, endpointName);\n  }\n\n  updateEndpoint(apiServiceName: string, entityName: string, endpointName: string, endpoint: Endpoint): Observable {\n    return this.endpointService.updateEndpoint(apiServiceName, entityName, endpointName, endpoint);\n  }\n\n  deleteEndpoint(apiServiceName: string, entityName: string, endpointName: string): Observable {\n    return this.endpointService.deleteEndpoint(apiServiceName, entityName, endpointName);\n  }\n  \n  updateEndpointStatus(apiServiceName: string, entityName: string, endpointName: string, isActive: boolean): Observable {\n    return this.endpointService.updateEndpointStatus(apiServiceName, entityName, endpointName, isActive);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EndpointService.html":{"url":"injectables/EndpointService.html","title":"injectable - EndpointService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EndpointService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/endpoint-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEndpoint\n                            \n                            \n                                deleteEndpoint\n                            \n                            \n                                getEndpointByName\n                            \n                            \n                                getEndpointList\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                updateEndpoint\n                            \n                            \n                                updateEndpointStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorHandler: ErrorHandlerService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/endpoint-service.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createEndpoint\n                        \n                    \n                \n            \n            \n                \ncreateEndpoint(apiServiceName: string, entityName: string, action: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                action\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEndpoint\n                        \n                    \n                \n            \n            \n                \ndeleteEndpoint(apiServiceName: string, entityName: string, actionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEndpointByName\n                        \n                    \n                \n            \n            \n                \ngetEndpointByName(apiServiceName: string, entityName: string, actionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEndpointList\n                        \n                    \n                \n            \n            \n                \ngetEndpointList(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEndpoint\n                        \n                    \n                \n            \n            \n                \nupdateEndpoint(apiServiceName: string, entityName: string, actionName: string, action: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                action\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEndpointStatus\n                        \n                    \n                \n            \n            \n                \nupdateEndpointStatus(serviceName: string, entityName: string, endpoint: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/api`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/endpoint-service.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { Endpoint } from './service-structure-api';\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { ErrorHandlerService } from './error-handler.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EndpointService {\n  private baseUrl = `${window.location.origin}/api`;\n\n  constructor(\n    private http: HttpClient,\n    private errorHandler: ErrorHandlerService,\n    private alerts: TuiAlertService\n  ) {}\n\n  getEndpointList(\n    apiServiceName: string,\n    entityName: string\n  ): Observable {\n    return this.http\n      .get(\n        `${this.baseUrl}/ApiEndpoint/${apiServiceName}/${entityName}`\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  createEndpoint(\n    apiServiceName: string,\n    entityName: string,\n    action: Endpoint\n  ): Observable {\n    return this.http\n      .post(\n        `${this.baseUrl}/ApiEndpoint/${apiServiceName}/${entityName}`,\n        action\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  getEndpointByName(\n    apiServiceName: string,\n    entityName: string,\n    actionName: string\n  ): Observable {\n    return this.http\n      .get(\n        `${this.baseUrl}/ApiEndpoint/${apiServiceName}/${entityName}/${actionName}`\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  updateEndpoint(\n    apiServiceName: string,\n    entityName: string,\n    actionName: string,\n    action: Endpoint\n  ): Observable {\n    return this.http\n      .put(\n        `${this.baseUrl}/ApiEndpoint/${apiServiceName}/${entityName}/${actionName}`,\n        action\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  deleteEndpoint(\n    apiServiceName: string,\n    entityName: string,\n    actionName: string\n  ): Observable {\n    return this.http\n      .delete(\n        `${this.baseUrl}/ApiEndpoint/${apiServiceName}/${entityName}/${actionName}`\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  updateEndpointStatus(\n    serviceName: string,\n    entityName: string,\n    endpoint: string,\n    isActive: boolean\n  ): Observable {\n    return this.http\n      .patch(\n        `${this.baseUrl}/ApiEndpoint/${serviceName}/${entityName}/${endpoint}/${isActive}`,\n        null\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  private handleError(error: HttpErrorResponse): Observable {\n    this.errorHandler.handleError(error);\n    this.alerts.open(error.message, { appearance: 'negative' }).subscribe();\n    return throwError(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Entity.html":{"url":"interfaces/Entity.html","title":"interface - Entity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Entity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/service-structure-api.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            endpoints\n                                        \n                                \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            structure\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endpoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endpoints:         Endpoint[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Endpoint[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        structure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        structure:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Endpoint {\n  route: string;\n  type: string;\n  isActive: boolean;\n}\n\nexport interface Entity {\n  name: string;\n  isActive: boolean;\n  structure: any;\n  endpoints: Endpoint[];\n}\n\nexport interface ApiServiceStructure {\n  name: string;\n  isActive: boolean;\n  description: string;\n  entities: Entity[];\n}\n\nexport interface apiServiceShortStructure {\n  name: string;\n  isActive : boolean;\n  description: string;\n}\n\nexport interface EntityShort {\n  name: string;\n  isActive: boolean;\n  structure: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EntityDialogComponent.html":{"url":"components/EntityDialogComponent.html","title":"component - EntityDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EntityDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/entity-dialog/entity-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-entity-edit-dialog\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            TuiAutoFocus\n                            TuiButton\n                            TuiDataListWrapper\n                            TuiInputModule\n                            TuiSelectModule\n                            TuiSlider\n                            TuiTextfield\n                            TuiTextfieldControllerModule\n                            TuiTextareaModule\n                \n            \n\n            \n                styleUrls\n                ./entity-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./entity-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                alerts\n                            \n                            \n                                    Public\n                                    Readonly\n                                context\n                            \n                            \n                                    Private\n                                    Readonly\n                                dialogs\n                            \n                            \n                                    Private\n                                isCanSubmit\n                            \n                            \n                                    \n                                nameInputRef\n                            \n                            \n                                    \n                                structureInputRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleKeyboardEvent\n                            \n                            \n                                handleSubmit\n                            \n                            \n                                    Protected\n                                moveFocus\n                            \n                            \n                                    Protected\n                                onInput\n                            \n                            \n                                    Protected\n                                showDialog\n                            \n                            \n                                    Private\n                                showError\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasValue\n                                \n                                \n                                    data\n                                \n                                \n                                    structure\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleKeyboardEvent\n                        \n                    \n                \n            \n            \n                \nhandleKeyboardEvent(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSubmit\n                        \n                    \n                \n            \n            \n                \nhandleSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moveFocus\n                        \n                    \n                \n            \n            \n                \n                        \n                    moveFocus(targetInput: ElementRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                targetInput\n                                            \n                                                        ElementRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        onInput\n                        \n                    \n                \n            \n            \n                \n                        \n                    onInput(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        showDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    showDialog(content: TemplateRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                        TemplateRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showError\n                        \n                    \n                \n            \n            \n                \n                        \n                    showError(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext>()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isCanSubmit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nameInputRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('nameInput', {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        structureInputRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('descriptionInput', {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasValue\n                    \n                \n\n                \n                    \n                        gethasValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:57\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:61\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        structure\n                    \n                \n\n                \n                    \n                        getstructure()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:65\n                                \n                            \n\n                \n                    \n                        setstructure(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:75\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import type { TemplateRef } from '@angular/core';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  HostListener,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TuiAutoFocus } from '@taiga-ui/cdk';\nimport type { TuiDialogContext } from '@taiga-ui/core';\nimport {\n  TuiButton,\n  TuiDialogService,\n  TuiTextfield,\n  TuiAlertService,\n} from '@taiga-ui/core';\nimport { TuiDataListWrapper, TuiSlider } from '@taiga-ui/kit';\nimport { TuiTextareaModule } from '@taiga-ui/legacy';\nimport {\n  TuiInputModule,\n  TuiSelectModule,\n  TuiTextfieldControllerModule,\n} from '@taiga-ui/legacy';\nimport { injectContext } from '@taiga-ui/polymorpheus';\nimport { Entity } from '../../../services/service-structure-api';\n\n@Component({\n  selector: 'app-entity-edit-dialog',\n  imports: [\n    FormsModule,\n    TuiAutoFocus,\n    TuiButton,\n    TuiDataListWrapper,\n    TuiInputModule,\n    TuiSelectModule,\n    TuiSlider,\n    TuiTextfield,\n    TuiTextfieldControllerModule,\n    TuiTextareaModule,\n  ],\n  templateUrl: './entity-dialog.component.html',\n  styleUrls: ['./entity-dialog.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EntityDialogComponent {\n  @ViewChild('nameInput', { read: ElementRef }) nameInputRef!: ElementRef;\n  @ViewChild('descriptionInput', { read: ElementRef })\n  structureInputRef!: ElementRef;\n\n  private readonly dialogs = inject(TuiDialogService);\n  private readonly alerts = inject(TuiAlertService);\n  private isCanSubmit: boolean = true;\n  public readonly context = injectContext>();\n\n  protected get hasValue(): boolean {\n    return this.data.name.trim() !== '';\n  }\n\n  protected get data(): Entity {\n    return this.context.data;\n  }\n\n  protected get structure(): string {\n    try {\n      if (this.data.structure == null) return '';\n      return JSON.stringify(this.data.structure, null, 2);\n    } catch (error) {\n      console.error('Ошибка при преобразовании структуры в JSON:', error);\n      return '';\n    }\n  }\n\n  protected set structure(value: string) {\n    try {\n      this.data.structure = JSON.parse(value);\n      this.isCanSubmit = true;\n    } catch {\n      if (value.length === 0) {\n        this.data.structure = null;\n        this.isCanSubmit = true;\n        return;\n      }\n      this.isCanSubmit = false;\n    }\n  }\n\n  handleKeyboardEvent(event: KeyboardEvent): void {\n    if (event.key === 'Enter') {\n      this.handleSubmit();\n    } else if (event.key === 'Escape') {\n    }\n  }\n\n  handleSubmit(): void {\n    if (!this.isCanSubmit) {\n      this.showError('JSON не правильной структуры');\n      return;\n    }\n    if (event) {\n      event.preventDefault();\n    }\n    if (this.hasValue) {\n      this.context.completeWith(this.data);\n    }\n  }\n\n  protected showDialog(content: TemplateRef): void {\n    this.dialogs.open(content, { dismissible: true }).subscribe();\n  }\n\n  private showError(message: string): void {\n    this.alerts\n      .open(message, {\n        label: 'Ошибка',\n        appearance: 'negative',\n        autoClose: 5000,\n      })\n      .subscribe();\n  }\n\n  protected onInput(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    const value = input.value;\n    const cleanedValue = value.replace(/[^a-zA-Z0-9]/g, '');\n    input.value = cleanedValue;\n    this.data.name = cleanedValue;\n  }\n\n  protected moveFocus(targetInput: ElementRef): void {\n    targetInput.nativeElement.querySelector('input, textarea').focus();\n  }\n}\n\n    \n\n    \n        \n    \n      Имя сущности\n    \n    \n  \n    \n      Структура\n    \n  \n    \n      \n        Отправить\n      \n    \n  \n  \n    \n\n    \n                \n                    ./entity-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Имя сущности                    Структура                        Отправить              '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EntityDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EntityRepositoryService.html":{"url":"injectables/EntityRepositoryService.html","title":"injectable - EntityRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EntityRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/entity-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createApiEntity\n                            \n                            \n                                deleteApiEntity\n                            \n                            \n                                getApiEntity\n                            \n                            \n                                getApiEntityList\n                            \n                            \n                                updateApiEntity\n                            \n                            \n                                updateEntityStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entityService: EntityService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/entity-repository.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entityService\n                                                  \n                                                        \n                                                                        EntityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createApiEntity\n                        \n                    \n                \n            \n            \n                \ncreateApiEntity(apiServiceName: string, entity: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteApiEntity\n                        \n                    \n                \n            \n            \n                \ndeleteApiEntity(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiEntity\n                        \n                    \n                \n            \n            \n                \ngetApiEntity(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiEntityList\n                        \n                    \n                \n            \n            \n                \ngetApiEntityList(apiServiceName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiEntity\n                        \n                    \n                \n            \n            \n                \nupdateApiEntity(apiServiceName: string, entityName: string, entity: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEntityStatus\n                        \n                    \n                \n            \n            \n                \nupdateEntityStatus(serviceName: string, entityName: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityService } from '../services/entity-service.service';\nimport { Observable } from 'rxjs';\nimport { Entity } from '../services/service-structure-api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EntityRepositoryService {\n\n  constructor(private entityService: EntityService) { }\n\n  getApiEntityList(apiServiceName: string): Observable {\n    return this.entityService.getApiEntityList(apiServiceName);\n  } \n\n  getApiEntity(apiServiceName: string, entityName: string): Observable {\n    return this.entityService.getApiEntity(apiServiceName, entityName);\n  }\n\n  createApiEntity(apiServiceName: string, entity: Entity): Observable {\n    return this.entityService.createApiEntity(apiServiceName, entity);\n  }\n\n  updateApiEntity(apiServiceName: string, entityName: string, entity: Entity): Observable {\n    return this.entityService.updateApiEntity(apiServiceName, entityName, entity);\n  }\n\n  deleteApiEntity(apiServiceName: string, entityName: string): Observable {\n    return this.entityService.deleteApiEntity(apiServiceName, entityName);\n  } \n\n  updateEntityStatus(serviceName: string, entityName: string, isActive: boolean): Observable {\n    return this.entityService.updateEntityStatus(serviceName, entityName, isActive);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EntityService.html":{"url":"injectables/EntityService.html","title":"injectable - EntityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/entity-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createApiEntity\n                            \n                            \n                                deleteApiEntity\n                            \n                            \n                                getAllApiServices\n                            \n                            \n                                getApiEntity\n                            \n                            \n                                getApiEntityList\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                updateApiEntity\n                            \n                            \n                                updateEntityStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorHandler: ErrorHandlerService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/entity-service.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createApiEntity\n                        \n                    \n                \n            \n            \n                \ncreateApiEntity(apiServiceName: string, entity: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteApiEntity\n                        \n                    \n                \n            \n            \n                \ndeleteApiEntity(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllApiServices\n                        \n                    \n                \n            \n            \n                \ngetAllApiServices()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiEntity\n                        \n                    \n                \n            \n            \n                \ngetApiEntity(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiEntityList\n                        \n                    \n                \n            \n            \n                \ngetApiEntityList(apiServiceName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiEntity\n                        \n                    \n                \n            \n            \n                \nupdateApiEntity(apiServiceName: string, entityName: string, entity: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEntityStatus\n                        \n                    \n                \n            \n            \n                \nupdateEntityStatus(serviceName: string, entityName: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/api`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/entity-service.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport {\n  apiServiceShortStructure,\n  ApiServiceStructure,\n  Entity,\n} from './service-structure-api';\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { ErrorHandlerService } from './error-handler.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EntityService {\n  private baseUrl = `${window.location.origin}/api`;\n\n  constructor(\n    private http: HttpClient,\n    private errorHandler: ErrorHandlerService,\n    private alerts: TuiAlertService\n  ) {}\n\n  getApiEntityList(apiServiceName: string): Observable {\n    return this.http\n      .get(`${this.baseUrl}/ApiEntity/${apiServiceName}`)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  getApiEntity(apiServiceName: string, entityName: string): Observable {\n    return this.http\n      .get(`${this.baseUrl}/ApiEntity/${apiServiceName}/${entityName}`)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  createApiEntity(apiServiceName: string, entity: Entity): Observable {\n    return this.http\n      .post(`${this.baseUrl}/ApiEntity/${apiServiceName}`, entity)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  updateApiEntity(\n    apiServiceName: string,\n    entityName: string,\n    entity: Entity\n  ): Observable {\n    return this.http\n      .put(\n        `${this.baseUrl}/ApiEntity/${apiServiceName}/${entityName}`,\n        entity\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  deleteApiEntity(\n    apiServiceName: string,\n    entityName: string\n  ): Observable {\n    return this.http\n      .delete(`${this.baseUrl}/ApiEntity/${apiServiceName}/${entityName}`)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  updateEntityStatus(\n    serviceName: string,\n    entityName: string,\n    isActive: boolean\n  ): Observable {\n    return this.http\n      .patch(\n        `${this.baseUrl}/ApiEntity/${serviceName}/${entityName}/${isActive}`,\n        null\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  getAllApiServices(): Observable {\n    return this.http\n      .get(`${this.baseUrl}/ApiServices`)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  private handleError(error: HttpErrorResponse): Observable {\n    this.errorHandler.handleError(error);\n    this.alerts.open(error.message, { appearance: 'negative' }).subscribe();\n    return throwError(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityShort.html":{"url":"interfaces/EntityShort.html","title":"interface - EntityShort","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EntityShort\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/service-structure-api.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            structure\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        structure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        structure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Endpoint {\n  route: string;\n  type: string;\n  isActive: boolean;\n}\n\nexport interface Entity {\n  name: string;\n  isActive: boolean;\n  structure: any;\n  endpoints: Endpoint[];\n}\n\nexport interface ApiServiceStructure {\n  name: string;\n  isActive: boolean;\n  description: string;\n  entities: Entity[];\n}\n\nexport interface apiServiceShortStructure {\n  name: string;\n  isActive : boolean;\n  description: string;\n}\n\nexport interface EntityShort {\n  name: string;\n  isActive: boolean;\n  structure: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorDisplayComponent.html":{"url":"components/ErrorDisplayComponent.html","title":"component - ErrorDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/pages/error-display/error-display.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-display\n            \n\n\n            \n                imports\n                \n                            TuiButton\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./error-display.component.html\n            \n\n\n\n            \n                styleUrl\n                ./error-display.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorCode\n                            \n                            \n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/pages/error-display/error-display.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/error-display/error-display.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/error-display/error-display.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/error-display/error-display.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/error-display/error-display.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TuiButton } from '@taiga-ui/core';\n\n@Component({\n  selector: 'app-error-display',\n  imports: [TuiButton],\n  templateUrl: './error-display.component.html',\n  styleUrl: './error-display.component.css',\n})\nexport class ErrorDisplayComponent implements OnInit {\n  errorCode!: string;\n  errorMessage!: string;\n\n  constructor(private route: ActivatedRoute, private router: Router) {}\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      this.errorCode = params['code'] || 'Unknown Error';\n      this.errorMessage =\n        params['message'] || 'Произошла непредвиденная ошибка.';\n    });\n  }\n\n  goBack(): void {\n    this.router.navigate(['/']);\n  }\n}\n\n    \n\n    \n        \n    {{ errorCode }}\n    {{ errorMessage }}\n    \n      Go Back\n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ errorCode }}    {{ errorMessage }}          Go Back        '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/error-handler.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, alertService: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/error-handler.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/error-handler.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { TuiAlertService } from '@taiga-ui/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHandlerService {\n  constructor(private router: Router, private alertService: TuiAlertService) {}\n\n  handleError(error: HttpErrorResponse): void {\n    let errorMessage = 'Произошла ошибка при обработке запроса';\n    let errorCode = error.status || 'Unknown';\n\n    switch (error.status) {\n      case 400:\n        errorMessage = 'Неверный запрос. Проверьте данные и попробуйте снова. 🤦‍♂️';\n        this.alertService.open(`Error ${errorCode}: ${errorMessage}`).subscribe();\n        break;\n      case 404:\n        errorMessage = 'Страница не найдена. Возможно, она была удалена или перемещена. 🕵️‍♂️';\n        this.router.navigate(['/page-not-found']);\n        return;\n      case 408:\n        errorMessage = 'Время ожидания запроса истекло. Попробуйте еще раз. ⏳';\n        break;\n      case 500:\n        errorMessage = 'Внутренняя ошибка сервера. Мы уже работаем над этим! 🛠️';\n        break;\n      case 502:\n        errorMessage = 'Плохой шлюз. Сервер недоступен. Попробуйте позже. 🌐';\n        break;\n      case 503:\n        errorMessage = 'Сервис временно недоступен. Мы на ремонте! 🔧';\n        break;\n      case 504:\n        errorMessage = 'Время ожидания ответа от сервера истекло. Попробуйте еще раз. ⏰';\n        break;\n      default:\n        errorMessage = `Неизвестная ошибка: ${errorMessage}. Код: ${errorCode}. 🤷‍♂️`;\n        break;\n    }\n\n    // Переход на страницу ошибки для всех остальных случаев\n    this.router.navigate(['/error'], {\n      queryParams: { code: errorCode, message: errorMessage },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExportApiButtonComponent.html":{"url":"components/ExportApiButtonComponent.html","title":"component - ExportApiButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExportApiButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/export-api-button/export-api-button.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-export-api-button\n            \n\n\n            \n                imports\n                \n                            TuiButton\n                \n            \n\n            \n                styleUrls\n                ./export-api-button.component.css,../../styles/button.css\n            \n\n\n\n            \n                templateUrl\n                ./export-api-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiInfo\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiServiceRepository: ApiServiceRepositoryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/export-api-button/export-api-button.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiServiceRepository\n                                                  \n                                                        \n                                                                        ApiServiceRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        apiInfo\n                    \n                \n                \n                    \n                        Type :         apiServiceShortStructure\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/export-api-button/export-api-button.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/export-api-button/export-api-button.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { TuiButton } from '@taiga-ui/core';\nimport { apiServiceShortStructure, ApiServiceStructure } from '../../../services/service-structure-api';\nimport { ApiServiceRepositoryService } from '../../../repositories/api-service-repository.service';\n\n@Component({\n  selector: 'app-export-api-button',\n  imports: [\n    TuiButton\n  ],\n  templateUrl: './export-api-button.component.html',\n  styleUrls: ['./export-api-button.component.css', '../../styles/button.css']\n})\nexport class ExportApiButtonComponent {\n  @Input() apiInfo!: apiServiceShortStructure;\n\n  constructor(\n    private apiServiceRepository: ApiServiceRepositoryService,\n  ) { }\n\n  onClick(): void {\n    this.apiServiceRepository.getApiStructureList(this.apiInfo.name).subscribe({\n      next: (data: ApiServiceStructure) => {\n        const { name, ...dataWithoutName } = data;\n        const jsonString = JSON.stringify(dataWithoutName, null, 2);\n\n        const blob = new Blob([jsonString], { type: 'application/json' });\n\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = `${data.name}.json`;\n        a.click();\n        window.URL.revokeObjectURL(url);\n      },\n      error: (error) => {\n        console.log(error)\n      }\n    });\n  }\n}\n\n    \n\n    \n        Экспортировать\n    \n\n    \n                \n                    ./export-api-button.component.css\n                \n                \n                \n                    ../../styles/button.css\n                \n                .primary-button {\n    background-color: #0056a6;\n    color: white;\n    border: none;\n    block-size: auto;\n    padding: 7px 13px;\n    border-radius: 5px;\n    cursor: pointer;\n    font-weight: bold;\n    transition: background-color 0.3s;\n    margin-left: 1rem;\n    margin-bottom: 1rem;\n  }\n  \n  .primary-button:hover {\n    background-color: #004080;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Экспортировать'\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExportApiButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileStatus.html":{"url":"interfaces/FileStatus.html","title":"interface - FileStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/components/import-dialog/import-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errorMessage\n                                        \n                                \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     TuiFileLike\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TuiFileLike\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \"loading\" | \"normal\" | \"error\" | \"success\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"loading\" | \"normal\" | \"error\" | \"success\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NgIf, NgFor } from '@angular/common';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { TuiIcon, TuiLink } from '@taiga-ui/core';\nimport type { TuiFileLike } from '@taiga-ui/kit';\nimport { TuiAvatar, TuiFiles } from '@taiga-ui/kit';\nimport { ChangeDetectorRef } from '@angular/core';\nimport { TuiButton } from '@taiga-ui/core';\nimport { ApiServiceStructure } from '../../../services/service-structure-api';\nimport { ApiServiceRepositoryService } from '../../../repositories/api-service-repository.service';\nimport { TuiDialogContext, TuiAlertService } from '@taiga-ui/core';\nimport { injectContext } from '@taiga-ui/polymorpheus';\n\ninterface FileStatus {\n  file: TuiFileLike;\n  status: 'loading' | 'normal' | 'error' | 'success';\n  errorMessage: string;\n}\n\n@Component({\n  selector: 'app-import-dialog',\n  imports: [NgIf, ReactiveFormsModule, TuiAvatar, TuiFiles, TuiIcon, TuiLink, NgFor, TuiButton],\n  templateUrl: './import-dialog.component.html',\n  styleUrl: './import-dialog.component.css',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ImportDialogComponent {\n  protected readonly control = new FormControl([]);\n  protected files: FileStatus[] = [];\n  protected hasFiles = false;\n  protected processedData: ApiServiceStructure[] = []; // Массив для хранения обработанных данных\n  private readonly context = injectContext>();\n\n\n  constructor(private cdr: ChangeDetectorRef, private apiService: ApiServiceRepositoryService, private readonly alerts: TuiAlertService) {\n    this.control.valueChanges.subscribe((files) => {\n      if (files) {\n        // Обновляем только новые файлы\n        const newFiles = files.filter(file => !this.files.some(f => f.file.name === file.name));\n        this.files = [\n          ...this.files,\n          ...newFiles.map(file => ({ file, status: 'loading' as const, errorMessage: '' })) // Используем 'as const' для явного указания типа\n        ];\n        this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n        this.readFiles(newFiles);\n      }\n    });\n  }\n\n  private readFiles(files: File[]): void {\n    files.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = (e: ProgressEvent) => {\n        const text = e.target?.result as string;\n        try {\n          const json = JSON.parse(text);\n          this.updateFileStatus(file, 'normal');\n          this.processJson(json, file.name); // Передаем имя файла в processJson\n        } catch (error) {\n          console.error('Ошибка при чтении JSON файла:', error);\n          this.updateFileStatus(file, 'error');\n        }\n      };\n      reader.readAsText(file);\n    });\n  }\n\n  private updateFileStatus(file: File, status: 'loading' | 'normal' | 'error'): void {\n    const fileStatus = this.files.find(f => f.file.name === file.name);\n    if (fileStatus) {\n      fileStatus.status = status; // Тип уже корректен\n      this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n      this.cdr.markForCheck();\n    }\n  }\n\n  protected getFileStatusText(file: FileStatus): string {\n    switch (file.status) {\n      case 'loading':\n        return 'Файл на проверке';\n      case 'normal':\n        return 'Файл проверен';\n      case 'error':\n        return 'Ошибка загрузки файла';\n      case 'success':\n        return 'Файл загружен';\n      default:\n        return '';\n    }\n  }\n\n  protected getFileStatus(file: FileStatus): 'loading' | 'normal' | 'error' {\n    switch (file.status) {\n      case 'loading':\n        return 'loading';\n      case 'normal':\n        return 'normal';\n      case 'error':\n        return 'error';\n      case 'success':\n        return 'normal';\n    }\n  }\n\n  private processJson(json: any, fileName: string): void {\n    const name = fileName.replace(/\\.[^/.]+$/, \"\"); // Убираем расширение файла\n    const apiServiceStructure: ApiServiceStructure = {\n      name: name,\n      isActive: json.isActive || false, // Пример обработки других полей\n      description: json.description || '',\n      entities: json.entities || []\n    };\n    this.processedData.push(apiServiceStructure); // Сохраняем обработанные данные\n    console.log('Обработанный JSON:', apiServiceStructure);\n  }\n\n  protected submit(): void {\n    if (this.processedData.length > 0) {\n      this.files.filter(f => f.status == 'normal').forEach(file => file.status = 'loading');\n      this.cdr.markForCheck();\n\n      // Отправляем каждый объект на сервер\n      this.processedData.forEach(service => {\n        this.apiService.createFullApiService(service).subscribe({\n          next: (response) => {\n            console.log('Сервис успешно создан:', response);\n            // Обновляем статус файла на \"success\" (успешно загружен)\n            const index = this.processedData.findIndex(d => d.name === service.name);\n            if (index !== -1) {\n              this.processedData.splice(index, 1);\n            }\n            const file = this.files.find(f => f.file.name === service.name + '.json');\n            if (file) {\n              file.status = 'success'; // Используем 'success' для обозначения успеха\n              file.errorMessage = '';\n              this.cdr.markForCheck(); // Обновляем представление\n            }\n            this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n            if (this.files.every(file => file.status == 'success')) {\n              this.alerts\n                .open('Файлы успешно загружены', {\n                  appearance: 'success',\n                })\n                .subscribe();\n              this.context.completeWith(false);\n            }\n          },\n          error: (response) => {\n            // Обновляем статус файла и сохраняем ошибку\n            const file = this.files.find(f => f.file.name === service.name + '.json');\n            if (file) {\n              file.status = 'error';\n              file.errorMessage = `Ошибка при создании сервиса: ${response.error}`;\n              const index = this.processedData.findIndex(d => d.name === service.name);\n              if (index !== -1) {\n                this.processedData.splice(index, 1);\n              }\n              this.cdr.markForCheck(); // Обновляем представление\n            }\n            this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n          }\n        });\n      });\n    } else {\n      console.warn('Нет данных для отправки.');\n    }\n  }\n\n  protected removeFile(fileToRemove: FileStatus): void {\n    this.files = this.files.filter(file => file !== fileToRemove);\n    this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n\n    // Обновляем значение FormControl, чтобы оно соответствовало текущему списку файлов\n    const currentFiles = this.control.value ? this.control.value.filter(file => file !== fileToRemove.file) : [];\n    this.control.setValue(currentFiles);\n\n    this.cdr.markForCheck(); // Обновляем представление\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterByInputComponent.html":{"url":"components/FilterByInputComponent.html","title":"component - FilterByInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FilterByInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/filter-by-input/filter-by-input.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter-by-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            TuiDataListWrapper\n                            TuiInputModule\n                \n            \n\n            \n                styleUrls\n                ./filter-by-input.component.css\n            \n\n\n\n            \n                templateUrl\n                ./filter-by-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onKeyPress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                controlName\n                            \n                            \n                                items\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                searchQuery\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filteredItems\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:36\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        controlName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'search'\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Search'\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        searchQuery\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onKeyPress\n                        \n                    \n                \n            \n            \n                \nonKeyPress(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    [this.controlName]: new FormControl('', [Validators.pattern('^[a-zA-Z0-9]*$')]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filteredItems\n                    \n                \n\n                \n                    \n                        getfilteredItems()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:28\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { TuiDataListWrapper } from '@taiga-ui/kit';\nimport { TuiInputModule } from '@taiga-ui/legacy';\n\n@Component({\n  selector: 'app-filter-by-input',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    TuiDataListWrapper,\n    TuiInputModule\n],\n  templateUrl: './filter-by-input.component.html',\n  styleUrls: ['./filter-by-input.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilterByInputComponent {\n  @Input() label: string = 'Search';\n  @Input() controlName: string = 'search';\n  @Input() items: string[] = [];\n  @Output() searchQuery = new EventEmitter();\n\n  form = new FormGroup({\n    [this.controlName]: new FormControl('', [Validators.pattern('^[a-zA-Z0-9]*$')]),\n  });\n\n  get filteredItems() {\n    const control = this.form.get(this.controlName);\n    if (control) {\n      const value = control.value ?? '';\n      this.searchQuery.emit(value);\n      return this.items.filter(item => item.includes(value));\n    }\n    return this.items;\n  }\n\n  constructor() {\n    this.form.controls[this.controlName].valueChanges.subscribe(value => {\n      this.searchQuery.emit(value ?? '');\n    });\n  }\n\n  onKeyPress(event: KeyboardEvent): void {\n    const inputChar = event.key;\n    const allowedChars = /^[a-zA-Z0-9]$/;\n    if (!allowedChars.test(inputChar) && !event.ctrlKey && !event.metaKey) {\n      event.preventDefault();\n    }\n  }\n}\n\n    \n\n    \n        \n    \n      {{ label }}\n      \n    \n  \n  \n    \n\n    \n                \n                    ./filter-by-input.component.css\n                \n                tui-input {\n    min-width: 300px;\n    max-width: 50%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ label }}              '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterByInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n            \n                imports\n                \n                                BackButtonComponent\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./header.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Click\n                            \n                            \n                                Import\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonText\n                            \n                            \n                                isApiPage\n                            \n                            \n                                logoUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/header/header.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isApiPage\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/header/header.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        logoUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://www.titan2.ru/images/temp/logo__ru.jpg\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/header/header.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        buttonClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/header/header.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Click\n                        \n                    \n                \n            \n            \n                \nClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/header/header.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Import\n                        \n                    \n                \n            \n            \n                \nImport()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/header/header.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : tuiDialog(ImportDialogComponent, {\n    closeable: true,\n      dismissible: true,\n      label: \"Импортировать\",\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/header/header.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { BackButtonComponent } from '../back-button/back-button.component';\nimport { CommonModule } from '@angular/common';\nimport { tuiDialog } from '@taiga-ui/core';\nimport { ImportDialogComponent } from '../import-dialog/import-dialog.component';\n\n@Component({\n  selector: 'app-header',\n  imports: [BackButtonComponent,CommonModule],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.css',\n})\nexport class HeaderComponent {\n  @Input() logoUrl: string = \"https://www.titan2.ru/images/temp/logo__ru.jpg\"; \n  @Input() buttonText: string = ''; \n  @Output() buttonClick: EventEmitter = new EventEmitter(); \n  @Input() isApiPage: boolean = false;\n\n  private readonly dialog = tuiDialog(ImportDialogComponent, {\n    closeable: true,\n      dismissible: true,\n      label: \"Импортировать\",\n    });\n\n  Click(): void {\n    this.buttonClick.emit(); \n  }\n  \n  Import(): void {\n    this.dialog().subscribe();\n  }\n}\n    \n\n    \n        \n  \n    \n  \n  \n    @if(isApiPage){\n      Импортировать\n    }\n    @if(buttonText != ''){\n      {{ buttonText }}\n    }\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              @if(isApiPage){      Импортировать    }    @if(buttonText != \\'\\'){      {{ buttonText }}    }      '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpErrorInterceptor.html":{"url":"interceptors/HttpErrorInterceptor.html","title":"interceptor - HttpErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/http-error.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorHandler: ErrorHandlerService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/http-error.interceptor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/http-error.interceptor.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { ErrorHandlerService } from './error-handler.service';\n\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n\n  constructor(private errorHandler: ErrorHandlerService, private alerts: TuiAlertService) {}\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        this.errorHandler.handleError(error);\n        this.alerts.open(error.message, { appearance: 'negative' }).subscribe();\n        return throwError(error);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconTrashComponent.html":{"url":"components/IconTrashComponent.html","title":"component - IconTrashComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IconTrashComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/icon-trash/icon-trash.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-icon-trash\n            \n\n\n\n            \n                styleUrls\n                ./icon-trash.component.css,../../styles/icon.css\n            \n\n\n\n            \n                templateUrl\n                ./icon-trash.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                showNotification\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiInfo\n                            \n                            \n                                endpointInfo\n                            \n                            \n                                entityInfo\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                responseAlert\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alerts: TuiAlertService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/icon-trash/icon-trash.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        apiInfo\n                    \n                \n                \n                    \n                        Type :         apiServiceShortStructure\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/icon-trash/icon-trash.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        endpointInfo\n                    \n                \n                \n                    \n                        Type :         Endpoint\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/icon-trash/icon-trash.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        entityInfo\n                    \n                \n                \n                    \n                        Type :         EntityShort\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/icon-trash/icon-trash.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/icon-trash/icon-trash.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        responseAlert\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/icon-trash/icon-trash.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        showNotification\n                        \n                    \n                \n            \n            \n                \n                        \n                    showNotification()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/icon-trash/icon-trash.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, } from '@angular/core';\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { switchMap, takeUntil } from 'rxjs';\nimport { Router,  } from '@angular/router';\nimport { PolymorpheusComponent } from '@taiga-ui/polymorpheus';\nimport { AlertDeleteComponent } from '../alert-delete/alert-delete.component';\nimport { apiServiceShortStructure, EntityShort, Endpoint } from '../../../services/service-structure-api';\n\n@Component({\n  selector: 'app-icon-trash',\n  imports: [],\n  templateUrl: './icon-trash.component.html',\n  styleUrls: ['./icon-trash.component.css', '../../styles/icon.css']\n})\nexport class IconTrashComponent {\n  @Input() item: any;\n  @Input() apiInfo!: apiServiceShortStructure;\n  @Input() entityInfo!: EntityShort;\n  @Input() endpointInfo!: Endpoint;\n  @Output() responseAlert = new EventEmitter();\n  constructor(\n    private alerts: TuiAlertService,\n    private router: Router,\n  ) { }\n\n  protected showNotification(): void {\n    const notification = this.alerts\n      .open(new PolymorpheusComponent(AlertDeleteComponent), {\n        label: 'Вы уверены, что хотите удалить?',\n        appearance: 'negative',\n        autoClose: 0,\n      })\n      .pipe(\n        switchMap((response) => {\n          if (response) {\n            this.responseAlert.emit(true);\n            console.log(`Удаление карточки: ${this.item.name}`);\n            return this.alerts.open(`Карточка \"${this.item.name}\" удалена.`, { label: 'Успех' });\n          } else {\n            return this.alerts.open(`Удаление карточки \"${this.item.name}\" отменено.`, { label: 'Информация' });\n          }\n        }),\n        takeUntil(this.router.events),\n      );\n\n\n    notification.subscribe();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./icon-trash.component.css\n                \n                \n                \n                    ../../styles/icon.css\n                \n                  \ni {\n    margin-right: 15px; /* 10px * 1.2 */\n    cursor: pointer;\n    color: #666;\n    transition: color 0.3s;\n    font-size: 20px; /* Увеличиваем размер шрифта на 20% */\n}\n\ni:hover {\n    color: #000;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IconTrashComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImportDialogComponent.html":{"url":"components/ImportDialogComponent.html","title":"component - ImportDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ImportDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/import-dialog/import-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-import-dialog\n            \n\n\n            \n                imports\n                \n                            NgIf\n                            ReactiveFormsModule\n                            TuiAvatar\n                            TuiFiles\n                            TuiIcon\n                            TuiLink\n                            NgFor\n                            TuiButton\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./import-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./import-dialog.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                context\n                            \n                            \n                                    Protected\n                                    Readonly\n                                control\n                            \n                            \n                                    Protected\n                                files\n                            \n                            \n                                    Protected\n                                hasFiles\n                            \n                            \n                                    Protected\n                                processedData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getFileStatus\n                            \n                            \n                                    Protected\n                                getFileStatusText\n                            \n                            \n                                    Private\n                                processJson\n                            \n                            \n                                    Private\n                                readFiles\n                            \n                            \n                                    Protected\n                                removeFile\n                            \n                            \n                                    Protected\n                                submit\n                            \n                            \n                                    Private\n                                updateFileStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef, apiService: ApiServiceRepositoryService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiServiceRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getFileStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFileStatus(file: FileStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            FileStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     \"loading\" | \"normal\" | \"error\"\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getFileStatusText\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFileStatusText(file: FileStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            FileStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        processJson\n                        \n                    \n                \n            \n            \n                \n                        \n                    processJson(json: any, fileName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                json\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fileName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    readFiles(files: File[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        removeFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeFile(fileToRemove: FileStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:169\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileToRemove\n                                            \n                                                            FileStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        submit\n                        \n                    \n                \n            \n            \n                \n                        \n                    submit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:117\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateFileStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateFileStatus(file: File, status: \"loading\" | \"normal\" | \"error\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                        \"loading\" | \"normal\" | \"error\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext>()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        control\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl([])\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileStatus[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        hasFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        processedData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiServiceStructure[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { NgIf, NgFor } from '@angular/common';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { TuiIcon, TuiLink } from '@taiga-ui/core';\nimport type { TuiFileLike } from '@taiga-ui/kit';\nimport { TuiAvatar, TuiFiles } from '@taiga-ui/kit';\nimport { ChangeDetectorRef } from '@angular/core';\nimport { TuiButton } from '@taiga-ui/core';\nimport { ApiServiceStructure } from '../../../services/service-structure-api';\nimport { ApiServiceRepositoryService } from '../../../repositories/api-service-repository.service';\nimport { TuiDialogContext, TuiAlertService } from '@taiga-ui/core';\nimport { injectContext } from '@taiga-ui/polymorpheus';\n\ninterface FileStatus {\n  file: TuiFileLike;\n  status: 'loading' | 'normal' | 'error' | 'success';\n  errorMessage: string;\n}\n\n@Component({\n  selector: 'app-import-dialog',\n  imports: [NgIf, ReactiveFormsModule, TuiAvatar, TuiFiles, TuiIcon, TuiLink, NgFor, TuiButton],\n  templateUrl: './import-dialog.component.html',\n  styleUrl: './import-dialog.component.css',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ImportDialogComponent {\n  protected readonly control = new FormControl([]);\n  protected files: FileStatus[] = [];\n  protected hasFiles = false;\n  protected processedData: ApiServiceStructure[] = []; // Массив для хранения обработанных данных\n  private readonly context = injectContext>();\n\n\n  constructor(private cdr: ChangeDetectorRef, private apiService: ApiServiceRepositoryService, private readonly alerts: TuiAlertService) {\n    this.control.valueChanges.subscribe((files) => {\n      if (files) {\n        // Обновляем только новые файлы\n        const newFiles = files.filter(file => !this.files.some(f => f.file.name === file.name));\n        this.files = [\n          ...this.files,\n          ...newFiles.map(file => ({ file, status: 'loading' as const, errorMessage: '' })) // Используем 'as const' для явного указания типа\n        ];\n        this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n        this.readFiles(newFiles);\n      }\n    });\n  }\n\n  private readFiles(files: File[]): void {\n    files.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = (e: ProgressEvent) => {\n        const text = e.target?.result as string;\n        try {\n          const json = JSON.parse(text);\n          this.updateFileStatus(file, 'normal');\n          this.processJson(json, file.name); // Передаем имя файла в processJson\n        } catch (error) {\n          console.error('Ошибка при чтении JSON файла:', error);\n          this.updateFileStatus(file, 'error');\n        }\n      };\n      reader.readAsText(file);\n    });\n  }\n\n  private updateFileStatus(file: File, status: 'loading' | 'normal' | 'error'): void {\n    const fileStatus = this.files.find(f => f.file.name === file.name);\n    if (fileStatus) {\n      fileStatus.status = status; // Тип уже корректен\n      this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n      this.cdr.markForCheck();\n    }\n  }\n\n  protected getFileStatusText(file: FileStatus): string {\n    switch (file.status) {\n      case 'loading':\n        return 'Файл на проверке';\n      case 'normal':\n        return 'Файл проверен';\n      case 'error':\n        return 'Ошибка загрузки файла';\n      case 'success':\n        return 'Файл загружен';\n      default:\n        return '';\n    }\n  }\n\n  protected getFileStatus(file: FileStatus): 'loading' | 'normal' | 'error' {\n    switch (file.status) {\n      case 'loading':\n        return 'loading';\n      case 'normal':\n        return 'normal';\n      case 'error':\n        return 'error';\n      case 'success':\n        return 'normal';\n    }\n  }\n\n  private processJson(json: any, fileName: string): void {\n    const name = fileName.replace(/\\.[^/.]+$/, \"\"); // Убираем расширение файла\n    const apiServiceStructure: ApiServiceStructure = {\n      name: name,\n      isActive: json.isActive || false, // Пример обработки других полей\n      description: json.description || '',\n      entities: json.entities || []\n    };\n    this.processedData.push(apiServiceStructure); // Сохраняем обработанные данные\n    console.log('Обработанный JSON:', apiServiceStructure);\n  }\n\n  protected submit(): void {\n    if (this.processedData.length > 0) {\n      this.files.filter(f => f.status == 'normal').forEach(file => file.status = 'loading');\n      this.cdr.markForCheck();\n\n      // Отправляем каждый объект на сервер\n      this.processedData.forEach(service => {\n        this.apiService.createFullApiService(service).subscribe({\n          next: (response) => {\n            console.log('Сервис успешно создан:', response);\n            // Обновляем статус файла на \"success\" (успешно загружен)\n            const index = this.processedData.findIndex(d => d.name === service.name);\n            if (index !== -1) {\n              this.processedData.splice(index, 1);\n            }\n            const file = this.files.find(f => f.file.name === service.name + '.json');\n            if (file) {\n              file.status = 'success'; // Используем 'success' для обозначения успеха\n              file.errorMessage = '';\n              this.cdr.markForCheck(); // Обновляем представление\n            }\n            this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n            if (this.files.every(file => file.status == 'success')) {\n              this.alerts\n                .open('Файлы успешно загружены', {\n                  appearance: 'success',\n                })\n                .subscribe();\n              this.context.completeWith(false);\n            }\n          },\n          error: (response) => {\n            // Обновляем статус файла и сохраняем ошибку\n            const file = this.files.find(f => f.file.name === service.name + '.json');\n            if (file) {\n              file.status = 'error';\n              file.errorMessage = `Ошибка при создании сервиса: ${response.error}`;\n              const index = this.processedData.findIndex(d => d.name === service.name);\n              if (index !== -1) {\n                this.processedData.splice(index, 1);\n              }\n              this.cdr.markForCheck(); // Обновляем представление\n            }\n            this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n          }\n        });\n      });\n    } else {\n      console.warn('Нет данных для отправки.');\n    }\n  }\n\n  protected removeFile(fileToRemove: FileStatus): void {\n    this.files = this.files.filter(file => file !== fileToRemove);\n    this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n\n    // Обновляем значение FormControl, чтобы оно соответствовало текущему списку файлов\n    const currentFiles = this.control.value ? this.control.value.filter(file => file !== fileToRemove.file) : [];\n    this.control.setValue(currentFiles);\n\n    this.cdr.markForCheck(); // Обновляем представление\n  }\n}\n    \n\n    \n        \n    \n    \n        \n            \n            \n                Файлы готовы к загрузке!\n                \n                \n            \n        \n        \n            \n                \n                \n                    Перетащите файлы сюда или\n                    кликните для загрузки\n                \n            \n        \n    \n\n\n\n    \n        {{ getFileStatusText(file) }}\n        {{ file.errorMessage }}\n        \n    \n\n\n\n    \n        Отправить\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        Файлы готовы к загрузке!                                                                                                                            Перетащите файлы сюда или                    кликните для загрузки                                                    {{ getFileStatusText(file) }}        {{ file.errorMessage }}                        Отправить    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImportDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingComponent.html":{"url":"components/LoadingComponent.html","title":"component - LoadingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoadingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/loading/loading.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./loading.component.html\n            \n\n\n\n            \n                styleUrl\n                ./loading.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"assets/dora.png\"\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/loading/loading.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  imports: [],\n  templateUrl: './loading.component.html',\n  styleUrl: './loading.component.css'\n})\nexport class LoadingComponent {\n  path: string = \"assets/dora.png\";\n}\n\n    \n\n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/pages/page-not-found/page-not-found.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            TuiButton\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n            \n                styleUrl\n                ./page-not-found.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cd: ChangeDetectorRef, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/pages/page-not-found/page-not-found.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ChangeDetectorRef, Component } from '@angular/core';\nimport { ActivatedRoute, RouterModule } from '@angular/router';\nimport { AlertDeleteComponent } from \"../../components/alert-delete/alert-delete.component\";\nimport { HeaderComponent } from '../../components/header/header.component';\nimport { TuiButton } from '@taiga-ui/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  imports: [\n    CommonModule,\n     TuiButton,\n     RouterModule\n],\n  templateUrl: './page-not-found.component.html',\n  styleUrl: './page-not-found.component.css'\n})\nexport class PageNotFoundComponent {\n\nconstructor(\n   private cd: ChangeDetectorRef,\n    private route: ActivatedRoute,\n  ) {}\n}\n\n    \n\n    \n        \n\n\n\n    \n    \n\n\n\n    \n        \n            Ой!🙈🍌\n            Страница не найдена\n            \n            На главную\n        \n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Ой!🙈🍌            Страница не найдена                        На главную            '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaginationComponent.html":{"url":"components/PaginationComponent.html","title":"component - PaginationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PaginationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/pagination/pagination.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pagination\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            TuiInputSliderModule\n                            TuiPagination\n                            TuiTextfieldControllerModule\n                \n            \n\n            \n                styleUrls\n                ./pagination.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pagination.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToPage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                itemsPerPage\n                            \n                            \n                                totalItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    totalPages\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentPage\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/pagination/pagination.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        itemsPerPage\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 16\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/pagination/pagination.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        totalItems\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/pagination/pagination.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        pageChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/pagination/pagination.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToPage\n                        \n                    \n                \n            \n            \n                \ngoToPage(page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/pagination/pagination.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        totalPages\n                    \n                \n\n                \n                    \n                        gettotalPages()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/pagination/pagination.component.ts:24\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TuiPagination } from '@taiga-ui/kit';\nimport { TuiInputSliderModule, TuiTextfieldControllerModule } from '@taiga-ui/legacy';\n\n@Component({\n  selector: 'app-pagination',\n  imports: [\n    FormsModule,\n    TuiInputSliderModule,\n    TuiPagination,\n    TuiTextfieldControllerModule,\n  ],\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaginationComponent {\n  @Input() totalItems: number = 0;\n  @Input() itemsPerPage: number = 16;\n  @Input() currentPage: number = 1;\n  @Output() pageChange = new EventEmitter();\n\n  get totalPages(): number {\n    return Math.ceil(this.totalItems / this.itemsPerPage);\n  }\n\n  goToPage(page: number): void {\n    if (page >= 1 && page \n    \n\n    \n        Page {{ currentPage }}\n\n\n\n    \n\n    \n                \n                    ./pagination.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Page {{ currentPage }}'\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaginationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SwitchComponent.html":{"url":"components/SwitchComponent.html","title":"component - SwitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SwitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/switch/switch.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            tuiSwitchOptionsProvider({ showIcons: false, appearance: () =>  })\n                \n            \n\n\n            \n                selector\n                app-switch\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiSwitch\n                \n            \n\n            \n                styleUrls\n                ./switch.component.css\n            \n\n\n\n            \n                templateUrl\n                ./switch.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                invalidFalse\n                            \n                            \n                                    Protected\n                                    Readonly\n                                invalidTrue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                onToggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/switch/switch.component.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/switch/switch.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/switch/switch.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToggle\n                        \n                    \n                \n            \n            \n                \nonToggle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/switch/switch.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        invalidFalse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(false, () => ({\n    invalid: true,\n  }))\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/switch/switch.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        invalidTrue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(true, () => ({\n    invalid: true,\n  }))\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/switch/switch.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  OnInit,\n} from '@angular/core';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TuiSwitch, tuiSwitchOptionsProvider } from '@taiga-ui/kit';\n\n@Component({\n  selector: 'app-switch',\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, TuiSwitch],\n  templateUrl: './switch.component.html',\n  styleUrls: ['./switch.component.css'],\n  providers: [\n    tuiSwitchOptionsProvider({ showIcons: false, appearance: () => 'primary' }),\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SwitchComponent implements OnInit {\n  @Input() value: boolean = false;\n  @Output() toggle: EventEmitter = new EventEmitter();\n\n  protected readonly invalidTrue = new FormControl(true, () => ({\n    invalid: true,\n  }));\n  protected readonly invalidFalse = new FormControl(false, () => ({\n    invalid: true,\n  }));\n\n  public ngOnInit(): void {\n    this.invalidTrue.markAsTouched();\n    this.invalidFalse.markAsTouched();\n  }\n\n  onToggle(): void {\n    this.toggle.emit(this.value);\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./switch.component.css\n                \n                .switch {\n    position: relative;\n    display: inline-block;\n    width: 40.8px; /* 34px * 1.2 */\n    height: 24px;  /* 20px * 1.2 */\n}\n\n.switch input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n}\n\n.slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #f44336;\n    transition: .4s;\n    border-radius: 34px; /* Можно оставить без изменений, если не хотите менять форму */\n}\n\n.slider:before {\n    position: absolute;\n    content: \"\";\n    height: 16.8px; /* 14px * 1.2 */\n    width: 16.8px;  /* 14px * 1.2 */\n    left: 4px;      /* 3px * 1.2 */\n    bottom: 4px;    /* 3px * 1.2 */\n    background-color: white;\n    transition: .4s;\n    border-radius: 50%;\n}\n\ninput:checked + .slider {\n    background-color: #4caf50;\n}\n\ninput:checked + .slider:before {\n    transform: translateX(16.8px); /* 14px * 1.2 */\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SwitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/apiServiceShortStructure.html":{"url":"interfaces/apiServiceShortStructure.html","title":"interface - apiServiceShortStructure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  apiServiceShortStructure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/service-structure-api.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Endpoint {\n  route: string;\n  type: string;\n  isActive: boolean;\n}\n\nexport interface Entity {\n  name: string;\n  isActive: boolean;\n  structure: any;\n  endpoints: Endpoint[];\n}\n\nexport interface ApiServiceStructure {\n  name: string;\n  isActive: boolean;\n  description: string;\n  entities: Entity[];\n}\n\nexport interface apiServiceShortStructure {\n  name: string;\n  isActive : boolean;\n  description: string;\n}\n\nexport interface EntityShort {\n  name: string;\n  isActive: boolean;\n  structure: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/components/alert-delete/alert-delete.component.ts\n            \n            component\n            AlertDeleteComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/data/components/api-dialog/api-dialog.component.ts\n            \n            component\n            ApiDialogComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/data/components/back-button/back-button.component.ts\n            \n            component\n            BackButtonComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/data/components/card-api/card-api.component.ts\n            \n            component\n            CardApiComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/data/components/card-endpoint/card-endpoint.component.ts\n            \n            component\n            CardEndpointComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/data/components/card-entity/card-entity.component.ts\n            \n            component\n            CardEntityComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts\n            \n            component\n            EndpointDialogComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/data/components/entity-dialog/entity-dialog.component.ts\n            \n            component\n            EntityDialogComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/data/components/export-api-button/export-api-button.component.ts\n            \n            component\n            ExportApiButtonComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/data/components/filter-by-input/filter-by-input.component.ts\n            \n            component\n            FilterByInputComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/data/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/data/components/icon-trash/icon-trash.component.ts\n            \n            component\n            IconTrashComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/data/components/import-dialog/import-dialog.component.ts\n            \n            component\n            ImportDialogComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/data/components/import-dialog/import-dialog.component.ts\n            \n            interface\n            FileStatus\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/data/components/loading/loading.component.ts\n            \n            component\n            LoadingComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/data/components/pagination/pagination.component.ts\n            \n            component\n            PaginationComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/data/components/switch/switch.component.ts\n            \n            component\n            SwitchComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts\n            \n            component\n            ApiEndpointListComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/data/pages/card-api-list/card-api-list.component.ts\n            \n            component\n            CardApiListComponent\n            \n                0 %\n                (0/46)\n            \n        \n        \n            \n                \n                src/app/data/pages/endpoints-page/endpoin-card-list/endpoint-card-list.component.ts\n            \n            component\n            EndpointCardListComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/data/pages/entity-card-list/entity-card-list.component.ts\n            \n            component\n            EntityCardListComponent\n            \n                0 %\n                (0/34)\n            \n        \n        \n            \n                \n                src/app/data/pages/error-display/error-display.component.ts\n            \n            component\n            ErrorDisplayComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/data/pages/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/repositories/api-service-repository.service.ts\n            \n            injectable\n            ApiServiceRepositoryService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/repositories/endpoint-repository.service.ts\n            \n            injectable\n            EndpointRepositoryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/repositories/entity-repository.service.ts\n            \n            injectable\n            EntityRepositoryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/api-hub-service.service.ts\n            \n            injectable\n            ApiHubServiceService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/api-service.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/endpoint-service.service.ts\n            \n            injectable\n            EndpointService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/entity-service.service.ts\n            \n            injectable\n            EntityService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/error-handler.service.ts\n            \n            injectable\n            ErrorHandlerService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/http-error.interceptor.ts\n            \n            interceptor\n            HttpErrorInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/service-structure-api.ts\n            \n            interface\n            apiServiceShortStructure\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/service-structure-api.ts\n            \n            interface\n            ApiServiceStructure\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/service-structure-api.ts\n            \n            interface\n            Endpoint\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/service-structure-api.ts\n            \n            interface\n            Entity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/service-structure-api.ts\n            \n            interface\n            EntityShort\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^19.1.0\n        \n            @angular/common : ^19.1.0\n        \n            @angular/compiler : ^19.1.0\n        \n            @angular/core : ^19.1.0\n        \n            @angular/forms : ^19.1.0\n        \n            @angular/platform-browser : ^19.1.0\n        \n            @angular/platform-browser-dynamic : ^19.1.0\n        \n            @angular/router : ^19.1.0\n        \n            @microsoft/signalr : ^8.0.7\n        \n            @taiga-ui/addon-charts : ^4.21.0\n        \n            @taiga-ui/addon-commerce : ^4.21.0\n        \n            @taiga-ui/addon-doc : ^4.21.0\n        \n            @taiga-ui/addon-mobile : ^4.21.0\n        \n            @taiga-ui/addon-table : ^4.21.0\n        \n            @taiga-ui/cdk : ^4.21.0\n        \n            @taiga-ui/core : ^4.21.0\n        \n            @taiga-ui/event-plugins : ^4.0.2\n        \n            @taiga-ui/experimental : ^4.21.0\n        \n            @taiga-ui/icons : ^4.22.0\n        \n            @taiga-ui/icons-fontawesome : ^4.22.0\n        \n            @taiga-ui/icons-material : ^4.22.0\n        \n            @taiga-ui/kit : ^4.21.0\n        \n            @taiga-ui/layout : ^4.21.0\n        \n            @taiga-ui/legacy : ^4.24.0\n        \n            jszip : ^3.10.1\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nApiEasier\nThis project was generated using Angular CLI version 19.1.3.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    23 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideHttpClient(),\n    { provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true },\n    provideAnimations(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    NG_EVENT_PLUGINS,\n  ],\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
