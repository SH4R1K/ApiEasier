var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AlertDeleteComponent.html",[0,0.035,1,0.683]],["body/components/AlertDeleteComponent.html",[0,0.055,1,1.276,2,0.957,3,0.208,4,0.178,5,0.812,6,0.867,7,0.812,8,0.812,9,0.178,10,4.031,11,3.55,12,2.984,13,0.528,14,0.026,15,1.059,16,1.983,17,1.096,18,1.329,19,0.812,20,1.618,21,1.618,22,1.487,23,3.191,24,1.096,25,2.787,26,1.171,27,5.39,28,1.096,29,4.76,30,0.178,31,0.658,32,2.787,33,2.095,34,3.289,35,0.605,36,0.57,37,3.678,38,1.01,39,0.448,40,3.524,41,5.772,42,0.536,43,1.466,44,0.374,45,0.272,46,2.15,47,3.524,48,0.759,49,1.974,50,0.892,51,0.281,52,0.41,53,3.524,54,0.708,55,2.666,56,0.812,57,1.096,58,0.812,59,1.329,60,0.812,61,0.366,62,0.812,63,0.708,64,1.006,65,1.096,66,1.329,67,0.759,68,0.807,69,1.329,70,0.708,71,0.812,72,0.708,73,0.812,74,1.096,75,0.708,76,1.337,77,0.812,78,0.759,79,0.708,80,0.812,81,0.708,82,0.812,83,0.759,84,0.708,85,0.759,86,0.713,87,0.708,88,0.708,89,0.57,90,0.812,91,0.708,92,0.708,93,0.812,94,0.812,95,0.708,96,0.812,97,0.708,98,0.812,99,0.812,100,0.708,101,0.708,102,0.812,103,0.708,104,0.759,105,0.812,106,0.708,107,0.812,108,0.708,109,0.759,110,0.759,111,0.812,112,0.017,113,0.017]],["title/components/ApiDialogComponent.html",[0,0.035,63,0.683]],["body/components/ApiDialogComponent.html",[0,0.043,1,0.459,2,0.7,3,0.135,4,0.115,5,0.526,6,0.562,7,0.526,8,0.526,9,0.115,13,0.761,14,0.026,15,1.001,16,1.71,17,0.802,18,1.087,19,0.526,20,1.551,21,1.551,22,0.526,24,0.802,26,0.857,28,0.802,30,0.115,31,0.481,32,3.274,33,2.083,34,2.576,35,0.443,36,0.683,37,3.102,38,0.885,39,0.763,42,0.527,44,0.369,45,0.316,46,1.394,48,0.75,49,1.279,50,1.103,51,0.206,52,0.266,54,1.207,56,0.526,57,0.802,58,0.526,59,1.087,60,0.526,61,0.412,62,0.526,63,1.294,64,1.166,65,1.087,66,1.087,67,0.492,68,0.632,69,1.087,70,0.459,71,0.526,72,0.459,73,0.526,74,0.802,75,0.459,76,1.153,77,0.526,78,0.492,79,0.459,80,0.526,81,0.459,82,0.526,83,0.492,84,0.459,85,0.492,86,0.522,87,0.459,88,0.459,89,0.37,90,0.526,91,0.459,92,0.459,93,0.526,94,0.526,95,0.459,96,0.526,97,0.459,98,0.526,99,0.526,100,0.459,101,0.459,102,0.526,103,0.459,104,0.492,105,0.526,106,0.459,107,0.526,108,0.459,109,0.492,110,0.492,111,0.526,112,0.013,113,0.013,114,5.169,115,4.553,116,1.394,117,1.67,118,2.576,119,3.149,120,2.024,121,2.83,122,2.83,123,3.149,124,3.149,125,3.149,126,2.83,127,2.83,128,2.335,129,2.83,130,4.222,131,1.109,132,3.149,133,3.575,134,0.563,135,2.95,136,2.598,137,2.598,138,2.598,139,2.125,140,3.149,141,2.183,142,2.95,143,5.361,144,2.285,145,0.885,146,0.885,147,2.95,148,0.901,149,1.509,150,2.598,151,4.092,152,2.285,153,2.598,154,3.522,155,2.285,156,3.522,157,1.267,158,3.484,159,2.285,160,2.285,161,2.285,162,2.95,163,2.95,164,3.999,165,2.285,166,2.598,167,2.285,168,2.125,169,3.484,170,2.95,171,2.285,172,1.704,173,2.285,174,1.704,175,2.285,176,1.609,177,1.704,178,1.934,179,1.095,180,2.335,181,1.019,182,1.279,183,1.019,184,1.354,185,0.977,186,1.934,187,1.704,188,1.507,189,1.531,190,1.704,191,1.704,192,1.704,193,1.181,194,0.888,195,1.883,196,0.778,197,1.704,198,1.704,199,2.598,200,3.149,201,1.704,202,1.531,203,1.531,204,1.704,205,1.934,206,2.285]],["title/injectables/ApiHubServiceService.html",[207,0.836,208,2.533]],["body/injectables/ApiHubServiceService.html",[3,0.243,4,0.208,9,0.208,14,0.026,30,0.294,31,0.729,35,0.74,36,0.941,38,0.772,39,0.825,42,0.53,44,0.437,45,0.294,51,0.243,52,0.48,61,0.488,64,1.014,112,0.019,113,0.019,131,1.773,134,0.854,145,0.772,146,0.772,148,0.667,149,1.083,176,2.298,183,1.839,184,1.602,185,1.48,195,2.829,196,1.404,207,1.298,208,3.935,209,1.839,210,4.92,211,5.713,212,2.515,213,5.82,214,3.901,215,5.82,216,5.82,217,5.277,218,1.432,219,5.277,220,5.277,221,4.122,222,4.122,223,1.982,224,5.82,225,4.122,226,5.277,227,4.122,228,5.277,229,4.122,230,2.791,231,5.277,232,4.122,233,5.82,234,3.49,235,4.122,236,1.499,237,1.976,238,1.839,239,5.277,240,4.122,241,4.122,242,4.122,243,4.122,244,4.122,245,4.122,246,4.122,247,3.49,248,3.49,249,3.49,250,4.122,251,4.122,252,4.122,253,4.122,254,4.122,255,4.122,256,4.122,257,4.122,258,4.122,259,4.122,260,5.82,261,5.82,262,4.122,263,5.82,264,4.122,265,4.122,266,3.219,267,0.941,268,5.277,269,5.82,270,4.122,271,4.122,272,4.122,273,3.49,274,4.122,275,1.797,276,4.122,277,4.122,278,2.955,279,4.122]],["title/injectables/ApiService.html",[207,0.836,278,1.902]],["body/injectables/ApiService.html",[3,0.22,4,0.188,9,0.188,14,0.026,15,0.602,23,2.495,30,0.188,31,0.682,35,0.473,36,0.602,38,1.038,39,0.849,42,0.571,44,0.395,45,0.33,48,0.801,51,0.22,52,0.433,61,0.509,89,0.799,112,0.018,113,0.018,131,1.739,134,0.799,145,1.225,146,1.225,148,1.058,176,2.193,183,1.66,185,1.833,194,1.447,207,1.215,209,1.66,210,5.024,212,2.271,214,3.714,218,1.215,230,3.325,236,1.354,237,1.785,238,1.66,266,3.012,267,1.097,275,2.01,278,2.765,280,4.691,281,4.18,282,4.18,283,4.996,284,4.18,285,3.012,286,4.691,287,4.691,288,2.776,289,4.4,290,3.714,291,3.051,292,2.305,293,2.294,294,4.937,295,3.31,296,3.151,297,3.722,298,3.706,299,4.18,300,2.829,301,3.722,302,4.18,303,3.722,304,3.6,305,3.722,306,4.18,307,3.722,308,3.31,309,4.11,310,3.722,311,3.151,312,3.722,313,3.151,314,3.722,315,3.682,316,2.271,317,2.495,318,2.495,319,2.495,320,1.66,321,1.188,322,2.271,323,2.495,324,4.802,325,3.722,326,4.802,327,4.802,328,3.722,329,4.937,330,2.495,331,3.722,332,3.722,333,2.776,334,3.722,335,2.084,336,2.495,337,2.495,338,1.447,339,1.66,340,2.495]],["title/injectables/ApiServiceRepositoryService.html",[207,0.836,341,1.902]],["body/injectables/ApiServiceRepositoryService.html",[3,0.247,4,0.212,9,0.212,14,0.026,30,0.212,38,1.099,39,0.852,42,0.55,44,0.444,45,0.334,51,0.247,52,0.488,61,0.516,112,0.019,113,0.019,134,0.863,145,1.24,146,1.24,148,1.071,176,2.256,183,1.87,185,1.857,207,1.312,209,1.87,218,1.031,230,3.348,236,1.525,237,2.01,238,1.87,266,3.254,267,1.116,275,2.103,278,3.65,280,4.967,281,4.516,282,4.516,283,5.228,284,4.516,286,4.967,287,4.967,296,3.549,298,3.921,299,4.516,300,2.961,302,4.516,304,3.579,306,4.516,311,3.549,313,3.549,322,2.558,341,2.987,342,5.73,343,2.81,344,4.192,345,4.192,346,3.126,347,4.192,348,4.192,349,3.126,350,3.126,351,4.192,352,4.192,353,4.192,354,3.126,355,2.01,356,4.192,357,4.192,358,4.192,359,4.192,360,4.192,361,4.192,362,4.192]],["title/interfaces/ApiServiceStructure.html",[300,1.629,363,1.157]],["body/interfaces/ApiServiceStructure.html",[0,0.046,3,0.268,4,0.229,9,0.229,13,1.01,14,0.026,30,0.229,31,0.776,35,0.774,36,0.736,38,1.223,42,0.393,45,0.346,50,0.852,51,0.268,54,0.914,61,0.512,64,0.978,86,1.01,112,0.02,113,0.02,176,1.912,267,1.117,275,2.266,300,2.691,363,1.549,364,2.351,365,3.851,366,5.633,367,2.533]],["title/components/AppComponent.html",[0,0.035,70,0.683]],["body/components/AppComponent.html",[0,0.061,1,0.871,2,1.095,3,0.256,4,0.219,5,0.998,7,0.998,8,0.998,9,0.219,14,0.026,15,0.701,18,1.255,19,0.998,20,1.643,21,1.643,22,0.998,24,1.255,28,1.255,30,0.219,31,0.753,35,0.551,36,0.701,39,0.551,42,0.54,44,0.46,45,0.219,48,0.933,51,0.322,52,0.505,56,0.998,57,1.255,58,0.998,59,1.439,60,0.998,61,0.419,62,0.998,63,0.871,64,1.089,65,1.255,66,1.439,67,0.933,68,0.892,69,1.439,70,1.256,71,0.998,72,0.871,73,0.998,74,1.255,75,0.871,76,1.415,77,0.998,78,0.933,79,0.871,80,0.998,81,0.871,82,0.998,83,0.933,84,0.871,85,0.933,86,0.816,87,0.871,88,0.871,89,0.701,90,0.998,91,0.871,92,0.871,93,0.998,94,0.998,95,0.871,96,0.998,97,0.871,98,0.998,99,0.998,100,0.871,101,0.871,102,0.998,103,0.871,104,0.933,105,0.998,106,0.871,107,0.998,108,0.871,109,0.933,110,0.933,111,0.998,112,0.02,113,0.02,238,2.43,267,0.701,321,1.384,368,3.671,369,5.959,370,5.959,371,3.635,372,5.449,373,3.324,374,5.449,375,5.959,376,4.613,377,4.336]],["title/components/BackButtonComponent.html",[0,0.035,72,0.683]],["body/components/BackButtonComponent.html",[0,0.052,1,0.643,2,0.895,3,0.189,4,0.161,5,0.736,6,0.787,7,0.736,8,0.736,9,0.161,13,0.667,14,0.026,17,1.025,18,1.276,19,0.736,20,1.605,21,1.605,22,0.736,24,0.736,26,1.261,28,1.025,30,0.161,39,0.566,42,0.478,43,1.331,44,0.339,45,0.161,50,0.96,51,0.263,52,0.372,54,0.895,56,0.736,57,1.025,58,0.736,59,1.276,60,0.736,61,0.394,62,0.736,63,0.643,64,0.966,65,1.025,66,1.276,67,0.688,68,0.767,69,1.276,70,0.643,71,0.736,72,1.305,73,1.453,74,1.025,75,0.643,76,1.298,77,0.736,78,0.688,79,0.643,80,0.736,81,0.643,82,0.736,83,0.688,84,0.643,85,0.688,86,0.667,87,0.643,88,0.643,89,0.72,90,0.736,91,0.643,92,0.643,93,0.736,94,0.736,95,0.643,96,0.736,97,0.643,98,0.736,99,0.736,100,0.643,101,0.643,102,0.736,103,0.643,104,0.688,105,0.736,106,0.643,107,0.736,108,0.643,109,0.688,110,0.688,111,0.736,112,0.016,113,0.016,131,0.84,134,0.72,145,0.599,146,0.599,148,0.517,149,1.17,168,2.717,188,1.421,195,2.286,218,0.787,320,2.952,321,1.021,355,1.533,373,1.951,378,4.338,379,3.821,380,2.385,381,5.555,382,2.649,383,4.338,384,3.771,385,4.692,386,3.198,387,3.198,388,3.198,389,4.498,390,3.198,391,3.198,392,2.385,393,3.198,394,3.198,395,3.198,396,3.198,397,3.198,398,4.454,399,2.385,400,2.132,401,1.992,402,1.533,403,1.853,404,1.791,405,1.654,406,4.338,407,2.708,408,1.427,409,1.331,410,2.708,411,1.331,412,1.331,413,1.987,414,1.791,415,1.791,416,1.331,417,1.427,418,1.331,419,1.654,420,1.654,421,2.708]],["title/components/CardApiComponent.html",[0,0.035,75,0.683]],["body/components/CardApiComponent.html",[0,0.04,1,0.406,2,0.637,3,0.119,4,0.102,5,0.466,6,0.498,7,0.466,8,0.466,9,0.102,13,0.586,14,0.026,15,0.633,16,1.012,17,0.73,18,1.019,19,0.466,20,1.528,21,1.528,22,0.466,24,0.73,25,2.022,26,0.78,28,0.73,30,0.102,31,0.438,33,1.52,35,0.403,36,0.513,38,0.732,39,0.721,42,0.519,43,1.319,44,0.214,45,0.286,48,0.435,50,0.829,51,0.231,52,0.235,54,1.071,55,2.479,56,0.466,57,0.73,58,0.466,59,1.019,60,0.466,61,0.341,62,0.466,63,0.637,64,1.193,65,0.73,66,1.019,67,0.435,68,0.586,69,1.019,70,0.406,71,0.466,72,0.406,73,0.466,74,0.73,75,1.254,76,1.313,77,0.466,78,0.435,79,0.406,80,0.466,81,0.406,82,0.466,83,0.435,84,0.406,85,0.435,86,0.475,87,0.406,88,0.406,89,0.918,90,0.466,91,0.89,92,0.406,93,0.466,94,0.466,95,0.406,96,0.466,97,0.89,98,0.73,99,0.466,100,0.406,101,0.406,102,0.466,103,0.406,104,0.435,105,0.466,106,0.406,107,0.466,108,0.89,109,0.435,110,0.435,111,0.466,112,0.011,113,0.011,115,1.508,117,1.875,120,1.875,131,1.34,134,0.513,141,2.486,145,0.594,146,0.594,148,0.633,149,1.263,157,0.736,176,1.508,183,0.902,184,1.233,188,1.534,193,1.639,194,1.983,196,1.08,218,0.78,223,0.689,266,2.386,267,0.513,292,1.842,293,1.721,298,1.133,321,0.646,338,1.52,339,1.414,341,2.479,371,2.386,381,5.227,382,1.046,400,2.122,401,2.206,402,1.875,403,2,404,1.133,405,1.046,408,2.145,409,1.627,411,1.319,412,1.319,413,1.975,414,1.133,415,1.133,416,1.319,417,1.414,418,1.842,419,1.639,420,1.046,422,3.892,423,4.917,424,1.713,425,1.775,426,1.775,427,3.91,428,2.023,429,3.171,430,3.301,431,2.364,432,3.301,433,1.414,434,2.916,435,1.52,436,3.91,437,1.713,438,2.967,439,2.967,440,2.023,441,3.311,442,2.023,443,2.122,444,2.023,445,2.023,446,2.364,447,2.023,448,3.585,449,2.023,450,3.171,451,1.639,452,2.023,453,2.023,454,2.023,455,1.133,456,1.52,457,2.125,458,1.508,459,1.356,460,1.234,461,1.508,462,1.508,463,1.234,464,1.508,465,1.713,466,3.171,467,2.364,468,2.364,469,2.125,470,2.023,471,2.023,472,2.022,473,3.171,474,2.023,475,2.479,476,2.125,477,1.713,478,3.91,479,1.508,480,3.171,481,1.713,482,1.713,483,2.023,484,2.023,485,1.356,486,2.19,487,2.023,488,1.234,489,1.356,490,1.508,491,1.934,492,1.356,493,1.508,494,1.508,495,2.023,496,2.023,497,3.171,498,3.171,499,1.356,500,1.08,501,1.234,502,1.639,503,1.414,504,1.356,505,1.133,506,2.967,507,1.356,508,1.934,509,1.356,510,2.125,511,1.875,512,1.356,513,3.223,514,2.637,515,1.934,516,1.356,517,1.356,518,1.356,519,1.356,520,1.133,521,1.356,522,1.775,523,1.356,524,1.639,525,1.234,526,2.125,527,2.386,528,1.234,529,1.133,530,2.933,531,1.508,532,1.508,533,1.508,534,2.967,535,1.234,536,1.356,537,1.356,538,1.356,539,1.356,540,1.356,541,1.356,542,1.356,543,1.414,544,2.122,545,0.97,546,1.234,547,1.52,548,1.414,549,1.52,550,1.639,551,2.022,552,1.046,553,1.046,554,1.934,555,1.234,556,1.356,557,1.508,558,1.234,559,1.133,560,1.133,561,1.356,562,1.133,563,1.234,564,1.046,565,1.234,566,1.356,567,1.356]],["title/components/CardEndpointComponent.html",[0,0.035,79,0.683]],["body/components/CardEndpointComponent.html",[0,0.037,1,0.371,2,0.593,3,0.109,4,0.093,5,0.425,6,0.454,7,0.425,8,0.425,9,0.093,13,0.771,14,0.026,15,0.596,16,0.941,17,0.679,18,0.969,19,0.425,20,1.509,21,1.509,22,0.425,24,0.679,25,1.904,26,0.726,28,0.679,30,0.093,31,0.408,33,1.432,35,0.468,36,0.477,38,0.69,39,0.758,42,0.515,43,0.768,44,0.196,45,0.309,48,0.397,50,0.788,51,0.174,52,0.215,54,1.199,55,2.745,56,0.425,57,0.679,58,0.425,59,0.969,60,0.425,61,0.411,62,0.425,63,0.371,64,0.932,65,0.679,66,0.969,67,0.397,68,0.967,69,0.969,70,0.371,71,0.425,72,0.371,73,0.425,74,0.679,75,0.371,76,1.284,77,0.425,78,0.397,79,1.291,80,0.425,81,0.371,82,0.425,83,0.397,84,0.593,85,0.397,86,0.734,87,0.371,88,0.371,89,0.95,90,0.425,91,0.371,92,0.371,93,0.425,94,0.425,95,0.371,96,0.425,97,0.845,98,0.679,99,0.425,100,0.371,101,0.371,102,0.425,103,0.371,104,0.397,105,0.425,106,0.371,107,0.425,108,0.845,109,0.397,110,0.397,111,0.425,112,0.011,113,0.011,117,1.766,131,1.697,134,0.477,141,3.127,145,0.918,146,0.918,148,0.832,149,1.589,157,0.671,176,0.629,183,0.823,184,1.146,188,1.759,193,1.525,194,2.001,196,1.433,218,0.726,223,0.629,236,0.671,267,0.596,292,1.75,293,1.635,320,0.823,321,0.589,338,1.432,339,1.316,371,2.247,400,1.532,401,1.787,402,1.414,403,1.532,408,1.643,409,1.227,411,0.768,412,0.768,413,1.643,416,0.768,417,0.823,418,1.532,422,4.054,430,3.137,431,2.199,432,3.137,433,1.316,435,1.414,438,2.82,439,2.82,443,2.017,446,2.199,448,3.429,451,1.525,456,1.414,457,1.977,458,1.377,459,1.237,460,1.126,461,1.377,463,1.126,467,2.199,469,1.977,472,2.175,475,2.355,476,2.469,479,1.377,481,1.563,482,1.563,485,1.237,486,2.062,488,1.126,489,1.237,490,1.377,491,2.247,492,1.237,493,1.377,494,1.377,499,1.237,500,1.005,501,1.126,502,0.954,503,1.316,504,1.237,505,1.034,506,2.82,507,1.237,508,1.799,509,1.237,510,1.977,511,1.766,512,1.237,513,3.082,514,2.535,515,1.799,516,1.237,517,1.237,518,1.237,519,1.237,520,1.034,521,1.237,522,1.034,523,1.237,524,1.525,525,1.126,526,1.977,527,2.247,528,1.126,529,1.034,530,2.805,531,1.377,532,1.377,533,1.377,534,2.82,535,1.126,536,1.237,537,1.237,538,1.237,539,1.237,540,1.237,541,1.237,542,1.237,543,1.316,544,2.017,545,0.885,546,1.126,547,1.414,548,1.316,549,1.414,550,1.525,551,1.904,552,0.954,553,0.954,562,1.034,563,1.126,564,0.954,565,1.126,566,1.237,567,1.237,568,5.12,569,1.563,570,1.846,571,2.949,572,2.949,573,2.949,574,2.949,575,2.747,576,3.118,577,3.118,578,2.747,579,3.683,580,1.846,581,3.45,582,1.846,583,1.846,584,1.846,585,1.846,586,1.846,587,2.949,588,1.846,589,2.949,590,1.846,591,1.846,592,1.846,593,1.846,594,2.949,595,1.846,596,2.949,597,1.846,598,2.949,599,1.846,600,1.126,601,1.126,602,1.563,603,1.377,604,1.846,605,2.949,606,1.846,607,3.683,608,1.377,609,4.206,610,3.118,611,4.206,612,2.949,613,1.846,614,1.846,615,1.846,616,1.846,617,1.377,618,1.846,619,2.949,620,2.949]],["title/components/CardEntityComponent.html",[0,0.035,81,0.683]],["body/components/CardEntityComponent.html",[0,0.037,1,0.358,2,0.576,3,0.105,4,0.09,5,0.41,6,0.438,7,0.41,8,0.41,9,0.09,13,0.759,14,0.026,15,0.581,16,0.914,17,0.66,18,0.948,19,0.41,20,1.501,21,1.501,22,0.41,24,0.66,25,1.858,26,0.705,28,0.66,30,0.09,31,0.396,33,1.397,35,0.613,36,0.73,38,0.846,39,0.78,42,0.493,43,0.741,44,0.189,45,0.31,48,0.383,50,0.772,51,0.169,52,0.207,54,1.188,55,2.701,56,0.41,57,0.66,58,0.41,59,0.948,60,0.41,61,0.406,62,0.41,63,0.358,64,0.919,65,0.66,66,0.948,67,0.383,68,0.538,69,0.948,70,0.358,71,0.41,72,0.358,73,0.41,74,0.66,75,0.358,76,1.273,77,0.41,78,0.383,79,0.358,80,0.41,81,1.283,82,0.41,83,0.383,84,0.358,85,0.383,86,0.936,87,0.576,88,0.358,89,1.002,90,0.41,91,0.358,92,0.358,93,0.41,94,0.41,95,0.358,96,0.41,97,0.828,98,0.66,99,0.41,100,0.358,101,0.358,102,0.41,103,0.358,104,0.383,105,0.41,106,0.358,107,0.41,108,0.828,109,0.383,110,0.383,111,0.41,112,0.01,113,0.01,117,1.723,131,1.768,134,0.463,141,2.889,145,0.904,146,0.904,148,0.853,149,1.612,157,0.647,184,1.113,188,1.784,193,1.481,194,1.971,196,1.224,218,0.705,223,0.606,236,0.647,266,2.193,267,0.853,285,1.748,292,1.714,293,1.601,321,0.568,335,2.701,338,1.397,339,1.278,367,1.192,371,2.193,382,0.92,400,2.007,401,2.116,402,1.723,403,1.878,404,0.997,405,0.92,408,2.014,409,1.495,411,1.192,412,1.192,413,1.837,414,0.997,415,0.997,416,1.192,417,1.278,418,1.714,419,1.481,420,0.92,422,4.152,430,3.072,431,2.136,432,3.072,433,1.278,435,1.373,438,2.409,439,2.761,443,1.975,446,2.136,448,3.072,451,1.481,456,1.373,457,1.92,458,1.327,459,1.193,460,1.086,461,1.327,463,1.086,467,2.136,468,2.136,469,1.92,472,1.858,475,2.307,477,2.425,479,1.327,485,1.193,486,1.604,488,1.086,489,1.193,490,1.327,491,1.086,492,1.193,493,1.327,494,1.327,499,1.193,500,0.976,501,1.086,502,1.481,503,1.278,504,1.193,505,0.997,506,2.761,507,1.193,508,1.748,509,1.193,510,1.92,511,1.723,512,1.193,513,3.026,514,2.494,515,1.748,516,1.193,517,1.193,518,1.193,519,1.193,520,0.997,521,1.193,522,1.604,523,1.193,524,1.481,525,1.086,526,1.92,527,2.193,528,1.086,529,0.997,530,2.754,531,1.327,532,1.327,533,1.327,534,2.761,535,1.086,536,1.193,537,1.193,538,1.193,539,1.193,540,1.193,541,1.193,542,1.193,543,1.278,544,1.975,545,0.853,546,1.086,547,1.373,548,1.278,549,1.373,550,1.481,551,1.858,552,0.92,553,0.92,554,1.748,555,1.086,556,1.193,557,1.327,558,1.086,559,0.997,560,0.997,561,1.193,562,0.997,563,1.086,564,0.92,565,1.086,566,1.193,567,1.193,576,3.043,578,2.68,601,1.086,602,3.043,610,3.488,621,5.245,622,1.507,623,1.78,624,2.864,625,2.409,626,3.594,627,2.864,628,4.119,629,2.864,630,2.864,631,3.594,632,1.507,633,3.536,634,1.78,635,1.78,636,1.78,637,1.78,638,2.864,639,1.78,640,1.78,641,2.864,642,1.78,643,2.864,644,1.78,645,2.864,646,1.78,647,2.136,648,1.78,649,1.78,650,1.78,651,2.864,652,1.78,653,1.78,654,1.78,655,1.78,656,1.327,657,1.78,658,2.864,659,1.78,660,3.594,661,1.78,662,3.594,663,2.864,664,1.78,665,1.78,666,1.78,667,1.78,668,1.78,669,1.78,670,1.78,671,1.78,672,1.78,673,1.78,674,2.864,675,2.864]],["title/interfaces/Endpoint.html",[68,0.509,363,1.157]],["body/interfaces/Endpoint.html",[3,0.289,4,0.247,9,0.247,13,0.732,14,0.026,30,0.247,31,0.811,35,0.745,36,0.791,38,1.221,45,0.352,51,0.289,68,0.941,112,0.021,113,0.021,267,1.116,275,2.22,363,1.665,364,2.527,367,2.44,676,4.139,677,5.518,678,4.374]],["title/components/EndpointDialogComponent.html",[0,0.035,84,0.683]],["body/components/EndpointDialogComponent.html",[0,0.047,1,0.525,2,0.775,3,0.154,4,0.132,5,0.602,6,0.643,7,0.602,8,0.602,9,0.132,13,0.686,14,0.026,15,0.968,16,1.23,17,0.887,18,1.163,19,0.602,20,1.574,21,1.574,22,0.602,23,2.584,24,0.887,26,0.948,28,0.887,30,0.132,31,0.533,32,3.256,33,2.374,34,2.793,35,0.582,36,0.817,37,2.793,38,0.946,39,0.76,42,0.544,44,0.409,45,0.313,46,1.595,48,0.83,49,1.464,50,0.946,51,0.228,52,0.304,54,1.202,56,0.602,57,0.887,58,0.602,59,1.163,60,0.602,61,0.389,62,0.602,63,0.525,64,0.88,65,0.887,66,1.163,67,0.563,68,0.972,69,1.163,70,0.525,71,0.602,72,0.525,73,0.602,74,0.887,75,0.525,76,1.213,77,0.602,78,0.563,79,0.525,80,0.602,81,0.525,82,0.602,83,0.563,84,1.305,85,0.563,86,0.577,87,0.525,88,0.525,89,0.423,90,0.602,91,0.525,92,0.525,93,0.602,94,0.602,95,0.525,96,0.602,97,0.525,98,0.602,99,0.602,100,0.525,101,0.525,102,0.602,103,0.525,104,0.563,105,0.602,106,0.525,107,0.602,108,0.525,109,0.563,110,0.563,111,0.602,112,0.014,113,0.014,116,1.595,117,1.848,118,2.793,119,3.414,120,2.195,121,3.069,122,3.069,123,3.414,124,3.414,125,3.414,126,3.069,127,3.069,128,2.584,129,3.069,131,1.203,132,3.414,134,0.623,136,2.874,137,2.874,138,3.768,139,2.351,140,3.414,141,2.367,145,0.722,146,0.722,148,0.912,149,1.481,150,2.874,151,3.778,153,2.874,154,3.768,156,3.768,157,1.402,166,2.874,172,1.95,174,1.95,177,1.95,179,1.254,180,2.584,181,1.166,182,1.464,184,1.498,185,1.081,187,1.95,188,1.23,189,1.753,190,1.95,191,1.95,192,1.95,193,1.352,194,1.016,195,2.042,196,0.891,197,1.95,198,1.95,199,2.874,200,3.414,201,1.95,202,1.753,203,1.753,204,1.95,267,0.741,330,2.584,600,1.595,603,4.554,678,2.874,679,5.171,680,4.578,681,2.615,682,2.615,683,2.615,684,2.615,685,2.615,686,3.854,687,2.615,688,2.615,689,2.615,690,2.615,691,2.615]],["title/injectables/EndpointRepositoryService.html",[207,0.836,581,2.277]],["body/injectables/EndpointRepositoryService.html",[3,0.237,4,0.202,9,0.202,14,0.026,30,0.202,38,1.076,39,0.833,42,0.524,44,0.425,45,0.331,51,0.237,52,0.467,61,0.504,68,1.044,112,0.019,113,0.019,134,0.839,145,1.228,146,1.228,148,1.042,185,1.806,207,1.276,209,1.789,218,0.987,230,3.304,236,1.459,237,1.923,238,1.789,267,1.166,275,2.069,343,2.689,346,2.991,349,2.991,350,2.991,354,2.991,355,1.923,575,3.867,581,3.476,600,2.447,608,3.867,617,3.867,692,5.625,693,4.39,694,4.39,695,4.39,696,4.011,697,4.394,698,3.396,699,4.39,700,4.75,701,4.318,702,4.39,703,6.97,704,3.396,705,4.39,706,4.39,707,4.39,708,3.396,709,5.185,710,3.396,711,4.011,712,4.011,713,4.011,714,4.011,715,4.011,716,4.011,717,4.011]],["title/injectables/EndpointService.html",[207,0.836,697,2.277]],["body/injectables/EndpointService.html",[3,0.211,4,0.18,9,0.18,14,0.026,15,0.578,23,2.395,30,0.18,31,0.664,35,0.454,36,0.578,38,1.017,39,0.834,42,0.559,44,0.379,45,0.327,48,0.769,51,0.211,52,0.416,61,0.499,68,0.993,89,0.777,112,0.017,113,0.017,131,1.724,134,0.777,145,1.214,146,1.214,148,1.031,185,1.787,194,1.389,207,1.182,209,1.594,212,2.18,214,3.638,218,1.182,230,3.284,236,1.299,237,1.713,238,1.594,267,1.16,275,1.849,285,2.931,288,2.664,289,4.328,290,3.638,291,3.001,292,2.258,293,2.256,295,3.22,304,2.931,308,3.22,309,4.047,315,3.582,316,2.18,317,2.395,318,2.395,319,2.395,320,1.594,321,1.14,323,2.395,324,4.651,326,4.651,327,4.651,330,2.395,333,2.664,335,2,336,2.395,337,2.395,338,1.389,339,1.594,340,2.395,575,4.048,600,2.18,608,4.048,617,4.048,678,2.664,693,4.596,694,4.596,695,4.596,697,3.22,699,3.025,700,4.643,701,4.446,702,3.025,705,3.025,706,3.025,707,3.025,718,5.616,719,4.804,720,6.479,721,3.573,722,6.564,723,3.573,724,3.573,725,3.573,726,3.573,727,3.573,728,3.573,729,3.573,730,4.804,731,5.428,732,3.573]],["title/interfaces/Entity.html",[86,0.509,363,1.157]],["body/interfaces/Entity.html",[0,0.046,3,0.268,4,0.229,9,0.229,13,0.679,14,0.026,30,0.229,31,0.774,35,0.773,36,0.733,38,1.222,42,0.391,45,0.346,50,0.849,51,0.268,54,0.911,61,0.512,68,1.009,86,0.839,112,0.02,113,0.02,267,1.055,275,2.264,363,1.544,364,2.344,367,2.529,733,3.838,734,6.647,735,4.957]],["title/components/EntityDialogComponent.html",[0,0.035,87,0.683]],["body/components/EntityDialogComponent.html",[0,0.039,1,0.393,2,0.62,3,0.115,4,0.099,5,0.45,6,0.481,7,0.45,8,0.45,9,0.099,13,0.817,14,0.026,15,0.908,16,0.985,17,0.711,18,1,19,0.45,20,1.521,21,1.521,22,0.45,24,0.711,26,0.759,28,0.711,30,0.099,31,0.427,32,3.234,33,2.183,34,2.333,35,0.601,36,0.851,37,2.333,38,0.986,39,0.802,42,0.515,44,0.327,45,0.325,46,1.193,48,0.664,49,1.095,50,0.942,51,0.182,52,0.227,54,1.257,56,0.45,57,0.711,58,0.45,59,1,60,0.45,61,0.432,62,0.45,63,0.393,64,0.757,65,1,66,1,67,0.421,68,0.573,69,1,70,0.393,71,0.45,72,0.393,73,0.45,74,0.711,75,0.393,76,1.082,77,0.45,78,0.421,79,0.393,80,0.45,81,0.393,82,0.45,83,0.421,84,0.393,85,0.421,86,0.906,87,1.309,88,0.393,89,0.619,90,0.45,91,0.393,92,0.393,93,0.45,94,0.45,95,0.393,96,0.45,97,0.393,98,0.45,99,0.45,100,0.393,101,0.393,102,0.45,103,0.393,104,0.421,105,0.45,106,0.393,107,0.45,108,0.393,109,0.421,110,0.421,111,0.45,112,0.011,113,0.011,116,1.193,117,1.48,118,2.333,119,2.852,120,1.834,121,2.564,122,2.564,123,2.852,124,2.852,125,2.852,126,2.564,127,2.564,128,2.069,129,2.564,131,1.59,132,2.852,133,3.238,134,0.499,135,2.613,136,2.302,137,2.302,139,1.883,140,2.852,141,1.977,142,2.613,143,5.188,145,0.986,146,0.986,147,2.613,148,0.965,149,1.59,150,2.302,151,3.998,153,2.302,154,3.239,156,3.239,157,1.123,162,3.238,163,2.613,164,3.678,166,2.302,170,2.613,172,1.458,174,1.458,177,1.458,178,1.655,179,0.937,180,2.069,181,0.872,182,1.728,184,2.046,185,1.476,186,1.655,187,1.458,188,1.604,189,1.31,190,1.458,191,1.458,192,1.458,193,1.011,194,1.2,195,1.706,196,0.666,197,1.458,198,1.458,199,2.302,200,2.852,201,1.458,202,1.31,203,1.31,204,1.458,205,1.655,247,1.655,267,0.93,292,1.591,293,1.2,335,2.142,338,0.76,339,0.872,367,0.813,392,2.302,399,2.302,425,1.728,426,1.728,451,1.011,455,1.095,476,1.31,486,1.095,500,0.666,520,1.095,601,1.193,647,2.302,656,4.742,735,2.852,736,5.384,737,3.825,738,3.825,739,3.825,740,3.086,741,4.344,742,3.086,743,3.086,744,3.086,745,1.955,746,1.955,747,3.678,748,3.086,749,4.344,750,4.729,751,3.086,752,3.086,753,1.955,754,1.955,755,1.955,756,1.955,757,3.086,758,1.955,759,3.086,760,1.955,761,1.655,762,1.955,763,1.955,764,1.955,765,1.955,766,1.955,767,1.955,768,1.955,769,1.955,770,4.068,771,1.955,772,1.955,773,1.955,774,3.825,775,1.955,776,1.955,777,1.955,778,1.955,779,4.344,780,1.955,781,2.613,782,1.955,783,1.955,784,1.955,785,1.655,786,1.955,787,1.955]],["title/injectables/EntityRepositoryService.html",[207,0.836,633,2.277]],["body/injectables/EntityRepositoryService.html",[3,0.247,4,0.211,9,0.211,14,0.026,30,0.211,38,1.098,39,0.841,42,0.533,44,0.444,45,0.334,51,0.247,52,0.487,61,0.51,86,1.045,112,0.019,113,0.019,134,0.862,145,1.24,146,1.24,148,1.054,185,1.827,207,1.312,209,1.868,218,1.03,230,3.323,236,1.523,237,2.008,238,1.868,267,1.157,275,2.102,304,2.555,343,2.807,346,3.123,349,3.123,350,3.123,354,3.123,355,2.008,601,2.555,633,3.573,698,3.546,700,4.694,701,4.273,704,3.546,708,3.546,710,3.546,788,5.675,789,4.513,790,4.513,791,4.513,792,4.513,793,4.513,794,4.513,795,4.188,796,4.368,797,4.513,798,4.513,799,4.513,800,4.513,801,4.513,802,4.513,803,4.188,804,4.188,805,4.188,806,4.188,807,4.188,808,4.188,809,4.188]],["title/injectables/EntityService.html",[207,0.836,796,2.277]],["body/injectables/EntityService.html",[3,0.214,4,0.183,9,0.183,14,0.026,15,0.587,30,0.183,31,0.671,35,0.461,36,0.587,38,1.025,39,0.845,42,0.574,44,0.385,45,0.328,48,0.781,51,0.214,52,0.422,61,0.5,86,1.028,89,0.785,112,0.017,113,0.017,131,1.73,134,0.785,145,1.218,146,1.218,148,1.052,176,1.236,183,1.619,185,1.823,194,1.41,207,1.194,209,1.619,212,2.214,214,3.667,218,1.194,230,3.316,236,1.32,237,1.74,238,1.619,267,1.147,275,1.863,285,2.961,288,2.706,289,4.356,290,3.667,291,3.02,292,2.276,293,2.271,295,3.254,300,1.74,304,2.961,308,3.254,309,4.093,315,3.62,316,2.214,317,2.432,318,2.432,319,2.432,320,1.619,321,1.158,322,2.214,323,2.432,324,4.771,326,4.771,327,4.771,330,2.432,333,2.706,335,2.032,336,2.432,337,2.432,338,1.41,339,1.619,340,2.432,601,2.214,700,4.529,701,4.289,789,4.11,790,4.632,791,4.11,792,4.11,793,4.632,794,4.632,796,3.254,797,4.11,798,3.072,799,4.11,800,4.11,801,3.072,802,3.072,810,5.68,811,5.841,812,4.854,813,3.628,814,3.628,815,3.628,816,3.628,817,3.628,818,3.628,819,3.628,820,3.628,821,3.628,822,3.628,823,3.628,824,3.628,825,3.628,826,3.628,827,3.628]],["title/interfaces/EntityShort.html",[363,1.157,828,2.277]],["body/interfaces/EntityShort.html",[3,0.291,4,0.249,9,0.249,13,0.738,14,0.026,30,0.249,31,0.815,35,0.749,36,0.797,38,1.224,45,0.342,51,0.291,61,0.503,112,0.021,113,0.021,267,1.118,275,2.226,363,1.679,364,2.548,367,2.452,735,4.873,828,3.951,829,4.173]],["title/components/ErrorDisplayComponent.html",[0,0.035,88,0.683]],["body/components/ErrorDisplayComponent.html",[0,0.047,1,0.534,2,0.784,3,0.157,4,0.134,5,0.612,6,0.654,7,0.612,8,0.612,9,0.134,13,0.584,14,0.026,15,0.43,17,0.898,18,1.305,19,0.612,20,1.577,21,1.577,22,0.612,24,0.898,26,0.96,28,0.898,30,0.134,31,0.539,39,0.689,42,0.44,44,0.282,45,0.274,48,0.572,50,0.498,51,0.23,52,0.309,54,1.023,56,0.612,57,0.898,58,0.612,59,1.173,60,0.612,61,0.356,62,0.612,63,0.534,64,0.887,65,0.898,66,1.173,67,0.572,68,0.692,69,1.173,70,0.534,71,0.612,72,0.534,73,1.064,74,0.898,75,0.534,76,1.22,77,0.612,78,0.572,79,0.534,80,0.612,81,0.534,82,0.612,83,0.572,84,0.534,85,0.572,86,0.584,87,0.534,88,1.253,89,1.008,90,0.612,91,0.534,92,0.534,93,0.612,94,0.612,95,0.534,96,0.612,97,0.534,98,0.612,99,0.612,100,0.534,101,0.534,102,0.612,103,0.534,104,0.572,105,0.612,106,0.534,107,0.612,108,0.534,109,0.572,110,0.572,111,0.612,112,0.014,113,0.014,120,2.216,131,0.698,134,0.631,145,0.498,146,0.498,148,0.631,149,1.338,157,1.419,188,1.245,218,0.654,267,0.917,320,2.736,321,0.848,355,1.274,382,1.374,385,4.312,400,2.438,401,2.424,402,2.216,403,2.551,405,2.017,408,2.529,409,2.119,411,1.106,412,1.106,413,2.272,414,1.488,415,1.488,416,1.106,417,1.74,418,1.923,419,2.017,420,1.374,499,1.781,500,1.931,501,1.621,502,2.39,503,2.062,504,1.781,505,1.488,506,3.413,507,1.781,508,2.38,509,1.781,510,2.615,511,2.216,512,1.781,513,3.635,514,3.029,515,1.621,516,1.781,517,1.781,518,1.781,519,1.781,520,1.488,521,1.781,522,2.184,523,1.781,524,2.39,525,1.621,526,2.615,527,2.82,528,1.621,529,1.488,530,3.309,534,3.413,535,2.38,536,1.781,537,1.781,538,1.781,539,1.781,540,1.781,541,1.781,542,1.781,543,2.419,544,2.718,545,1.87,546,1.621,547,2.216,548,2.062,549,2.441,550,2.017,551,2.017,552,1.374,553,1.374,554,2.38,558,1.621,559,1.488,560,1.488,561,1.781,562,1.488,564,1.374,677,3.913,830,4.8,831,4.8,832,2.25,833,2.909,834,3.913,835,4.622,836,3.901,837,4.592,838,3.635,839,4.312,840,2.658,841,5.424,842,3.901,843,2.658,844,2.658,845,2.658,846,2.658,847,2.658,848,2.658,849,2.25,850,2.658,851,2.658,852,2.658,853,3.901,854,2.25,855,1.781,856,1.982,857,2.25,858,3.303,859,2.658,860,2.658,861,1.982,862,3.303,863,1.982,864,1.982,865,1.781,866,2.25,867,2.658,868,2.25,869,2.658,870,2.658,871,2.615,872,2.658,873,2.658,874,2.25]],["title/injectables/ErrorHandlerService.html",[207,0.836,291,1.756]],["body/injectables/ErrorHandlerService.html",[3,0.253,4,0.216,9,0.216,14,0.026,15,0.692,30,0.216,35,0.544,39,0.687,42,0.537,44,0.454,45,0.273,48,0.921,51,0.253,52,0.498,61,0.416,89,0.692,109,0.921,112,0.019,113,0.019,131,1.124,134,0.874,145,1.012,146,1.012,148,0.692,149,1.42,185,1.199,207,1.329,209,1.908,218,1.053,237,2.051,238,1.908,285,3.296,291,2.793,293,2.418,308,3.622,309,3.795,316,2.61,320,2.922,321,1.365,355,2.051,489,3.622,528,4.059,647,3.19,837,5.267,838,4.615,849,3.622,875,5.014,876,3.622,877,4.278,878,5.922,879,4.278,880,4.278,881,5.633,882,4.278,883,4.278,884,4.278,885,3.622,886,4.278,887,3.622,888,4.278,889,4.278,890,4.278,891,4.278,892,4.278,893,4.278,894,4.278,895,3.622]],["title/components/ExportApiButtonComponent.html",[0,0.035,91,0.683]],["body/components/ExportApiButtonComponent.html",[0,0.052,1,0.642,2,0.894,3,0.189,4,0.161,5,0.736,6,0.786,7,0.736,8,0.736,9,0.161,13,0.667,14,0.026,15,0.828,16,1.421,17,1.025,18,1.275,19,0.736,20,1.605,21,1.605,22,0.736,24,1.025,26,1.095,28,1.025,30,0.161,39,0.651,42,0.521,44,0.339,45,0.279,48,0.688,50,0.834,51,0.378,52,0.372,54,1.029,56,0.736,57,1.025,58,0.736,59,1.275,60,0.736,61,0.426,62,0.736,63,0.642,64,1.229,65,1.025,66,1.275,67,0.688,68,0.767,69,1.275,70,0.642,71,0.736,72,0.642,73,0.736,74,1.025,75,0.642,76,1.298,77,0.736,78,0.688,79,0.642,80,0.736,81,0.642,82,0.736,83,0.688,84,0.642,85,0.688,86,0.667,87,0.642,88,0.642,89,0.828,90,0.736,91,1.318,92,0.642,93,0.736,94,0.736,95,0.642,96,0.736,97,0.642,98,0.736,99,0.736,100,0.642,101,0.642,102,0.736,103,0.642,104,0.688,105,0.736,106,0.642,107,0.736,108,0.642,109,0.688,110,0.688,111,0.736,112,0.016,113,0.016,120,2.456,134,0.72,141,2.301,145,0.599,146,0.599,148,0.517,149,1.169,176,1.887,183,1.426,188,1.02,195,2.598,196,1.516,218,0.786,223,1.089,298,1.79,300,2.134,322,1.95,335,1.79,341,3.102,355,1.532,380,2.383,382,2.648,383,3.769,384,3.769,389,3.319,400,2.131,401,2.153,402,1.532,403,1.852,404,1.79,405,1.652,408,1.986,409,1.33,411,1.33,412,1.33,413,1.426,414,1.79,415,1.79,416,1.33,417,1.426,418,1.33,419,2.301,420,1.652,433,1.986,434,3.82,437,2.706,441,4.337,462,2.383,463,1.95,464,4.131,468,3.319,475,1.79,502,1.652,520,1.79,522,1.79,554,2.716,555,1.95,556,2.142,557,2.383,558,1.95,559,1.79,560,1.79,561,2.142,770,4.131,896,4.69,897,3.196,898,5.539,899,4.451,900,3.196,901,3.196,902,3.196,903,3.196,904,3.196,905,3.196,906,3.196,907,3.196,908,3.196,909,3.196,910,3.196,911,3.196,912,3.196,913,3.196,914,3.196,915,3.196]],["title/interfaces/FileStatus.html",[363,1.157,916,2.277]],["body/interfaces/FileStatus.html",[0,0.046,3,0.267,4,0.228,9,0.34,13,0.677,14,0.026,15,0.731,30,0.228,31,0.773,35,0.574,42,0.39,45,0.343,50,0.846,51,0.267,54,0.908,89,1.055,112,0.02,113,0.02,181,2.015,267,1.055,363,1.539,364,2.336,488,3.977,529,3.719,625,4.37,838,4.452,916,3.747,917,3.826,918,5.624,919,6.642]],["title/components/FilterByInputComponent.html",[0,0.035,92,0.683]],["body/components/FilterByInputComponent.html",[0,0.048,1,0.56,2,0.812,3,0.165,4,0.141,5,0.642,6,0.686,7,0.642,8,0.642,9,0.141,13,0.605,14,0.026,15,0.842,16,1.289,17,0.93,18,1.199,19,0.642,20,1.585,21,1.585,22,0.642,24,0.93,26,0.994,28,0.93,30,0.141,31,0.558,35,0.756,36,0.894,39,0.774,42,0.477,44,0.295,45,0.322,50,0.89,51,0.238,52,0.324,54,1.224,56,0.642,57,0.93,58,0.642,59,1.199,60,0.642,61,0.366,62,0.642,63,0.56,64,0.908,65,0.93,66,1.199,67,0.6,68,0.711,69,1.199,70,0.56,71,0.642,72,0.56,73,0.642,74,0.93,75,0.56,76,1.241,77,0.642,78,0.6,79,0.56,80,0.642,81,0.56,82,0.642,83,0.6,84,0.56,85,0.6,86,0.605,87,0.56,88,0.56,89,0.451,90,0.642,91,0.56,92,1.337,93,1.402,94,0.642,95,0.56,96,0.642,97,0.56,98,0.642,99,0.642,100,0.56,101,0.56,102,0.642,103,0.56,104,0.6,105,0.642,106,0.56,107,0.642,108,0.56,109,0.6,110,0.6,111,0.642,112,0.015,113,0.015,121,3.184,122,3.184,134,0.653,139,2.464,145,0.522,146,0.522,148,0.768,149,1.061,151,2.707,168,2.464,179,1.336,181,1.243,182,1.561,184,1.57,185,1.132,188,0.89,189,1.868,195,2.323,196,2.025,202,3.184,203,3.184,218,1.169,223,1.883,267,1.054,425,2.261,426,2.261,433,1.801,435,1.936,443,2.497,451,2.858,455,1.561,456,1.936,503,1.801,548,2.119,747,4.022,781,2.36,865,1.868,920,5.255,921,5.255,922,2.36,923,4.039,924,3.542,925,4.75,926,4.039,927,4.75,928,4.039,929,4.75,930,5.528,931,4.75,932,2.787,933,5.764,934,2.787,935,2.787,936,2.787,937,2.787,938,4.039,939,2.787,940,5.208,941,4.039,942,3.542,943,4.039,944,4.75,945,2.787,946,2.787,947,2.787,948,2.787,949,3.419,950,2.787,951,2.787,952,4.039,953,2.787,954,2.787,955,2.787,956,2.787,957,2.787,958,2.787,959,2.787,960,2.787,961,2.787,962,2.787,963,2.787,964,2.36,965,2.078]],["title/components/HeaderComponent.html",[0,0.035,95,0.683]],["body/components/HeaderComponent.html",[0,0.048,1,0.544,2,0.795,3,0.16,4,0.137,5,0.623,6,0.666,7,0.623,8,0.623,9,0.137,13,0.405,14,0.026,15,0.756,16,1.262,17,0.911,18,1.183,19,0.623,20,1.58,21,1.58,22,0.623,24,0.911,25,2.415,26,1.15,28,0.911,30,0.137,31,0.547,33,1.816,35,0.749,36,0.831,38,0.875,39,0.749,42,0.548,43,1.126,44,0.287,45,0.311,48,0.583,50,0.875,51,0.233,52,0.315,54,1.184,56,0.623,57,0.911,58,0.623,59,1.183,60,0.623,61,0.304,62,0.623,63,0.544,64,0.994,65,0.911,66,1.183,67,0.583,68,0.7,69,1.183,70,0.544,71,0.623,72,1.032,73,0.911,74,0.911,75,0.544,76,1.228,77,0.623,78,0.583,79,0.544,80,0.623,81,0.544,82,0.623,83,0.583,84,0.544,85,0.583,86,0.592,87,0.544,88,0.544,89,0.438,90,0.623,91,0.544,92,0.544,93,0.623,94,0.623,95,1.302,96,0.623,97,0.544,98,0.623,99,0.623,100,0.795,101,0.544,102,0.623,103,0.544,104,0.583,105,0.623,106,0.544,107,0.623,108,0.544,109,0.583,110,0.583,111,0.623,112,0.014,113,0.014,117,2.24,131,1.227,134,0.64,148,0.64,149,1.35,157,1.438,184,1.997,193,2.045,196,1.75,223,0.922,267,0.923,367,1.944,373,1.652,379,2.019,382,1.4,389,2.949,400,2.137,401,1.997,402,1.298,403,1.645,404,2.214,405,1.4,406,3.348,407,2.293,408,1.208,409,1.126,410,2.293,411,1.126,412,1.126,413,1.764,414,1.516,415,1.516,416,1.126,417,1.208,418,1.126,419,1.4,420,1.4,421,2.293,433,1.764,435,1.896,443,2.62,451,2.045,456,1.896,457,3.444,459,1.815,465,2.293,500,1.591,502,1.4,503,2.084,508,1.652,511,2.463,522,2.214,524,1.4,527,2.413,530,2.413,543,1.764,544,2.24,545,1.896,547,1.896,548,1.764,549,2.24,558,1.652,861,2.019,862,2.293,863,2.019,864,2.019,865,1.815,966,2.293,967,6.346,968,4.672,969,3.955,970,5.138,971,5.465,972,4.672,973,4.672,974,5.465,975,2.708,976,2.708,977,4.672,978,2.708,979,2.708,980,2.708,981,2.708,982,3.955,983,3.955,984,2.708,985,2.019,986,2.708,987,2.708,988,3.955,989,3.955,990,2.708,991,3.955,992,2.708,993,3.348,994,2.708,995,2.708,996,2.708,997,2.708,998,3.955,999,3.348]],["title/interceptors/HttpErrorInterceptor.html",[1000,2.876,1001,2.277]],["body/interceptors/HttpErrorInterceptor.html",[3,0.227,4,0.194,9,0.194,13,0.842,14,0.026,15,0.621,30,0.194,39,0.64,42,0.56,44,0.407,45,0.254,48,0.826,50,0.719,51,0.227,52,0.447,54,0.771,61,0.388,112,0.018,113,0.018,131,1.008,134,0.815,145,0.944,146,0.944,148,0.815,185,1.413,188,1.906,194,1.492,207,1.24,218,0.944,230,2.863,236,1.396,290,3.77,291,3.354,292,2.485,293,2.522,295,4.568,309,3.074,316,2.342,317,2.573,318,2.573,319,2.573,320,1.712,321,1.225,323,2.573,336,2.573,337,2.573,338,1.492,339,1.712,340,2.573,355,1.84,475,3.344,833,2.862,1001,4.157,1002,3.838,1003,4.762,1004,3.25,1005,5.038,1006,3.838,1007,3.838,1008,5.038,1009,6.202,1010,6.202,1011,3.838,1012,5.038,1013,3.838,1014,5.038,1015,3.838,1016,3.838,1017,3.838]],["title/components/IconTrashComponent.html",[0,0.035,97,0.683]],["body/components/IconTrashComponent.html",[0,0.049,1,0.824,2,0.824,3,0.168,4,0.144,5,0.655,6,0.7,7,0.655,8,0.655,9,0.144,11,2.122,13,0.614,14,0.026,15,0.851,16,1.309,17,0.944,18,1.211,19,0.655,20,1.588,21,1.588,22,0.944,24,0.655,26,1.009,28,0.944,30,0.144,32,2.485,39,0.76,42,0.547,44,0.302,45,0.324,48,0.613,49,1.593,50,0.768,51,0.242,52,0.331,54,1.202,55,1.593,56,0.655,57,0.944,58,0.655,59,1.211,60,0.655,61,0.37,62,0.655,63,0.572,64,1.012,65,0.944,66,1.211,67,0.613,68,0.896,69,1.211,70,0.572,71,0.655,72,0.572,73,0.655,74,0.944,75,0.572,76,1.25,77,0.655,78,0.613,79,0.572,80,0.655,81,0.572,82,0.655,83,0.613,84,0.572,85,0.613,86,0.614,87,0.572,88,0.572,89,0.46,90,0.655,91,0.572,92,0.572,93,0.655,94,0.655,95,0.572,96,0.655,97,1.333,98,1.41,99,0.655,100,0.572,101,0.572,102,0.655,103,0.572,104,0.613,105,0.655,106,0.572,107,0.655,108,0.572,109,0.613,110,0.613,111,0.655,112,0.015,113,0.015,131,1.077,134,0.663,145,0.533,146,0.533,148,0.46,149,1.077,176,1.791,183,1.269,185,1.15,188,1.309,195,1.269,196,1.899,218,1.009,223,0.969,236,1.035,292,1.999,293,2.257,320,2.732,321,0.908,338,1.106,339,1.269,401,1.868,408,1.269,411,1.184,412,1.184,413,1.269,416,1.184,417,1.269,418,1.184,433,1.829,434,3.584,435,1.966,443,2.521,451,2.485,456,1.966,460,3.736,469,2.748,472,1.471,486,1.593,500,0.969,514,1.471,515,1.736,551,1.471,562,1.593,563,1.736,564,1.471,565,1.736,566,1.908,567,1.908,577,4.069,578,3.584,600,1.736,785,2.41,828,3.525,1018,5.185,1019,2.41,1020,4.1,1021,2.846,1022,4.1,1023,5.259,1024,4.806,1025,4.806,1026,2.846,1027,4.1,1028,2.846,1029,2.846,1030,2.846,1031,2.846,1032,2.846,1033,2.846,1034,2.846,1035,2.846,1036,2.846,1037,2.846,1038,4.1,1039,2.846,1040,2.846,1041,2.846,1042,2.846,1043,2.846,1044,2.846,1045,4.806,1046,4.1,1047,2.846,1048,2.846]],["title/components/ImportDialogComponent.html",[0,0.035,100,0.683]],["body/components/ImportDialogComponent.html",[0,0.037,1,0.365,2,0.586,3,0.107,4,0.092,5,0.419,6,0.447,7,0.419,8,0.419,9,0.321,13,0.821,14,0.026,15,0.788,16,0.93,17,0.671,18,0.96,19,0.419,20,1.505,21,1.505,22,0.419,24,0.671,26,0.897,28,0.671,30,0.092,31,0.403,32,3.365,33,1.989,34,2.225,35,0.65,36,0.738,37,2.225,38,0.341,39,0.756,42,0.542,43,0.757,44,0.193,45,0.304,48,0.627,49,1.018,50,0.546,51,0.172,52,0.212,54,1.195,55,2.042,56,0.419,57,0.671,58,0.419,59,0.96,60,0.419,61,0.45,62,0.419,63,0.365,64,1.02,65,0.671,66,0.96,67,0.391,68,0.546,69,0.96,70,0.365,71,0.419,72,0.365,73,0.419,74,0.671,75,0.365,76,1.048,77,0.419,78,0.391,79,0.365,80,0.419,81,0.365,82,0.419,83,0.391,84,0.365,85,0.391,86,0.436,87,0.365,88,0.365,89,0.986,90,0.419,91,0.365,92,0.365,93,0.419,94,0.419,95,0.365,96,0.419,97,0.365,98,0.419,99,0.419,100,1.287,101,0.365,102,0.419,103,0.365,104,0.391,105,0.419,106,0.365,107,0.419,108,0.365,109,0.785,110,0.391,111,0.419,112,0.01,113,0.01,116,1.11,117,1.397,120,1.748,127,2.444,128,1.954,131,1.648,134,0.471,138,3.11,145,0.958,146,0.958,148,0.887,149,1.478,157,1.06,179,0.872,180,1.954,181,0.811,185,1.538,188,1.834,194,0.707,195,2.564,218,0.717,223,1.242,267,0.828,275,0.619,278,2.335,292,1.735,293,1.621,298,1.018,300,2.453,322,1.11,338,0.707,341,2.335,366,1.54,367,1.735,373,1.11,392,1.356,399,1.356,401,0.707,418,0.757,419,0.94,425,1.632,426,1.632,438,2.444,439,2.796,455,1.018,462,1.356,463,1.11,472,1.507,475,1.018,476,1.219,485,3.059,486,1.018,488,2.785,491,1.11,500,1.659,505,1.018,514,1.507,529,3.218,543,0.811,544,1.397,545,0.872,547,0.872,548,0.811,549,1.397,550,0.94,551,0.94,552,0.94,553,0.94,555,1.11,625,3.852,632,1.54,761,1.54,770,4.286,838,1.219,855,1.219,856,1.356,881,4.502,916,4.088,918,4.124,924,2.719,942,3.11,949,3.088,985,4.494,1049,5.102,1050,3.647,1051,3.647,1052,3.647,1053,3.647,1054,3.647,1055,4.124,1056,3.647,1057,3.647,1058,2.914,1059,2.914,1060,2.914,1061,2.914,1062,2.914,1063,2.914,1064,2.914,1065,2.914,1066,1.819,1067,4.171,1068,1.819,1069,2.914,1070,4.171,1071,1.819,1072,2.914,1073,2.914,1074,1.819,1075,3.647,1076,1.819,1077,2.914,1078,1.819,1079,1.819,1080,1.819,1081,1.819,1082,1.819,1083,1.819,1084,1.819,1085,1.819,1086,1.819,1087,1.819,1088,1.819,1089,4.171,1090,3.647,1091,3.647,1092,1.819,1093,4.564,1094,4.871,1095,4.871,1096,4.564,1097,1.819,1098,1.819,1099,1.819,1100,1.819,1101,1.819,1102,1.819,1103,1.819,1104,1.819,1105,1.819,1106,2.914,1107,1.819,1108,1.819,1109,3.647,1110,1.819,1111,4.871,1112,1.819,1113,1.819,1114,1.819,1115,1.819,1116,1.819,1117,1.819,1118,1.819,1119,1.819,1120,1.819,1121,2.914,1122,4.171,1123,1.819,1124,1.819,1125,1.819,1126,1.819,1127,1.819,1128,1.819,1129,1.819,1130,1.819,1131,1.819,1132,1.819,1133,1.819,1134,1.819,1135,1.819,1136,1.819]],["title/components/LoadingComponent.html",[0,0.035,101,0.683]],["body/components/LoadingComponent.html",[0,0.054,1,0.697,2,0.946,3,0.205,4,0.175,5,0.799,6,0.854,7,0.799,8,0.799,9,0.175,13,0.519,14,0.026,17,1.084,18,1.32,19,0.799,20,1.616,21,1.616,22,0.799,24,0.799,26,1.316,28,1.084,30,0.175,31,0.651,35,0.599,36,0.561,39,0.441,42,0.407,44,0.368,45,0.238,50,0.65,51,0.278,52,0.404,54,0.697,56,0.799,57,1.084,58,0.799,59,1.32,60,0.799,61,0.362,62,0.799,63,0.697,64,0.999,65,1.084,66,1.32,67,0.747,68,0.801,69,1.32,70,0.697,71,0.799,72,0.697,73,0.799,74,1.084,75,0.697,76,1.331,77,0.799,78,0.747,79,0.697,80,0.799,81,0.697,82,0.799,83,0.747,84,0.697,85,0.747,86,0.705,87,0.697,88,0.697,89,0.561,90,0.799,91,0.697,92,0.697,93,0.799,94,0.799,95,0.697,96,0.799,97,0.697,98,0.799,99,0.799,100,0.697,101,1.271,102,0.799,103,0.697,104,0.747,105,0.799,106,0.697,107,0.799,108,0.697,109,0.747,110,0.747,111,0.799,112,0.017,113,0.017,157,1.713,267,0.865,373,2.116,400,1.443,403,2.573,409,1.443,500,1.604,502,2.764,503,2.101,511,2.563,524,2.965,525,2.873,535,3.262,543,1.547,544,1.663,545,1.663,547,1.663,548,1.547,549,2.258,550,2.764,552,2.435,553,1.793,559,1.942,560,1.942,564,2.435,565,2.116,625,3.584,855,2.325,857,2.937,858,4.527,871,3.157,965,2.587,1137,2.937,1138,5.347,1139,4.709,1140,5.347,1141,5.347,1142,3.469,1143,3.469,1144,3.469,1145,3.469,1146,3.469,1147,2.937,1148,3.469,1149,4.709,1150,4.709,1151,2.937,1152,4.709,1153,4.709,1154,3.469,1155,3.469,1156,3.469,1157,3.469,1158,4.709,1159,3.469,1160,3.469,1161,3.469,1162,2.937,1163,2.587,1164,3.469]],["title/components/PageNotFoundComponent.html",[0,0.035,103,0.683]],["body/components/PageNotFoundComponent.html",[0,0.054,1,0.677,2,0.928,3,0.199,4,0.17,5,0.776,6,0.829,7,0.776,8,0.776,9,0.17,13,0.505,14,0.026,15,0.545,17,1.063,18,1.445,19,0.776,20,1.612,21,1.612,22,0.776,24,1.063,25,2.724,26,1.136,28,1.063,42,0.512,43,1.402,44,0.357,48,0.726,50,0.631,51,0.273,52,0.392,56,0.776,57,1.063,58,0.776,59,1.305,60,0.776,61,0.355,62,0.776,63,0.677,64,0.987,65,1.063,66,1.305,67,0.726,68,0.789,69,1.305,70,0.677,71,0.776,72,0.677,73,0.776,74,1.063,75,0.677,76,1.32,77,0.776,78,0.726,79,0.677,80,0.776,81,0.677,82,0.776,83,0.726,84,0.677,85,0.726,86,0.692,87,0.677,88,0.677,89,0.545,90,0.776,91,0.677,92,0.677,93,0.776,94,0.776,95,0.677,96,0.776,97,0.677,98,0.776,99,0.776,100,0.677,101,0.677,102,0.776,103,1.232,104,1.376,105,0.776,106,0.677,107,0.776,108,0.677,109,0.726,110,0.726,111,0.776,112,0.017,113,0.017,120,2.526,157,1.68,321,1.076,371,3.214,382,1.743,400,2.358,401,2.383,403,2.358,404,1.888,405,2.388,408,2.35,409,2.192,411,1.402,412,1.402,413,2.06,416,1.402,417,2.06,418,1.921,420,1.743,500,2.209,503,2.35,505,1.888,511,2.214,514,1.743,524,2.388,543,2.06,544,2.526,545,2.214,547,2.526,548,2.06,549,2.846,556,2.26,562,3.324,854,2.854,855,2.26,856,2.514,861,3.444,863,3.444,864,2.514,865,2.26,866,2.854,868,2.854,871,3.096,874,2.854,885,4.798,887,3.91,964,3.91,993,2.854,1151,3.91,1163,3.444,1165,2.854,1166,2.854,1167,2.854,1168,5.268,1169,4.618,1170,3.371,1171,3.371,1172,3.371,1173,3.91,1174,3.371,1175,3.371,1176,3.371,1177,3.371,1178,3.371,1179,3.371,1180,3.371,1181,3.371]],["title/components/PaginationComponent.html",[0,0.035,106,0.683]],["body/components/PaginationComponent.html",[0,0.051,1,0.623,2,0.876,3,0.183,4,0.156,5,0.714,6,0.763,7,0.714,8,0.714,9,0.156,13,0.653,14,0.026,15,0.884,16,1.391,17,1.326,18,1.375,19,0.714,20,1.601,21,1.601,22,0.714,24,1.004,26,1.072,28,1.004,30,0.156,33,1.205,35,0.759,36,0.815,39,0.759,42,0.497,44,0.329,45,0.326,50,0.581,51,0.257,52,0.361,54,1.2,56,0.714,57,1.004,58,0.714,59,1.259,60,0.714,61,0.388,62,0.714,63,0.623,64,0.953,65,1.004,66,1.259,67,0.668,68,0.755,69,1.259,70,0.623,71,0.714,72,0.623,73,0.714,74,1.004,75,0.623,76,1.286,77,0.714,78,0.668,79,0.623,80,0.714,81,0.623,82,0.714,83,0.668,84,0.623,85,0.668,86,0.653,87,0.623,88,0.623,89,0.502,90,0.714,91,0.623,92,0.623,93,0.714,94,0.714,95,0.623,96,0.714,97,0.623,98,0.714,99,0.714,100,0.623,101,0.623,102,0.714,103,0.623,104,1.37,105,0.714,106,1.323,107,0.714,108,0.623,109,0.668,110,0.668,111,0.714,112,0.016,113,0.016,118,3.075,126,3.378,134,0.705,139,2.659,145,0.581,146,0.581,148,0.705,149,1.436,168,2.659,179,1.487,181,1.383,182,1.736,185,0.87,188,0.99,196,1.862,223,1.056,273,4.629,425,2.441,426,2.441,433,1.944,435,2.09,443,2.621,455,1.736,456,2.09,472,2.253,500,1.717,1182,2.626,1183,4.629,1184,4.358,1185,6.814,1186,4.358,1187,5.04,1188,5.04,1189,5.04,1190,4.358,1191,4.358,1192,5.76,1193,5.04,1194,5.04,1195,5.04,1196,5.04,1197,3.101,1198,5.04,1199,3.101,1200,3.101,1201,3.101,1202,4.358,1203,3.101,1204,4.358,1205,3.101,1206,3.101,1207,3.101,1208,3.101]],["title/components/SwitchComponent.html",[0,0.035,108,0.683]],["body/components/SwitchComponent.html",[0,0.048,1,0.549,2,0.8,3,0.161,4,0.138,5,0.629,6,0.672,7,0.629,8,0.629,9,0.138,13,0.409,14,0.026,15,0.759,16,1.27,17,1.263,18,1.318,19,0.629,20,1.581,21,1.581,22,0.629,24,0.916,25,2.427,26,0.979,28,0.916,30,0.138,31,0.55,32,2.959,33,2.225,35,0.656,36,1.015,38,1.107,39,0.727,42,0.473,43,1.136,44,0.289,45,0.289,50,0.511,51,0.235,52,0.318,54,1.15,56,0.629,57,0.916,58,0.629,59,1.188,60,0.629,61,0.306,62,0.629,63,0.549,64,0.899,65,0.916,66,1.188,67,0.588,68,0.703,69,1.188,70,0.549,71,0.629,72,0.549,73,0.629,74,0.916,75,0.549,76,1.232,77,0.629,78,0.588,79,0.549,80,0.629,81,0.549,82,0.629,83,0.588,84,0.549,85,0.588,86,0.596,87,0.549,88,0.549,89,0.442,90,0.629,91,0.549,92,0.549,93,0.629,94,0.629,95,0.549,96,0.629,97,0.549,98,0.629,99,0.629,100,0.549,101,0.549,102,0.629,103,0.549,104,0.588,105,0.629,106,0.549,107,0.629,108,1.292,109,1.18,110,0.588,111,0.629,112,0.014,113,0.014,118,2.864,129,3.147,134,0.644,148,0.644,149,1.504,157,0.993,179,1.309,181,1.218,184,2.005,196,1.599,223,1.868,338,1.547,367,2.458,400,1.953,401,1.825,402,1.309,403,1.655,409,1.655,411,1.136,412,1.136,416,1.655,425,2.228,426,2.228,433,1.775,435,1.908,443,2.629,455,1.529,456,1.908,472,2.057,500,2.013,501,1.666,503,2.094,511,2.251,543,1.218,550,1.412,551,1.412,552,2.427,553,2.057,554,1.666,555,1.666,559,2.228,560,2.228,563,3.605,564,1.412,833,2.967,834,3.975,839,4.368,871,1.83,924,3.501,942,3.501,965,2.036,1147,2.312,1173,3.369,1183,4.368,1209,2.312,1210,3.979,1211,3.979,1212,3.979,1213,3.369,1214,4.695,1215,3.979,1216,4.695,1217,4.695,1218,3.979,1219,4.695,1220,4.695,1221,5.724,1222,5.483,1223,2.731,1224,2.731,1225,2.731,1226,2.731,1227,3.979,1228,5.158,1229,2.731,1230,3.979,1231,2.731,1232,2.731,1233,2.731,1234,2.731,1235,2.731,1236,2.731,1237,3.979,1238,2.731,1239,3.979,1240,2.731,1241,3.979,1242,3.979,1243,3.979,1244,4.695,1245,3.979,1246,3.979,1247,2.731,1248,2.731]],["title/interfaces/apiServiceShortStructure.html",[176,1.157,363,1.157]],["body/interfaces/apiServiceShortStructure.html",[3,0.289,4,0.247,9,0.247,13,0.998,14,0.026,30,0.247,31,0.811,35,0.745,36,0.791,38,1.221,45,0.341,51,0.289,61,0.501,64,1.022,112,0.021,113,0.021,176,1.998,267,1.116,275,2.22,363,1.665,364,2.527,367,2.44,1249,4.139]],["title/coverage.html",[1250,3.931]],["body/coverage.html",[0,0.072,1,0.802,9,0.201,10,3.38,11,2.977,12,3.38,14,0.026,45,0.201,63,0.802,64,1.057,67,0.859,68,0.858,70,0.802,72,0.802,75,0.802,76,1.305,78,0.859,79,0.802,81,0.802,83,0.859,84,0.802,85,0.859,86,0.598,87,0.802,88,0.802,91,0.802,92,0.802,95,0.802,97,0.802,100,0.802,101,0.802,103,0.802,106,0.802,108,0.802,112,0.019,113,0.019,114,3.38,115,2.977,116,3.699,176,1.36,207,1.633,208,2.977,210,3.855,211,3.38,212,3.699,223,1.36,278,2.235,291,2.064,298,2.235,300,1.914,341,2.235,342,3.38,343,3.843,363,2.191,365,3.38,368,3.38,378,3.38,379,2.977,380,3.855,422,3.843,423,3.38,424,3.38,460,2.435,464,2.977,500,2.304,568,3.38,569,3.38,581,2.676,603,2.977,621,3.38,622,3.38,633,2.676,656,2.977,676,3.38,679,3.38,692,3.38,697,2.676,718,3.38,733,3.38,736,3.38,788,3.38,796,2.676,810,3.38,828,2.676,829,3.38,830,3.38,831,3.38,832,3.38,875,3.38,876,3.38,896,3.38,916,2.676,917,3.38,920,3.38,921,3.38,922,3.38,966,3.38,985,2.977,1000,3.38,1001,2.676,1003,3.38,1004,3.38,1018,3.38,1019,3.38,1049,3.38,1137,3.38,1162,3.38,1163,5.303,1165,3.38,1166,3.38,1167,3.38,1182,3.38,1209,3.38,1249,3.38,1250,3.38,1251,3.992,1252,3.992,1253,3.992,1254,3.992,1255,3.38,1256,3.992,1257,3.38,1258,3.992,1259,5.169,1260,3.992,1261,5.169,1262,3.992,1263,5.733,1264,3.992,1265,3.992,1266,5.169,1267,6.28,1268,5.733,1269,5.169,1270,3.992,1271,3.992,1272,6.063,1273,3.992,1274,3.992,1275,3.992,1276,3.992,1277,3.992,1278,3.992,1279,3.992,1280,3.992,1281,3.992,1282,3.992,1283,3.992,1284,5.169,1285,3.992,1286,5.169,1287,3.992,1288,5.169,1289,3.992,1290,3.992,1291,3.992,1292,3.38]],["title/dependencies.html",[1293,2.399,1294,3.461]],["body/dependencies.html",[14,0.026,15,1.147,43,2.026,44,0.516,46,2.972,48,1.048,112,0.021,113,0.021,179,2.335,181,2.173,182,2.727,234,4.124,236,1.772,321,1.555,1292,4.124,1294,4.124,1295,4.871,1296,6.896,1297,4.871,1298,5.853,1299,4.956,1300,4.871,1301,4.871,1302,6.658,1303,4.871,1304,6.978,1305,4.871,1306,4.871,1307,4.871,1308,4.871,1309,4.871,1310,4.871,1311,4.871,1312,6.274,1313,6.274,1314,4.871,1315,4.871,1316,4.871,1317,4.871,1318,4.871,1319,4.871,1320,4.871,1321,4.871,1322,4.871,1323,4.871,1324,4.871]],["title/index.html",[30,0.143,1325,2.833,1326,2.833]],["body/index.html",[0,0.063,2,0.949,4,0.238,14,0.021,17,1.546,35,0.73,104,1.016,110,1.016,112,0.021,113,0.021,168,3.93,223,1.608,248,5.242,249,3.998,376,3.998,491,2.881,492,3.165,546,4.095,895,4.864,999,3.998,1055,3.998,1299,3.998,1327,6.191,1328,4.722,1329,5.744,1330,6.602,1331,3.998,1332,4.722,1333,5.744,1334,6.191,1335,4.722,1336,6.602,1337,6.713,1338,4.722,1339,5.744,1340,4.722,1341,4.722,1342,5.744,1343,4.722,1344,4.722,1345,4.722,1346,4.722,1347,5.744,1348,4.722,1349,4.722,1350,4.722,1351,6.191,1352,4.722,1353,4.722,1354,4.722,1355,4.722,1356,4.722,1357,4.722,1358,4.722,1359,4.722,1360,4.722,1361,4.722,1362,4.722,1363,4.722,1364,4.722,1365,4.722,1366,4.722,1367,4.722,1368,5.744,1369,6.191,1370,4.722,1371,4.722,1372,4.722,1373,4.722,1374,4.722,1375,4.722,1376,6.191,1377,4.722,1378,4.722,1379,5.744,1380,4.722,1381,4.722,1382,4.722,1383,4.722,1384,4.722,1385,4.722,1386,4.722,1387,4.722,1388,4.722,1389,4.722,1390,4.722,1391,4.722,1392,4.722,1393,4.722,1394,4.722,1395,3.522,1396,4.722]],["title/modules.html",[1397,3.931]],["body/modules.html",[14,0.023,112,0.023,113,0.023,1397,4.73]],["title/overview.html",[1395,3.462]],["body/overview.html",[2,1.114,14,0.023,112,0.023,113,0.023,209,2.472,364,2.865,1395,4.133,1398,5.542,1399,5.542,1400,5.542]],["title/properties.html",[31,0.565,1293,2.399]],["body/properties.html",[14,0.024,31,0.769,112,0.023,113,0.023,1331,4.711,1401,5.564]],["title/miscellaneous/variables.html",[1402,2.399,1403,3.461]],["body/miscellaneous/variables.html",[14,0.025,30,0.27,35,0.68,36,0.865,45,0.27,112,0.022,113,0.022,184,2.405,1001,3.586,1213,4.53,1255,4.53,1257,5.238,1402,4.53,1403,4.53,1404,5.351,1405,5.351,1406,5.351,1407,5.351,1408,5.351,1409,5.351,1410,5.351,1411,5.351,1412,5.351,1413,5.351,1414,5.351,1415,5.351]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":500,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1401,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":864,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["0.15.0",{"_index":1324,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":1174,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["0.2s",{"_index":872,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["0.3125rem",{"_index":410,"title":{},"body":{"components/BackButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["0.3s",{"_index":417,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["0.5rem",{"_index":994,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0.625rem",{"_index":406,"title":{},"body":{"components/BackButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["0/1",{"_index":1258,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1289,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1288,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1254,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1290,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1287,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1286,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1285,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":567,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{}}}],["003366",{"_index":873,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["004080",{"_index":561,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["0056a6",{"_index":502,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{}}}],["0056b3",{"_index":1181,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["007bff",{"_index":1178,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["1",{"_index":273,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"components/PaginationComponent.html":{}}}],["1.2",{"_index":563,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{},"components/SwitchComponent.html":{}}}],["1.25rem",{"_index":407,"title":{},"body":{"components/BackButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["1.2em",{"_index":1180,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["1.5",{"_index":518,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["1/1",{"_index":1283,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1163,"title":{},"body":{"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["100px",{"_index":1145,"title":{},"body":{"components/LoadingComponent.html":{}}}],["100vh",{"_index":1143,"title":{},"body":{"components/LoadingComponent.html":{}}}],["10px",{"_index":514,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["10rem",{"_index":1133,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["13px",{"_index":557,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["14/14",{"_index":1263,"title":{},"body":{"coverage.html":{}}}],["14/17",{"_index":1265,"title":{},"body":{"coverage.html":{}}}],["14px",{"_index":1244,"title":{},"body":{"components/SwitchComponent.html":{}}}],["15px",{"_index":562,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["16",{"_index":1198,"title":{},"body":{"components/PaginationComponent.html":{}}}],["16.8px",{"_index":1243,"title":{},"body":{"components/SwitchComponent.html":{}}}],["16px",{"_index":516,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["19.1.0",{"_index":1296,"title":{},"body":{"dependencies.html":{}}}],["19.1.3",{"_index":1332,"title":{},"body":{"index.html":{}}}],["19/19",{"_index":1273,"title":{},"body":{"coverage.html":{}}}],["1px",{"_index":857,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/LoadingComponent.html":{}}}],["1rem",{"_index":419,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{}}}],["1s",{"_index":1154,"title":{},"body":{"components/LoadingComponent.html":{}}}],["2",{"_index":520,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["2.3.0",{"_index":1322,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1259,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":565,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{}}}],["20px",{"_index":564,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["23",{"_index":1398,"title":{},"body":{"overview.html":{}}}],["24/24",{"_index":1279,"title":{},"body":{"coverage.html":{}}}],["24px",{"_index":501,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/SwitchComponent.html":{}}}],["25px",{"_index":1177,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["2em",{"_index":1176,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["2px",{"_index":862,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{}}}],["2rem",{"_index":512,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["3.10.1",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1261,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":246,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["300px",{"_index":964,"title":{},"body":{"components/FilterByInputComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["30px",{"_index":1179,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["32px",{"_index":1150,"title":{},"body":{"components/LoadingComponent.html":{}}}],["333",{"_index":1175,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["34/34",{"_index":1282,"title":{},"body":{"coverage.html":{}}}],["34px",{"_index":1237,"title":{},"body":{"components/SwitchComponent.html":{}}}],["36px",{"_index":869,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["3px",{"_index":1245,"title":{},"body":{"components/SwitchComponent.html":{}}}],["4.0.2",{"_index":1310,"title":{},"body":{"dependencies.html":{}}}],["4.21.0",{"_index":1304,"title":{},"body":{"dependencies.html":{}}}],["4.22.0",{"_index":1313,"title":{},"body":{"dependencies.html":{}}}],["4.24.0",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1267,"title":{},"body":{"coverage.html":{}}}],["40.8px",{"_index":1236,"title":{},"body":{"components/SwitchComponent.html":{}}}],["400",{"_index":882,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["400px",{"_index":866,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["404",{"_index":885,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/PageNotFoundComponent.html":{}}}],["408",{"_index":888,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["409",{"_index":490,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["40px",{"_index":1172,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["45/45",{"_index":1276,"title":{},"body":{"coverage.html":{}}}],["46px",{"_index":1146,"title":{},"body":{"components/LoadingComponent.html":{}}}],["4caf50",{"_index":1247,"title":{},"body":{"components/SwitchComponent.html":{}}}],["4px",{"_index":1173,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["4rem",{"_index":991,"title":{},"body":{"components/HeaderComponent.html":{}}}],["4s",{"_index":1241,"title":{},"body":{"components/SwitchComponent.html":{}}}],["5/5",{"_index":1284,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":965,"title":{},"body":{"components/FilterByInputComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["500",{"_index":889,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["5000",{"_index":247,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"components/EntityDialogComponent.html":{}}}],["502",{"_index":890,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["503",{"_index":891,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["504",{"_index":892,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["50px",{"_index":867,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["555",{"_index":541,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["5px",{"_index":558,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["6",{"_index":1400,"title":{},"body":{"overview.html":{}}}],["6/6",{"_index":1269,"title":{},"body":{"coverage.html":{}}}],["65",{"_index":504,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["666",{"_index":515,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/IconTrashComponent.html":{}}}],["7.8.0",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1266,"title":{},"body":{"coverage.html":{}}}],["768px",{"_index":997,"title":{},"body":{"components/HeaderComponent.html":{}}}],["7px",{"_index":556,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["8",{"_index":1399,"title":{},"body":{"overview.html":{}}}],["8.0.7",{"_index":1301,"title":{},"body":{"dependencies.html":{}}}],["8/10",{"_index":1262,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":1268,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1162,"title":{},"body":{"components/LoadingComponent.html":{},"coverage.html":{}}}],["82",{"_index":1264,"title":{},"body":{"coverage.html":{}}}],["888",{"_index":539,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["8px",{"_index":535,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/LoadingComponent.html":{}}}],["9",{"_index":944,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["9/9",{"_index":1260,"title":{},"body":{"coverage.html":{}}}],["9]/g",{"_index":204,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["a.click",{"_index":913,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["a.download",{"_index":911,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["a.href",{"_index":910,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["absolute",{"_index":553,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["accessors",{"_index":139,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/PaginationComponent.html":{}}}],["action",{"_index":720,"title":{},"body":{"injectables/EndpointService.html":{}}}],["actionname",{"_index":722,"title":{},"body":{"injectables/EndpointService.html":{}}}],["actions",{"_index":542,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["activatedroute",{"_index":841,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["actual_component",{"_index":111,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["additional",{"_index":1387,"title":{},"body":{"index.html":{}}}],["alert",{"_index":22,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["alertdeletecomponent",{"_index":1,"title":{"components/AlertDeleteComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["alerts",{"_index":292,"title":{},"body":{"injectables/ApiService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["alertservice",{"_index":878,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["align",{"_index":547,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["allowedchars",{"_index":958,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["allowedchars.test(inputchar",{"_index":959,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["alternate",{"_index":1158,"title":{},"body":{"components/LoadingComponent.html":{}}}],["angular",{"_index":168,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/BackButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/PaginationComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":1295,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":43,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":316,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["angular/compiler",{"_index":1297,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":44,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":179,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1298,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":321,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":1152,"title":{},"body":{"components/LoadingComponent.html":{}}}],["api",{"_index":64,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{}}}],["api'},{'name",{"_index":77,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["api.component.css",{"_index":466,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.css,../../styles/card.css,../../styles/button.css,../../styles/icon.css",{"_index":428,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.html",{"_index":429,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts",{"_index":424,"title":{},"body":{"components/CardApiComponent.html":{},"coverage.html":{}}}],["api.component.ts:117",{"_index":447,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:141",{"_index":449,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:191",{"_index":445,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:65",{"_index":442,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:73",{"_index":444,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:75",{"_index":454,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:76",{"_index":453,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:84",{"_index":452,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api.component.ts:87",{"_index":440,"title":{},"body":{"components/CardApiComponent.html":{}}}],["api/card",{"_index":423,"title":{},"body":{"components/CardApiComponent.html":{},"coverage.html":{}}}],["apideleted",{"_index":436,"title":{},"body":{"components/CardApiComponent.html":{}}}],["apidialogcomponent",{"_index":63,"title":{"components/ApiDialogComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["apieasier",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["apiendpointlistcomponent",{"_index":67,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["apihubserviceservice",{"_index":208,"title":{"injectables/ApiHubServiceService.html":{}},"body":{"injectables/ApiHubServiceService.html":{},"coverage.html":{}}}],["apiinfo",{"_index":434,"title":{},"body":{"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/IconTrashComponent.html":{}}}],["apiinfo.description",{"_index":498,"title":{},"body":{"components/CardApiComponent.html":{}}}],["apiinfo.name",{"_index":497,"title":{},"body":{"components/CardApiComponent.html":{}}}],["apilist",{"_index":256,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["apilistsubject",{"_index":213,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["apiname",{"_index":576,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["apiservice",{"_index":278,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["apiservice.name",{"_index":269,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["apiservicename",{"_index":701,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["apiservicerepository",{"_index":441,"title":{},"body":{"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["apiservicerepositoryservice",{"_index":341,"title":{"injectables/ApiServiceRepositoryService.html":{}},"body":{"injectables/ApiServiceRepositoryService.html":{},"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["apiserviceshortstructure",{"_index":176,"title":{"interfaces/apiServiceShortStructure.html":{}},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"injectables/EntityService.html":{},"components/ExportApiButtonComponent.html":{},"components/IconTrashComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{}}}],["apiservicestructure",{"_index":300,"title":{"interfaces/ApiServiceStructure.html":{}},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"injectables/EntityService.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["app",{"_index":21,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["app.component.css",{"_index":374,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":372,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":70,"title":{"components/AppComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1257,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appearance",{"_index":338,"title":{},"body":{"injectables/ApiService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["application",{"_index":1342,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":907,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["applicationconfig",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arguments",{"_index":745,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["artifacts",{"_index":1361,"title":{},"body":{"index.html":{}}}],["assets/dora.png",{"_index":1141,"title":{},"body":{"components/LoadingComponent.html":{}}}],["auto",{"_index":522,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["autoclose",{"_index":785,"title":{},"body":{"components/EntityDialogComponent.html":{},"components/IconTrashComponent.html":{}}}],["automatically",{"_index":1343,"title":{},"body":{"index.html":{}}}],["available",{"_index":999,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["back",{"_index":73,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["backbuttoncomponent",{"_index":72,"title":{"components/BackButtonComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["background",{"_index":400,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["basedomain",{"_index":395,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["baseurl",{"_index":214,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["behaviorsubject",{"_index":224,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["between",{"_index":990,"title":{},"body":{"components/HeaderComponent.html":{}}}],["blob",{"_index":905,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["blob([jsonstring",{"_index":906,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["block",{"_index":555,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["body",{"_index":1170,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["bold",{"_index":415,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["boolean",{"_index":38,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["border",{"_index":403,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["bottom",{"_index":560,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["box",{"_index":524,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["break",{"_index":528,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["browser",{"_index":1299,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["build",{"_index":248,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"index.html":{}}}],["buildthis",{"_index":1358,"title":{},"body":{"index.html":{}}}],["button",{"_index":382,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["button'},{'name",{"_index":74,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["button.component",{"_index":465,"title":{},"body":{"components/CardApiComponent.html":{},"components/HeaderComponent.html":{}}}],["button.component.css",{"_index":383,"title":{},"body":{"components/BackButtonComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["button.component.css,../../styles/button.css",{"_index":897,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["button.component.html",{"_index":384,"title":{},"body":{"components/BackButtonComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["button.component.ts",{"_index":380,"title":{},"body":{"components/BackButtonComponent.html":{},"components/ExportApiButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:24",{"_index":387,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["button.component.ts:32",{"_index":899,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["button.component.ts:47",{"_index":388,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["button.component.ts:51",{"_index":900,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["button/back",{"_index":379,"title":{},"body":{"components/BackButtonComponent.html":{},"components/HeaderComponent.html":{},"coverage.html":{}}}],["button/export",{"_index":464,"title":{},"body":{"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{},"coverage.html":{}}}],["button:hover",{"_index":420,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["button[tuiiconbutton",{"_index":1135,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["buttonclick",{"_index":974,"title":{},"body":{"components/HeaderComponent.html":{}}}],["buttontext",{"_index":971,"title":{},"body":{"components/HeaderComponent.html":{}}}],["calc(1.5em",{"_index":519,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["card",{"_index":76,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["cardapicomponent",{"_index":75,"title":{"components/CardApiComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["cardapilistcomponent",{"_index":78,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["cardendpointcomponent",{"_index":79,"title":{"components/CardEndpointComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["cardentitycomponent",{"_index":81,"title":{"components/CardEntityComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["case",{"_index":881,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/ImportDialogComponent.html":{}}}],["catch",{"_index":399,"title":{},"body":{"components/BackButtonComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["catch(err",{"_index":251,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["catcherror",{"_index":318,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["catcherror((error",{"_index":1017,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["cc",{"_index":1171,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["cd",{"_index":438,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ImportDialogComponent.html":{}}}],["center",{"_index":549,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["changedetection",{"_index":425,"title":{},"body":{"components/CardApiComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["changedetectionstrategy",{"_index":455,"title":{},"body":{"components/CardApiComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":426,"title":{},"body":{"components/CardApiComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["changedetectorref",{"_index":439,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ImportDialogComponent.html":{}}}],["charts",{"_index":1303,"title":{},"body":{"dependencies.html":{}}}],["choose",{"_index":1383,"title":{},"body":{"index.html":{}}}],["chrome",{"_index":531,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["class",{"_index":52,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["cleanedvalue",{"_index":200,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["cli",{"_index":1330,"title":{},"body":{"index.html":{}}}],["click",{"_index":970,"title":{},"body":{"components/HeaderComponent.html":{}}}],["closeable",{"_index":983,"title":{},"body":{"components/HeaderComponent.html":{}}}],["closed",{"_index":494,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["code",{"_index":895,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"index.html":{}}}],["color",{"_index":401,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["column",{"_index":856,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["come",{"_index":1381,"title":{},"body":{"index.html":{}}}],["command",{"_index":1376,"title":{},"body":{"index.html":{}}}],["commerce",{"_index":1305,"title":{},"body":{"dependencies.html":{}}}],["commonmodule",{"_index":25,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["compile",{"_index":1359,"title":{},"body":{"index.html":{}}}],["complete",{"_index":492,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"index.html":{}}}],["component",{"_index":0,"title":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":60,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"index.html":{},"overview.html":{}}}],["connecting",{"_index":253,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["console.error",{"_index":476,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["console.error('error",{"_index":252,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["console.error(message",{"_index":671,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["console.info('dialog",{"_index":493,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["console.info(`dialog",{"_index":481,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{}}}],["console.log",{"_index":472,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["console.log('api",{"_index":484,"title":{},"body":{"components/CardApiComponent.html":{}}}],["console.log('connected",{"_index":250,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["console.log(apilist",{"_index":258,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["console.log(currentlist",{"_index":264,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["console.log(error",{"_index":915,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["console.warn",{"_index":1126,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["const",{"_index":195,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"components/BackButtonComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["constructor",{"_index":218,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["constructor(alerts",{"_index":1026,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["constructor(apiservice",{"_index":344,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["constructor(apiservicerepository",{"_index":437,"title":{},"body":{"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["constructor(cd",{"_index":632,"title":{},"body":{"components/CardEntityComponent.html":{},"components/ImportDialogComponent.html":{}}}],["constructor(endpointrepositoryservice",{"_index":580,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["constructor(endpointservice",{"_index":696,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["constructor(entityservice",{"_index":795,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["constructor(errorhandler",{"_index":1006,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["constructor(http",{"_index":288,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["constructor(location",{"_index":386,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["constructor(private",{"_index":355,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["constructor(route",{"_index":840,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["constructor(router",{"_index":877,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["container",{"_index":854,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["content",{"_index":157,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["context",{"_index":34,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["control",{"_index":949,"title":{},"body":{"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{}}}],["control.value",{"_index":951,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["controlname",{"_index":929,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["coverage",{"_index":1250,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createapientity",{"_index":789,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["createapientity(apiservicename",{"_index":797,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["createapiservice",{"_index":280,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["createapiservice(service",{"_index":296,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["createendpoint",{"_index":693,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["createendpoint(apiservicename",{"_index":699,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["createfullapiservice",{"_index":281,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["createfullapiservice(service",{"_index":299,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["currentfiles",{"_index":1128,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["currentlist",{"_index":260,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["currentlist.findindex((apiservice",{"_index":268,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["currentlist.push(api",{"_index":262,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["currentlist.splice(index",{"_index":272,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["currentlist[index",{"_index":270,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["currentpage",{"_index":1192,"title":{},"body":{"components/PaginationComponent.html":{}}}],["currenturl",{"_index":390,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["cursor",{"_index":411,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["d9534f",{"_index":870,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["data",{"_index":141,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["data.name}.json",{"_index":912,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["datawithoutname",{"_index":902,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["decorators",{"_index":162,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["default",{"_index":35,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":39,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["delete",{"_index":23,"title":{},"body":{"components/AlertDeleteComponent.html":{},"injectables/ApiService.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{}}}],["delete'},{'name",{"_index":62,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["delete(`${this.baseurl}/apientity/${apiservicename}/${entityname",{"_index":825,"title":{},"body":{"injectables/EntityService.html":{}}}],["delete.component",{"_index":1036,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["delete.component.css",{"_index":27,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["delete.component.html",{"_index":29,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["delete.component.ts",{"_index":12,"title":{},"body":{"components/AlertDeleteComponent.html":{},"coverage.html":{}}}],["delete.component.ts:38",{"_index":40,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["delete/alert",{"_index":11,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/IconTrashComponent.html":{},"coverage.html":{}}}],["deleteapientity",{"_index":790,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["deleteapientity(apiservicename",{"_index":798,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["deleteapientity(this.apiname",{"_index":665,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["deleteapiservice",{"_index":282,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["deleteapiservice(servicename",{"_index":302,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["deleteendpoint",{"_index":617,"title":{},"body":{"components/CardEndpointComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["deleteendpoint(apiservicename",{"_index":702,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["dependencies",{"_index":1294,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"interfaces/ApiServiceStructure.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["descriptioninputref",{"_index":130,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["detailed",{"_index":1392,"title":{},"body":{"index.html":{}}}],["development",{"_index":1333,"title":{},"body":{"index.html":{}}}],["di",{"_index":169,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog",{"_index":117,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{}}}],["dialog'},{'name",{"_index":66,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["dialog.component",{"_index":459,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/HeaderComponent.html":{}}}],["dialog.component.css",{"_index":127,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["dialog.component.html",{"_index":128,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["dialog.component.ts",{"_index":116,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:100",{"_index":763,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:102",{"_index":173,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:108",{"_index":761,"title":{},"body":{"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:112",{"_index":175,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:116",{"_index":682,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:117",{"_index":766,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:125",{"_index":159,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:127",{"_index":767,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:129",{"_index":681,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:134",{"_index":1078,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:138",{"_index":769,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:143",{"_index":155,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:150",{"_index":1068,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:154",{"_index":772,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:156",{"_index":152,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:172",{"_index":1066,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:173",{"_index":144,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:178",{"_index":748,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:193",{"_index":1071,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:194",{"_index":753,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:213",{"_index":1076,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:216",{"_index":756,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:227",{"_index":758,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:246",{"_index":755,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:260",{"_index":1074,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:263",{"_index":754,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:38",{"_index":1079,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:46",{"_index":1080,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:51",{"_index":685,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:55",{"_index":1081,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:56",{"_index":171,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:59",{"_index":687,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:63",{"_index":1082,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:66",{"_index":764,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:67",{"_index":684,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:68",{"_index":165,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:71",{"_index":1064,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["dialog.component.ts:75",{"_index":765,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:76",{"_index":688,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:79",{"_index":167,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:83",{"_index":762,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:86",{"_index":689,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog.component.ts:90",{"_index":161,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["dialog.component.ts:91",{"_index":760,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["dialog.component.ts:98",{"_index":683,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["dialog/api",{"_index":115,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"coverage.html":{}}}],["dialog/endpoint",{"_index":603,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/EndpointDialogComponent.html":{},"coverage.html":{}}}],["dialog/entity",{"_index":656,"title":{},"body":{"components/CardEntityComponent.html":{},"components/EntityDialogComponent.html":{},"coverage.html":{}}}],["dialog/import",{"_index":985,"title":{},"body":{"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["dialogs",{"_index":132,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["direction",{"_index":855,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["directive",{"_index":58,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["directives",{"_index":110,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"index.html":{}}}],["directory",{"_index":1363,"title":{},"body":{"index.html":{}}}],["dismissible",{"_index":193,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/HeaderComponent.html":{}}}],["display",{"_index":543,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["display'},{'name",{"_index":90,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["display.component.css",{"_index":835,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display.component.html",{"_index":836,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display.component.ts",{"_index":832,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"coverage.html":{}}}],["display.component.ts:30",{"_index":845,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display.component.ts:37",{"_index":842,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display.component.ts:52",{"_index":844,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display.component.ts:65",{"_index":843,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["display/error",{"_index":831,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"coverage.html":{}}}],["dist",{"_index":1362,"title":{},"body":{"index.html":{}}}],["doc",{"_index":1306,"title":{},"body":{"dependencies.html":{}}}],["document.createelement('a",{"_index":909,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["document:keydown",{"_index":744,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["document:keydown(event",{"_index":746,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["documentation",{"_index":1251,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["dynamic",{"_index":1300,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1102,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["e.target?.result",{"_index":1104,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["e0e0e0",{"_index":859,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["e2e",{"_index":1378,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":1380,"title":{},"body":{"index.html":{}}}],["e6e6e6",{"_index":421,"title":{},"body":{"components/BackButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["ease",{"_index":1156,"title":{},"body":{"components/LoadingComponent.html":{}}}],["edge",{"_index":533,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["edit",{"_index":65,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["element",{"_index":57,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["elementref",{"_index":143,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["ellipsis",{"_index":507,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["emitted",{"_index":482,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{}}}],["end",{"_index":546,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"index.html":{}}}],["endpoint",{"_index":68,"title":{"interfaces/Endpoint.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["endpoint'},{'name",{"_index":80,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["endpoint.component.css",{"_index":605,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.css,../../styles/card.css,../../styles/icon.css",{"_index":570,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.html",{"_index":571,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts",{"_index":569,"title":{},"body":{"components/CardEndpointComponent.html":{},"coverage.html":{}}}],["endpoint.component.ts:116",{"_index":592,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:144",{"_index":593,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:158",{"_index":595,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:170",{"_index":597,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:192",{"_index":588,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:210",{"_index":590,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:235",{"_index":591,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:54",{"_index":585,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:62",{"_index":584,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:71",{"_index":583,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:79",{"_index":586,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:87",{"_index":599,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint.component.ts:90",{"_index":582,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpoint/card",{"_index":568,"title":{},"body":{"components/CardEndpointComponent.html":{},"coverage.html":{}}}],["endpointcardlistcomponent",{"_index":83,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["endpointdeleted",{"_index":579,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpointdialogcomponent",{"_index":84,"title":{"components/EndpointDialogComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["endpointinfo",{"_index":577,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/IconTrashComponent.html":{}}}],["endpointinfo.route",{"_index":619,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpointinfo.type",{"_index":620,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["endpointname",{"_index":703,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["endpointrepositoryservice",{"_index":581,"title":{"injectables/EndpointRepositoryService.html":{}},"body":{"components/CardEndpointComponent.html":{},"injectables/EndpointRepositoryService.html":{},"coverage.html":{}}}],["endpoints",{"_index":734,"title":{},"body":{"interfaces/Entity.html":{}}}],["endpointservice",{"_index":697,"title":{"injectables/EndpointService.html":{}},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"coverage.html":{}}}],["enter",{"_index":749,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["entities",{"_index":366,"title":{},"body":{"interfaces/ApiServiceStructure.html":{},"components/ImportDialogComponent.html":{}}}],["entity",{"_index":86,"title":{"interfaces/Entity.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["entity'},{'name",{"_index":82,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["entity.component.css",{"_index":658,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.css,../../styles/card.css,../../styles/button.css,../../styles/icon.css",{"_index":623,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.html",{"_index":624,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts",{"_index":622,"title":{},"body":{"components/CardEntityComponent.html":{},"coverage.html":{}}}],["entity.component.ts:111",{"_index":649,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:131",{"_index":650,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:147",{"_index":648,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:164",{"_index":639,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:181",{"_index":642,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:197",{"_index":644,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:207",{"_index":640,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:220",{"_index":646,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:53",{"_index":636,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:62",{"_index":635,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:70",{"_index":637,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:72",{"_index":654,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:73",{"_index":655,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:74",{"_index":653,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:82",{"_index":652,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity.component.ts:85",{"_index":634,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entity/card",{"_index":621,"title":{},"body":{"components/CardEntityComponent.html":{},"coverage.html":{}}}],["entitycardlistcomponent",{"_index":85,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["entitydeleted",{"_index":631,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entitydialogcomponent",{"_index":87,"title":{"components/EntityDialogComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["entityinfo",{"_index":578,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{}}}],["entityinfo.name",{"_index":674,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["entityname",{"_index":700,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["entityrepositoryservice",{"_index":633,"title":{"injectables/EntityRepositoryService.html":{}},"body":{"components/CardEntityComponent.html":{},"injectables/EntityRepositoryService.html":{},"coverage.html":{}}}],["entityservice",{"_index":796,"title":{"injectables/EntityService.html":{}},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"coverage.html":{}}}],["entityshort",{"_index":828,"title":{"interfaces/EntityShort.html":{}},"body":{"interfaces/EntityShort.html":{},"components/IconTrashComponent.html":{},"coverage.html":{}}}],["err",{"_index":254,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["error",{"_index":89,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["error.interceptor.ts",{"_index":1004,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["error.interceptor.ts:24",{"_index":1007,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error.interceptor.ts:39",{"_index":1011,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error.status",{"_index":489,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["errorcode",{"_index":837,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["errordisplaycomponent",{"_index":88,"title":{"components/ErrorDisplayComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["errorhandler",{"_index":290,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["errorhandlerservice",{"_index":291,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["errormessage",{"_index":838,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["errormessage}`).subscribe",{"_index":884,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["escape",{"_index":750,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["event",{"_index":151,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["event.ctrlkey",{"_index":960,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["event.key",{"_index":781,"title":{},"body":{"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["event.metakey",{"_index":961,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["event.preventdefault",{"_index":189,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["event.target",{"_index":197,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["eventcoalescing",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":443,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["example",{"_index":17,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"index.html":{}}}],["execute",{"_index":1370,"title":{},"body":{"index.html":{}}}],["export",{"_index":51,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["exportapibuttoncomponent",{"_index":91,"title":{"components/ExportApiButtonComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["f.file.name",{"_index":1089,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["f.status",{"_index":1095,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["f1f1f1",{"_index":537,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["f44336",{"_index":1240,"title":{},"body":{"components/SwitchComponent.html":{}}}],["f9f9f9",{"_index":860,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["false",{"_index":367,"title":{},"body":{"interfaces/ApiServiceStructure.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"interfaces/EntityShort.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["fff",{"_index":1151,"title":{},"body":{"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{}}}],["file.errormessage",{"_index":1122,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["file.name",{"_index":1090,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["file.status",{"_index":1111,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["filename",{"_index":1070,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["filename.replace",{"_index":1112,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["filereader",{"_index":1100,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["files",{"_index":1055,"title":{},"body":{"components/ImportDialogComponent.html":{},"index.html":{}}}],["files.filter(file",{"_index":1087,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["files.foreach(file",{"_index":1098,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["filestatus",{"_index":916,"title":{"interfaces/FileStatus.html":{}},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["filestatus.status",{"_index":1110,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["filetoremove",{"_index":1075,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["filetoremove.file",{"_index":1131,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["fill",{"_index":998,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filter",{"_index":93,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["filterbyinputcomponent",{"_index":92,"title":{"components/FilterByInputComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["filtereditems",{"_index":931,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["flex",{"_index":544,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["following",{"_index":1375,"title":{},"body":{"index.html":{}}}],["font",{"_index":413,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["fontawesome",{"_index":1314,"title":{},"body":{"dependencies.html":{}}}],["form",{"_index":927,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["formcontrol",{"_index":942,"title":{},"body":{"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["formcontrol(false",{"_index":1227,"title":{},"body":{"components/SwitchComponent.html":{}}}],["formcontrol(true",{"_index":1230,"title":{},"body":{"components/SwitchComponent.html":{}}}],["formgroup",{"_index":940,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["formsmodule",{"_index":118,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["found",{"_index":887,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/PageNotFoundComponent.html":{}}}],["found'},{'name",{"_index":105,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["found.component.css",{"_index":1168,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.html",{"_index":1169,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1167,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found/page",{"_index":1166,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["framework",{"_index":1382,"title":{},"body":{"index.html":{}}}],["gap",{"_index":1134,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["generate",{"_index":1351,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1328,"title":{},"body":{"index.html":{}}}],["get(`${this.baseurl}/apientity/${apiservicename",{"_index":821,"title":{},"body":{"injectables/EntityService.html":{}}}],["get(`${this.baseurl}/apientity/${apiservicename}/${entityname",{"_index":822,"title":{},"body":{"injectables/EntityService.html":{}}}],["get(`${this.baseurl}/apiservice",{"_index":325,"title":{},"body":{"injectables/ApiService.html":{}}}],["get(`${this.baseurl}/apiservices",{"_index":827,"title":{},"body":{"injectables/EntityService.html":{}}}],["getallapiservices",{"_index":811,"title":{},"body":{"injectables/EntityService.html":{}}}],["getapientity",{"_index":791,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["getapientity(apiservicename",{"_index":799,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["getapientitylist",{"_index":792,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["getapientitylist(apiservicename",{"_index":800,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["getapilist",{"_index":283,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["getapistructurelist",{"_index":284,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["getapistructurelist(name",{"_index":306,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["getbyindex",{"_index":686,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["getdata",{"_index":174,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["getendpointbyname",{"_index":694,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["getendpointbyname(apiservicename",{"_index":705,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["getendpointlist",{"_index":695,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["getendpointlist(apiservicename",{"_index":706,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["getfilestatus",{"_index":1058,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["getfilestatus(file",{"_index":1065,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["getfilestatustext",{"_index":1059,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["getfilestatustext(file",{"_index":1067,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["getfiltereditems",{"_index":946,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["gethasvalue",{"_index":172,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["getstructure",{"_index":768,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["getting",{"_index":1325,"title":{"index.html":{}},"body":{}}],["gettotalpages",{"_index":1205,"title":{},"body":{"components/PaginationComponent.html":{}}}],["go",{"_index":853,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["goback",{"_index":385,"title":{},"body":{"components/BackButtonComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["gotopage",{"_index":1191,"title":{},"body":{"components/PaginationComponent.html":{}}}],["gotopage(2",{"_index":1204,"title":{},"body":{"components/PaginationComponent.html":{}}}],["gotopage(page",{"_index":1202,"title":{},"body":{"components/PaginationComponent.html":{}}}],["h1",{"_index":868,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["h3",{"_index":499,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["handleeditdialogdata",{"_index":627,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleeditdialogdata(data",{"_index":638,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleendpointupdate",{"_index":572,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["handleendpointupdate(response",{"_index":587,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["handleendpointupdateerror",{"_index":573,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["handleendpointupdateerror(error",{"_index":589,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["handleentitydeletion",{"_index":628,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleentityupdate",{"_index":629,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleentityupdate(response",{"_index":641,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleentityupdateerror",{"_index":630,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleentityupdateerror(error",{"_index":643,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handleerror",{"_index":285,"title":{},"body":{"injectables/ApiService.html":{},"components/CardEntityComponent.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{}}}],["handleerror(error",{"_index":308,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{}}}],["handleerror(message",{"_index":645,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["handlekeyboardevent",{"_index":740,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["handlekeyboardevent(event",{"_index":751,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["handler.service",{"_index":323,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["handler.service.ts",{"_index":876,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:12",{"_index":880,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:9",{"_index":879,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handlesubmit",{"_index":741,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["hasfiles",{"_index":1056,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["hasvalue",{"_index":140,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["header",{"_index":967,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":96,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["header.component.css",{"_index":968,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":969,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":95,"title":{"components/HeaderComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["height",{"_index":511,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["helpbuilding",{"_index":1357,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":510,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["hostlistener",{"_index":773,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["hostlistener('document:keydown",{"_index":752,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["hostlisteners",{"_index":743,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["html",{"_index":18,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["htmlinputelement",{"_index":198,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["http",{"_index":295,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["http://localhost:4200",{"_index":1341,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":289,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["httperrorinterceptor",{"_index":1001,"title":{"interceptors/HttpErrorInterceptor.html":{}},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httperrorresponse",{"_index":309,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["httpevent",{"_index":1013,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["httphandler",{"_index":1010,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["httpinterceptor",{"_index":1014,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["httprequest",{"_index":1009,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["https://www.titan2.ru/images/temp/logo__ru.jpg",{"_index":977,"title":{},"body":{"components/HeaderComponent.html":{}}}],["hub",{"_index":211,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"coverage.html":{}}}],["hubconnection",{"_index":215,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["i:hover",{"_index":566,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{}}}],["icon",{"_index":98,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["icontrashcomponent",{"_index":97,"title":{"components/IconTrashComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["identifier",{"_index":1252,"title":{},"body":{"coverage.html":{}}}],["if(buttontext",{"_index":989,"title":{},"body":{"components/HeaderComponent.html":{}}}],["if(entityinfo.structure",{"_index":675,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["if(isapipage",{"_index":988,"title":{},"body":{"components/HeaderComponent.html":{}}}],["img",{"_index":993,"title":{},"body":{"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["implements",{"_index":833,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/SwitchComponent.html":{}}}],["import",{"_index":42,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["importdialogcomponent",{"_index":100,"title":{"components/ImportDialogComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["imports",{"_index":24,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["includes",{"_index":1348,"title":{},"body":{"index.html":{}}}],["including",{"_index":1391,"title":{},"body":{"index.html":{}}}],["index",{"_index":30,"title":{"index.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":1155,"title":{},"body":{"components/LoadingComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["information",{"_index":1390,"title":{},"body":{"index.html":{}}}],["initialdata",{"_index":222,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["initializedata",{"_index":217,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["initializedata(initialdata",{"_index":220,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["inject",{"_index":177,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["inject(tuialertservice",{"_index":759,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["inject(tuidialogservice",{"_index":166,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["injectable",{"_index":207,"title":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{}},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["injectables",{"_index":209,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"overview.html":{}}}],["injectcontext",{"_index":37,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["inline",{"_index":1235,"title":{},"body":{"components/SwitchComponent.html":{}}}],["input",{"_index":196,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["input'},{'name",{"_index":94,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["input.component.css",{"_index":925,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.html",{"_index":926,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts",{"_index":922,"title":{},"body":{"components/FilterByInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:122",{"_index":939,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:44",{"_index":936,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:53",{"_index":934,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:62",{"_index":935,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:70",{"_index":937,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:78",{"_index":945,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:89",{"_index":947,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:97",{"_index":932,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.value",{"_index":199,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["input/filter",{"_index":921,"title":{},"body":{"components/FilterByInputComponent.html":{},"coverage.html":{}}}],["input:checked",{"_index":1246,"title":{},"body":{"components/SwitchComponent.html":{}}}],["inputchar",{"_index":957,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["inputs",{"_index":433,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["intercept",{"_index":1005,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["intercept(req",{"_index":1008,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["interceptor",{"_index":1000,"title":{"interceptors/HttpErrorInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":1002,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["interface",{"_index":363,"title":{"interfaces/ApiServiceStructure.html":{},"interfaces/Endpoint.html":{},"interfaces/Entity.html":{},"interfaces/EntityShort.html":{},"interfaces/FileStatus.html":{},"interfaces/apiServiceShortStructure.html":{}},"body":{"interfaces/ApiServiceStructure.html":{},"interfaces/Endpoint.html":{},"interfaces/Entity.html":{},"interfaces/EntityShort.html":{},"interfaces/FileStatus.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{}}}],["interfaces",{"_index":364,"title":{},"body":{"interfaces/ApiServiceStructure.html":{},"interfaces/Endpoint.html":{},"interfaces/Entity.html":{},"interfaces/EntityShort.html":{},"interfaces/FileStatus.html":{},"interfaces/apiServiceShortStructure.html":{},"overview.html":{}}}],["interfaces/apiserviceshortstructure",{"_index":183,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"injectables/EntityService.html":{},"components/ExportApiButtonComponent.html":{},"components/IconTrashComponent.html":{}}}],["interfaces/apiservicestructure",{"_index":322,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EntityService.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{}}}],["interfaces/endpoint",{"_index":600,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/IconTrashComponent.html":{}}}],["interfaces/entity",{"_index":601,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["interfaces/entityshort",{"_index":1037,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["interfaces/filestatus",{"_index":1084,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["invalid",{"_index":1228,"title":{},"body":{"components/SwitchComponent.html":{}}}],["invalidfalse",{"_index":1219,"title":{},"body":{"components/SwitchComponent.html":{}}}],["invalidtrue",{"_index":1220,"title":{},"body":{"components/SwitchComponent.html":{}}}],["isactive",{"_index":275,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"interfaces/Endpoint.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ImportDialogComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["isapipage",{"_index":972,"title":{},"body":{"components/HeaderComponent.html":{}}}],["iscansubmit",{"_index":738,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["isfeatureenabled",{"_index":1210,"title":{},"body":{"components/SwitchComponent.html":{}}}],["item",{"_index":1024,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["item.includes(value",{"_index":954,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["items",{"_index":548,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["itemsperpage",{"_index":1193,"title":{},"body":{"components/PaginationComponent.html":{}}}],["json",{"_index":770,"title":{},"body":{"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{}}}],["json.description",{"_index":1114,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["json.entities",{"_index":1115,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["json.isactive",{"_index":1113,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["json.parse(text",{"_index":1105,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["json.parse(value",{"_index":778,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["json.stringify(datawithoutname",{"_index":904,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["json.stringify(this.data.structure",{"_index":775,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["jsonstring",{"_index":903,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["jszip",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":545,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["karma",{"_index":1371,"title":{},"body":{"index.html":{}}}],["keyboardevent",{"_index":747,"title":{},"body":{"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["keyframes",{"_index":1160,"title":{},"body":{"components/LoadingComponent.html":{}}}],["label",{"_index":451,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{}}}],["left",{"_index":559,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["legend",{"_index":56,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["line",{"_index":517,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["list",{"_index":1353,"title":{},"body":{"index.html":{}}}],["list'},{'name",{"_index":69,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["list.component.ts",{"_index":1272,"title":{},"body":{"coverage.html":{}}}],["list/api",{"_index":1271,"title":{},"body":{"coverage.html":{}}}],["list/card",{"_index":1275,"title":{},"body":{"coverage.html":{}}}],["list/endpoint",{"_index":1278,"title":{},"body":{"coverage.html":{}}}],["list/entity",{"_index":1281,"title":{},"body":{"coverage.html":{}}}],["loader",{"_index":1144,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loader:after",{"_index":1149,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loader:before",{"_index":1148,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading",{"_index":625,"title":{},"body":{"components/CardEntityComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{}}}],["loading'},{'name",{"_index":102,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["loading.component.css",{"_index":1138,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading.component.html",{"_index":1139,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loadingcomponent",{"_index":101,"title":{"components/LoadingComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["local",{"_index":1335,"title":{},"body":{"index.html":{}}}],["location",{"_index":381,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{}}}],["logourl",{"_index":973,"title":{},"body":{"components/HeaderComponent.html":{}}}],["margin",{"_index":408,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["matching",{"_index":113,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["math.ceil(this.totalitems",{"_index":1207,"title":{},"body":{"components/PaginationComponent.html":{}}}],["max",{"_index":865,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["media",{"_index":995,"title":{},"body":{"components/HeaderComponent.html":{}}}],["memberof",{"_index":54,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"interfaces/ApiServiceStructure.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["message",{"_index":647,"title":{},"body":{"components/CardEntityComponent.html":{},"components/EntityDialogComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["metadata",{"_index":19,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["methods",{"_index":134,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["microsoft/signalr",{"_index":234,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"dependencies.html":{}}}],["min",{"_index":963,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["miscellaneous",{"_index":1402,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mobile",{"_index":1307,"title":{},"body":{"dependencies.html":{}}}],["modify",{"_index":1346,"title":{},"body":{"index.html":{}}}],["modules",{"_index":1397,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":1389,"title":{},"body":{"index.html":{}}}],["movefocus",{"_index":135,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["movefocus(targetinput",{"_index":142,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["multi",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":61,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["namefor",{"_index":1352,"title":{},"body":{"index.html":{}}}],["nameinputref",{"_index":133,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["navigate",{"_index":1340,"title":{},"body":{"index.html":{}}}],["needs",{"_index":1386,"title":{},"body":{"index.html":{}}}],["negative",{"_index":339,"title":{},"body":{"injectables/ApiService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{}}}],["new",{"_index":223,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{},"index.html":{}}}],["newfiles",{"_index":1086,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["newfiles.map(file",{"_index":1092,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["newstate",{"_index":448,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["next",{"_index":475,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/ImportDialogComponent.html":{}}}],["next.handle(req).pipe",{"_index":1016,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["ng",{"_index":1337,"title":{},"body":{"index.html":{}}}],["ng_event_plugins",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngfor",{"_index":1054,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["ngif",{"_index":1050,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["ngoninit",{"_index":839,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/SwitchComponent.html":{}}}],["ngzone",{"_index":232,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["none",{"_index":404,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["normal",{"_index":529,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["normal').foreach(file",{"_index":1118,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["normal').length",{"_index":1096,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["notification",{"_index":1039,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["notification.subscribe",{"_index":1048,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["nowrap",{"_index":509,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["null",{"_index":335,"title":{},"body":{"injectables/ApiService.html":{},"components/CardEntityComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"components/ExportApiButtonComponent.html":{}}}],["number",{"_index":1185,"title":{},"body":{"components/PaginationComponent.html":{}}}],["observable",{"_index":230,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["oldname",{"_index":266,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{}}}],["onclick",{"_index":898,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["ondeleteconfirmed",{"_index":430,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["one",{"_index":1384,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":834,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/SwitchComponent.html":{}}}],["oninput",{"_index":136,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["oninput(event",{"_index":150,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["onkeypress",{"_index":928,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["onkeypress(event",{"_index":938,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["onpagechange(page",{"_index":1184,"title":{},"body":{"components/PaginationComponent.html":{}}}],["ontoggle",{"_index":1221,"title":{},"body":{"components/SwitchComponent.html":{}}}],["ontoggle(value",{"_index":1211,"title":{},"body":{"components/SwitchComponent.html":{}}}],["ontogglechange",{"_index":431,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["ontogglechange(newstate",{"_index":446,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["opacity",{"_index":1238,"title":{},"body":{"components/SwitchComponent.html":{}}}],["open",{"_index":491,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ImportDialogComponent.html":{},"index.html":{}}}],["open('api",{"_index":487,"title":{},"body":{"components/CardApiComponent.html":{}}}],["open(`${message",{"_index":672,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["open(message",{"_index":784,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["open(new",{"_index":1040,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["openeditdialog",{"_index":432,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["optimizes",{"_index":1365,"title":{},"body":{"index.html":{}}}],["optional",{"_index":146,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{}}}],["ordersupdated",{"_index":216,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["out",{"_index":1157,"title":{},"body":{"components/LoadingComponent.html":{}}}],["outline",{"_index":992,"title":{},"body":{"components/HeaderComponent.html":{}}}],["output",{"_index":456,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["outputs",{"_index":435,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["overflow",{"_index":506,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["overview",{"_index":1395,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":513,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["package",{"_index":1293,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":405,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["page",{"_index":104,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"index.html":{}}}],["pagechange",{"_index":1195,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagenotfoundcomponent",{"_index":103,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["pagination",{"_index":1186,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination'},{'name",{"_index":107,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["pagination.component.css",{"_index":1189,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.component.html",{"_index":1190,"title":{},"body":{"components/PaginationComponent.html":{}}}],["paginationcomponent",{"_index":106,"title":{"components/PaginationComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["param",{"_index":188,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{}}}],["parameters",{"_index":145,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{}}}],["params['code",{"_index":848,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["params['message",{"_index":851,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["patch",{"_index":333,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["path",{"_index":1140,"title":{},"body":{"components/LoadingComponent.html":{}}}],["performance",{"_index":1366,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":1042,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["pipe(catcherror((err",{"_index":326,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["pipes",{"_index":1356,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":1309,"title":{},"body":{"dependencies.html":{}}}],["pointer",{"_index":412,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["polymorpheuscomponent",{"_index":1035,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["polymorpheuscomponent(alertdeletecomponent",{"_index":1041,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["position",{"_index":552,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["post",{"_index":678,"title":{},"body":{"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{}}}],["post(`${this.baseurl}/apientity/${apiservicename",{"_index":823,"title":{},"body":{"injectables/EntityService.html":{}}}],["post(`${this.baseurl}/apiservice",{"_index":329,"title":{},"body":{"injectables/ApiService.html":{}}}],["powerful",{"_index":1349,"title":{},"body":{"index.html":{}}}],["previousurl",{"_index":393,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["previousurl.startswith(basedomain",{"_index":396,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["primary",{"_index":554,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/SwitchComponent.html":{}}}],["private",{"_index":131,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["processeddata",{"_index":1057,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["processeditdialogdata",{"_index":574,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["processeditdialogdata(data",{"_index":594,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["processjson",{"_index":1060,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["processjson(json",{"_index":1069,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["production",{"_index":1364,"title":{},"body":{"index.html":{}}}],["progressevent",{"_index":1103,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["project",{"_index":1327,"title":{},"body":{"index.html":{}}}],["properties",{"_index":31,"title":{"properties.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"properties.html":{}}}],["protected",{"_index":32,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["provide",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":237,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{}}}],["providehttpclient",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(app_routes",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1213,"title":{},"body":{"components/SwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":129,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["put",{"_index":330,"title":{},"body":{"injectables/ApiService.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["queryparams",{"_index":894,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["radius",{"_index":409,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["reactiveformsmodule",{"_index":924,"title":{},"body":{"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["read",{"_index":164,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["reader",{"_index":1099,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["reader.onload",{"_index":1101,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["reader.readastext(file",{"_index":1108,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["readfiles",{"_index":1061,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["readfiles(files",{"_index":1072,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["readonly",{"_index":33,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["red",{"_index":1136,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["reference",{"_index":1396,"title":{},"body":{"index.html":{}}}],["references",{"_index":1393,"title":{},"body":{"index.html":{}}}],["relative",{"_index":1147,"title":{},"body":{"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["reload",{"_index":1344,"title":{},"body":{"index.html":{}}}],["remarks",{"_index":50,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"interfaces/ApiServiceStructure.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["removefile",{"_index":1062,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["removefile(filetoremove",{"_index":1073,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["repositories/api",{"_index":462,"title":{},"body":{"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{}}}],["repositories/endpoint",{"_index":604,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["repositories/entity",{"_index":657,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["repository.service",{"_index":463,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{}}}],["repository.service.ts",{"_index":343,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{},"coverage.html":{}}}],["repository.service.ts:10",{"_index":345,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:13",{"_index":349,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:17",{"_index":350,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:21",{"_index":346,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:25",{"_index":708,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:27",{"_index":347,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:29",{"_index":704,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:31",{"_index":351,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:33",{"_index":710,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["repository.service.ts:38",{"_index":348,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:42",{"_index":352,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["repository.service.ts:9",{"_index":698,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["req",{"_index":1012,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["resources",{"_index":1388,"title":{},"body":{"index.html":{}}}],["response",{"_index":55,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["response.error",{"_index":1125,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["responsealert",{"_index":1025,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["results",{"_index":112,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":185,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"components/FilterByInputComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{}}}],["returns",{"_index":148,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["reverse",{"_index":1159,"title":{},"body":{"components/LoadingComponent.html":{}}}],["rgba(0",{"_index":863,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["right",{"_index":551,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/SwitchComponent.html":{}}}],["root",{"_index":238,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/AppComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{}}}],["root'},{'name",{"_index":71,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["route",{"_index":677,"title":{},"body":{"interfaces/Endpoint.html":{},"components/ErrorDisplayComponent.html":{}}}],["router",{"_index":320,"title":{},"body":{"injectables/ApiService.html":{},"components/BackButtonComponent.html":{},"components/CardEndpointComponent.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{}}}],["routermodule",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["routeroutlet",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1336,"title":{},"body":{"index.html":{}}}],["runner",{"_index":1373,"title":{},"body":{"index.html":{}}}],["running",{"_index":1339,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":236,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":319,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["safari",{"_index":532,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["scaffolding",{"_index":1347,"title":{},"body":{"index.html":{}}}],["scale(1.05",{"_index":874,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["schematics",{"_index":1354,"title":{},"body":{"index.html":{}}}],["screen",{"_index":996,"title":{},"body":{"components/HeaderComponent.html":{}}}],["scrollbar",{"_index":534,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["search",{"_index":933,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["searchquery",{"_index":930,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["selector",{"_index":20,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["serveonce",{"_index":1338,"title":{},"body":{"index.html":{}}}],["server",{"_index":1334,"title":{},"body":{"index.html":{}}}],["service",{"_index":298,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"components/CardApiComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["service.name",{"_index":1121,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["service.service",{"_index":354,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EntityRepositoryService.html":{}}}],["service.service.ts",{"_index":212,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"coverage.html":{}}}],["service.service.ts:10",{"_index":229,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["service.service.ts:11",{"_index":225,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["service.service.ts:12",{"_index":227,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["service.service.ts:13",{"_index":219,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["service.service.ts:14",{"_index":719,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:15",{"_index":294,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:16",{"_index":812,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:22",{"_index":725,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:23",{"_index":305,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:24",{"_index":817,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:29",{"_index":307,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:30",{"_index":816,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:33",{"_index":721,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:36",{"_index":813,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:37",{"_index":297,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:42",{"_index":819,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:45",{"_index":301,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:46",{"_index":724,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:51",{"_index":312,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:55",{"_index":814,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:58",{"_index":727,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:63",{"_index":303,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:64",{"_index":820,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:67",{"_index":221,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["service.service.ts:71",{"_index":314,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:72",{"_index":723,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:77",{"_index":815,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:83",{"_index":818,"title":{},"body":{"injectables/EntityService.html":{}}}],["service.service.ts:84",{"_index":729,"title":{},"body":{"injectables/EndpointService.html":{}}}],["service.service.ts:85",{"_index":310,"title":{},"body":{"injectables/ApiService.html":{}}}],["service.service.ts:98",{"_index":726,"title":{},"body":{"injectables/EndpointService.html":{}}}],["servicename",{"_index":304,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"injectables/EndpointService.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["services/api",{"_index":353,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["services/endpoint",{"_index":711,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["services/entity",{"_index":803,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["services/error",{"_index":1015,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["set",{"_index":776,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["setstructure(value",{"_index":771,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["shadow",{"_index":861,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["showdialog",{"_index":137,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["showdialog(content",{"_index":153,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["showerror",{"_index":742,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["showerror(message",{"_index":757,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["showicons",{"_index":1215,"title":{},"body":{"components/SwitchComponent.html":{}}}],["shownotification",{"_index":1023,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["signalr",{"_index":233,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["signalr.httptransporttype.websockets",{"_index":244,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["signalr.hubconnection",{"_index":228,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["signalr.hubconnectionbuilder",{"_index":240,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["size",{"_index":418,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["sizing",{"_index":525,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/LoadingComponent.html":{}}}],["skipnegotiation",{"_index":242,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["slide",{"_index":1153,"title":{},"body":{"components/LoadingComponent.html":{}}}],["slider",{"_index":1239,"title":{},"body":{"components/SwitchComponent.html":{}}}],["slider:before",{"_index":1242,"title":{},"body":{"components/SwitchComponent.html":{}}}],["solid",{"_index":858,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/LoadingComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"index.html":{}}}],["space",{"_index":508,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{}}}],["speed",{"_index":1367,"title":{},"body":{"index.html":{}}}],["src/.../app.config.ts",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":377,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1255,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/data/components/alert",{"_index":10,"title":{},"body":{"components/AlertDeleteComponent.html":{},"coverage.html":{}}}],["src/app/data/components/api",{"_index":114,"title":{},"body":{"components/ApiDialogComponent.html":{},"coverage.html":{}}}],["src/app/data/components/back",{"_index":378,"title":{},"body":{"components/BackButtonComponent.html":{},"coverage.html":{}}}],["src/app/data/components/card",{"_index":422,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"coverage.html":{}}}],["src/app/data/components/endpoint",{"_index":679,"title":{},"body":{"components/EndpointDialogComponent.html":{},"coverage.html":{}}}],["src/app/data/components/entity",{"_index":736,"title":{},"body":{"components/EntityDialogComponent.html":{},"coverage.html":{}}}],["src/app/data/components/export",{"_index":896,"title":{},"body":{"components/ExportApiButtonComponent.html":{},"coverage.html":{}}}],["src/app/data/components/filter",{"_index":920,"title":{},"body":{"components/FilterByInputComponent.html":{},"coverage.html":{}}}],["src/app/data/components/header/header.component.ts",{"_index":966,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/data/components/header/header.component.ts:37",{"_index":978,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:46",{"_index":975,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:54",{"_index":979,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:63",{"_index":976,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:71",{"_index":984,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:85",{"_index":980,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/header/header.component.ts:97",{"_index":981,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/data/components/icon",{"_index":1018,"title":{},"body":{"components/IconTrashComponent.html":{},"coverage.html":{}}}],["src/app/data/components/import",{"_index":1049,"title":{},"body":{"components/ImportDialogComponent.html":{},"coverage.html":{}}}],["src/app/data/components/loading/loading.component.ts",{"_index":1137,"title":{},"body":{"components/LoadingComponent.html":{},"coverage.html":{}}}],["src/app/data/components/loading/loading.component.ts:29",{"_index":1142,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts",{"_index":1182,"title":{},"body":{"components/PaginationComponent.html":{},"coverage.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:102",{"_index":1203,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:60",{"_index":1200,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:68",{"_index":1199,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:76",{"_index":1197,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:83",{"_index":1201,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/pagination/pagination.component.ts:91",{"_index":1206,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts",{"_index":1209,"title":{},"body":{"components/SwitchComponent.html":{},"coverage.html":{}}}],["src/app/data/components/switch/switch.component.ts:54",{"_index":1223,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts:61",{"_index":1224,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts:68",{"_index":1231,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts:77",{"_index":1229,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts:85",{"_index":1225,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/components/switch/switch.component.ts:96",{"_index":1226,"title":{},"body":{"components/SwitchComponent.html":{}}}],["src/app/data/pages/api",{"_index":1270,"title":{},"body":{"coverage.html":{}}}],["src/app/data/pages/card",{"_index":1274,"title":{},"body":{"coverage.html":{}}}],["src/app/data/pages/endpoint",{"_index":1277,"title":{},"body":{"coverage.html":{}}}],["src/app/data/pages/entity",{"_index":1280,"title":{},"body":{"coverage.html":{}}}],["src/app/data/pages/error",{"_index":830,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"coverage.html":{}}}],["src/app/data/pages/page",{"_index":1165,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/interceptors/http",{"_index":1003,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/interfaces/apiserviceshortstructure.ts",{"_index":1249,"title":{},"body":{"interfaces/apiServiceShortStructure.html":{},"coverage.html":{}}}],["src/app/interfaces/apiservicestructure.ts",{"_index":365,"title":{},"body":{"interfaces/ApiServiceStructure.html":{},"coverage.html":{}}}],["src/app/interfaces/endpoint.ts",{"_index":676,"title":{},"body":{"interfaces/Endpoint.html":{},"coverage.html":{}}}],["src/app/interfaces/entity.ts",{"_index":733,"title":{},"body":{"interfaces/Entity.html":{},"coverage.html":{}}}],["src/app/interfaces/entityshort.ts",{"_index":829,"title":{},"body":{"interfaces/EntityShort.html":{},"coverage.html":{}}}],["src/app/interfaces/filestatus.ts",{"_index":917,"title":{},"body":{"interfaces/FileStatus.html":{},"coverage.html":{}}}],["src/app/repositories/api",{"_index":342,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{},"coverage.html":{}}}],["src/app/repositories/endpoint",{"_index":692,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"coverage.html":{}}}],["src/app/repositories/entity",{"_index":788,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"coverage.html":{}}}],["src/app/services/api",{"_index":210,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/services/endpoint",{"_index":718,"title":{},"body":{"injectables/EndpointService.html":{},"coverage.html":{}}}],["src/app/services/entity",{"_index":810,"title":{},"body":{"injectables/EntityService.html":{},"coverage.html":{}}}],["src/app/services/error",{"_index":875,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["standalone",{"_index":923,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["start",{"_index":249,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"index.html":{}}}],["started",{"_index":1326,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1253,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":918,"title":{},"body":{"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["store",{"_index":1360,"title":{},"body":{"index.html":{}}}],["string",{"_index":267,"title":{},"body":{"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"interfaces/apiServiceShortStructure.html":{}}}],["structure",{"_index":735,"title":{},"body":{"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"interfaces/EntityShort.html":{}}}],["structure(value",{"_index":777,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["structureinputref",{"_index":739,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["styles/button.css",{"_index":468,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ExportApiButtonComponent.html":{}}}],["styles/card.css",{"_index":467,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["styles/icon.css",{"_index":469,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{}}}],["styleurl",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{}}}],["styleurls",{"_index":26,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["sub",{"_index":626,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["subject",{"_index":235,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["submit",{"_index":138,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["submit(event",{"_index":158,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["subscribe",{"_index":194,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/ImportDialogComponent.html":{}}}],["subscription",{"_index":602,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["success",{"_index":488,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/FileStatus.html":{},"components/ImportDialogComponent.html":{}}}],["such",{"_index":1355,"title":{},"body":{"index.html":{}}}],["suits",{"_index":1385,"title":{},"body":{"index.html":{}}}],["switch",{"_index":109,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["switch.component.css",{"_index":1217,"title":{},"body":{"components/SwitchComponent.html":{}}}],["switch.component.html",{"_index":1218,"title":{},"body":{"components/SwitchComponent.html":{}}}],["switch/switch.component",{"_index":458,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["switchcomponent",{"_index":108,"title":{"components/SwitchComponent.html":{}},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"coverage.html":{}}}],["switchmap",{"_index":1033,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["switchmap((response",{"_index":1043,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["table",{"_index":1292,"title":{},"body":{"coverage.html":{},"dependencies.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1291,"title":{},"body":{"coverage.html":{}}}],["taiga",{"_index":15,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"dependencies.html":{}}}],["takeuntil",{"_index":1034,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["takeuntil(this.router.events",{"_index":1047,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["targetinput",{"_index":147,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["targetinput.nativeelement.queryselector('input",{"_index":786,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["targetinput.nativeelement.queryselector('input').focus",{"_index":206,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["templateref",{"_index":154,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["templateurl",{"_index":28,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["test",{"_index":1372,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1379,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":1377,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1369,"title":{},"body":{"index.html":{}}}],["text",{"_index":505,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["textarea').focus",{"_index":787,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["this.alerts",{"_index":486,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EntityDialogComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["this.alerts.open",{"_index":1046,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["this.alerts.open(error.message",{"_index":337,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["this.alerts.open(message",{"_index":673,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.alertservice.open(`error",{"_index":883,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.apideleted.emit",{"_index":496,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.apiinfo",{"_index":480,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.apiinfo.isactive",{"_index":471,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.apiinfo.name",{"_index":478,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.apilistsubject.asobservable",{"_index":231,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.getvalue",{"_index":261,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.getvalue().map(apiservice",{"_index":277,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.next",{"_index":276,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.next(apilist",{"_index":257,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.next(currentlist",{"_index":263,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apilistsubject.next(initialdata",{"_index":279,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.apiname",{"_index":609,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.apiservice.createapiservice(service",{"_index":358,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.createfullapiservice(service",{"_index":359,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.createfullapiservice(service).subscribe",{"_index":1120,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.apiservice.deleteapiservice(servicename",{"_index":361,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.getapilist",{"_index":356,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.getapistructurelist(name",{"_index":357,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.updateapiservice(oldname",{"_index":360,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservice.updateapiservicestatus(servicename",{"_index":362,"title":{},"body":{"injectables/ApiServiceRepositoryService.html":{}}}],["this.apiservicerepository",{"_index":473,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.apiservicerepository.deleteapiservice(this.apiinfo.name).subscribe",{"_index":495,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.apiservicerepository.getapistructurelist(this.apiinfo.name).subscribe",{"_index":901,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["this.baseurl}/apiendpoint/${apiservicename}/${entityname",{"_index":730,"title":{},"body":{"injectables/EndpointService.html":{}}}],["this.baseurl}/apiendpoint/${apiservicename}/${entityname}/${actionname",{"_index":731,"title":{},"body":{"injectables/EndpointService.html":{}}}],["this.baseurl}/apiendpoint/${servicename}/${entityname}/${endpoint}/${isactive",{"_index":732,"title":{},"body":{"injectables/EndpointService.html":{}}}],["this.baseurl}/apientity/${apiservicename}/${entityname",{"_index":824,"title":{},"body":{"injectables/EntityService.html":{}}}],["this.baseurl}/apientity/${servicename}/${entityname}/${isactive",{"_index":826,"title":{},"body":{"injectables/EntityService.html":{}}}],["this.baseurl}/apiservice/${encodeuricomponent",{"_index":334,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.baseurl}/apiservice/${encodeuricomponent(name",{"_index":328,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.baseurl}/apiservice/${encodeuricomponent(oldname",{"_index":331,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.baseurl}/apiservice/${encodeuricomponent(servicename",{"_index":332,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.buttonclick.emit",{"_index":986,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.cd.markforcheck",{"_index":485,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ImportDialogComponent.html":{}}}],["this.context.completewith(false",{"_index":1124,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.context.completewith(this.data",{"_index":191,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.context.data",{"_index":187,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.control.setvalue(currentfiles",{"_index":1132,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.control.value",{"_index":1129,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.control.value.filter(file",{"_index":1130,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.control.valuechanges.subscribe((files",{"_index":1085,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.controlname",{"_index":941,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.data.name",{"_index":205,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.data.name.trim",{"_index":186,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.data.route",{"_index":691,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["this.data.route.trim",{"_index":690,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["this.data.structure",{"_index":774,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["this.dialog",{"_index":479,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["this.dialog().subscribe",{"_index":987,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.dialogs.open(content",{"_index":192,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.endpointdeleted.emit(this.endpointinfo.route",{"_index":618,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.endpointinfo",{"_index":612,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.endpointinfo.isactive",{"_index":606,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.endpointinfo.route",{"_index":611,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.endpointrepositoryservice",{"_index":607,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.endpointservice.createendpoint(apiservicename",{"_index":713,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.endpointservice.deleteendpoint(apiservicename",{"_index":716,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.endpointservice.getendpointbyname(apiservicename",{"_index":714,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.endpointservice.getendpointlist(apiservicename",{"_index":712,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.endpointservice.updateendpoint(apiservicename",{"_index":715,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.endpointservice.updateendpointstatus(apiservicename",{"_index":717,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["this.entitydeleted.emit(this.entityinfo.name",{"_index":670,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.entityinfo",{"_index":663,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.entityinfo.isactive",{"_index":659,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.entityinfo.name",{"_index":610,"title":{},"body":{"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["this.entityrepositoryservice",{"_index":660,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.entityservice.createapientity(apiservicename",{"_index":806,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.entityservice.deleteapientity(apiservicename",{"_index":808,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.entityservice.getapientity(apiservicename",{"_index":805,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.entityservice.getapientitylist(apiservicename",{"_index":804,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.entityservice.updateapientity(apiservicename",{"_index":807,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.entityservice.updateentitystatus(servicename",{"_index":809,"title":{},"body":{"injectables/EntityRepositoryService.html":{}}}],["this.errorcode",{"_index":847,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["this.errorhandler.handleerror(error",{"_index":336,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["this.errormessage",{"_index":850,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["this.files",{"_index":1091,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.files.every(file",{"_index":1123,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.files.filter(f",{"_index":1094,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.files.filter(file",{"_index":1127,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.files.find(f",{"_index":1109,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.files.some(f",{"_index":1088,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.form.controls[this.controlname].valuechanges.subscribe(value",{"_index":956,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.form.get(this.controlname",{"_index":950,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.handleeditdialogdata(data",{"_index":664,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.handleendpointupdate(response",{"_index":615,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.handleendpointupdateerror(error",{"_index":616,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.handleentitydeletion",{"_index":666,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.handleentityupdate(response",{"_index":668,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.handleentityupdateerror(error",{"_index":669,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.handleerror",{"_index":662,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["this.handleerror(err",{"_index":327,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["this.handlesubmit",{"_index":782,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["this.hasfiles",{"_index":1093,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.hasvalue",{"_index":190,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["this.http",{"_index":324,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["this.hubconnection",{"_index":239,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.hubconnection.on('addservice",{"_index":259,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.hubconnection.on('recievemessage",{"_index":255,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.hubconnection.on('removeservice",{"_index":271,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.hubconnection.on('updateservice",{"_index":265,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.hubconnection.on('updatestatusservice",{"_index":274,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["this.invalidfalse.markastouched",{"_index":1233,"title":{},"body":{"components/SwitchComponent.html":{}}}],["this.invalidtrue.markastouched",{"_index":1232,"title":{},"body":{"components/SwitchComponent.html":{}}}],["this.iscansubmit",{"_index":779,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["this.isfeatureenabled",{"_index":1212,"title":{},"body":{"components/SwitchComponent.html":{}}}],["this.item.name",{"_index":1045,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["this.items",{"_index":955,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.items.filter(item",{"_index":953,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.itemsperpage",{"_index":1208,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.location",{"_index":470,"title":{},"body":{"components/CardApiComponent.html":{}}}],["this.location.back",{"_index":397,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["this.location.path(true",{"_index":394,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["this.oldname",{"_index":477,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{}}}],["this.processeddata.foreach(service",{"_index":1119,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.processeddata.length",{"_index":1117,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.processeddata.push(apiservicestructure",{"_index":1116,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.processeditdialogdata(data",{"_index":613,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.processjson(json",{"_index":1107,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.readfiles(newfiles",{"_index":1097,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["this.responsealert.emit(true",{"_index":1044,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["this.route.queryparams.subscribe((params",{"_index":846,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["this.router.navigate",{"_index":852,"title":{},"body":{"components/ErrorDisplayComponent.html":{}}}],["this.router.navigate(['/error",{"_index":893,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.router.navigate(['/page",{"_index":886,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.router.navigatebyurl",{"_index":398,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["this.router.url",{"_index":391,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["this.searchquery.emit(value",{"_index":952,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.showerror('json",{"_index":783,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["this.toggle.emit(this.value",{"_index":1234,"title":{},"body":{"components/SwitchComponent.html":{}}}],["this.updateendpoint(data",{"_index":614,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["this.updatefilestatus(file",{"_index":1106,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["throwerror",{"_index":317,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["throwerror(error",{"_index":340,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{},"interceptors/HttpErrorInterceptor.html":{}}}],["thumb",{"_index":538,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["thumb:hover",{"_index":540,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["title",{"_index":375,"title":{},"body":{"components/AppComponent.html":{}}}],["toggle",{"_index":1222,"title":{},"body":{"components/SwitchComponent.html":{}}}],["tools",{"_index":1350,"title":{},"body":{"index.html":{}}}],["top",{"_index":550,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/SwitchComponent.html":{}}}],["totalitems",{"_index":1194,"title":{},"body":{"components/PaginationComponent.html":{}}}],["totalpages",{"_index":1196,"title":{},"body":{"components/PaginationComponent.html":{}}}],["track",{"_index":536,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["transform",{"_index":871,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["transition",{"_index":416,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["translatex",{"_index":1164,"title":{},"body":{"components/LoadingComponent.html":{}}}],["translatex(16.8px",{"_index":1248,"title":{},"body":{"components/SwitchComponent.html":{}}}],["translatex(70px",{"_index":1161,"title":{},"body":{"components/LoadingComponent.html":{}}}],["transport",{"_index":243,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["trash",{"_index":1020,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash'},{'name",{"_index":99,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["trash.component",{"_index":461,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{}}}],["trash.component.css",{"_index":1038,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.css,../../styles/icon.css",{"_index":1021,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.html",{"_index":1022,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts",{"_index":1019,"title":{},"body":{"components/IconTrashComponent.html":{},"coverage.html":{}}}],["trash.component.ts:42",{"_index":1031,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts:50",{"_index":1028,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts:58",{"_index":1030,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts:66",{"_index":1029,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts:74",{"_index":1027,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts:98",{"_index":1032,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash/icon",{"_index":460,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/IconTrashComponent.html":{},"coverage.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["true",{"_index":184,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/SwitchComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":392,"title":{},"body":{"components/BackButtonComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["tslib",{"_index":1321,"title":{},"body":{"dependencies.html":{}}}],["tui",{"_index":962,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["tuialertoptions",{"_index":47,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["tuialertservice",{"_index":293,"title":{},"body":{"injectables/ApiService.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"injectables/ErrorHandlerService.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["tuiappearance",{"_index":427,"title":{},"body":{"components/CardApiComponent.html":{}}}],["tuiautofocus",{"_index":119,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["tuiavatar",{"_index":1051,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["tuibutton",{"_index":120,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["tuidatalistwrapper",{"_index":121,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["tuidialog",{"_index":457,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/HeaderComponent.html":{}}}],["tuidialog(apidialogcomponent",{"_index":450,"title":{},"body":{"components/CardApiComponent.html":{}}}],["tuidialog(endpointdialogcomponent",{"_index":598,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["tuidialog(entitydialogcomponent",{"_index":651,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["tuidialog(importdialogcomponent",{"_index":982,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tuidialogcontext",{"_index":180,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ImportDialogComponent.html":{}}}],["tuidialogservice",{"_index":156,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["tuifilelike",{"_index":919,"title":{},"body":{"interfaces/FileStatus.html":{}}}],["tuifiles",{"_index":1052,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["tuiicon",{"_index":1083,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["tuiinputmodule",{"_index":122,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["tuiinputslidermodule",{"_index":1187,"title":{},"body":{"components/PaginationComponent.html":{}}}],["tuilink",{"_index":1053,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["tuipagination",{"_index":1188,"title":{},"body":{"components/PaginationComponent.html":{}}}],["tuipopover",{"_index":41,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["tuiroot",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["tuiselectmodule",{"_index":123,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["tuislider",{"_index":124,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["tuiswitch",{"_index":1216,"title":{},"body":{"components/SwitchComponent.html":{}}}],["tuiswitchoptionsprovider",{"_index":1214,"title":{},"body":{"components/SwitchComponent.html":{}}}],["tuitextareamodule",{"_index":737,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["tuitextfield",{"_index":125,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["tuitextfieldcontrollermodule",{"_index":126,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/PaginationComponent.html":{}}}],["type",{"_index":45,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":680,"title":{},"body":{"components/EndpointDialogComponent.html":{}}}],["typescript",{"_index":1183,"title":{},"body":{"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["ui",{"_index":16,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["ui/addon",{"_index":1302,"title":{},"body":{"dependencies.html":{}}}],["ui/cdk",{"_index":46,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"dependencies.html":{}}}],["ui/core",{"_index":48,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PageNotFoundComponent.html":{},"dependencies.html":{}}}],["ui/event",{"_index":1308,"title":{},"body":{"dependencies.html":{}}}],["ui/experimental",{"_index":1311,"title":{},"body":{"dependencies.html":{}}}],["ui/icons",{"_index":1312,"title":{},"body":{"dependencies.html":{}}}],["ui/kit",{"_index":181,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"interfaces/FileStatus.html":{},"components/FilterByInputComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"dependencies.html":{}}}],["ui/layout",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["ui/legacy",{"_index":182,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{},"components/PaginationComponent.html":{},"dependencies.html":{}}}],["ui/polymorpheus",{"_index":49,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{}}}],["undefined",{"_index":53,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["unit",{"_index":1368,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":849,"title":{},"body":{"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["updateapientity",{"_index":793,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["updateapientity(apiservicename",{"_index":801,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["updateapientity(this.apiname",{"_index":667,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["updateapiservice",{"_index":286,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["updateapiservice(oldname",{"_index":311,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["updateapiservice(this.oldname",{"_index":483,"title":{},"body":{"components/CardApiComponent.html":{}}}],["updateapiservicestatus",{"_index":287,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["updateapiservicestatus(servicename",{"_index":313,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ApiServiceRepositoryService.html":{}}}],["updateapiservicestatus(this.apiinfo.name",{"_index":474,"title":{},"body":{"components/CardApiComponent.html":{}}}],["updateendpoint",{"_index":575,"title":{},"body":{"components/CardEndpointComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["updateendpoint(apiservicename",{"_index":707,"title":{},"body":{"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["updateendpoint(data",{"_index":596,"title":{},"body":{"components/CardEndpointComponent.html":{}}}],["updateendpointstatus",{"_index":608,"title":{},"body":{"components/CardEndpointComponent.html":{},"injectables/EndpointRepositoryService.html":{},"injectables/EndpointService.html":{}}}],["updateendpointstatus(apiservicename",{"_index":709,"title":{},"body":{"injectables/EndpointRepositoryService.html":{}}}],["updateendpointstatus(servicename",{"_index":728,"title":{},"body":{"injectables/EndpointService.html":{}}}],["updateentitystatus",{"_index":794,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["updateentitystatus(servicename",{"_index":802,"title":{},"body":{"injectables/EntityRepositoryService.html":{},"injectables/EntityService.html":{}}}],["updateentitystatus(this.apiname",{"_index":661,"title":{},"body":{"components/CardEntityComponent.html":{}}}],["updatefilestatus",{"_index":1063,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["updatefilestatus(file",{"_index":1077,"title":{},"body":{"components/ImportDialogComponent.html":{}}}],["url",{"_index":389,"title":{},"body":{"components/BackButtonComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["use",{"_index":1374,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":1329,"title":{},"body":{"index.html":{}}}],["validators",{"_index":948,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["validators.pattern('^[a",{"_index":943,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["value",{"_index":36,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"injectables/ApiService.html":{},"interfaces/ApiServiceStructure.html":{},"components/AppComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"interfaces/Endpoint.html":{},"components/EndpointDialogComponent.html":{},"injectables/EndpointService.html":{},"interfaces/Entity.html":{},"components/EntityDialogComponent.html":{},"injectables/EntityService.html":{},"interfaces/EntityShort.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{},"interfaces/apiServiceShortStructure.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":780,"title":{},"body":{"components/EntityDialogComponent.html":{}}}],["value.replace(/[^a",{"_index":201,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["var",{"_index":59,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/ApiDialogComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["variable",{"_index":1256,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1403,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1331,"title":{},"body":{"index.html":{},"properties.html":{}}}],["viewchild",{"_index":178,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["viewchild('descriptioninput",{"_index":163,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["viewchild('nameinput",{"_index":170,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EntityDialogComponent.html":{}}}],["visit",{"_index":1394,"title":{},"body":{"index.html":{}}}],["void",{"_index":149,"title":{},"body":{"components/ApiDialogComponent.html":{},"injectables/ApiHubServiceService.html":{},"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/ErrorDisplayComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ExportApiButtonComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/ImportDialogComponent.html":{},"components/PaginationComponent.html":{},"components/SwitchComponent.html":{}}}],["webkit",{"_index":530,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{}}}],["weight",{"_index":414,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{}}}],["whenever",{"_index":1345,"title":{},"body":{"index.html":{}}}],["white",{"_index":402,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/ExportApiButtonComponent.html":{},"components/HeaderComponent.html":{},"components/SwitchComponent.html":{}}}],["width",{"_index":503,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SwitchComponent.html":{}}}],["window.location.origin}/api",{"_index":315,"title":{},"body":{"injectables/ApiService.html":{},"injectables/EndpointService.html":{},"injectables/EntityService.html":{}}}],["window.location.origin}/hubs",{"_index":226,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["window.url.createobjecturl(blob",{"_index":908,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["window.url.revokeobjecturl(url",{"_index":914,"title":{},"body":{"components/ExportApiButtonComponent.html":{}}}],["withautomaticreconnect([1000",{"_index":245,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["withurl(`hubs/apilisthub",{"_index":241,"title":{},"body":{"injectables/ApiHubServiceService.html":{}}}],["word",{"_index":526,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["wrap",{"_index":527,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{},"components/HeaderComponent.html":{}}}],["x",{"_index":523,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["y",{"_index":521,"title":{},"body":{"components/CardApiComponent.html":{},"components/CardEndpointComponent.html":{},"components/CardEntityComponent.html":{},"components/ErrorDisplayComponent.html":{}}}],["yes",{"_index":160,"title":{},"body":{"components/ApiDialogComponent.html":{}}}],["z0",{"_index":203,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["za",{"_index":202,"title":{},"body":{"components/ApiDialogComponent.html":{},"components/EndpointDialogComponent.html":{},"components/EntityDialogComponent.html":{},"components/FilterByInputComponent.html":{}}}],["zone.js",{"_index":1323,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AlertDeleteComponent.html":{"url":"components/AlertDeleteComponent.html","title":"component - AlertDeleteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AlertDeleteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/alert-delete/alert-delete.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент AlertDeleteComponent предназначен для отображения уведомления при выполнении действия удаления.\nИспользует компоненты Taiga UI для управления всплывающим окном уведомления и его опциями.\nЭтот компонент является частью системы уведомлений и используется для оповещения пользователей о действиях удаления.\nИнтегрируется с сервисом уведомлений Taiga UI для обеспечения единообразного пользовательского опыта.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alert-on-delete\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./alert-delete.component.css\n            \n\n\n\n            \n                templateUrl\n                ./alert-delete.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                context\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext, boolean>>()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/alert-delete/alert-delete.component.ts:38\n                        \n                    \n\n            \n                \n                    Контекст для компонента TuiPopover, который управляет опциями уведомления.\nЭтот контекст внедряется с использованием функции injectContext из Taiga UI.\nОн предоставляет необходимую конфигурацию для всплывающего окна уведомления.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport type { TuiPopover } from '@taiga-ui/cdk';\nimport type { TuiAlertOptions } from '@taiga-ui/core';\nimport { injectContext } from '@taiga-ui/polymorpheus';\n\n/**\n * Компонент AlertDeleteComponent предназначен для отображения уведомления при выполнении действия удаления.\n * Использует компоненты Taiga UI для управления всплывающим окном уведомления и его опциями.\n *\n * @remarks\n * Этот компонент является частью системы уведомлений и используется для оповещения пользователей о действиях удаления.\n * Интегрируется с сервисом уведомлений Taiga UI для обеспечения единообразного пользовательского опыта.\n *\n * @example\n * html\n * \n *\n */\n@Component({\n  selector: 'app-alert-on-delete',\n  imports: [CommonModule],\n  templateUrl: './alert-delete.component.html',\n  styleUrls: ['./alert-delete.component.css'], \n})\nexport class AlertDeleteComponent {\n  /**\n   * Контекст для компонента TuiPopover, который управляет опциями уведомления.\n   *\n   * @remarks\n   * Этот контекст внедряется с использованием функции injectContext из Taiga UI.\n   * Он предоставляет необходимую конфигурацию для всплывающего окна уведомления.\n   *\n   * @type {TuiPopover, boolean>}\n   * @default undefined\n   * @memberof AlertDeleteComponent\n   */\n  protected readonly context = injectContext, boolean>>();\n}\n\n    \n\n    \n        \n    {{ response ? 'Да' : 'Нет' }}\n\n    \n\n    \n                \n                    ./alert-delete.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ response ? \\'Да\\' : \\'Нет\\' }}'\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlertDeleteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ApiDialogComponent.html":{"url":"components/ApiDialogComponent.html","title":"component - ApiDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ApiDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/api-dialog/api-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент ApiDialogComponent предназначен для редактирования данных API через диалоговое окно.\nИспользует компоненты Taiga UI для создания интерактивного интерфейса.\nЭтот компонент предоставляет пользователю возможность редактировать данные API, такие как имя и описание,\nи отправлять изменения через диалоговое окно.\nИнтегрируется с сервисами Taiga UI для управления диалогами и вводом данных.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-api-edit-dialog\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            TuiAutoFocus\n                            TuiButton\n                            TuiDataListWrapper\n                            TuiInputModule\n                            TuiSelectModule\n                            TuiSlider\n                            TuiTextfield\n                            TuiTextfieldControllerModule\n                \n            \n\n            \n                styleUrls\n                ./api-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./api-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                context\n                            \n                            \n                                    \n                                descriptionInputRef\n                            \n                            \n                                    Private\n                                    Readonly\n                                dialogs\n                            \n                            \n                                    \n                                nameInputRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                moveFocus\n                            \n                            \n                                    Protected\n                                onInput\n                            \n                            \n                                    Protected\n                                showDialog\n                            \n                            \n                                    Protected\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasValue\n                                \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moveFocus\n                        \n                    \n                \n            \n            \n                \n                        \n                    moveFocus(targetInput: ElementRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/api-dialog/api-dialog.component.ts:173\n                        \n                    \n\n\n            \n                \n                        Перемещает фокус на указанное поле ввода.\nИспользуется для управления фокусом между полями ввода.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                targetInput\n                                            \n                                                        ElementRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСсылка на элемент ввода.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        onInput\n                        \n                    \n                \n            \n            \n                \n                        \n                    onInput(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/api-dialog/api-dialog.component.ts:156\n                        \n                    \n\n\n            \n                \n                        Обработчик ввода данных в поле имени.\nОчищает значение от недопустимых символов и обновляет данные API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСобытие ввода данных.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        showDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    showDialog(content: TemplateRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/api-dialog/api-dialog.component.ts:143\n                        \n                    \n\n\n            \n                \n                        Открывает диалоговое окно с заданным содержимым.\nИспользует сервис TuiDialogService для открытия диалога.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                        TemplateRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nШаблон содержимого диалогового окна.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        submit\n                        \n                    \n                \n            \n            \n                \n                        \n                    submit(event?: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/api-dialog/api-dialog.component.ts:125\n                        \n                    \n\n\n            \n                \n                        Обработчик отправки формы.\nПредотвращает стандартное поведение отправки формы и завершает диалог, если имя не пустое.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nСобытие отправки формы.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext\n    >()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/api-dialog/api-dialog.component.ts:90\n                        \n                    \n\n            \n                \n                    Контекст диалогового окна, содержащий данные API.\nВнедряется с использованием функции injectContext из Taiga UI.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        descriptionInputRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('descriptionInput', {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/api-dialog/api-dialog.component.ts:68\n                        \n                    \n\n            \n                \n                    Ссылка на элемент ввода описания.\nИспользуется для управления фокусом и значением поля ввода описания.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/api-dialog/api-dialog.component.ts:79\n                        \n                    \n\n            \n                \n                    Сервис для управления диалоговыми окнами.\nВнедряется с использованием Angular DI.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nameInputRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('nameInput', {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/api-dialog/api-dialog.component.ts:56\n                        \n                    \n\n            \n                \n                    Ссылка на элемент ввода имени.\nИспользуется для управления фокусом и значением поля ввода имени.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasValue\n                    \n                \n\n                \n                    \n                        gethasValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/api-dialog/api-dialog.component.ts:102\n                                \n                            \n                    \n                        \n                                Флаг, указывающий, есть ли значение в поле ввода имени.\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/api-dialog/api-dialog.component.ts:112\n                                \n                            \n                    \n                        \n                                Данные API, которые редактируются в диалоговом окне.\n\n\n                                \n                                \n                                \n                                    Returns :         apiServiceShortStructure\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ElementRef, TemplateRef } from '@angular/core';\nimport { Component, inject, ViewChild } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TuiAutoFocus } from '@taiga-ui/cdk';\nimport type { TuiDialogContext } from '@taiga-ui/core';\nimport { TuiButton, TuiDialogService, TuiTextfield } from '@taiga-ui/core';\nimport { TuiDataListWrapper, TuiSlider } from '@taiga-ui/kit';\nimport {\n  TuiInputModule,\n  TuiSelectModule,\n  TuiTextfieldControllerModule,\n} from '@taiga-ui/legacy';\nimport { injectContext } from '@taiga-ui/polymorpheus';\nimport { apiServiceShortStructure } from \"../../../interfaces/apiServiceShortStructure\";\n\n/**\n * Компонент ApiDialogComponent предназначен для редактирования данных API через диалоговое окно.\n * Использует компоненты Taiga UI для создания интерактивного интерфейса.\n *\n * @remarks\n * Этот компонент предоставляет пользователю возможность редактировать данные API, такие как имя и описание,\n * и отправлять изменения через диалоговое окно.\n * Интегрируется с сервисами Taiga UI для управления диалогами и вводом данных.\n *\n * @example\n * html\n * \n * \n */\n@Component({\n  selector: 'app-api-edit-dialog',\n  imports: [\n    FormsModule,\n    TuiAutoFocus,\n    TuiButton,\n    TuiDataListWrapper,\n    TuiInputModule,\n    TuiSelectModule,\n    TuiSlider,\n    TuiTextfield,\n    TuiTextfieldControllerModule,\n  ],\n  templateUrl: './api-dialog.component.html',\n  styleUrls: ['./api-dialog.component.css'],\n})\nexport class ApiDialogComponent {\n  /**\n   * Ссылка на элемент ввода имени.\n   *\n   * @remarks\n   * Используется для управления фокусом и значением поля ввода имени.\n   *\n   * @type {ElementRef}\n   * @memberof ApiDialogComponent\n   */\n  @ViewChild('nameInput', { read: ElementRef }) nameInputRef!: ElementRef;\n\n  /**\n   * Ссылка на элемент ввода описания.\n   *\n   * @remarks\n   * Используется для управления фокусом и значением поля ввода описания.\n   *\n   * @type {ElementRef}\n   * @memberof ApiDialogComponent\n   */\n  @ViewChild('descriptionInput', { read: ElementRef })\n  descriptionInputRef!: ElementRef;\n\n  /**\n   * Сервис для управления диалоговыми окнами.\n   *\n   * @remarks\n   * Внедряется с использованием Angular DI.\n   *\n   * @type {TuiDialogService}\n   * @memberof ApiDialogComponent\n   */\n  private readonly dialogs = inject(TuiDialogService);\n\n  /**\n   * Контекст диалогового окна, содержащий данные API.\n   *\n   * @remarks\n   * Внедряется с использованием функции injectContext из Taiga UI.\n   *\n   * @type {TuiDialogContext}\n   * @memberof ApiDialogComponent\n   */\n  public readonly context =\n    injectContext\n    >();\n\n  /**\n   * Флаг, указывающий, есть ли значение в поле ввода имени.\n   *\n   * @type {boolean}\n   * @returns {boolean} Возвращает true, если имя не пустое.\n   * @memberof ApiDialogComponent\n   */\n  protected get hasValue(): boolean {\n    return this.data.name.trim() !== '';\n  }\n\n  /**\n   * Данные API, которые редактируются в диалоговом окне.\n   *\n   * @type {apiServiceShortStructure}\n   * @memberof ApiDialogComponent\n   */\n  protected get data(): apiServiceShortStructure {\n    return this.context.data;\n  }\n\n  /**\n   * Обработчик отправки формы.\n   *\n   * @param event - Событие отправки формы.\n   * @remarks\n   * Предотвращает стандартное поведение отправки формы и завершает диалог, если имя не пустое.\n   *\n   * @memberof ApiDialogComponent\n   */\n  protected submit(event?: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n    if (this.hasValue) {\n      this.context.completeWith(this.data);\n    }\n  }\n\n  /**\n   * Открывает диалоговое окно с заданным содержимым.\n   *\n   * @param content - Шаблон содержимого диалогового окна.\n   * @remarks\n   * Использует сервис TuiDialogService для открытия диалога.\n   *\n   * @memberof ApiDialogComponent\n   */\n  protected showDialog(content: TemplateRef): void {\n    this.dialogs.open(content, { dismissible: true }).subscribe();\n  }\n\n  /**\n   * Обработчик ввода данных в поле имени.\n   *\n   * @param event - Событие ввода данных.\n   * @remarks\n   * Очищает значение от недопустимых символов и обновляет данные API.\n   *\n   * @memberof ApiDialogComponent\n   */\n  protected onInput(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    const value = input.value;\n    const cleanedValue = value.replace(/[^a-zA-Z0-9]/g, '');\n    input.value = cleanedValue;\n    this.data.name = cleanedValue;\n  }\n\n  /**\n   * Перемещает фокус на указанное поле ввода.\n   *\n   * @param targetInput - Ссылка на элемент ввода.\n   * @remarks\n   * Используется для управления фокусом между полями ввода.\n   *\n   * @memberof ApiDialogComponent\n   */\n  protected moveFocus(targetInput: ElementRef): void {\n    targetInput.nativeElement.querySelector('input').focus();\n  }\n}\n\n    \n\n    \n        \n  Имя API\n\n\n\n  Описание\n\n\n\n  \n    Отправить\n  \n\n\n    \n\n    \n                \n                    ./api-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Имя API  Описание      Отправить  '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ApiDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiHubServiceService.html":{"url":"injectables/ApiHubServiceService.html","title":"injectable - ApiHubServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiHubServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api-hub-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiListSubject\n                            \n                            \n                                    Private\n                                baseUrl\n                            \n                            \n                                    Private\n                                hubConnection\n                            \n                            \n                                ordersUpdated$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api-hub-service.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeData\n                        \n                    \n                \n            \n            \n                \ninitializeData(initialData: apiServiceShortStructure[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-hub-service.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                initialData\n                                            \n                                                            apiServiceShortStructure[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiListSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-hub-service.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/hubs`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-hub-service.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hubConnection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     signalR.HubConnection\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-hub-service.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ordersUpdated$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.apiListSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-hub-service.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Input, NgZone } from '@angular/core';\nimport * as signalR from '@microsoft/signalr';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { apiServiceShortStructure } from \"../interfaces/apiServiceShortStructure\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiHubServiceService {\n  private hubConnection!: signalR.HubConnection;\n  private apiListSubject = new BehaviorSubject([]);\n  private baseUrl = `${window.location.origin}/hubs`;\n  ordersUpdated$: Observable = this.apiListSubject.asObservable();\n  constructor() {\n    this.hubConnection = new signalR.HubConnectionBuilder()\n      .withUrl(`hubs/apilisthub`, {\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets\n      })\n      .withAutomaticReconnect([1000, 3000, 5000])\n      .build();\n\n    this.hubConnection\n      .start()\n      .then(() => console.log('Connected to SignalR hub'))\n      .catch(err => console.error('Error connecting to SignalR hub:', err));\n\n    this.hubConnection.on('RecieveMessage', (apiList: apiServiceShortStructure[]) => {\n      this.apiListSubject.next(apiList);\n      console.log(apiList);\n    });\n\n    this.hubConnection.on('AddService', (api: apiServiceShortStructure) => {\n      const currentList = this.apiListSubject.getValue();\n      currentList.push(api);\n      this.apiListSubject.next(currentList);\n      console.log(currentList);\n    });\n    \n    this.hubConnection.on('UpdateService', (oldName: string, api: apiServiceShortStructure) => {\n      const currentList = this.apiListSubject.getValue();\n      const index = currentList.findIndex((apiService: apiServiceShortStructure) => {\n        return apiService.name === oldName\n      });\n      currentList[index] = api;\n      this.apiListSubject.next(currentList);\n    });\n    \n    this.hubConnection.on('RemoveService', (name: string) => {\n      const currentList = this.apiListSubject.getValue();\n      const index = currentList.findIndex((apiService: apiServiceShortStructure) => {\n        return apiService.name === name\n      });\n      currentList.splice(index, 1);\n      this.apiListSubject.next(currentList);\n    });\n\n    this.hubConnection.on('UpdateStatusService', (name: string, isActive: boolean) => {\n      this.apiListSubject.next(\n        this.apiListSubject.getValue().map(apiService => \n          apiService.name === name ? { ...apiService, isActive } : apiService\n        )\n      );\n    });\n  }\n  \n  initializeData(initialData: apiServiceShortStructure[]) {\n    this.apiListSubject.next(initialData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createApiService\n                            \n                            \n                                createFullApiService\n                            \n                            \n                                deleteApiService\n                            \n                            \n                                getApiList\n                            \n                            \n                                getApiStructureList\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                updateApiService\n                            \n                            \n                                updateApiServiceStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorHandler: ErrorHandlerService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api-service.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createApiService\n                        \n                    \n                \n            \n            \n                \ncreateApiService(service: apiServiceShortStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                service\n                                            \n                                                            apiServiceShortStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createFullApiService\n                        \n                    \n                \n            \n            \n                \ncreateFullApiService(service: ApiServiceStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                service\n                                            \n                                                            ApiServiceStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteApiService\n                        \n                    \n                \n            \n            \n                \ndeleteApiService(serviceName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiList\n                        \n                    \n                \n            \n            \n                \ngetApiList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiStructureList\n                        \n                    \n                \n            \n            \n                \ngetApiStructureList(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiService\n                        \n                    \n                \n            \n            \n                \nupdateApiService(oldName: string, service: apiServiceShortStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                service\n                                            \n                                                            apiServiceShortStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiServiceStatus\n                        \n                    \n                \n            \n            \n                \nupdateApiServiceStatus(serviceName: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api-service.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/api`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api-service.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { ApiServiceStructure } from \"../interfaces/ApiServiceStructure\";\nimport { apiServiceShortStructure } from \"../interfaces/apiServiceShortStructure\";\nimport { ErrorHandlerService } from './error-handler.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  private baseUrl = `${window.location.origin}/api`;\n\n  constructor(\n    private http: HttpClient,\n    private errorHandler: ErrorHandlerService,\n    private alerts: TuiAlertService\n  ) {}\n\n  getApiList(): Observable {\n    return this.http\n      .get(`${this.baseUrl}/ApiService`)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  getApiStructureList(name: string): Observable {\n    return this.http\n      .get(\n        `${this.baseUrl}/ApiService/${encodeURIComponent(name)}`\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  createApiService(\n    service: apiServiceShortStructure\n  ): Observable {\n    return this.http\n      .post(`${this.baseUrl}/ApiService`, service)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  createFullApiService(service: ApiServiceStructure): Observable {\n    return this.http\n      .post(`${this.baseUrl}/ApiService`, service)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  updateApiService(\n    oldName: string,\n    service: apiServiceShortStructure\n  ): Observable {\n    return this.http\n      .put(\n        `${this.baseUrl}/ApiService/${encodeURIComponent(oldName)}`,\n        service\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  deleteApiService(serviceName: string): Observable {\n    return this.http\n      .delete(\n        `${this.baseUrl}/ApiService/${encodeURIComponent(serviceName)}`\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  updateApiServiceStatus(\n    serviceName: string,\n    isActive: boolean\n  ): Observable {\n    return this.http\n      .patch(\n        `${this.baseUrl}/ApiService/${encodeURIComponent(\n          serviceName\n        )}/${isActive}`,\n        null\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  private handleError(error: HttpErrorResponse): Observable {\n    this.errorHandler.handleError(error);\n    this.alerts.open(error.message, { appearance: 'negative' }).subscribe();\n    return throwError(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiServiceRepositoryService.html":{"url":"injectables/ApiServiceRepositoryService.html","title":"injectable - ApiServiceRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiServiceRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/api-service-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createApiService\n                            \n                            \n                                createFullApiService\n                            \n                            \n                                deleteApiService\n                            \n                            \n                                getApiList\n                            \n                            \n                                getApiStructureList\n                            \n                            \n                                updateApiService\n                            \n                            \n                                updateApiServiceStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/api-service-repository.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createApiService\n                        \n                    \n                \n            \n            \n                \ncreateApiService(service: apiServiceShortStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                service\n                                            \n                                                            apiServiceShortStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createFullApiService\n                        \n                    \n                \n            \n            \n                \ncreateFullApiService(service: ApiServiceStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                service\n                                            \n                                                            ApiServiceStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteApiService\n                        \n                    \n                \n            \n            \n                \ndeleteApiService(serviceName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiList\n                        \n                    \n                \n            \n            \n                \ngetApiList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiStructureList\n                        \n                    \n                \n            \n            \n                \ngetApiStructureList(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiService\n                        \n                    \n                \n            \n            \n                \nupdateApiService(oldName: string, service: apiServiceShortStructure)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                service\n                                            \n                                                            apiServiceShortStructure\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiServiceStatus\n                        \n                    \n                \n            \n            \n                \nupdateApiServiceStatus(serviceName: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/api-service-repository.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiServiceStructure } from \"../interfaces/ApiServiceStructure\";\nimport { apiServiceShortStructure } from \"../interfaces/apiServiceShortStructure\";\nimport { ApiService } from '../services/api-service.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiServiceRepositoryService {\n  constructor(private apiService: ApiService) {}\n\n  getApiList(): Observable {\n    return this.apiService.getApiList();\n  }\n\n  getApiStructureList(name: string): Observable {\n    return this.apiService.getApiStructureList(name);\n  }\n\n  createApiService(\n    service: apiServiceShortStructure\n  ): Observable {\n    return this.apiService.createApiService(service);\n  }\n\n  createFullApiService(service: ApiServiceStructure): Observable {\n    return this.apiService.createFullApiService(service);\n  }\n\n  updateApiService(\n    oldName: string,\n    service: apiServiceShortStructure\n  ): Observable {\n    return this.apiService.updateApiService(oldName, service);\n  }\n\n  deleteApiService(serviceName: string): Observable {\n    return this.apiService.deleteApiService(serviceName);\n  }\n\n  updateApiServiceStatus(\n    serviceName: string,\n    isActive: boolean\n  ): Observable {\n    return this.apiService.updateApiServiceStatus(serviceName, isActive);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiServiceStructure.html":{"url":"interfaces/ApiServiceStructure.html","title":"interface - ApiServiceStructure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiServiceStructure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/ApiServiceStructure.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс, представляющий полную структуру API сервиса.\nЭтот интерфейс расширяет apiServiceShortStructure, добавляя массив сущностей.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            entities\n                                        \n                                \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Описание сервиса.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entities\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entities:         Entity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Entity[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Массив сущностей, связанных с сервисом.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : false\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Флаг активности сервиса.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Название сервиса.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Entity } from \"./Entity\";\n\n/**\n * Интерфейс, представляющий полную структуру API сервиса.\n *\n * @remarks\n * Этот интерфейс расширяет `apiServiceShortStructure`, добавляя массив сущностей.\n *\n * @type {{ name: string, isActive: boolean, description: string, entities: Entity[] }}\n * @default { name: '', isActive: false, description: '', entities: [] }\n * @memberof Component\n */\nexport interface ApiServiceStructure {\n  /**\n   * Название сервиса.\n   * @type {string}\n   */\n  name: string;\n\n  /**\n   * Флаг активности сервиса.\n   * @type {boolean}\n   * @default false\n   */\n  isActive: boolean;\n\n  /**\n   * Описание сервиса.\n   * @type {string}\n   */\n  description: string;\n\n  /**\n   * Массив сущностей, связанных с сервисом.\n   * @type {Entity[]}\n   */\n  entities: Entity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                            TuiRoot\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ApiEasier'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { TuiRoot } from \"@taiga-ui/core\";\nimport { Component } from '@angular/core';\nimport { RouterModule, RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  imports: [\n    RouterOutlet, \n    TuiRoot, \n    RouterModule,\n  ],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  title = 'ApiEasier';\n}\n\n    \n\n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BackButtonComponent.html":{"url":"components/BackButtonComponent.html","title":"component - BackButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BackButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/back-button/back-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент BackButtonComponent предназначен для возврата пользователя на предыдущую страницу.\nИспользует Angular Router и Location для управления навигацией.\nЭтот компонент предоставляет функциональность кнопки \"Назад\", которая позволяет пользователю вернуться\nна предыдущую страницу или на главную страницу, если история навигации пуста.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-back-button\n            \n\n\n\n            \n                styleUrls\n                ./back-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./back-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(location: Location, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/back-button/back-button.component.ts:24\n                            \n                        \n\n                \n                    \n                            Конструктор компонента BackButtonComponent.\nВнедряет сервисы Location и Router для управления навигацией.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для работы с историей навигации.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для управления маршрутизацией.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/back-button/back-button.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Метод для возврата на предыдущую страницу.\nПроверяет текущий URL и предыдущий URL. Если предыдущий URL начинается с базового домена,\nвозвращает пользователя на предыдущую страницу. В противном случае перенаправляет на главную страницу.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n\n/**\n * Компонент BackButtonComponent предназначен для возврата пользователя на предыдущую страницу.\n * Использует Angular Router и Location для управления навигацией.\n *\n * @remarks\n * Этот компонент предоставляет функциональность кнопки \"Назад\", которая позволяет пользователю вернуться\n * на предыдущую страницу или на главную страницу, если история навигации пуста.\n *\n * @example\n * html\n * \n *\n */\n@Component({\n  selector: 'app-back-button',\n  imports: [],\n  templateUrl: './back-button.component.html',\n  styleUrls: ['./back-button.component.css'], // Исправлено с styleUrl на styleUrls\n})\nexport class BackButtonComponent {\n  /**\n   * Конструктор компонента BackButtonComponent.\n   *\n   * @param location - Сервис для работы с историей навигации.\n   * @param router - Сервис для управления маршрутизацией.\n   *\n   * @remarks\n   * Внедряет сервисы Location и Router для управления навигацией.\n   *\n   * @memberof BackButtonComponent\n   */\n  constructor(private location: Location, private router: Router) {}\n\n  /**\n   * Метод для возврата на предыдущую страницу.\n   *\n   * @remarks\n   * Проверяет текущий URL и предыдущий URL. Если предыдущий URL начинается с базового домена,\n   * возвращает пользователя на предыдущую страницу. В противном случае перенаправляет на главную страницу.\n   *\n   * @memberof BackButtonComponent\n   */\n  goBack(): void {\n    const currentUrl = this.router.url;\n    try {\n      const previousUrl = this.location.path(true);\n      const baseDomain = '/';\n      if (previousUrl.startsWith(baseDomain)) {\n        this.location.back();\n      } else {\n        this.router.navigateByUrl('/');\n      }\n    } catch (error) {\n      this.router.navigateByUrl('/');\n    }\n  }\n}\n\n    \n\n    \n        \n  Назад\n\n\n    \n\n    \n                \n                    ./back-button.component.css\n                \n                button {\n    background-color: white;\n    border: none;\n    padding: 0.625rem 1.25rem;\n    /* Относительные отступы */\n    margin: 0.625rem 0.625rem;\n    /* Относительные отступы */\n    border-radius: 0.3125rem;\n    /* Относительный радиус скругления */\n    cursor: pointer;\n    font-weight: bold;\n    transition: background-color 0.3s;\n    font-size: 1rem;\n    /* Относительный размер шрифта */\n}\n\nbutton:hover {\n    background-color: #e6e6e6;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Назад'\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BackButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardApiComponent.html":{"url":"components/CardApiComponent.html","title":"component - CardApiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardApiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/card-api/card-api.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент CardApiComponent предназначен для отображения и управления информацией о API.\nПозволяет редактировать, удалять и изменять состояние API.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует сервисы для взаимодействия с репозиторием API и управления состоянием.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-api\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            TuiAppearance\n                            TuiButton\n                            RouterModule\n                                SwitchComponent\n                                IconTrashComponent\n                                ExportApiButtonComponent\n                \n            \n\n            \n                styleUrls\n                ./card-api.component.css,../../styles/card.css,../../styles/button.css,../../styles/icon.css\n            \n\n\n\n            \n                templateUrl\n                ./card-api.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                dialog\n                            \n                            \n                                location\n                            \n                            \n                                oldName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onDeleteConfirmed\n                            \n                            \n                                onToggleChange\n                            \n                            \n                                openEditDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiDeleted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiServiceRepository: ApiServiceRepositoryService, cd: ChangeDetectorRef, alerts: TuiAlertService, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/card-api/card-api.component.ts:87\n                            \n                        \n\n                \n                    \n                            Конструктор компонента CardApiComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apiServiceRepository\n                                                  \n                                                        \n                                                                        ApiServiceRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для взаимодействия с репозиторием API.\n\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для управления изменением состояния.\n\n\n                                                        \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для отображения уведомлений.\n\n\n                                                        \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для работы с историей навигации.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        apiInfo\n                    \n                \n                \n                    \n                        Type :         apiServiceShortStructure\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-api/card-api.component.ts:65\n                            \n                        \n                \n                    \n                        Входной параметр для получения информации о API.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        apiDeleted\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-api/card-api.component.ts:73\n                            \n                        \n                \n                    \n                        Событие, которое вызывается при удалении API.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteConfirmed\n                        \n                    \n                \n            \n            \n                \nonDeleteConfirmed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-api/card-api.component.ts:191\n                        \n                    \n\n\n            \n                \n                        Обработчик подтверждения удаления API.\nУдаляет API из репозитория и уведомляет родительский компонент об удалении.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToggleChange\n                        \n                    \n                \n            \n            \n                \nonToggleChange(newState: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-api/card-api.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Обработчик изменения состояния переключателя.\nОбновляет состояние API и сохраняет изменения в репозитории.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовое состояние переключателя.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-api/card-api.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Открывает диалог для редактирования информации о API.\nСохраняет старое имя API и открывает диалог для редактирования.\nОбновляет информацию о API после закрытия диалога.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : tuiDialog(ApiDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-api/card-api.component.ts:84\n                        \n                    \n\n            \n                \n                    Диалог для редактирования информации о API.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Location\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-api/card-api.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oldName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-api/card-api.component.ts:75\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport {\n  TuiAppearance,\n  TuiButton,\n  tuiDialog,\n  TuiAlertService,\n} from '@taiga-ui/core';\nimport { RouterModule } from '@angular/router';\nimport { apiServiceShortStructure } from \"../../../interfaces/apiServiceShortStructure\";\nimport { SwitchComponent } from '../switch/switch.component';\nimport { ApiDialogComponent } from '../api-dialog/api-dialog.component';\nimport { Location } from '@angular/common';\nimport { IconTrashComponent } from '../icon-trash/icon-trash.component';\nimport { ApiServiceRepositoryService } from '../../../repositories/api-service-repository.service';\nimport { ExportApiButtonComponent } from '../export-api-button/export-api-button.component';\n\n/**\n * Компонент CardApiComponent предназначен для отображения и управления информацией о API.\n * Позволяет редактировать, удалять и изменять состояние API.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует сервисы для взаимодействия с репозиторием API и управления состоянием.\n *\n * @example\n * html\n * \n *\n */\n@Component({\n  selector: 'app-card-api',\n  imports: [\n    CommonModule,\n    TuiAppearance,\n    TuiButton,\n    RouterModule,\n    SwitchComponent,\n    IconTrashComponent,\n    ExportApiButtonComponent,\n  ],\n  templateUrl: './card-api.component.html',\n  styleUrls: [\n    './card-api.component.css',\n    '../../styles/card.css',\n    '../../styles/button.css',\n    '../../styles/icon.css',\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CardApiComponent {\n  /**\n   * Входной параметр для получения информации о API.\n   *\n   * @type {apiServiceShortStructure}\n   * @memberof CardApiComponent\n   */\n  @Input() apiInfo!: apiServiceShortStructure;\n\n  /**\n   * Событие, которое вызывается при удалении API.\n   *\n   * @type {EventEmitter}\n   * @memberof CardApiComponent\n   */\n  @Output() apiDeleted = new EventEmitter();\n\n  oldName: string = '';\n  location: Location;\n\n  /**\n   * Диалог для редактирования информации о API.\n   *\n   * @type {tuiDialog}\n   * @memberof CardApiComponent\n   */\n  private readonly dialog = tuiDialog(ApiDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  });\n\n  /**\n   * Конструктор компонента CardApiComponent.\n   *\n   * @param apiServiceRepository - Сервис для взаимодействия с репозиторием API.\n   * @param cd - Сервис для управления изменением состояния.\n   * @param alerts - Сервис для отображения уведомлений.\n   * @param location - Сервис для работы с историей навигации.\n   *\n   * @memberof CardApiComponent\n   */\n  constructor(\n    private apiServiceRepository: ApiServiceRepositoryService,\n    private cd: ChangeDetectorRef,\n    private alerts: TuiAlertService,\n    location: Location\n  ) {\n    this.location = location;\n  }\n\n  /**\n   * Обработчик изменения состояния переключателя.\n   *\n   * @param newState - Новое состояние переключателя.\n   * @remarks\n   * Обновляет состояние API и сохраняет изменения в репозитории.\n   *\n   * @memberof CardApiComponent\n   */\n  onToggleChange(newState: boolean) {\n    this.apiInfo.isActive = newState;\n    console.log('Состояние переключателя изменилось на:', newState);\n    this.apiServiceRepository\n      .updateApiServiceStatus(this.apiInfo.name, newState)\n      .subscribe({\n        next: (response) => {\n          console.log('Состояние сервиса обновлено:', response);\n        },\n        error: (error) => {\n          console.error('Ошибка при обновлении состояния сервиса:', error);\n        },\n      });\n  }\n\n  /**\n   * Открывает диалог для редактирования информации о API.\n   *\n   * @remarks\n   * Сохраняет старое имя API и открывает диалог для редактирования.\n   * Обновляет информацию о API после закрытия диалога.\n   *\n   * @memberof CardApiComponent\n   */\n  openEditDialog(): void {\n    this.oldName = this.apiInfo.name;\n    this.dialog({ ...this.apiInfo }).subscribe({\n      next: (data) => {\n        console.info(`Dialog emitted data = ${data} - ${this.apiInfo.name}}`);\n\n        this.apiServiceRepository\n          .updateApiService(this.oldName, data)\n          .subscribe({\n            next: (response) => {\n              console.log('API обновлена:', response);\n              this.apiInfo = data;\n              this.cd.markForCheck();\n              this.alerts\n                .open('API успешно обновлено', {\n                  appearance: 'success',\n                })\n                .subscribe();\n            },\n            error: (error) => {\n              if (error.status === 409) {\n                this.alerts\n                  .open('Ошибка: API с таким именем уже существует', {\n                    appearance: 'negative',\n                  })\n                  .subscribe();\n              } else {\n                this.alerts\n                  .open('Ошибка при обновлении API', {\n                    appearance: 'negative',\n                  })\n                  .subscribe();\n              }\n            },\n          });\n      },\n      complete: () => {\n        console.info('Dialog closed');\n      },\n    });\n  }\n\n  /**\n   * Обработчик подтверждения удаления API.\n   *\n   * @remarks\n   * Удаляет API из репозитория и уведомляет родительский компонент об удалении.\n   *\n   * @memberof CardApiComponent\n   */\n  onDeleteConfirmed(): void {\n    this.apiServiceRepository.deleteApiService(this.apiInfo.name).subscribe({\n      next: () => {\n        console.log(`Сервис \"${this.apiInfo.name}\" удален.`);\n        this.apiDeleted.emit();\n      },\n      error: (error) => {\n        console.error('Ошибка при удалении сервиса:', error);\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n    \n    \n    \n\n{{ apiInfo.name }}\n{{ apiInfo.description }}\n\n    К тестам\n    Детали\n    \n\n    \n\n    \n                \n                    ./card-api.component.css\n                \n                \n                \n                    ../../styles/card.css\n                \n                \nh3 {\n    margin: 0;\n    font-size: 24px;\n    color: #0056a6;\n    width: 65%; /* Ширина элемента */\n    text-overflow: ellipsis; /* Добавляем троеточие */\n    white-space: nowrap; /* Запрещаем перенос текста на новую строку */\n    overflow: hidden; /* Скрываем текст, который не помещается */\n    height: 2rem;\n}\n  \n  p {\n    margin: 10px 0;\n    color: #666;\n    font-size: 16px;\n    line-height: 1.5; /* Установите желаемую высоту строки */\n    height: calc(1.5em * 2); /* Высота равна трём строкам */\n    overflow-y: auto; /* Добавляем вертикальную прокрутку при необходимости */\n    overflow-x: hidden; /* Запрещаем горизонтальную прокрутку */\n    box-sizing: border-box; /* Включаем отступы и границы в размер элемента */\n    word-wrap: break-word; /* Перенос слов на новую строку, если они не помещаются */\n    white-space: normal; /* Разрешаем перенос текста на новую строку */\n}\n\n  /* Стилизация полосы прокрутки для WebKit-браузеров (Chrome, Safari, Edge) */\n  p::-webkit-scrollbar {\n    width: 8px; /* Ширина полосы прокрутки */\n  }\n\n  p::-webkit-scrollbar-track {\n    background: #f1f1f1; /* Цвет фона полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb {\n    background: #888; /* Цвет полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb:hover {\n    background: #555; /* Цвет полосы прокрутки при наведении */\n  }\n  \n.actions {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    flex-wrap: wrap;\n  }\n  \n.top-right {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    display: flex;\n    align-items: center;\n  }\n\n                \n                    ../../styles/button.css\n                \n                .primary-button {\n    background-color: #0056a6;\n    color: white;\n    border: none;\n    block-size: auto;\n    padding: 7px 13px;\n    border-radius: 5px;\n    cursor: pointer;\n    font-weight: bold;\n    transition: background-color 0.3s;\n    margin-left: 1rem;\n    margin-bottom: 1rem;\n  }\n  \n  .primary-button:hover {\n    background-color: #004080;\n  }\n                \n                    ../../styles/icon.css\n                \n                  \ni {\n    margin-right: 15px; /* 10px * 1.2 */\n    cursor: pointer;\n    color: #666;\n    transition: color 0.3s;\n    font-size: 20px; /* Увеличиваем размер шрифта на 20% */\n}\n\ni:hover {\n    color: #000;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ apiInfo.name }}{{ apiInfo.description }}    К тестам    Детали    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardApiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardEndpointComponent.html":{"url":"components/CardEndpointComponent.html","title":"component - CardEndpointComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardEndpointComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/card-endpoint/card-endpoint.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент CardEndpointComponent предназначен для отображения и управления информацией об эндпоинтах API.\nПозволяет редактировать, удалять и изменять состояние эндпоинтов.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует сервисы для взаимодействия с репозиторием эндпоинтов и управления состоянием.\nExample :html\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-endpoint\n            \n\n\n            \n                imports\n                \n                                SwitchComponent\n                                IconTrashComponent\n                            CommonModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./card-endpoint.component.css,../../styles/card.css,../../styles/icon.css\n            \n\n\n\n            \n                templateUrl\n                ./card-endpoint.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleEndpointUpdate\n                            \n                            \n                                    Private\n                                handleEndpointUpdateError\n                            \n                            \n                                onDeleteConfirmed\n                            \n                            \n                                onToggleChange\n                            \n                            \n                                openEditDialog\n                            \n                            \n                                    Private\n                                processEditDialogData\n                            \n                            \n                                    Private\n                                updateEndpoint\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiName\n                            \n                            \n                                endpointInfo\n                            \n                            \n                                entityInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                endpointDeleted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(endpointRepositoryService: EndpointRepositoryService, cd: ChangeDetectorRef, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:90\n                            \n                        \n\n                \n                    \n                            Конструктор компонента CardEndpointComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        endpointRepositoryService\n                                                  \n                                                        \n                                                                        EndpointRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для взаимодействия с репозиторием эндпоинтов.\n\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для управления изменением состояния.\n\n\n                                                        \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для отображения уведомлений.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        apiName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:71\n                            \n                        \n                \n                    \n                        Входной параметр для получения имени API.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        endpointInfo\n                    \n                \n                \n                    \n                        Type :         Endpoint\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:62\n                            \n                        \n                \n                    \n                        Входной параметр для получения информации об эндпоинте.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        entityInfo\n                    \n                \n                \n                    \n                        Type :         Entity\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:54\n                            \n                        \n                \n                    \n                        Входной параметр для получения информации о сущности.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        endpointDeleted\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:79\n                            \n                        \n                \n                    \n                        Событие, которое вызывается при удалении эндпоинта.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEndpointUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEndpointUpdate(response: Endpoint, data: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:192\n                        \n                    \n\n\n            \n                \n                        Обрабатывает успешное обновление эндпоинта.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОтвет от сервера.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовые данные эндпоинта.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEndpointUpdateError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEndpointUpdateError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:210\n                        \n                    \n\n\n            \n                \n                        Обрабатывает ошибку при обновлении эндпоинта.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОбъект ошибки.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteConfirmed\n                        \n                    \n                \n            \n            \n                \nonDeleteConfirmed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:235\n                        \n                    \n\n\n            \n                \n                        Обработчик подтверждения удаления эндпоинта.\nУдаляет эндпоинт из репозитория и уведомляет родительский компонент об удалении.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToggleChange\n                        \n                    \n                \n            \n            \n                \nonToggleChange(newState: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Обработчик изменения состояния переключателя.\nОбновляет состояние эндпоинта и сохраняет изменения в репозитории.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовое состояние переключателя.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:144\n                        \n                    \n\n\n            \n                \n                        Открывает диалог для редактирования информации об эндпоинте.\nОбновляет информацию об эндпоинте после закрытия диалога.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        processEditDialogData\n                        \n                    \n                \n            \n            \n                \n                        \n                    processEditDialogData(data: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:158\n                        \n                    \n\n\n            \n                \n                        Обрабатывает данные, полученные из диалога редактирования.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nДанные эндпоинта, полученные из диалога.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateEndpoint\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEndpoint(data: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Обновляет информацию об эндпоинте в репозитории.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовые данные эндпоинта.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : tuiDialog(EndpointDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-endpoint/card-endpoint.component.ts:87\n                        \n                    \n\n            \n                \n                    Диалог для редактирования информации об эндпоинте.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { Endpoint } from \"../../../interfaces/Endpoint\";\nimport { Entity } from \"../../../interfaces/Entity\";\nimport { apiServiceShortStructure } from \"../../../interfaces/apiServiceShortStructure\";\nimport { Subscription } from 'rxjs';\nimport { SwitchComponent } from '../switch/switch.component';\nimport { IconTrashComponent } from '../icon-trash/icon-trash.component';\nimport { tuiDialog, TuiAlertService } from '@taiga-ui/core';\nimport { EndpointDialogComponent } from '../endpoint-dialog/endpoint-dialog.component';\nimport { EndpointRepositoryService } from '../../../repositories/endpoint-repository.service';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Компонент CardEndpointComponent предназначен для отображения и управления информацией об эндпоинтах API.\n * Позволяет редактировать, удалять и изменять состояние эндпоинтов.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует сервисы для взаимодействия с репозиторием эндпоинтов и управления состоянием.\n *\n * @example\n * html\n * \n * \n */\n@Component({\n  selector: 'app-card-endpoint',\n  imports: [SwitchComponent, IconTrashComponent, CommonModule, RouterModule],\n  templateUrl: './card-endpoint.component.html',\n  styleUrls: [\n    './card-endpoint.component.css',\n    '../../styles/card.css',\n    '../../styles/icon.css',\n  ],\n})\nexport class CardEndpointComponent {\n  /**\n   * Входной параметр для получения информации о сущности.\n   *\n   * @type {Entity}\n   * @memberof CardEndpointComponent\n   */\n  @Input() entityInfo!: Entity;\n\n  /**\n   * Входной параметр для получения информации об эндпоинте.\n   *\n   * @type {Endpoint}\n   * @memberof CardEndpointComponent\n   */\n  @Input() endpointInfo!: Endpoint;\n\n  /**\n   * Входной параметр для получения имени API.\n   *\n   * @type {string}\n   * @default ''\n   * @memberof CardEndpointComponent\n   */\n  @Input() apiName: string = '';\n\n  /**\n   * Событие, которое вызывается при удалении эндпоинта.\n   *\n   * @type {EventEmitter}\n   * @memberof CardEndpointComponent\n   */\n  @Output() endpointDeleted = new EventEmitter();\n\n  /**\n   * Диалог для редактирования информации об эндпоинте.\n   *\n   * @type {tuiDialog}\n   * @memberof CardEndpointComponent\n   */\n  private readonly dialog = tuiDialog(EndpointDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  });\n\n  /**\n   * Конструктор компонента CardEndpointComponent.\n   *\n   * @param endpointRepositoryService - Сервис для взаимодействия с репозиторием эндпоинтов.\n   * @param cd - Сервис для управления изменением состояния.\n   * @param alerts - Сервис для отображения уведомлений.\n   *\n   * @memberof CardEndpointComponent\n   */\n  constructor(\n    private endpointRepositoryService: EndpointRepositoryService,\n    private cd: ChangeDetectorRef,\n    private alerts: TuiAlertService\n  ) {}\n\n  /**\n   * Обработчик изменения состояния переключателя.\n   *\n   * @param newState - Новое состояние переключателя.\n   * @remarks\n   * Обновляет состояние эндпоинта и сохраняет изменения в репозитории.\n   *\n   * @memberof CardEndpointComponent\n   */\n  onToggleChange(newState: boolean): void {\n    this.endpointInfo.isActive = newState;\n    console.log('Состояние переключателя изменилось на:', newState);\n    this.endpointRepositoryService\n      .updateEndpointStatus(\n        this.apiName,\n        this.entityInfo.name,\n        this.endpointInfo.route,\n        newState\n      )\n      .subscribe({\n        next: (response) => {\n          console.log('Состояние сервиса обновлено:', response);\n        },\n        error: (error) => {\n          console.error('Ошибка при обновлении состояния сервиса:', error);\n        },\n      });\n  }\n\n  /**\n   * Открывает диалог для редактирования информации об эндпоинте.\n   *\n   * @remarks\n   * Обновляет информацию об эндпоинте после закрытия диалога.\n   *\n   * @memberof CardEndpointComponent\n   */\n  openEditDialog(): void {\n    this.dialog({ ...this.endpointInfo }).subscribe({\n      next: (data) => this.processEditDialogData(data),\n      complete: () => console.info('Dialog closed'),\n    });\n  }\n\n  /**\n   * Обрабатывает данные, полученные из диалога редактирования.\n   *\n   * @param data - Данные эндпоинта, полученные из диалога.\n   * @private\n   * @memberof CardEndpointComponent\n   */\n  private processEditDialogData(data: Endpoint): void {\n    console.info(`Dialog emitted data = ${data} - ${this.apiName}`);\n    this.updateEndpoint(data);\n  }\n\n  /**\n   * Обновляет информацию об эндпоинте в репозитории.\n   *\n   * @param data - Новые данные эндпоинта.\n   * @private\n   * @memberof CardEndpointComponent\n   */\n  private updateEndpoint(data: Endpoint): void {\n    this.endpointRepositoryService\n      .updateEndpoint(\n        this.apiName,\n        this.entityInfo.name,\n        this.endpointInfo.route,\n        data\n      )\n      .subscribe({\n        next: (response) => this.handleEndpointUpdate(response, data),\n        error: (error) => this.handleEndpointUpdateError(error),\n      });\n  }\n\n  /**\n   * Обрабатывает успешное обновление эндпоинта.\n   *\n   * @param response - Ответ от сервера.\n   * @param data - Новые данные эндпоинта.\n   * @private\n   * @memberof CardEndpointComponent\n   */\n  private handleEndpointUpdate(response: Endpoint, data: Endpoint): void {\n    console.log('Эндпоинт обновлен:', response);\n    this.endpointInfo = data;\n    this.cd.markForCheck();\n    this.alerts\n      .open('Эндпоинт успешно обновлен', {\n        appearance: 'success',\n      })\n      .subscribe();\n  }\n\n  /**\n   * Обрабатывает ошибку при обновлении эндпоинта.\n   *\n   * @param error - Объект ошибки.\n   * @private\n   * @memberof CardEndpointComponent\n   */\n  private handleEndpointUpdateError(error: any): void {\n    if (error.status === 409) {\n      this.alerts\n        .open('Ошибка: Эндпоинт с таким именем уже существует', {\n          appearance: 'negative',\n        })\n        .subscribe();\n    } else {\n      this.alerts\n        .open('Ошибка при обновлении эндпоинта', {\n          appearance: 'negative',\n        })\n        .subscribe();\n    }\n    console.error('Ошибка при обновлении эндпоинта:', error);\n  }\n\n  /**\n   * Обработчик подтверждения удаления эндпоинта.\n   *\n   * @remarks\n   * Удаляет эндпоинт из репозитория и уведомляет родительский компонент об удалении.\n   *\n   * @memberof CardEndpointComponent\n   */\n  onDeleteConfirmed(): void {\n    this.endpointRepositoryService\n      .deleteEndpoint(\n        this.apiName,\n        this.entityInfo.name,\n        this.endpointInfo.route\n      )\n      .subscribe({\n        next: () => {\n          console.log(`Действие \"${this.endpointInfo.route}\" удалено.`);\n          this.endpointDeleted.emit(this.endpointInfo.route);\n        },\n        error: (error) => {\n          console.error('Ошибка при удалении действия:', error);\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n    \n      \n      \n      \n    \n    {{ endpointInfo.route }}\n    Тип: {{ endpointInfo.type }}\n  \n  \n    \n\n    \n                \n                    ./card-endpoint.component.css\n                \n                \n                \n                    ../../styles/card.css\n                \n                \nh3 {\n    margin: 0;\n    font-size: 24px;\n    color: #0056a6;\n    width: 65%; /* Ширина элемента */\n    text-overflow: ellipsis; /* Добавляем троеточие */\n    white-space: nowrap; /* Запрещаем перенос текста на новую строку */\n    overflow: hidden; /* Скрываем текст, который не помещается */\n    height: 2rem;\n}\n  \n  p {\n    margin: 10px 0;\n    color: #666;\n    font-size: 16px;\n    line-height: 1.5; /* Установите желаемую высоту строки */\n    height: calc(1.5em * 2); /* Высота равна трём строкам */\n    overflow-y: auto; /* Добавляем вертикальную прокрутку при необходимости */\n    overflow-x: hidden; /* Запрещаем горизонтальную прокрутку */\n    box-sizing: border-box; /* Включаем отступы и границы в размер элемента */\n    word-wrap: break-word; /* Перенос слов на новую строку, если они не помещаются */\n    white-space: normal; /* Разрешаем перенос текста на новую строку */\n}\n\n  /* Стилизация полосы прокрутки для WebKit-браузеров (Chrome, Safari, Edge) */\n  p::-webkit-scrollbar {\n    width: 8px; /* Ширина полосы прокрутки */\n  }\n\n  p::-webkit-scrollbar-track {\n    background: #f1f1f1; /* Цвет фона полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb {\n    background: #888; /* Цвет полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb:hover {\n    background: #555; /* Цвет полосы прокрутки при наведении */\n  }\n  \n.actions {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    flex-wrap: wrap;\n  }\n  \n.top-right {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    display: flex;\n    align-items: center;\n  }\n\n                \n                    ../../styles/icon.css\n                \n                  \ni {\n    margin-right: 15px; /* 10px * 1.2 */\n    cursor: pointer;\n    color: #666;\n    transition: color 0.3s;\n    font-size: 20px; /* Увеличиваем размер шрифта на 20% */\n}\n\ni:hover {\n    color: #000;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ endpointInfo.route }}    Тип: {{ endpointInfo.type }}    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardEndpointComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardEntityComponent.html":{"url":"components/CardEntityComponent.html","title":"component - CardEntityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardEntityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/card-entity/card-entity.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент CardEntityComponent предназначен для отображения и управления информацией о сущностях API.\nПозволяет редактировать, удалять и изменять состояние сущностей.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует сервисы для взаимодействия с репозиторием сущностей и управления состоянием.\nExample :html\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-entity\n            \n\n\n            \n                imports\n                \n                                IconTrashComponent\n                                SwitchComponent\n                            CommonModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./card-entity.component.css,../../styles/card.css,../../styles/button.css,../../styles/icon.css\n            \n\n\n\n            \n                templateUrl\n                ./card-entity.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                dialog\n                            \n                            \n                                    Private\n                                loading\n                            \n                            \n                                    Private\n                                oldName\n                            \n                            \n                                    Private\n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleEditDialogData\n                            \n                            \n                                    Private\n                                handleEntityDeletion\n                            \n                            \n                                    Private\n                                handleEntityUpdate\n                            \n                            \n                                    Private\n                                handleEntityUpdateError\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                onDeleteConfirmed\n                            \n                            \n                                onToggleChange\n                            \n                            \n                                openEditDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiName\n                            \n                            \n                                entityInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                entityDeleted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cd: ChangeDetectorRef, entityRepositoryService: EntityRepositoryService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/card-entity/card-entity.component.ts:85\n                            \n                        \n\n                \n                    \n                            Конструктор компонента CardEntityComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для управления изменением состояния.\n\n\n                                                        \n                                                \n                                                \n                                                        entityRepositoryService\n                                                  \n                                                        \n                                                                        EntityRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для взаимодействия с репозиторием сущностей.\n\n\n                                                        \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для отображения уведомлений.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        apiName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-entity/card-entity.component.ts:62\n                            \n                        \n                \n                    \n                        Входной параметр для получения имени API.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        entityInfo\n                    \n                \n                \n                    \n                        Type :         Entity\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-entity/card-entity.component.ts:53\n                            \n                        \n                \n                    \n                        Входной параметр для получения информации о сущности.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        entityDeleted\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-entity/card-entity.component.ts:70\n                            \n                        \n                \n                    \n                        Событие, которое вызывается при удалении сущности.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEditDialogData\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEditDialogData(data: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:164\n                        \n                    \n\n\n            \n                \n                        Обрабатывает данные, полученные из диалога редактирования.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nДанные сущности, полученные из диалога.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEntityDeletion\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEntityDeletion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:207\n                        \n                    \n\n\n            \n                \n                        Обрабатывает удаление сущности.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEntityUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEntityUpdate(response: Entity, data: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:181\n                        \n                    \n\n\n            \n                \n                        Обрабатывает успешное обновление сущности.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОтвет от сервера.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовые данные сущности.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleEntityUpdateError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleEntityUpdateError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:197\n                        \n                    \n\n\n            \n                \n                        Обрабатывает ошибку при обновлении сущности.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОбъект ошибки.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(message: string, error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:220\n                        \n                    \n\n\n            \n                \n                        Обрабатывает ошибки и отображает уведомления.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСообщение об ошибке.\n\n\n                                            \n                                        \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОбъект ошибки.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteConfirmed\n                        \n                    \n                \n            \n            \n                \nonDeleteConfirmed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:147\n                        \n                    \n\n\n            \n                \n                        Обработчик подтверждения удаления сущности.\nУдаляет сущность из репозитория и уведомляет родительский компонент об удалении.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToggleChange\n                        \n                    \n                \n            \n            \n                \nonToggleChange(newState: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:111\n                        \n                    \n\n\n            \n                \n                        Обработчик изменения состояния переключателя.\nОбновляет состояние сущности и сохраняет изменения в репозитории.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовое состояние переключателя.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-entity/card-entity.component.ts:131\n                        \n                    \n\n\n            \n                \n                        Открывает диалог для редактирования информации о сущности.\nОбновляет информацию о сущности после закрытия диалога.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : tuiDialog(EntityDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-entity/card-entity.component.ts:82\n                        \n                    \n\n            \n                \n                    Диалог для редактирования информации о сущности.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-entity/card-entity.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        oldName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-entity/card-entity.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/card-entity/card-entity.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { Entity } from \"../../../interfaces/Entity\";\nimport { RouterModule } from '@angular/router';\nimport { IconTrashComponent } from '../icon-trash/icon-trash.component';\nimport { SwitchComponent } from '../switch/switch.component';\nimport { Subscription } from 'rxjs';\nimport { tuiDialog, TuiAlertService } from '@taiga-ui/core';\nimport { EntityDialogComponent } from '../entity-dialog/entity-dialog.component';\nimport { CommonModule } from '@angular/common';\nimport { EntityRepositoryService } from '../../../repositories/entity-repository.service';\n\n/**\n * Компонент CardEntityComponent предназначен для отображения и управления информацией о сущностях API.\n * Позволяет редактировать, удалять и изменять состояние сущностей.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует сервисы для взаимодействия с репозиторием сущностей и управления состоянием.\n *\n * @example\n * html\n * \n * \n * \n */\n@Component({\n  selector: 'app-card-entity',\n  imports: [IconTrashComponent, SwitchComponent, CommonModule, RouterModule],\n  templateUrl: './card-entity.component.html',\n  styleUrls: [\n    './card-entity.component.css',\n    '../../styles/card.css',\n    '../../styles/button.css',\n    '../../styles/icon.css',\n  ],\n})\nexport class CardEntityComponent {\n  /**\n   * Входной параметр для получения информации о сущности.\n   *\n   * @type {Entity}\n   * @memberof CardEntityComponent\n   */\n  @Input() entityInfo!: Entity;\n\n  /**\n   * Входной параметр для получения имени API.\n   *\n   * @type {string}\n   * @default ''\n   * @memberof CardEntityComponent\n   */\n  @Input() apiName: string = '';\n\n  /**\n   * Событие, которое вызывается при удалении сущности.\n   *\n   * @type {EventEmitter}\n   * @memberof CardEntityComponent\n   */\n  @Output() entityDeleted = new EventEmitter();\n\n  private oldName: string = '';\n  private sub: Subscription | null = null;\n  private loading: boolean = false;\n\n  /**\n   * Диалог для редактирования информации о сущности.\n   *\n   * @type {tuiDialog}\n   * @memberof CardEntityComponent\n   */\n  private readonly dialog = tuiDialog(EntityDialogComponent, {\n    dismissible: true,\n    label: 'Редактировать',\n  });\n\n  /**\n   * Конструктор компонента CardEntityComponent.\n   *\n   * @param cd - Сервис для управления изменением состояния.\n   * @param entityRepositoryService - Сервис для взаимодействия с репозиторием сущностей.\n   * @param alerts - Сервис для отображения уведомлений.\n   *\n   * @memberof CardEntityComponent\n   */\n  constructor(\n    private cd: ChangeDetectorRef,\n    private entityRepositoryService: EntityRepositoryService,\n    private alerts: TuiAlertService\n  ) {}\n\n  /**\n   * Обработчик изменения состояния переключателя.\n   *\n   * @param newState - Новое состояние переключателя.\n   * @remarks\n   * Обновляет состояние сущности и сохраняет изменения в репозитории.\n   *\n   * @memberof CardEntityComponent\n   */\n  onToggleChange(newState: boolean): void {\n    this.entityInfo.isActive = newState;\n    this.entityRepositoryService\n      .updateEntityStatus(this.apiName, this.entityInfo.name, newState)\n      .subscribe({\n        next: (response) =>\n          console.log('Состояние сервиса обновлено:', response),\n        error: (error) =>\n          this.handleError('Ошибка при обновлении состояния сервиса', error),\n      });\n  }\n\n  /**\n   * Открывает диалог для редактирования информации о сущности.\n   *\n   * @remarks\n   * Обновляет информацию о сущности после закрытия диалога.\n   *\n   * @memberof CardEntityComponent\n   */\n  openEditDialog(): void {\n    this.oldName = this.entityInfo.name;\n    this.dialog({ ...this.entityInfo }).subscribe({\n      next: (data) => this.handleEditDialogData(data),\n      complete: () => console.info('Dialog closed'),\n    });\n  }\n\n  /**\n   * Обработчик подтверждения удаления сущности.\n   *\n   * @remarks\n   * Удаляет сущность из репозитория и уведомляет родительский компонент об удалении.\n   *\n   * @memberof CardEntityComponent\n   */\n  onDeleteConfirmed(): void {\n    this.entityRepositoryService\n      .deleteApiEntity(this.apiName, this.entityInfo.name)\n      .subscribe({\n        next: () => this.handleEntityDeletion(),\n        error: (error) =>\n          this.handleError('Ошибка при удалении сущности', error),\n      });\n  }\n\n  /**\n   * Обрабатывает данные, полученные из диалога редактирования.\n   *\n   * @param data - Данные сущности, полученные из диалога.\n   * @private\n   * @memberof CardEntityComponent\n   */\n  private handleEditDialogData(data: Entity): void {\n    this.entityRepositoryService\n      .updateApiEntity(this.apiName, this.oldName, data)\n      .subscribe({\n        next: (response) => this.handleEntityUpdate(response, data),\n        error: (error) => this.handleEntityUpdateError(error),\n      });\n  }\n\n  /**\n   * Обрабатывает успешное обновление сущности.\n   *\n   * @param response - Ответ от сервера.\n   * @param data - Новые данные сущности.\n   * @private\n   * @memberof CardEntityComponent\n   */\n  private handleEntityUpdate(response: Entity, data: Entity): void {\n    console.log('Сущность обновлена:', response);\n    this.entityInfo = data;\n    this.cd.markForCheck();\n    this.alerts\n      .open('Сущность успешно обновлена', { appearance: 'success' })\n      .subscribe();\n  }\n\n  /**\n   * Обрабатывает ошибку при обновлении сущности.\n   *\n   * @param error - Объект ошибки.\n   * @private\n   * @memberof CardEntityComponent\n   */\n  private handleEntityUpdateError(error: any): void {\n    this.handleError('Ошибка при обновлении сущности', error);\n  }\n\n  /**\n   * Обрабатывает удаление сущности.\n   *\n   * @private\n   * @memberof CardEntityComponent\n   */\n  private handleEntityDeletion(): void {\n    console.log(`Сущность \"${this.entityInfo.name}\" удалена.`);\n    this.entityDeleted.emit(this.entityInfo.name);\n  }\n\n  /**\n   * Обрабатывает ошибки и отображает уведомления.\n   *\n   * @param message - Сообщение об ошибке.\n   * @param error - Объект ошибки.\n   * @private\n   * @memberof CardEntityComponent\n   */\n  private handleError(message: string, error: any): void {\n    console.error(message, error);\n    if (error.status === 409) {\n      this.alerts\n        .open(`${message}: Сущность с таким именем уже существует`, {\n          appearance: 'negative',\n        })\n        .subscribe();\n    } else {\n      this.alerts.open(message, { appearance: 'negative' }).subscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n    \n    \n    \n  \n  {{ entityInfo.name }}\n  Структура \n    @if(entityInfo.structure == null){\n      отсутствует\n    }\n    @else{\n      есть\n    }\n  \n  \n    Детали\n  \n  \n    \n\n    \n                \n                    ./card-entity.component.css\n                \n                \n                \n                    ../../styles/card.css\n                \n                \nh3 {\n    margin: 0;\n    font-size: 24px;\n    color: #0056a6;\n    width: 65%; /* Ширина элемента */\n    text-overflow: ellipsis; /* Добавляем троеточие */\n    white-space: nowrap; /* Запрещаем перенос текста на новую строку */\n    overflow: hidden; /* Скрываем текст, который не помещается */\n    height: 2rem;\n}\n  \n  p {\n    margin: 10px 0;\n    color: #666;\n    font-size: 16px;\n    line-height: 1.5; /* Установите желаемую высоту строки */\n    height: calc(1.5em * 2); /* Высота равна трём строкам */\n    overflow-y: auto; /* Добавляем вертикальную прокрутку при необходимости */\n    overflow-x: hidden; /* Запрещаем горизонтальную прокрутку */\n    box-sizing: border-box; /* Включаем отступы и границы в размер элемента */\n    word-wrap: break-word; /* Перенос слов на новую строку, если они не помещаются */\n    white-space: normal; /* Разрешаем перенос текста на новую строку */\n}\n\n  /* Стилизация полосы прокрутки для WebKit-браузеров (Chrome, Safari, Edge) */\n  p::-webkit-scrollbar {\n    width: 8px; /* Ширина полосы прокрутки */\n  }\n\n  p::-webkit-scrollbar-track {\n    background: #f1f1f1; /* Цвет фона полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb {\n    background: #888; /* Цвет полосы прокрутки */\n    border-radius: 10px; /* Закругление углов */\n  }\n\n  p::-webkit-scrollbar-thumb:hover {\n    background: #555; /* Цвет полосы прокрутки при наведении */\n  }\n  \n.actions {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    flex-wrap: wrap;\n  }\n  \n.top-right {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    display: flex;\n    align-items: center;\n  }\n\n                \n                    ../../styles/button.css\n                \n                .primary-button {\n    background-color: #0056a6;\n    color: white;\n    border: none;\n    block-size: auto;\n    padding: 7px 13px;\n    border-radius: 5px;\n    cursor: pointer;\n    font-weight: bold;\n    transition: background-color 0.3s;\n    margin-left: 1rem;\n    margin-bottom: 1rem;\n  }\n  \n  .primary-button:hover {\n    background-color: #004080;\n  }\n                \n                    ../../styles/icon.css\n                \n                  \ni {\n    margin-right: 15px; /* 10px * 1.2 */\n    cursor: pointer;\n    color: #666;\n    transition: color 0.3s;\n    font-size: 20px; /* Увеличиваем размер шрифта на 20% */\n}\n\ni:hover {\n    color: #000;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ entityInfo.name }}  Структура     @if(entityInfo.structure == null){      отсутствует    }    @else{      есть    }        Детали    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardEntityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Endpoint.html":{"url":"interfaces/Endpoint.html","title":"interface - Endpoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Endpoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/Endpoint.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс, представляющий конечную точку (endpoint).\nЭтот интерфейс используется для описания маршрута, типа и статуса активности конечной точки.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            route\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : false\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Флаг активности конечной точки.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Маршрут конечной точки.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Тип конечной точки (например, GET, POST).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Endpoint {\n  /**\n   * Маршрут конечной точки.\n   * @type {string}\n   */\n  route: string;\n\n  /**\n   * Тип конечной точки (например, GET, POST).\n   * @type {string}\n   */\n  type: string;\n\n  /**\n   * Флаг активности конечной точки.\n   * @type {boolean}\n   * @default false\n   */\n  isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EndpointDialogComponent.html":{"url":"components/EndpointDialogComponent.html","title":"component - EndpointDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EndpointDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент EndpointDialogComponent предназначен для отображения диалогового окна редактирования эндпоинта.\nПозволяет пользователю вводить и изменять данные эндпоинта, такие как маршрут и тип запроса.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует сервисы для управления диалоговыми окнами и вводом данных.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-endpoint-dialog\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            TuiAutoFocus\n                            TuiButton\n                            TuiDataListWrapper\n                            TuiInputModule\n                            TuiSelectModule\n                            TuiSlider\n                            TuiTextfield\n                            TuiTextfieldControllerModule\n                \n            \n\n            \n                styleUrls\n                ./endpoint-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./endpoint-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                context\n                            \n                            \n                                    Private\n                                    Readonly\n                                dialogs\n                            \n                            \n                                    Readonly\n                                types\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                onInput\n                            \n                            \n                                    Protected\n                                showDialog\n                            \n                            \n                                    Protected\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasValue\n                                \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        onInput\n                        \n                    \n                \n            \n            \n                \n                        \n                    onInput(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:129\n                        \n                    \n\n\n            \n                \n                        Обработчик ввода данных в поле маршрута.\nОчищает значение от недопустимых символов и обновляет данные эндпоинта.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСобытие ввода данных.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        showDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    showDialog(content: TemplateRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Открывает диалоговое окно с заданным содержимым.\nИспользует сервис TuiDialogService для открытия диалога.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                        TemplateRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nШаблон содержимого диалогового окна.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        submit\n                        \n                    \n                \n            \n            \n                \n                        \n                    submit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:98\n                        \n                    \n\n\n            \n                \n                        Обработчик отправки формы.\nПредотвращает стандартное поведение отправки формы и завершает диалог, если маршрут не пустой.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext>()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:67\n                        \n                    \n\n            \n                \n                    Контекст диалогового окна, содержащий данные эндпоинта.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:51\n                        \n                    \n\n            \n                \n                    Сервис для управления диалоговыми окнами.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        types\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['get', 'post', 'put', 'delete', 'getbyindex']\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:59\n                        \n                    \n\n            \n                \n                    Список доступных типов запросов для эндпоинта.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasValue\n                    \n                \n\n                \n                    \n                        gethasValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:76\n                                \n                            \n                    \n                        \n                                Флаг, указывающий, есть ли значение в поле маршрута.\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts:86\n                                \n                            \n                    \n                        \n                                Данные эндпоинта, которые редактируются в диалоговом окне.\n\n\n                                \n                                \n                                \n                                    Returns :         Endpoint\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import type { TemplateRef } from '@angular/core';\nimport { Component, inject } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TuiAutoFocus } from '@taiga-ui/cdk';\nimport type { TuiDialogContext } from '@taiga-ui/core';\nimport { TuiButton, TuiDialogService, TuiTextfield } from '@taiga-ui/core';\nimport { TuiDataListWrapper, TuiSlider } from '@taiga-ui/kit';\nimport {\n  TuiInputModule,\n  TuiSelectModule,\n  TuiTextfieldControllerModule,\n} from '@taiga-ui/legacy';\nimport { injectContext } from '@taiga-ui/polymorpheus';\nimport { Endpoint } from \"../../../interfaces/Endpoint\";\n\n/**\n * Компонент EndpointDialogComponent предназначен для отображения диалогового окна редактирования эндпоинта.\n * Позволяет пользователю вводить и изменять данные эндпоинта, такие как маршрут и тип запроса.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует сервисы для управления диалоговыми окнами и вводом данных.\n *\n * @example\n * html\n * \n */\n@Component({\n  selector: 'app-endpoint-dialog',\n  imports: [\n    FormsModule,\n    TuiAutoFocus,\n    TuiButton,\n    TuiDataListWrapper,\n    TuiInputModule,\n    TuiSelectModule,\n    TuiSlider,\n    TuiTextfield,\n    TuiTextfieldControllerModule,\n  ],\n  templateUrl: './endpoint-dialog.component.html',\n  styleUrls: ['./endpoint-dialog.component.css'],\n})\nexport class EndpointDialogComponent {\n  /**\n   * Сервис для управления диалоговыми окнами.\n   *\n   * @type {TuiDialogService}\n   * @memberof EndpointDialogComponent\n   */\n  private readonly dialogs = inject(TuiDialogService);\n\n  /**\n   * Список доступных типов запросов для эндпоинта.\n   *\n   * @type {string[]}\n   * @memberof EndpointDialogComponent\n   */\n  readonly types: string[] = ['get', 'post', 'put', 'delete', 'getbyindex'];\n\n  /**\n   * Контекст диалогового окна, содержащий данные эндпоинта.\n   *\n   * @type {TuiDialogContext}\n   * @memberof EndpointDialogComponent\n   */\n  public readonly context = injectContext>();\n\n  /**\n   * Флаг, указывающий, есть ли значение в поле маршрута.\n   *\n   * @type {boolean}\n   * @returns {boolean} Возвращает true, если маршрут не пустой.\n   * @memberof EndpointDialogComponent\n   */\n  protected get hasValue(): boolean {\n    return this.data.route.trim() !== '';\n  }\n\n  /**\n   * Данные эндпоинта, которые редактируются в диалоговом окне.\n   *\n   * @type {Endpoint}\n   * @memberof EndpointDialogComponent\n   */\n  protected get data(): Endpoint {\n    return this.context.data;\n  }\n\n  /**\n   * Обработчик отправки формы.\n   *\n   * @remarks\n   * Предотвращает стандартное поведение отправки формы и завершает диалог, если маршрут не пустой.\n   *\n   * @memberof EndpointDialogComponent\n   */\n  protected submit(): void {\n    if (event) {\n      event.preventDefault();\n    }\n    if (this.hasValue) {\n      this.context.completeWith(this.data);\n    }\n  }\n\n  /**\n   * Открывает диалоговое окно с заданным содержимым.\n   *\n   * @param content - Шаблон содержимого диалогового окна.\n   * @remarks\n   * Использует сервис TuiDialogService для открытия диалога.\n   *\n   * @memberof EndpointDialogComponent\n   */\n  protected showDialog(content: TemplateRef): void {\n    this.dialogs.open(content, { dismissible: true }).subscribe();\n  }\n\n  /**\n   * Обработчик ввода данных в поле маршрута.\n   *\n   * @param event - Событие ввода данных.\n   * @remarks\n   * Очищает значение от недопустимых символов и обновляет данные эндпоинта.\n   *\n   * @memberof EndpointDialogComponent\n   */\n  protected onInput(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    const value = input.value;\n    const cleanedValue = value.replace(/[^a-zA-Z0-9]/g, '');\n    input.value = cleanedValue;\n    this.data.route = cleanedValue;\n  }\n}\n\n    \n\n    \n        \n  Имя эндпоинта\n\n\n\n  Тип\n  \n\n\n\n  \n    Отправить\n  \n\n\n    \n\n    \n                \n                    ./endpoint-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Имя эндпоинта  Тип        Отправить  '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EndpointDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EndpointRepositoryService.html":{"url":"injectables/EndpointRepositoryService.html","title":"injectable - EndpointRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EndpointRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/endpoint-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEndpoint\n                            \n                            \n                                deleteEndpoint\n                            \n                            \n                                getEndpointByName\n                            \n                            \n                                getEndpointList\n                            \n                            \n                                updateEndpoint\n                            \n                            \n                                updateEndpointStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(endpointService: EndpointService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/endpoint-repository.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        endpointService\n                                                  \n                                                        \n                                                                        EndpointService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createEndpoint\n                        \n                    \n                \n            \n            \n                \ncreateEndpoint(apiServiceName: string, entityName: string, endpoint: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpoint\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEndpoint\n                        \n                    \n                \n            \n            \n                \ndeleteEndpoint(apiServiceName: string, entityName: string, endpointName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpointName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEndpointByName\n                        \n                    \n                \n            \n            \n                \ngetEndpointByName(apiServiceName: string, entityName: string, endpointName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpointName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEndpointList\n                        \n                    \n                \n            \n            \n                \ngetEndpointList(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEndpoint\n                        \n                    \n                \n            \n            \n                \nupdateEndpoint(apiServiceName: string, entityName: string, endpointName: string, endpoint: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpointName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpoint\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEndpointStatus\n                        \n                    \n                \n            \n            \n                \nupdateEndpointStatus(apiServiceName: string, entityName: string, endpointName: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/endpoint-repository.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpointName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EndpointService as EndpointService } from '../services/endpoint-service.service';\nimport { Endpoint as Endpoint } from \"../interfaces/Endpoint\";\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EndpointRepositoryService {\n\n  constructor(private endpointService: EndpointService) { }\n\n  getEndpointList(apiServiceName: string, entityName: string): Observable {\n    return this.endpointService.getEndpointList(apiServiceName, entityName);\n  }\n\n  createEndpoint(apiServiceName: string, entityName: string, endpoint: Endpoint): Observable {\n    return this.endpointService.createEndpoint(apiServiceName, entityName, endpoint);\n  }\n\n  getEndpointByName(apiServiceName: string, entityName: string, endpointName: string): Observable {\n    return this.endpointService.getEndpointByName(apiServiceName, entityName, endpointName);\n  }\n\n  updateEndpoint(apiServiceName: string, entityName: string, endpointName: string, endpoint: Endpoint): Observable {\n    return this.endpointService.updateEndpoint(apiServiceName, entityName, endpointName, endpoint);\n  }\n\n  deleteEndpoint(apiServiceName: string, entityName: string, endpointName: string): Observable {\n    return this.endpointService.deleteEndpoint(apiServiceName, entityName, endpointName);\n  }\n  \n  updateEndpointStatus(apiServiceName: string, entityName: string, endpointName: string, isActive: boolean): Observable {\n    return this.endpointService.updateEndpointStatus(apiServiceName, entityName, endpointName, isActive);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EndpointService.html":{"url":"injectables/EndpointService.html","title":"injectable - EndpointService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EndpointService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/endpoint-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEndpoint\n                            \n                            \n                                deleteEndpoint\n                            \n                            \n                                getEndpointByName\n                            \n                            \n                                getEndpointList\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                updateEndpoint\n                            \n                            \n                                updateEndpointStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorHandler: ErrorHandlerService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/endpoint-service.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createEndpoint\n                        \n                    \n                \n            \n            \n                \ncreateEndpoint(apiServiceName: string, entityName: string, action: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                action\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEndpoint\n                        \n                    \n                \n            \n            \n                \ndeleteEndpoint(apiServiceName: string, entityName: string, actionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEndpointByName\n                        \n                    \n                \n            \n            \n                \ngetEndpointByName(apiServiceName: string, entityName: string, actionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEndpointList\n                        \n                    \n                \n            \n            \n                \ngetEndpointList(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEndpoint\n                        \n                    \n                \n            \n            \n                \nupdateEndpoint(apiServiceName: string, entityName: string, actionName: string, action: Endpoint)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                action\n                                            \n                                                            Endpoint\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEndpointStatus\n                        \n                    \n                \n            \n            \n                \nupdateEndpointStatus(serviceName: string, entityName: string, endpoint: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/endpoint-service.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/api`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/endpoint-service.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { Endpoint } from \"../interfaces/Endpoint\";\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { ErrorHandlerService } from './error-handler.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EndpointService {\n  private baseUrl = `${window.location.origin}/api`;\n\n  constructor(\n    private http: HttpClient,\n    private errorHandler: ErrorHandlerService,\n    private alerts: TuiAlertService\n  ) {}\n\n  getEndpointList(\n    apiServiceName: string,\n    entityName: string\n  ): Observable {\n    return this.http\n      .get(\n        `${this.baseUrl}/ApiEndpoint/${apiServiceName}/${entityName}`\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  createEndpoint(\n    apiServiceName: string,\n    entityName: string,\n    action: Endpoint\n  ): Observable {\n    return this.http\n      .post(\n        `${this.baseUrl}/ApiEndpoint/${apiServiceName}/${entityName}`,\n        action\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  getEndpointByName(\n    apiServiceName: string,\n    entityName: string,\n    actionName: string\n  ): Observable {\n    return this.http\n      .get(\n        `${this.baseUrl}/ApiEndpoint/${apiServiceName}/${entityName}/${actionName}`\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  updateEndpoint(\n    apiServiceName: string,\n    entityName: string,\n    actionName: string,\n    action: Endpoint\n  ): Observable {\n    return this.http\n      .put(\n        `${this.baseUrl}/ApiEndpoint/${apiServiceName}/${entityName}/${actionName}`,\n        action\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  deleteEndpoint(\n    apiServiceName: string,\n    entityName: string,\n    actionName: string\n  ): Observable {\n    return this.http\n      .delete(\n        `${this.baseUrl}/ApiEndpoint/${apiServiceName}/${entityName}/${actionName}`\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  updateEndpointStatus(\n    serviceName: string,\n    entityName: string,\n    endpoint: string,\n    isActive: boolean\n  ): Observable {\n    return this.http\n      .patch(\n        `${this.baseUrl}/ApiEndpoint/${serviceName}/${entityName}/${endpoint}/${isActive}`,\n        null\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  private handleError(error: HttpErrorResponse): Observable {\n    this.errorHandler.handleError(error);\n    this.alerts.open(error.message, { appearance: 'negative' }).subscribe();\n    return throwError(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Entity.html":{"url":"interfaces/Entity.html","title":"interface - Entity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Entity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/Entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс, представляющий сущность.\nЭтот интерфейс используется для описания сущности, включая её структуру и связанные конечные точки.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            endpoints\n                                        \n                                \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            structure\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endpoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endpoints:         Endpoint[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Endpoint[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Массив конечных точек, связанных с сущностью.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : false\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Флаг активности сущности.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Название сущности.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        structure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        structure:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Структура сущности.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Endpoint } from \"./Endpoint\";\n\n/**\n * Интерфейс, представляющий сущность.\n *\n * @remarks\n * Этот интерфейс используется для описания сущности, включая её структуру и связанные конечные точки.\n *\n * @type {{ name: string, isActive: boolean, structure: any, endpoints: Endpoint[] }}\n * @default { name: '', isActive: false, structure: {}, endpoints: [] }\n * @memberof Component\n */\nexport interface Entity {\n  /**\n   * Название сущности.\n   * @type {string}\n   */\n  name: string;\n\n  /**\n   * Флаг активности сущности.\n   * @type {boolean}\n   * @default false\n   */\n  isActive: boolean;\n\n  /**\n   * Структура сущности.\n   * @type {any}\n   */\n  structure: any;\n\n  /**\n   * Массив конечных точек, связанных с сущностью.\n   * @type {Endpoint[]}\n   */\n  endpoints: Endpoint[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EntityDialogComponent.html":{"url":"components/EntityDialogComponent.html","title":"component - EntityDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EntityDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/entity-dialog/entity-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент EntityDialogComponent предназначен для отображения диалогового окна редактирования сущности.\nПозволяет пользователю вводить и изменять данные сущности, такие как имя и структура.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует сервисы для управления диалоговыми окнами и вводом данных.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-entity-edit-dialog\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            TuiAutoFocus\n                            TuiButton\n                            TuiDataListWrapper\n                            TuiInputModule\n                            TuiSelectModule\n                            TuiSlider\n                            TuiTextfield\n                            TuiTextfieldControllerModule\n                            TuiTextareaModule\n                \n            \n\n            \n                styleUrls\n                ./entity-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./entity-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                alerts\n                            \n                            \n                                    Public\n                                    Readonly\n                                context\n                            \n                            \n                                    Private\n                                    Readonly\n                                dialogs\n                            \n                            \n                                    Private\n                                isCanSubmit\n                            \n                            \n                                    \n                                nameInputRef\n                            \n                            \n                                    \n                                structureInputRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                handleKeyboardEvent\n                            \n                            \n                                    Protected\n                                handleSubmit\n                            \n                            \n                                    Protected\n                                moveFocus\n                            \n                            \n                                    Protected\n                                onInput\n                            \n                            \n                                    Protected\n                                showDialog\n                            \n                            \n                                    Private\n                                showError\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:keydown\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasValue\n                                \n                                \n                                    data\n                                \n                                \n                                    structure\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:keydown\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:keydown(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Обработчик событий клавиатуры.\nОбрабатывает нажатия клавиш \"Enter\" и \"Escape\".\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСобытие клавиатуры.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleKeyboardEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleKeyboardEvent(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Обработчик событий клавиатуры.\nОбрабатывает нажатия клавиш \"Enter\" и \"Escape\".\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСобытие клавиатуры.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        handleSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:194\n                        \n                    \n\n\n            \n                \n                        Обработчик отправки формы.\nПроверяет корректность данных и завершает диалог, если данные валидны.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moveFocus\n                        \n                    \n                \n            \n            \n                \n                        \n                    moveFocus(targetInput: ElementRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:263\n                        \n                    \n\n\n            \n                \n                        Перемещает фокус на указанное поле ввода.\nИспользуется для управления фокусом между полями ввода.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                targetInput\n                                            \n                                                        ElementRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСсылка на элемент ввода.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        onInput\n                        \n                    \n                \n            \n            \n                \n                        \n                    onInput(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:246\n                        \n                    \n\n\n            \n                \n                        Обработчик ввода данных в поле имени.\nОчищает значение от недопустимых символов и обновляет данные сущности.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСобытие ввода данных.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        showDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    showDialog(content: TemplateRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:216\n                        \n                    \n\n\n            \n                \n                        Открывает диалоговое окно с заданным содержимым.\nИспользует сервис TuiDialogService для открытия диалога.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                        TemplateRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nШаблон содержимого диалогового окна.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showError\n                        \n                    \n                \n            \n            \n                \n                        \n                    showError(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:227\n                        \n                    \n\n\n            \n                \n                        Отображает сообщение об ошибке.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСообщение об ошибке.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:91\n                        \n                    \n\n            \n                \n                    Сервис для отображения уведомлений.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext>()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:108\n                        \n                    \n\n            \n                \n                    Контекст диалогового окна, содержащий данные сущности.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:83\n                        \n                    \n\n            \n                \n                    Сервис для управления диалоговыми окнами.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isCanSubmit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:100\n                        \n                    \n\n            \n                \n                    Флаг, указывающий, можно ли отправить данные.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nameInputRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('nameInput', {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:66\n                        \n                    \n\n            \n                \n                    Ссылка на элемент ввода имени.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        structureInputRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('descriptionInput', {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:75\n                        \n                    \n\n            \n                \n                    Ссылка на элемент ввода структуры.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasValue\n                    \n                \n\n                \n                    \n                        gethasValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:117\n                                \n                            \n                    \n                        \n                                Флаг, указывающий, есть ли значение в поле имени.\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:127\n                                \n                            \n                    \n                        \n                                Данные сущности, которые редактируются в диалоговом окне.\n\n\n                                \n                                \n                                \n                                    Returns :         Entity\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        structure\n                    \n                \n\n                \n                    \n                        getstructure()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:138\n                                \n                            \n                    \n                        \n                                Возвращает структуру сущности в формате JSON.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setstructure(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/entity-dialog/entity-dialog.component.ts:154\n                                \n                            \n                    \n                        \n                                Устанавливает структуру сущности из строки JSON.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nСтрока JSON для установки структуры.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import type { TemplateRef } from '@angular/core';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  inject,\n  HostListener,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TuiAutoFocus } from '@taiga-ui/cdk';\nimport type { TuiDialogContext } from '@taiga-ui/core';\nimport {\n  TuiButton,\n  TuiDialogService,\n  TuiTextfield,\n  TuiAlertService,\n} from '@taiga-ui/core';\nimport { TuiDataListWrapper, TuiSlider } from '@taiga-ui/kit';\nimport { TuiTextareaModule } from '@taiga-ui/legacy';\nimport {\n  TuiInputModule,\n  TuiSelectModule,\n  TuiTextfieldControllerModule,\n} from '@taiga-ui/legacy';\nimport { injectContext } from '@taiga-ui/polymorpheus';\nimport { Entity } from \"../../../interfaces/Entity\";\n\n/**\n * Компонент EntityDialogComponent предназначен для отображения диалогового окна редактирования сущности.\n * Позволяет пользователю вводить и изменять данные сущности, такие как имя и структура.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует сервисы для управления диалоговыми окнами и вводом данных.\n *\n * @example\n * html\n * \n */\n@Component({\n  selector: 'app-entity-edit-dialog',\n  imports: [\n    FormsModule,\n    TuiAutoFocus,\n    TuiButton,\n    TuiDataListWrapper,\n    TuiInputModule,\n    TuiSelectModule,\n    TuiSlider,\n    TuiTextfield,\n    TuiTextfieldControllerModule,\n    TuiTextareaModule,\n  ],\n  templateUrl: './entity-dialog.component.html',\n  styleUrls: ['./entity-dialog.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EntityDialogComponent {\n  /**\n   * Ссылка на элемент ввода имени.\n   *\n   * @type {ElementRef}\n   * @memberof EntityDialogComponent\n   */\n  @ViewChild('nameInput', { read: ElementRef }) nameInputRef!: ElementRef;\n\n  /**\n   * Ссылка на элемент ввода структуры.\n   *\n   * @type {ElementRef}\n   * @memberof EntityDialogComponent\n   */\n  @ViewChild('descriptionInput', { read: ElementRef })\n  structureInputRef!: ElementRef;\n\n  /**\n   * Сервис для управления диалоговыми окнами.\n   *\n   * @type {TuiDialogService}\n   * @memberof EntityDialogComponent\n   */\n  private readonly dialogs = inject(TuiDialogService);\n\n  /**\n   * Сервис для отображения уведомлений.\n   *\n   * @type {TuiAlertService}\n   * @memberof EntityDialogComponent\n   */\n  private readonly alerts = inject(TuiAlertService);\n\n  /**\n   * Флаг, указывающий, можно ли отправить данные.\n   *\n   * @type {boolean}\n   * @default true\n   * @memberof EntityDialogComponent\n   */\n  private isCanSubmit: boolean = true;\n\n  /**\n   * Контекст диалогового окна, содержащий данные сущности.\n   *\n   * @type {TuiDialogContext}\n   * @memberof EntityDialogComponent\n   */\n  public readonly context = injectContext>();\n\n  /**\n   * Флаг, указывающий, есть ли значение в поле имени.\n   *\n   * @type {boolean}\n   * @returns {boolean} Возвращает true, если имя не пустое.\n   * @memberof EntityDialogComponent\n   */\n  protected get hasValue(): boolean {\n    return this.data.name.trim() !== '';\n  }\n\n  /**\n   * Данные сущности, которые редактируются в диалоговом окне.\n   *\n   * @type {Entity}\n   * @memberof EntityDialogComponent\n   */\n  protected get data(): Entity {\n    return this.context.data;\n  }\n\n  /**\n   * Возвращает структуру сущности в формате JSON.\n   *\n   * @type {string}\n   * @returns {string} Структура сущности в формате JSON.\n   * @memberof EntityDialogComponent\n   */\n  protected get structure(): string {\n    try {\n      if (this.data.structure == null) return '';\n      return JSON.stringify(this.data.structure, null, 2);\n    } catch (error) {\n      console.error('Ошибка при преобразовании структуры в JSON:', error);\n      return '';\n    }\n  }\n\n  /**\n   * Устанавливает структуру сущности из строки JSON.\n   *\n   * @param value - Строка JSON для установки структуры.\n   * @memberof EntityDialogComponent\n   */\n  protected set structure(value: string) {\n    try {\n      this.data.structure = JSON.parse(value);\n      this.isCanSubmit = true;\n    } catch {\n      if (value.length === 0) {\n        this.data.structure = null;\n        this.isCanSubmit = true;\n        return;\n      }\n      this.isCanSubmit = false;\n    }\n  }\n\n  /**\n   * Обработчик событий клавиатуры.\n   *\n   * @param event - Событие клавиатуры.\n   * @remarks\n   * Обрабатывает нажатия клавиш \"Enter\" и \"Escape\".\n   *\n   * @memberof EntityDialogComponent\n   */\n  @HostListener('document:keydown', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent): void {\n    if (event.key === 'Enter') {\n      this.handleSubmit();\n    } else if (event.key === 'Escape') {\n      // Обработка нажатия клавиши \"Escape\"\n    }\n  }\n\n  /**\n   * Обработчик отправки формы.\n   *\n   * @remarks\n   * Проверяет корректность данных и завершает диалог, если данные валидны.\n   *\n   * @memberof EntityDialogComponent\n   */\n  protected handleSubmit(): void {\n    if (!this.isCanSubmit) {\n      this.showError('JSON не правильной структуры');\n      return;\n    }\n    if (event) {\n      event.preventDefault();\n    }\n    if (this.hasValue) {\n      this.context.completeWith(this.data);\n    }\n  }\n\n  /**\n   * Открывает диалоговое окно с заданным содержимым.\n   *\n   * @param content - Шаблон содержимого диалогового окна.\n   * @remarks\n   * Использует сервис TuiDialogService для открытия диалога.\n   *\n   * @memberof EntityDialogComponent\n   */\n  protected showDialog(content: TemplateRef): void {\n    this.dialogs.open(content, { dismissible: true }).subscribe();\n  }\n\n  /**\n   * Отображает сообщение об ошибке.\n   *\n   * @param message - Сообщение об ошибке.\n   * @private\n   * @memberof EntityDialogComponent\n   */\n  private showError(message: string): void {\n    this.alerts\n      .open(message, {\n        label: 'Ошибка',\n        appearance: 'negative',\n        autoClose: 5000,\n      })\n      .subscribe();\n  }\n\n  /**\n   * Обработчик ввода данных в поле имени.\n   *\n   * @param event - Событие ввода данных.\n   * @remarks\n   * Очищает значение от недопустимых символов и обновляет данные сущности.\n   *\n   * @memberof EntityDialogComponent\n   */\n  protected onInput(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    const value = input.value;\n    const cleanedValue = value.replace(/[^a-zA-Z0-9]/g, '');\n    input.value = cleanedValue;\n    this.data.name = cleanedValue;\n  }\n\n  /**\n   * Перемещает фокус на указанное поле ввода.\n   *\n   * @param targetInput - Ссылка на элемент ввода.\n   * @remarks\n   * Используется для управления фокусом между полями ввода.\n   *\n   * @memberof EntityDialogComponent\n   */\n  protected moveFocus(targetInput: ElementRef): void {\n    targetInput.nativeElement.querySelector('input, textarea').focus();\n  }\n}\n\n    \n\n    \n        \n    \n      Имя сущности\n    \n    \n  \n    \n      Структура\n    \n  \n    \n      \n        Отправить\n      \n    \n  \n  \n    \n\n    \n                \n                    ./entity-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Имя сущности                    Структура                        Отправить              '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EntityDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EntityRepositoryService.html":{"url":"injectables/EntityRepositoryService.html","title":"injectable - EntityRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EntityRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/entity-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createApiEntity\n                            \n                            \n                                deleteApiEntity\n                            \n                            \n                                getApiEntity\n                            \n                            \n                                getApiEntityList\n                            \n                            \n                                updateApiEntity\n                            \n                            \n                                updateEntityStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entityService: EntityService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/entity-repository.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entityService\n                                                  \n                                                        \n                                                                        EntityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createApiEntity\n                        \n                    \n                \n            \n            \n                \ncreateApiEntity(apiServiceName: string, entity: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteApiEntity\n                        \n                    \n                \n            \n            \n                \ndeleteApiEntity(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiEntity\n                        \n                    \n                \n            \n            \n                \ngetApiEntity(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiEntityList\n                        \n                    \n                \n            \n            \n                \ngetApiEntityList(apiServiceName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiEntity\n                        \n                    \n                \n            \n            \n                \nupdateApiEntity(apiServiceName: string, entityName: string, entity: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEntityStatus\n                        \n                    \n                \n            \n            \n                \nupdateEntityStatus(serviceName: string, entityName: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/entity-repository.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityService } from '../services/entity-service.service';\nimport { Observable } from 'rxjs';\nimport { Entity } from \"../interfaces/Entity\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EntityRepositoryService {\n\n  constructor(private entityService: EntityService) { }\n\n  getApiEntityList(apiServiceName: string): Observable {\n    return this.entityService.getApiEntityList(apiServiceName);\n  } \n\n  getApiEntity(apiServiceName: string, entityName: string): Observable {\n    return this.entityService.getApiEntity(apiServiceName, entityName);\n  }\n\n  createApiEntity(apiServiceName: string, entity: Entity): Observable {\n    return this.entityService.createApiEntity(apiServiceName, entity);\n  }\n\n  updateApiEntity(apiServiceName: string, entityName: string, entity: Entity): Observable {\n    return this.entityService.updateApiEntity(apiServiceName, entityName, entity);\n  }\n\n  deleteApiEntity(apiServiceName: string, entityName: string): Observable {\n    return this.entityService.deleteApiEntity(apiServiceName, entityName);\n  } \n\n  updateEntityStatus(serviceName: string, entityName: string, isActive: boolean): Observable {\n    return this.entityService.updateEntityStatus(serviceName, entityName, isActive);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EntityService.html":{"url":"injectables/EntityService.html","title":"injectable - EntityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/entity-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createApiEntity\n                            \n                            \n                                deleteApiEntity\n                            \n                            \n                                getAllApiServices\n                            \n                            \n                                getApiEntity\n                            \n                            \n                                getApiEntityList\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                updateApiEntity\n                            \n                            \n                                updateEntityStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, errorHandler: ErrorHandlerService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/entity-service.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createApiEntity\n                        \n                    \n                \n            \n            \n                \ncreateApiEntity(apiServiceName: string, entity: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteApiEntity\n                        \n                    \n                \n            \n            \n                \ndeleteApiEntity(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllApiServices\n                        \n                    \n                \n            \n            \n                \ngetAllApiServices()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiEntity\n                        \n                    \n                \n            \n            \n                \ngetApiEntity(apiServiceName: string, entityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApiEntityList\n                        \n                    \n                \n            \n            \n                \ngetApiEntityList(apiServiceName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateApiEntity\n                        \n                    \n                \n            \n            \n                \nupdateApiEntity(apiServiceName: string, entityName: string, entity: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiServiceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEntityStatus\n                        \n                    \n                \n            \n            \n                \nupdateEntityStatus(serviceName: string, entityName: string, isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/entity-service.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                serviceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/api`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/entity-service.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { Entity } from \"../interfaces/Entity\";\nimport { ApiServiceStructure } from \"../interfaces/ApiServiceStructure\";\nimport { apiServiceShortStructure } from \"../interfaces/apiServiceShortStructure\";\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { ErrorHandlerService } from './error-handler.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EntityService {\n  private baseUrl = `${window.location.origin}/api`;\n\n  constructor(\n    private http: HttpClient,\n    private errorHandler: ErrorHandlerService,\n    private alerts: TuiAlertService\n  ) {}\n\n  getApiEntityList(apiServiceName: string): Observable {\n    return this.http\n      .get(`${this.baseUrl}/ApiEntity/${apiServiceName}`)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  getApiEntity(apiServiceName: string, entityName: string): Observable {\n    return this.http\n      .get(`${this.baseUrl}/ApiEntity/${apiServiceName}/${entityName}`)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  createApiEntity(apiServiceName: string, entity: Entity): Observable {\n    return this.http\n      .post(`${this.baseUrl}/ApiEntity/${apiServiceName}`, entity)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  updateApiEntity(\n    apiServiceName: string,\n    entityName: string,\n    entity: Entity\n  ): Observable {\n    return this.http\n      .put(\n        `${this.baseUrl}/ApiEntity/${apiServiceName}/${entityName}`,\n        entity\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  deleteApiEntity(\n    apiServiceName: string,\n    entityName: string\n  ): Observable {\n    return this.http\n      .delete(`${this.baseUrl}/ApiEntity/${apiServiceName}/${entityName}`)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  updateEntityStatus(\n    serviceName: string,\n    entityName: string,\n    isActive: boolean\n  ): Observable {\n    return this.http\n      .patch(\n        `${this.baseUrl}/ApiEntity/${serviceName}/${entityName}/${isActive}`,\n        null\n      )\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  getAllApiServices(): Observable {\n    return this.http\n      .get(`${this.baseUrl}/ApiServices`)\n      .pipe(catchError((err: HttpErrorResponse) => this.handleError(err)));\n  }\n\n  private handleError(error: HttpErrorResponse): Observable {\n    this.errorHandler.handleError(error);\n    this.alerts.open(error.message, { appearance: 'negative' }).subscribe();\n    return throwError(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityShort.html":{"url":"interfaces/EntityShort.html","title":"interface - EntityShort","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EntityShort\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/EntityShort.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс, представляющий краткую информацию о сущности.\nЭтот интерфейс используется для описания основных характеристик сущности.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            structure\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : false\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Флаг активности сущности.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Название сущности.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        structure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        structure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Структура сущности в виде строки.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface EntityShort {\n  /**\n   * Название сущности.\n   * @type {string}\n   */\n  name: string;\n\n  /**\n   * Флаг активности сущности.\n   * @type {boolean}\n   * @default false\n   */\n  isActive: boolean;\n\n  /**\n   * Структура сущности в виде строки.\n   * @type {string}\n   */\n  structure: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorDisplayComponent.html":{"url":"components/ErrorDisplayComponent.html","title":"component - ErrorDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/pages/error-display/error-display.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент ErrorDisplayComponent отвечает за отображение страницы с ошибкой.\nОн получает код ошибки и сообщение об ошибке из параметров маршрута и отображает их пользователю.\nЭтот компонент используется для отображения информации об ошибках, которые произошли в приложении.\nОн предоставляет пользователю возможность вернуться на главную страницу.\nExample :HTML:\n```html\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-display\n            \n\n\n            \n                imports\n                \n                            TuiButton\n                \n            \n\n            \n                styleUrls\n                ./error-display.component.css\n            \n\n\n\n            \n                templateUrl\n                ./error-display.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorCode\n                            \n                            \n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/pages/error-display/error-display.component.ts:37\n                            \n                        \n\n                \n                    \n                            Конструктор компонента.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nАктивированный маршрут для получения параметров маршрута.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nРоутер для навигации между представлениями.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/error-display/error-display.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Метод для возврата на главную страницу.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/pages/error-display/error-display.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Метод жизненного цикла, который вызывается при инициализации компонента.\nПолучает параметры маршрута и устанавливает код ошибки и сообщение об ошибке.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/error-display/error-display.component.ts:30\n                        \n                    \n\n            \n                \n                    Код ошибки.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/pages/error-display/error-display.component.ts:37\n                        \n                    \n\n            \n                \n                    Сообщение об ошибке.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TuiButton } from '@taiga-ui/core';\n\n/**\n * Компонент ErrorDisplayComponent отвечает за отображение страницы с ошибкой.\n * Он получает код ошибки и сообщение об ошибке из параметров маршрута и отображает их пользователю.\n *\n * @remarks\n * Этот компонент используется для отображения информации об ошибках, которые произошли в приложении.\n * Он предоставляет пользователю возможность вернуться на главную страницу.\n *\n * @example\n * HTML:\n * ```html\n * \n */\n@Component({\n  selector: 'app-error-display',\n  imports: [TuiButton],\n  templateUrl: './error-display.component.html',\n  styleUrls: ['./error-display.component.css'],\n})\nexport class ErrorDisplayComponent implements OnInit {\n  /**\n   * Код ошибки.\n   * @type {string}\n   * @memberof ErrorDisplayComponent\n   */\n  errorCode!: string;\n\n  /**\n   * Сообщение об ошибке.\n   * @type {string}\n   * @memberof ErrorDisplayComponent\n   */\n  errorMessage!: string;\n\n  /**\n   * Конструктор компонента.\n   * @param {ActivatedRoute} route - Активированный маршрут для получения параметров маршрута.\n   * @param {Router} router - Роутер для навигации между представлениями.\n   */\n  constructor(private route: ActivatedRoute, private router: Router) {}\n\n  /**\n   * Метод жизненного цикла, который вызывается при инициализации компонента.\n   * Получает параметры маршрута и устанавливает код ошибки и сообщение об ошибке.\n   *\n   * @memberof ErrorDisplayComponent\n   */\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      this.errorCode = params['code'] || 'Unknown Error';\n      this.errorMessage =\n        params['message'] || 'Произошла непредвиденная ошибка.';\n    });\n  }\n\n  /**\n   * Метод для возврата на главную страницу.\n   *\n   * @memberof ErrorDisplayComponent\n   */\n  goBack(): void {\n    this.router.navigate(['/']);\n  }\n}\n\n    \n\n    \n        \n    {{ errorCode }}\n    {{ errorMessage }}\n    \n      Go Back\n    \n  \n  \n    \n\n    \n                \n                    ./error-display.component.css\n                \n                .error-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  background-color: #f9f9f9;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  max-width: 400px;\n  margin: 50px auto;\n}\n\nh1 {\n  margin: 0;\n  font-size: 36px;\n  color: #d9534f; /* Цвет для заголовка ошибки */\n}\n\nh3 {\n  margin: 0;\n  font-size: 24px;\n  color: #0056a6;\n  width: 65%;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  height: 2rem;\n}\n\np {\n  margin: 10px 0;\n  color: #666;\n  font-size: 16px;\n  line-height: 1.5;\n  height: calc(1.5em * 2);\n  overflow-y: auto;\n  overflow-x: hidden;\n  box-sizing: border-box;\n  word-wrap: break-word;\n  white-space: normal;\n}\n\n.primary-button {\n  background-color: #0056a6;\n  color: white;\n  border: 2px solid #0056a6; /* Добавлена граница */\n  padding: 10px 15px;\n  border-radius: 5px;\n  cursor: pointer;\n  font-weight: bold;\n  transition: background-color 0.3s, transform 0.2s, border-color 0.3s; /* Добавлено изменение цвета границы */\n  margin-left: 1rem;\n  margin-bottom: 1rem;\n}\n\n.primary-button:hover {\n  background-color: #004080;\n  border-color: #003366; /* Изменение цвета границы при наведении */\n  transform: scale(1.05); /* Увеличение кнопки при наведении */\n}\n\n.actions {\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n.top-right {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  display: flex;\n  align-items: center;\n}\n\n/* Стилизация полосы прокрутки для WebKit-браузеров */\np::-webkit-scrollbar {\n  width: 8px;\n}\n\np::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 10px;\n}\n\np::-webkit-scrollbar-thumb {\n  background: #888;\n  border-radius: 10px;\n}\n\np::-webkit-scrollbar-thumb:hover {\n  background: #555;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ errorCode }}    {{ errorMessage }}          Go Back        '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/error-handler.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, alertService: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/error-handler.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/error-handler.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { TuiAlertService } from '@taiga-ui/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHandlerService {\n  constructor(private router: Router, private alertService: TuiAlertService) {}\n\n  handleError(error: HttpErrorResponse): void {\n    let errorMessage = 'Произошла ошибка при обработке запроса';\n    let errorCode = error.status || 'Unknown';\n\n    switch (error.status) {\n      case 400:\n        errorMessage = 'Неверный запрос. Проверьте данные и попробуйте снова. 🤦‍♂️';\n        this.alertService.open(`Error ${errorCode}: ${errorMessage}`).subscribe();\n        break;\n      case 404:\n        errorMessage = 'Страница не найдена. Возможно, она была удалена или перемещена. 🕵️‍♂️';\n        this.router.navigate(['/page-not-found']);\n        return;\n      case 408:\n        errorMessage = 'Время ожидания запроса истекло. Попробуйте еще раз. ⏳';\n        break;\n      case 500:\n        errorMessage = 'Внутренняя ошибка сервера. Мы уже работаем над этим! 🛠️';\n        break;\n      case 502:\n        errorMessage = 'Плохой шлюз. Сервер недоступен. Попробуйте позже. 🌐';\n        break;\n      case 503:\n        errorMessage = 'Сервис временно недоступен. Мы на ремонте! 🔧';\n        break;\n      case 504:\n        errorMessage = 'Время ожидания ответа от сервера истекло. Попробуйте еще раз. ⏰';\n        break;\n      default:\n        errorMessage = `Неизвестная ошибка: ${errorMessage}. Код: ${errorCode}. 🤷‍♂️`;\n        break;\n    }\n\n    // Переход на страницу ошибки для всех остальных случаев\n    this.router.navigate(['/error'], {\n      queryParams: { code: errorCode, message: errorMessage },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExportApiButtonComponent.html":{"url":"components/ExportApiButtonComponent.html","title":"component - ExportApiButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExportApiButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/export-api-button/export-api-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент ExportApiButtonComponent предназначен для экспорта структуры API в формате JSON.\nПозволяет пользователю скачать структуру API в виде файла.\nЭтот компонент интегрируется с сервисом репозитория API для получения структуры API.\nИспользует Taiga UI для создания интерактивного интерфейса.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-export-api-button\n            \n\n\n            \n                imports\n                \n                            TuiButton\n                \n            \n\n            \n                styleUrls\n                ./export-api-button.component.css,../../styles/button.css\n            \n\n\n\n            \n                templateUrl\n                ./export-api-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiInfo\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiServiceRepository: ApiServiceRepositoryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/export-api-button/export-api-button.component.ts:32\n                            \n                        \n\n                \n                    \n                            Конструктор компонента ExportApiButtonComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apiServiceRepository\n                                                  \n                                                        \n                                                                        ApiServiceRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для взаимодействия с репозиторием API.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        apiInfo\n                    \n                \n                \n                    \n                        Type :         apiServiceShortStructure\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/export-api-button/export-api-button.component.ts:32\n                            \n                        \n                \n                    \n                        Входной параметр для получения информации о API.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/export-api-button/export-api-button.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Обработчик нажатия на кнопку экспорта.\nПолучает структуру API из репозитория и инициирует скачивание файла JSON.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { TuiButton } from '@taiga-ui/core';\nimport { ApiServiceStructure } from \"../../../interfaces/ApiServiceStructure\";\nimport { apiServiceShortStructure } from \"../../../interfaces/apiServiceShortStructure\";\nimport { ApiServiceRepositoryService } from '../../../repositories/api-service-repository.service';\n\n/**\n * Компонент ExportApiButtonComponent предназначен для экспорта структуры API в формате JSON.\n * Позволяет пользователю скачать структуру API в виде файла.\n *\n * @remarks\n * Этот компонент интегрируется с сервисом репозитория API для получения структуры API.\n * Использует Taiga UI для создания интерактивного интерфейса.\n *\n * @example\n * html\n * \n */\n@Component({\n  selector: 'app-export-api-button',\n  imports: [TuiButton],\n  templateUrl: './export-api-button.component.html',\n  styleUrls: ['./export-api-button.component.css', '../../styles/button.css'],\n})\nexport class ExportApiButtonComponent {\n  /**\n   * Входной параметр для получения информации о API.\n   *\n   * @type {apiServiceShortStructure}\n   * @memberof ExportApiButtonComponent\n   */\n  @Input() apiInfo!: apiServiceShortStructure;\n\n  /**\n   * Конструктор компонента ExportApiButtonComponent.\n   *\n   * @param apiServiceRepository - Сервис для взаимодействия с репозиторием API.\n   *\n   * @memberof ExportApiButtonComponent\n   */\n  constructor(private apiServiceRepository: ApiServiceRepositoryService) {}\n\n  /**\n   * Обработчик нажатия на кнопку экспорта.\n   *\n   * @remarks\n   * Получает структуру API из репозитория и инициирует скачивание файла JSON.\n   *\n   * @memberof ExportApiButtonComponent\n   */\n  onClick(): void {\n    this.apiServiceRepository.getApiStructureList(this.apiInfo.name).subscribe({\n      next: (data: ApiServiceStructure) => {\n        const { name, ...dataWithoutName } = data;\n        const jsonString = JSON.stringify(dataWithoutName, null, 2);\n\n        const blob = new Blob([jsonString], { type: 'application/json' });\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = `${data.name}.json`;\n        a.click();\n        window.URL.revokeObjectURL(url);\n      },\n      error: (error) => {\n        console.log(error);\n      },\n    });\n  }\n}\n\n    \n\n    \n        Экспортировать\n    \n\n    \n                \n                    ./export-api-button.component.css\n                \n                \n                \n                    ../../styles/button.css\n                \n                .primary-button {\n    background-color: #0056a6;\n    color: white;\n    border: none;\n    block-size: auto;\n    padding: 7px 13px;\n    border-radius: 5px;\n    cursor: pointer;\n    font-weight: bold;\n    transition: background-color 0.3s;\n    margin-left: 1rem;\n    margin-bottom: 1rem;\n  }\n  \n  .primary-button:hover {\n    background-color: #004080;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Экспортировать'\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExportApiButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileStatus.html":{"url":"interfaces/FileStatus.html","title":"interface - FileStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/FileStatus.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс, представляющий статус файла.\nЭтот интерфейс используется для описания состояния файла, включая статус загрузки и сообщение об ошибке.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errorMessage\n                                        \n                                \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Сообщение об ошибке.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     TuiFileLike\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TuiFileLike\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Объект файла.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \"loading\" | \"normal\" | \"error\" | \"success\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"loading\" | \"normal\" | \"error\" | \"success\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Статус файла.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import type { TuiFileLike } from '@taiga-ui/kit';\n\n/**\n * Интерфейс, представляющий статус файла.\n *\n * @remarks\n * Этот интерфейс используется для описания состояния файла, включая статус загрузки и сообщение об ошибке.\n *\n * @type {{ file: TuiFileLike, status: 'loading' | 'normal' | 'error' | 'success', errorMessage: string }}\n * @default { file: {}, status: 'normal', errorMessage: '' }\n * @memberof Component\n */\nexport interface FileStatus {\n  /**\n   * Объект файла.\n   * @type {TuiFileLike}\n   */\n  file: TuiFileLike;\n\n  /**\n   * Статус файла.\n   * @type {'loading' | 'normal' | 'error' | 'success'}\n   */\n  status: 'loading' | 'normal' | 'error' | 'success';\n\n  /**\n   * Сообщение об ошибке.\n   * @type {string}\n   */\n  errorMessage: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterByInputComponent.html":{"url":"components/FilterByInputComponent.html","title":"component - FilterByInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FilterByInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/filter-by-input/filter-by-input.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент FilterByInputComponent предназначен для фильтрации элементов на основе ввода пользователя.\nПозволяет пользователю вводить текст для поиска и фильтрации списка элементов.\nЭтот компонент использует реактивные формы Angular для управления вводом и фильтрацией данных.\nИнтегрируется с Taiga UI для создания интерактивного интерфейса.\nExample :html\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter-by-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            TuiDataListWrapper\n                            TuiInputModule\n                \n            \n\n            \n                styleUrls\n                ./filter-by-input.component.css\n            \n\n\n\n            \n                templateUrl\n                ./filter-by-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onKeyPress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                controlName\n                            \n                            \n                                items\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                searchQuery\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filteredItems\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:97\n                            \n                        \n\n                \n                    \n                            Конструктор компонента FilterByInputComponent.\nПодписывается на изменения значения контрола формы и вызывает событие searchQuery.\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        controlName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'search'\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:53\n                            \n                        \n                \n                    \n                        Имя контрола формы.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:62\n                            \n                        \n                \n                    \n                        Список элементов для фильтрации.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Search'\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:44\n                            \n                        \n                \n                    \n                        Метка для поля ввода.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        searchQuery\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:70\n                            \n                        \n                \n                    \n                        Событие, которое вызывается при изменении поискового запроса.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onKeyPress\n                        \n                    \n                \n            \n            \n                \nonKeyPress(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Обработчик нажатия клавиш.\nПредотвращает ввод недопустимых символов.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСобытие нажатия клавиши.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    [this.controlName]: new FormControl('', [Validators.pattern('^[a-zA-Z0-9]*$')]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:78\n                        \n                    \n\n            \n                \n                    Реактивная форма для управления вводом.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filteredItems\n                    \n                \n\n                \n                    \n                        getfilteredItems()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:89\n                                \n                            \n                    \n                        \n                                Возвращает отфильтрованные элементы на основе введенного значения.\n\n\n                                \n                                \n                                \n                                    Returns :     string[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { TuiDataListWrapper } from '@taiga-ui/kit';\nimport { TuiInputModule } from '@taiga-ui/legacy';\n\n/**\n * Компонент FilterByInputComponent предназначен для фильтрации элементов на основе ввода пользователя.\n * Позволяет пользователю вводить текст для поиска и фильтрации списка элементов.\n *\n * @remarks\n * Этот компонент использует реактивные формы Angular для управления вводом и фильтрацией данных.\n * Интегрируется с Taiga UI для создания интерактивного интерфейса.\n *\n * @example\n * html\n * \n * \n\n */\n@Component({\n  selector: 'app-filter-by-input',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    TuiDataListWrapper,\n    TuiInputModule,\n  ],\n  templateUrl: './filter-by-input.component.html',\n  styleUrls: ['./filter-by-input.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FilterByInputComponent {\n  /**\n   * Метка для поля ввода.\n   *\n   * @type {string}\n   * @default 'Search'\n   * @memberof FilterByInputComponent\n   */\n  @Input() label: string = 'Search';\n\n  /**\n   * Имя контрола формы.\n   *\n   * @type {string}\n   * @default 'search'\n   * @memberof FilterByInputComponent\n   */\n  @Input() controlName: string = 'search';\n\n  /**\n   * Список элементов для фильтрации.\n   *\n   * @type {string[]}\n   * @default []\n   * @memberof FilterByInputComponent\n   */\n  @Input() items: string[] = [];\n\n  /**\n   * Событие, которое вызывается при изменении поискового запроса.\n   *\n   * @type {EventEmitter}\n   * @memberof FilterByInputComponent\n   */\n  @Output() searchQuery = new EventEmitter();\n\n  /**\n   * Реактивная форма для управления вводом.\n   *\n   * @type {FormGroup}\n   * @memberof FilterByInputComponent\n   */\n  form = new FormGroup({\n    [this.controlName]: new FormControl('', [Validators.pattern('^[a-zA-Z0-9]*$')]),\n  });\n\n  /**\n   * Возвращает отфильтрованные элементы на основе введенного значения.\n   *\n   * @type {string[]}\n   * @returns {string[]} Отфильтрованные элементы.\n   * @memberof FilterByInputComponent\n   */\n  get filteredItems(): string[] {\n    const control = this.form.get(this.controlName);\n    if (control) {\n      const value = control.value ?? '';\n      this.searchQuery.emit(value);\n      return this.items.filter(item => item.includes(value));\n    }\n    return this.items;\n  }\n\n  /**\n   * Конструктор компонента FilterByInputComponent.\n   *\n   * @remarks\n   * Подписывается на изменения значения контрола формы и вызывает событие searchQuery.\n   *\n   * @memberof FilterByInputComponent\n   */\n  constructor() {\n    this.form.controls[this.controlName].valueChanges.subscribe(value => {\n      this.searchQuery.emit(value ?? '');\n    });\n  }\n\n  /**\n   * Обработчик нажатия клавиш.\n   *\n   * @param event - Событие нажатия клавиши.\n   * @remarks\n   * Предотвращает ввод недопустимых символов.\n   *\n   * @memberof FilterByInputComponent\n   */\n  onKeyPress(event: KeyboardEvent): void {\n    const inputChar = event.key;\n    const allowedChars = /^[a-zA-Z0-9]$/;\n    if (!allowedChars.test(inputChar) && !event.ctrlKey && !event.metaKey) {\n      event.preventDefault();\n    }\n  }\n}\n\n    \n\n    \n        \n    \n      {{ label }}\n      \n    \n  \n  \n    \n\n    \n                \n                    ./filter-by-input.component.css\n                \n                tui-input {\n    min-width: 300px;\n    max-width: 50%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ label }}              '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterByInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент HeaderComponent предназначен для отображения заголовка страницы с логотипом и кнопкой.\nПозволяет пользователю выполнять действия, такие как возврат на предыдущую страницу или импорт данных.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует диалоговые окна для выполнения операций импорта.\nExample :html\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n            \n                imports\n                \n                                BackButtonComponent\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Click\n                            \n                            \n                                Import\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonText\n                            \n                            \n                                isApiPage\n                            \n                            \n                                logoUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/header/header.component.ts:46\n                            \n                        \n                \n                    \n                        Текст кнопки в заголовке.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isApiPage\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/header/header.component.ts:63\n                            \n                        \n                \n                    \n                        Флаг, указывающий, является ли текущая страница страницей API.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        logoUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"https://www.titan2.ru/images/temp/logo__ru.jpg\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/header/header.component.ts:37\n                            \n                        \n                \n                    \n                        URL логотипа для отображения в заголовке.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        buttonClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/header/header.component.ts:54\n                            \n                        \n                \n                    \n                        Событие, которое вызывается при нажатии на кнопку.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Click\n                        \n                    \n                \n            \n            \n                \nClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/header/header.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Обработчик нажатия на кнопку.\nВызывает событие buttonClick для уведомления родительского компонента о нажатии.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Import\n                        \n                    \n                \n            \n            \n                \nImport()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/header/header.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Открывает диалоговое окно для импорта данных.\nИспользует сервис tuiDialog для отображения диалогового окна.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : tuiDialog(ImportDialogComponent, {\n    closeable: true,\n    dismissible: true,\n    label: \"Импортировать\",\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/header/header.component.ts:71\n                        \n                    \n\n            \n                \n                    Диалог для импорта данных.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { BackButtonComponent } from '../back-button/back-button.component';\nimport { CommonModule } from '@angular/common';\nimport { tuiDialog } from '@taiga-ui/core';\nimport { ImportDialogComponent } from '../import-dialog/import-dialog.component';\n\n/**\n * Компонент HeaderComponent предназначен для отображения заголовка страницы с логотипом и кнопкой.\n * Позволяет пользователю выполнять действия, такие как возврат на предыдущую страницу или импорт данных.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует диалоговые окна для выполнения операций импорта.\n *\n * @example\n * html\n * \n * \n */\n@Component({\n  selector: 'app-header',\n  imports: [BackButtonComponent, CommonModule],\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'], // Исправлено с styleUrl на styleUrls\n})\nexport class HeaderComponent {\n  /**\n   * URL логотипа для отображения в заголовке.\n   *\n   * @type {string}\n   * @default \"https://www.titan2.ru/images/temp/logo__ru.jpg\"\n   * @memberof HeaderComponent\n   */\n  @Input() logoUrl: string = \"https://www.titan2.ru/images/temp/logo__ru.jpg\";\n\n  /**\n   * Текст кнопки в заголовке.\n   *\n   * @type {string}\n   * @default ''\n   * @memberof HeaderComponent\n   */\n  @Input() buttonText: string = '';\n\n  /**\n   * Событие, которое вызывается при нажатии на кнопку.\n   *\n   * @type {EventEmitter}\n   * @memberof HeaderComponent\n   */\n  @Output() buttonClick: EventEmitter = new EventEmitter();\n\n  /**\n   * Флаг, указывающий, является ли текущая страница страницей API.\n   *\n   * @type {boolean}\n   * @default false\n   * @memberof HeaderComponent\n   */\n  @Input() isApiPage: boolean = false;\n\n  /**\n   * Диалог для импорта данных.\n   *\n   * @type {tuiDialog}\n   * @memberof HeaderComponent\n   */\n  private readonly dialog = tuiDialog(ImportDialogComponent, {\n    closeable: true,\n    dismissible: true,\n    label: \"Импортировать\",\n  });\n\n  /**\n   * Обработчик нажатия на кнопку.\n   *\n   * @remarks\n   * Вызывает событие buttonClick для уведомления родительского компонента о нажатии.\n   *\n   * @memberof HeaderComponent\n   */\n  Click(): void {\n    this.buttonClick.emit();\n  }\n\n  /**\n   * Открывает диалоговое окно для импорта данных.\n   *\n   * @remarks\n   * Использует сервис tuiDialog для отображения диалогового окна.\n   *\n   * @memberof HeaderComponent\n   */\n  Import(): void {\n    this.dialog().subscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    @if(isApiPage){\n      Импортировать\n    }\n    @if(buttonText != ''){\n      {{ buttonText }}\n    }\n    \n  \n\n    \n\n    \n                \n                    ./header.component.css\n                \n                .header {\n    background-color: #0056a6;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n.header a{\n    height: 4rem;\n}\n\n.header a {\n    outline: none; /* Убирает стандартное выделение */\n}\n\n.header a img{\n    height: 4rem;\n}\n\n.header button {\n    background-color: white;\n    border: none;\n    padding: 0.625rem 1.25rem;\n    /* Относительные отступы */\n    margin: 0.625rem 0.5rem;\n    /* Относительные отступы */\n    border-radius: 0.3125rem;\n    /* Относительный радиус скругления */\n    cursor: pointer;\n    font-weight: bold;\n    transition: background-color 0.3s;\n    font-size: 1rem;\n    /* Относительный размер шрифта */\n}\n\n.header button:hover {\n    background-color: #e6e6e6;\n}\n\n@media only screen and (max-width: 768px) {\n    .header {\n        display: flex;  \n        justify-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n    }\n\n    .header a{\n        width: -webkit-fill-available;\n        height: auto;\n    }\n\n    .header a img{\n        width: -webkit-fill-available;\n        height: auto;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              @if(isApiPage){      Импортировать    }    @if(buttonText != \\'\\'){      {{ buttonText }}    }      '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpErrorInterceptor.html":{"url":"interceptors/HttpErrorInterceptor.html","title":"interceptor - HttpErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interceptors/http-error.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерсептор HttpErrorInterceptor перехватывает HTTP-запросы и обрабатывает ошибки,\nвозникающие в процессе выполнения запросов. Он использует сервис ErrorHandlerService\nдля обработки ошибок и TuiAlertService для отображения уведомлений об ошибках.\nЭтот интерсептор позволяет централизованно обрабатывать ошибки HTTP-запросов,\nчто упрощает управление ошибками в приложении. Он автоматически показывает\nуведомления об ошибках пользователю и может быть настроен для выполнения\nдополнительных действий при возникновении ошибок.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorHandler: ErrorHandlerService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/interceptors/http-error.interceptor.ts:24\n                            \n                        \n\n                \n                    \n                            Конструктор интерсептора.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для обработки ошибок.\n\n\n                                                        \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис уведомлений для отображения уведомлений об ошибках.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/interceptors/http-error.interceptor.ts:39\n                        \n                    \n\n\n            \n                \n                        Метод перехвата HTTP-запросов.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nHTTP-запрос.\n\n\n                                            \n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nHTTP-обработчик.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \nНаблюдаемый объект с HTTP-событиями.\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { ErrorHandlerService } from '../services/error-handler.service';\n\n/**\n * Интерсептор HttpErrorInterceptor перехватывает HTTP-запросы и обрабатывает ошибки,\n * возникающие в процессе выполнения запросов. Он использует сервис ErrorHandlerService\n * для обработки ошибок и TuiAlertService для отображения уведомлений об ошибках.\n *\n * @remarks\n * Этот интерсептор позволяет централизованно обрабатывать ошибки HTTP-запросов,\n * что упрощает управление ошибками в приложении. Он автоматически показывает\n * уведомления об ошибках пользователю и может быть настроен для выполнения\n * дополнительных действий при возникновении ошибок.\n *\n */\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n  /**\n   * Конструктор интерсептора.\n   * @param {ErrorHandlerService} errorHandler - Сервис для обработки ошибок.\n   * @param {TuiAlertService} alerts - Сервис уведомлений для отображения уведомлений об ошибках.\n   */\n  constructor(private errorHandler: ErrorHandlerService, private alerts: TuiAlertService) {}\n\n  /**\n   * Метод перехвата HTTP-запросов.\n   * @param {HttpRequest} req - HTTP-запрос.\n   * @param {HttpHandler} next - HTTP-обработчик.\n   * @returns {Observable>} - Наблюдаемый объект с HTTP-событиями.\n   * @memberof HttpErrorInterceptor\n   */\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        this.errorHandler.handleError(error);\n        this.alerts.open(error.message, { appearance: 'negative' }).subscribe();\n        return throwError(error);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconTrashComponent.html":{"url":"components/IconTrashComponent.html","title":"component - IconTrashComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IconTrashComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/icon-trash/icon-trash.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент IconTrashComponent предназначен для отображения иконки корзины и управления удалением элементов.\nПозволяет пользователю подтверждать удаление элементов с помощью уведомлений.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует сервисы для управления уведомлениями и маршрутизацией.\nExample :html\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-icon-trash\n            \n\n\n\n            \n                styleUrls\n                ./icon-trash.component.css,../../styles/icon.css\n            \n\n\n\n            \n                templateUrl\n                ./icon-trash.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                showNotification\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                apiInfo\n                            \n                            \n                                endpointInfo\n                            \n                            \n                                entityInfo\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                responseAlert\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alerts: TuiAlertService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/icon-trash/icon-trash.component.ts:74\n                            \n                        \n\n                \n                    \n                            Конструктор компонента IconTrashComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для отображения уведомлений.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для управления маршрутизацией.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        apiInfo\n                    \n                \n                \n                    \n                        Type :         apiServiceShortStructure\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/icon-trash/icon-trash.component.ts:50\n                            \n                        \n                \n                    \n                        Информация об API, связанная с элементом.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        endpointInfo\n                    \n                \n                \n                    \n                        Type :         Endpoint\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/icon-trash/icon-trash.component.ts:66\n                            \n                        \n                \n                    \n                        Информация об эндпоинте, связанная с элементом.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        entityInfo\n                    \n                \n                \n                    \n                        Type :         EntityShort\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/icon-trash/icon-trash.component.ts:58\n                            \n                        \n                \n                    \n                        Информация о сущности, связанная с элементом.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/icon-trash/icon-trash.component.ts:42\n                            \n                        \n                \n                    \n                        Элемент, который будет удален.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        responseAlert\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/icon-trash/icon-trash.component.ts:74\n                            \n                        \n                \n                    \n                        Событие, которое вызывается при подтверждении удаления элемента.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        showNotification\n                        \n                    \n                \n            \n            \n                \n                        \n                    showNotification()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/icon-trash/icon-trash.component.ts:98\n                        \n                    \n\n\n            \n                \n                        Отображает уведомление для подтверждения удаления элемента.\nИспользует сервис TuiAlertService для отображения уведомлений.\nПодписывается на события маршрутизации для автоматического закрытия уведомлений.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { switchMap, takeUntil } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { PolymorpheusComponent } from '@taiga-ui/polymorpheus';\nimport { AlertDeleteComponent } from '../alert-delete/alert-delete.component';\nimport { Endpoint } from \"../../../interfaces/Endpoint\";\nimport { apiServiceShortStructure } from \"../../../interfaces/apiServiceShortStructure\";\nimport { EntityShort } from \"../../../interfaces/EntityShort\";\n\n/**\n * Компонент IconTrashComponent предназначен для отображения иконки корзины и управления удалением элементов.\n * Позволяет пользователю подтверждать удаление элементов с помощью уведомлений.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует сервисы для управления уведомлениями и маршрутизацией.\n *\n * @example\n * html\n * \n * \n */\n@Component({\n  selector: 'app-icon-trash',\n  imports: [],\n  templateUrl: './icon-trash.component.html',\n  styleUrls: ['./icon-trash.component.css', '../../styles/icon.css'],\n})\nexport class IconTrashComponent {\n  /**\n   * Элемент, который будет удален.\n   *\n   * @type {any}\n   * @memberof IconTrashComponent\n   */\n  @Input() item: any;\n\n  /**\n   * Информация об API, связанная с элементом.\n   *\n   * @type {apiServiceShortStructure}\n   * @memberof IconTrashComponent\n   */\n  @Input() apiInfo!: apiServiceShortStructure;\n\n  /**\n   * Информация о сущности, связанная с элементом.\n   *\n   * @type {EntityShort}\n   * @memberof IconTrashComponent\n   */\n  @Input() entityInfo!: EntityShort;\n\n  /**\n   * Информация об эндпоинте, связанная с элементом.\n   *\n   * @type {Endpoint}\n   * @memberof IconTrashComponent\n   */\n  @Input() endpointInfo!: Endpoint;\n\n  /**\n   * Событие, которое вызывается при подтверждении удаления элемента.\n   *\n   * @type {EventEmitter}\n   * @memberof IconTrashComponent\n   */\n  @Output() responseAlert = new EventEmitter();\n\n  /**\n   * Конструктор компонента IconTrashComponent.\n   *\n   * @param alerts - Сервис для отображения уведомлений.\n   * @param router - Сервис для управления маршрутизацией.\n   *\n   * @memberof IconTrashComponent\n   */\n  constructor(\n    private alerts: TuiAlertService,\n    private router: Router,\n  ) {}\n\n  /**\n   * Отображает уведомление для подтверждения удаления элемента.\n   *\n   * @remarks\n   * Использует сервис TuiAlertService для отображения уведомлений.\n   * Подписывается на события маршрутизации для автоматического закрытия уведомлений.\n   *\n   * @memberof IconTrashComponent\n   */\n  protected showNotification(): void {\n    const notification = this.alerts\n      .open(new PolymorpheusComponent(AlertDeleteComponent), {\n        label: 'Вы уверены, что хотите удалить?',\n        appearance: 'negative',\n        autoClose: 0,\n      })\n      .pipe(\n        switchMap((response) => {\n          if (response) {\n            this.responseAlert.emit(true);\n            console.log(`Удаление карточки: ${this.item.name}`);\n            return this.alerts.open(`Карточка \"${this.item.name}\" удалена.`, { label: 'Успех' });\n          } else {\n            return this.alerts.open(`Удаление карточки \"${this.item.name}\" отменено.`, { label: 'Информация' });\n          }\n        }),\n        takeUntil(this.router.events),\n      );\n\n    notification.subscribe();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./icon-trash.component.css\n                \n                \n                \n                    ../../styles/icon.css\n                \n                  \ni {\n    margin-right: 15px; /* 10px * 1.2 */\n    cursor: pointer;\n    color: #666;\n    transition: color 0.3s;\n    font-size: 20px; /* Увеличиваем размер шрифта на 20% */\n}\n\ni:hover {\n    color: #000;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IconTrashComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImportDialogComponent.html":{"url":"components/ImportDialogComponent.html","title":"component - ImportDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ImportDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/import-dialog/import-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент ImportDialogComponent предназначен для импорта данных API через диалоговое окно.\nПозволяет пользователю загружать файлы и обрабатывать их содержимое для создания новых API сервисов.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует реактивные формы для управления загрузкой файлов и обработки данных.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-import-dialog\n            \n\n\n            \n                imports\n                \n                            NgIf\n                            ReactiveFormsModule\n                            TuiAvatar\n                            TuiFiles\n                            TuiLink\n                            NgFor\n                            TuiButton\n                \n            \n\n            \n                styleUrls\n                ./import-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./import-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                context\n                            \n                            \n                                    Protected\n                                    Readonly\n                                control\n                            \n                            \n                                    Protected\n                                files\n                            \n                            \n                                    Protected\n                                hasFiles\n                            \n                            \n                                    Protected\n                                processedData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getFileStatus\n                            \n                            \n                                    Protected\n                                getFileStatusText\n                            \n                            \n                                    Private\n                                processJson\n                            \n                            \n                                    Private\n                                readFiles\n                            \n                            \n                                    Protected\n                                removeFile\n                            \n                            \n                                    Protected\n                                submit\n                            \n                            \n                                    Private\n                                updateFileStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cd: ChangeDetectorRef, apiService: ApiServiceRepositoryService, alerts: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:71\n                            \n                        \n\n                \n                    \n                            Конструктор компонента ImportDialogComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для управления изменением состояния.\n\n\n                                                        \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiServiceRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для взаимодействия с репозиторием API.\n\n\n                                                        \n                                                \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для отображения уведомлений.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getFileStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFileStatus(file: FileStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:172\n                        \n                    \n\n\n            \n                \n                        Возвращает текущий статус файла.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            FileStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nФайл, для которого нужно получить статус.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     \"loading\" | \"normal\" | \"error\"\n\n                        \n                            \n                                Статус файла.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getFileStatusText\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFileStatusText(file: FileStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:150\n                        \n                    \n\n\n            \n                \n                        Возвращает текстовое описание статуса файла.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            FileStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nФайл, для которого нужно получить статус.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Текстовое описание статуса файла.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        processJson\n                        \n                    \n                \n            \n            \n                \n                        \n                    processJson(json: any, fileName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:193\n                        \n                    \n\n\n            \n                \n                        Обрабатывает JSON данные из файла.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                json\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nJSON данные для обработки.\n\n\n                                            \n                                        \n                                        \n                                                fileName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя файла.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    readFiles(files: File[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:108\n                        \n                    \n\n\n            \n                \n                        Читает содержимое загруженных файлов.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСписок файлов для чтения.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        removeFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeFile(fileToRemove: FileStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:260\n                        \n                    \n\n\n            \n                \n                        Удаляет файл из списка загруженных.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fileToRemove\n                                            \n                                                            FileStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nФайл, который нужно удалить.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        submit\n                        \n                    \n                \n            \n            \n                \n                        \n                    submit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:213\n                        \n                    \n\n\n            \n                \n                        Отправляет обработанные данные на сервер.\nОбновляет статус файлов и отображает уведомления о результатах отправки.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateFileStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateFileStatus(file: File, status: \"loading\" | \"normal\" | \"error\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/import-dialog/import-dialog.component.ts:134\n                        \n                    \n\n\n            \n                \n                        Обновляет статус файла.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nФайл, статус которого нужно обновить.\n\n\n                                            \n                                        \n                                        \n                                                status\n                                            \n                                                        \"loading\" | \"normal\" | \"error\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНовый статус файла.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext>()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:71\n                        \n                    \n\n            \n                \n                    Контекст диалогового окна.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        control\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl([])\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:38\n                        \n                    \n\n            \n                \n                    Контрол для управления загрузкой файлов.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileStatus[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:46\n                        \n                    \n\n            \n                \n                    Список загруженных файлов с их статусами.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        hasFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:55\n                        \n                    \n\n            \n                \n                    Флаг, указывающий, есть ли загруженные файлы.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        processedData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiServiceStructure[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/import-dialog/import-dialog.component.ts:63\n                        \n                    \n\n            \n                \n                    Массив для хранения обработанных данных API.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { NgIf, NgFor } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, ChangeDetectorRef } from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { TuiIcon, TuiLink, TuiButton, TuiAlertService } from '@taiga-ui/core';\nimport { TuiAvatar, TuiFiles } from '@taiga-ui/kit';\nimport { ApiServiceStructure } from \"../../../interfaces/ApiServiceStructure\";\nimport { ApiServiceRepositoryService } from '../../../repositories/api-service-repository.service';\nimport { TuiDialogContext } from '@taiga-ui/core';\nimport { injectContext } from '@taiga-ui/polymorpheus';\nimport { FileStatus } from '../../../interfaces/FileStatus';\n\n/**\n * Компонент ImportDialogComponent предназначен для импорта данных API через диалоговое окно.\n * Позволяет пользователю загружать файлы и обрабатывать их содержимое для создания новых API сервисов.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует реактивные формы для управления загрузкой файлов и обработки данных.\n *\n * @example\n * html\n * \n */\n@Component({\n  selector: 'app-import-dialog',\n  imports: [NgIf, ReactiveFormsModule, TuiAvatar, TuiFiles, TuiLink, NgFor, TuiButton],\n  templateUrl: './import-dialog.component.html',\n  styleUrls: ['./import-dialog.component.css'], // Исправлено с styleUrl на styleUrls\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ImportDialogComponent {\n  /**\n   * Контрол для управления загрузкой файлов.\n   *\n   * @type {FormControl}\n   * @memberof ImportDialogComponent\n   */\n  protected readonly control = new FormControl([]);\n\n  /**\n   * Список загруженных файлов с их статусами.\n   *\n   * @type {FileStatus[]}\n   * @memberof ImportDialogComponent\n   */\n  protected files: FileStatus[] = [];\n\n  /**\n   * Флаг, указывающий, есть ли загруженные файлы.\n   *\n   * @type {boolean}\n   * @default false\n   * @memberof ImportDialogComponent\n   */\n  protected hasFiles = false;\n\n  /**\n   * Массив для хранения обработанных данных API.\n   *\n   * @type {ApiServiceStructure[]}\n   * @memberof ImportDialogComponent\n   */\n  protected processedData: ApiServiceStructure[] = [];\n\n  /**\n   * Контекст диалогового окна.\n   *\n   * @type {TuiDialogContext}\n   * @memberof ImportDialogComponent\n   */\n  private readonly context = injectContext>();\n\n  /**\n   * Конструктор компонента ImportDialogComponent.\n   *\n   * @param cd - Сервис для управления изменением состояния.\n   * @param apiService - Сервис для взаимодействия с репозиторием API.\n   * @param alerts - Сервис для отображения уведомлений.\n   *\n   * @memberof ImportDialogComponent\n   */\n  constructor(\n    private cd: ChangeDetectorRef,\n    private apiService: ApiServiceRepositoryService,\n    private readonly alerts: TuiAlertService\n  ) {\n    this.control.valueChanges.subscribe((files) => {\n      if (files) {\n        // Обновляем только новые файлы\n        const newFiles = files.filter(file => !this.files.some(f => f.file.name === file.name));\n        this.files = [\n          ...this.files,\n          ...newFiles.map(file => ({ file, status: 'loading' as const, errorMessage: '' }))\n        ];\n        this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n        this.readFiles(newFiles);\n      }\n    });\n  }\n\n  /**\n   * Читает содержимое загруженных файлов.\n   *\n   * @param files - Список файлов для чтения.\n   * @private\n   * @memberof ImportDialogComponent\n   */\n  private readFiles(files: File[]): void {\n    files.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = (e: ProgressEvent) => {\n        const text = e.target?.result as string;\n        try {\n          const json = JSON.parse(text);\n          this.updateFileStatus(file, 'normal');\n          this.processJson(json, file.name);\n        } catch (error) {\n          console.error('Ошибка при чтении JSON файла:', error);\n          this.updateFileStatus(file, 'error');\n        }\n      };\n      reader.readAsText(file);\n    });\n  }\n\n  /**\n   * Обновляет статус файла.\n   *\n   * @param file - Файл, статус которого нужно обновить.\n   * @param status - Новый статус файла.\n   * @private\n   * @memberof ImportDialogComponent\n   */\n  private updateFileStatus(file: File, status: 'loading' | 'normal' | 'error'): void {\n    const fileStatus = this.files.find(f => f.file.name === file.name);\n    if (fileStatus) {\n      fileStatus.status = status;\n      this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n      this.cd.markForCheck();\n    }\n  }\n\n  /**\n   * Возвращает текстовое описание статуса файла.\n   *\n   * @param file - Файл, для которого нужно получить статус.\n   * @returns {string} Текстовое описание статуса файла.\n   * @memberof ImportDialogComponent\n   */\n  protected getFileStatusText(file: FileStatus): string {\n    switch (file.status) {\n      case 'loading':\n        return 'Файл на проверке';\n      case 'normal':\n        return 'Файл проверен';\n      case 'error':\n        return 'Ошибка загрузки файла';\n      case 'success':\n        return 'Файл загружен';\n      default:\n        return '';\n    }\n  }\n\n  /**\n   * Возвращает текущий статус файла.\n   *\n   * @param file - Файл, для которого нужно получить статус.\n   * @returns {'loading' | 'normal' | 'error'} Статус файла.\n   * @memberof ImportDialogComponent\n   */\n  protected getFileStatus(file: FileStatus): 'loading' | 'normal' | 'error' {\n    switch (file.status) {\n      case 'loading':\n        return 'loading';\n      case 'normal':\n        return 'normal';\n      case 'error':\n        return 'error';\n      case 'success':\n        return 'normal';\n    }\n  }\n\n  /**\n   * Обрабатывает JSON данные из файла.\n   *\n   * @param json - JSON данные для обработки.\n   * @param fileName - Имя файла.\n   * @private\n   * @memberof ImportDialogComponent\n   */\n  private processJson(json: any, fileName: string): void {\n    const name = fileName.replace(/\\.[^/.]+$/, \"\");\n    const apiServiceStructure: ApiServiceStructure = {\n      name: name,\n      isActive: json.isActive || false,\n      description: json.description || '',\n      entities: json.entities || []\n    };\n    this.processedData.push(apiServiceStructure);\n    console.log('Обработанный JSON:', apiServiceStructure);\n  }\n\n  /**\n   * Отправляет обработанные данные на сервер.\n   *\n   * @remarks\n   * Обновляет статус файлов и отображает уведомления о результатах отправки.\n   *\n   * @memberof ImportDialogComponent\n   */\n  protected submit(): void {\n    if (this.processedData.length > 0) {\n      this.files.filter(f => f.status == 'normal').forEach(file => file.status = 'loading');\n      this.cd.markForCheck();\n\n      this.processedData.forEach(service => {\n        this.apiService.createFullApiService(service).subscribe({\n          next: (response) => {\n            console.log('Сервис успешно создан:', response);\n            const file = this.files.find(f => f.file.name === service.name + '.json');\n            if (file) {\n              file.status = 'success';\n              file.errorMessage = '';\n              this.cd.markForCheck();\n            }\n            this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n            if (this.files.every(file => file.status == 'success')) {\n              this.alerts\n                .open('Файлы успешно загружены', {\n                  appearance: 'success',\n                })\n                .subscribe();\n              this.context.completeWith(false);\n            }\n          },\n          error: (response) => {\n            const file = this.files.find(f => f.file.name === service.name + '.json');\n            if (file) {\n              file.status = 'error';\n              file.errorMessage = `Ошибка при создании сервиса: ${response.error}`;\n              this.cd.markForCheck();\n            }\n            this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n          }\n        });\n      });\n    } else {\n      console.warn('Нет данных для отправки.');\n    }\n  }\n\n  /**\n   * Удаляет файл из списка загруженных.\n   *\n   * @param fileToRemove - Файл, который нужно удалить.\n   * @memberof ImportDialogComponent\n   */\n  protected removeFile(fileToRemove: FileStatus): void {\n    this.files = this.files.filter(file => file !== fileToRemove);\n    this.hasFiles = this.files.filter(f => f.status == 'normal').length > 0;\n\n    const currentFiles = this.control.value ? this.control.value.filter(file => file !== fileToRemove.file) : [];\n    this.control.setValue(currentFiles);\n\n    this.cd.markForCheck();\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n            \n            \n                Файлы готовы к загрузке!\n                \n                \n            \n        \n        \n            \n                \n                \n                    Перетащите файлы сюда или\n                    кликните для загрузки\n                \n            \n        \n    \n\n\n\n    \n        {{ getFileStatusText(file) }}\n        {{ file.errorMessage }}\n        \n    \n\n\n\n    \n        Отправить\n    \n\n\n    \n\n    \n                \n                    ./import-dialog.component.css\n                \n                .content {\n    display: flex;\n    block-size: 10rem;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 1rem;\n}\n\nbutton[tuiIconButton] {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    color: red; /* Красный цвет для кнопки удаления */\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        Файлы готовы к загрузке!                                                                                                                            Перетащите файлы сюда или                    кликните для загрузки                                                    {{ getFileStatusText(file) }}        {{ file.errorMessage }}                        Отправить    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImportDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingComponent.html":{"url":"components/LoadingComponent.html","title":"component - LoadingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoadingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/loading/loading.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент LoadingComponent предназначен для отображения анимации загрузки с изображением.\nИспользуется для индикации процесса загрузки данных или выполнения операций.\nЭтот компонент отображает статическое изображение, которое может быть заменено на анимацию или другой индикатор загрузки.\nПодходит для использования в различных частях приложения, где требуется показать пользователю, что выполняется загрузка.\nExample :html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading\n            \n\n\n\n            \n                styleUrls\n                ./loading.component.css\n            \n\n\n\n            \n                templateUrl\n                ./loading.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"assets/dora.png\"\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/loading/loading.component.ts:29\n                        \n                    \n\n            \n                \n                    Путь к изображению, отображаемому во время загрузки.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Компонент LoadingComponent предназначен для отображения анимации загрузки с изображением.\n * Используется для индикации процесса загрузки данных или выполнения операций.\n *\n * @remarks\n * Этот компонент отображает статическое изображение, которое может быть заменено на анимацию или другой индикатор загрузки.\n * Подходит для использования в различных частях приложения, где требуется показать пользователю, что выполняется загрузка.\n *\n * @example\n * html\n * \n */\n@Component({\n  selector: 'app-loading',\n  imports: [],\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.css'], // Исправлено с styleUrl на styleUrls\n})\nexport class LoadingComponent {\n  /**\n   * Путь к изображению, отображаемому во время загрузки.\n   *\n   * @type {string}\n   * @default \"assets/dora.png\"\n   * @memberof LoadingComponent\n   */\n  path: string = \"assets/dora.png\";\n}\n\n    \n\n    \n        \n    \n\n    \n\n    \n                \n                    ./loading.component.css\n                \n                .loading {\n    display: flex;\n    justify-content: center; \n    align-items: center;    \n    height: 100vh;\n}\n\n.loader {\n    width: 100px;\n    height: 46px;\n    position: relative;\n    border-bottom: 8px solid #0056a6; /* Увеличиваем толщину линии */\n    border-top: 8px solid #0056a6;    /* Увеличиваем толщину линии */\n    box-sizing: border-box;\n}\n\n.loader:before, .loader:after {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    top: -20px;\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    background: #fff;\n    border: 8px solid #0056a6; /* Увеличиваем толщину линии */\n    box-sizing: border-box;\n    animation: slide 1s infinite ease-in-out alternate;\n}\n\n.loader:after {\n    top: 20px;\n    animation-direction: alternate-reverse;\n}\n\n@keyframes slide {\n    0%, 20% { transform: translateX(70px); }\n    80%, 100% { transform: translateX(-1px); }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/pages/page-not-found/page-not-found.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент PageNotFoundComponent отвечает за отображение страницы \"Страница не найдена\" (404).\nОн предоставляет пользователю информацию о том, что запрашиваемая страница не существует.\nЭтот компонент используется для отображения сообщения об ошибке 404, когда пользователь пытается получить доступ к несуществующей странице.\nОн может быть настроен для отображения дополнительной информации или предложений по навигации.\nExample :HTML:\n```html\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            TuiButton\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./page-not-found.component.css\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TuiButton } from '@taiga-ui/core';\n\n/**\n * Компонент PageNotFoundComponent отвечает за отображение страницы \"Страница не найдена\" (404).\n * Он предоставляет пользователю информацию о том, что запрашиваемая страница не существует.\n *\n * @remarks\n * Этот компонент используется для отображения сообщения об ошибке 404, когда пользователь пытается получить доступ к несуществующей странице.\n * Он может быть настроен для отображения дополнительной информации или предложений по навигации.\n *\n * @example\n * HTML:\n * ```html\n * \n */\n@Component({\n  selector: 'app-page-not-found',\n  imports: [\n    CommonModule,\n    TuiButton,\n    RouterModule,\n  ],\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css'],\n})\nexport class PageNotFoundComponent {\n}\n\n    \n\n    \n        \n\n\n\n    \n    \n\n\n\n    \n        \n            Ой!🙈🍌\n            Страница не найдена\n            \n            На главную\n        \n    \n\n\n\n    \n\n    \n                \n                    ./page-not-found.component.css\n                \n                html, body {\n    height: 100%;\n    margin: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.cc {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n}\n\n.container {\n    text-align: center;\n    padding: 40px;\n    border-radius: 15px;\n    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\n    max-width: 400px;\n    width: 100%;\n    background-color: #fff; /* Фон контейнера */\n}\n\n/* Стили для заголовков */\nh1 {\n    color: #333;\n    font-size: 2em;\n    margin: 15px 0;\n}\n\n/* Стили для изображения */\nimg {\n    width: 300px;\n    height: 300px;\n    border-radius: 15px;\n    margin: 25px 0;\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n}\n\n/* Стили для кнопки */\nbutton {\n    background-color: #007BFF;\n    color: #fff;\n    border: none;\n    padding: 15px 30px;\n    font-size: 1.2em;\n    border-radius: 7px;\n    cursor: pointer;\n    transition: background-color 0.3s, transform 0.3s;\n}\n\nbutton:hover {\n    background-color: #0056b3;\n    transform: scale(1.05);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Ой!🙈🍌            Страница не найдена                        На главную            '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaginationComponent.html":{"url":"components/PaginationComponent.html","title":"component - PaginationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PaginationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/pagination/pagination.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент PaginationComponent предназначен для управления пагинацией в Angular-приложениях.\nОн предоставляет удобный интерфейс для навигации по страницам с данными.\nЭтот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\nИспользует реактивные формы для управления состоянием пагинации.\nExample :HTML:\n```html\n\nExample :TypeScript:\n```typescript\nonPageChange(page: number): void {\n  console.log('Текущая страница:', page);\n}\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pagination\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            TuiInputSliderModule\n                            TuiPagination\n                            TuiTextfieldControllerModule\n                \n            \n\n            \n                styleUrls\n                ./pagination.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pagination.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToPage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                itemsPerPage\n                            \n                            \n                                totalItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    totalPages\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentPage\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/pagination/pagination.component.ts:76\n                            \n                        \n                \n                    \n                        Текущая страница.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        itemsPerPage\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 16\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/pagination/pagination.component.ts:68\n                            \n                        \n                \n                    \n                        Количество элементов на одной странице.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        totalItems\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/pagination/pagination.component.ts:60\n                            \n                        \n                \n                    \n                        Общее количество элементов.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        pageChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/pagination/pagination.component.ts:83\n                            \n                        \n                \n                    \n                        Событие, которое срабатывает при изменении страницы.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToPage\n                        \n                    \n                \n            \n            \n                \ngoToPage(page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/pagination/pagination.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Переходит на указанную страницу.\nExample :goToPage(2); // Переходит на вторую страницу.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНомер страницы, на которую нужно перейти.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        totalPages\n                    \n                \n\n                \n                    \n                        gettotalPages()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/pagination/pagination.component.ts:91\n                                \n                            \n                    \n                        \n                                Возвращает общее количество страниц.\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TuiPagination } from '@taiga-ui/kit';\nimport {\n  TuiInputSliderModule,\n  TuiTextfieldControllerModule,\n} from '@taiga-ui/legacy';\n\n/**\n * Компонент PaginationComponent предназначен для управления пагинацией в Angular-приложениях.\n * Он предоставляет удобный интерфейс для навигации по страницам с данными.\n *\n * @remarks\n * Этот компонент интегрируется с Taiga UI для создания интерактивного интерфейса.\n * Использует реактивные формы для управления состоянием пагинации.\n *\n * @example\n * HTML:\n * ```html\n * \n * \n * ```\n *\n * TypeScript:\n * ```typescript\n * onPageChange(page: number): void {\n *   console.log('Текущая страница:', page);\n * }\n * ```\n */\n@Component({\n  selector: 'app-pagination',\n  imports: [\n    FormsModule,\n    TuiInputSliderModule,\n    TuiPagination,\n    TuiTextfieldControllerModule,\n  ],\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaginationComponent {\n  /**\n   * Общее количество элементов.\n   * @type {number}\n   * @default 0\n   * @memberof PaginationComponent\n   */\n  @Input() totalItems: number = 0;\n\n  /**\n   * Количество элементов на одной странице.\n   * @type {number}\n   * @default 16\n   * @memberof PaginationComponent\n   */\n  @Input() itemsPerPage: number = 16;\n\n  /**\n   * Текущая страница.\n   * @type {number}\n   * @default 1\n   * @memberof PaginationComponent\n   */\n  @Input() currentPage: number = 1;\n\n  /**\n   * Событие, которое срабатывает при изменении страницы.\n   * @type {EventEmitter}\n   * @memberof PaginationComponent\n   */\n  @Output() pageChange = new EventEmitter();\n\n  /**\n   * Возвращает общее количество страниц.\n   * @readonly\n   * @type {number}\n   * @memberof PaginationComponent\n   */\n  get totalPages(): number {\n    return Math.ceil(this.totalItems / this.itemsPerPage);\n  }\n\n  /**\n   * Переходит на указанную страницу.\n   * @param {number} page - Номер страницы, на которую нужно перейти.\n   * @memberof PaginationComponent\n   * @example\n   * goToPage(2); // Переходит на вторую страницу.\n   */\n  goToPage(page: number): void {\n    if (page >= 1 && page \n    \n\n    \n        Page {{ currentPage }}\n\n\n\n    \n\n    \n                \n                    ./pagination.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Page {{ currentPage }}'\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaginationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SwitchComponent.html":{"url":"components/SwitchComponent.html","title":"component - SwitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SwitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/switch/switch.component.ts\n\n\n\n    \n        Description\n    \n    \n        Компонент SwitchComponent представляет собой переключатель, который позволяет пользователю включать или выключать определенную функцию.\nОн интегрируется с Taiga UI для создания стилизованного и интерактивного интерфейса.\nЭтот компонент использует реактивные формы для управления состоянием переключателя.\nПоддерживает валидацию и может быть настроен для отображения иконки и изменения внешнего вида.\nExample :HTML:\n```html\nExample :TypeScript:\n```typescript\nisFeatureEnabled: boolean = false;\n\nonToggle(value: boolean): void {\n  this.isFeatureEnabled = value;\n  console.log('Функция переключена:', value);\n}\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            tuiSwitchOptionsProvider({ showIcons: false, appearance: () =>  })\n                \n            \n\n\n            \n                selector\n                app-switch\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiSwitch\n                \n            \n\n            \n                styleUrls\n                ./switch.component.css\n            \n\n\n\n            \n                templateUrl\n                ./switch.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                invalidFalse\n                            \n                            \n                                    Protected\n                                    Readonly\n                                invalidTrue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                onToggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/switch/switch.component.ts:54\n                            \n                        \n                \n                    \n                        Значение переключателя.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/switch/switch.component.ts:61\n                            \n                        \n                \n                    \n                        Событие, которое срабатывает при переключении состояния.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/switch/switch.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Инициализация компонента.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToggle\n                        \n                    \n                \n            \n            \n                \nonToggle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/switch/switch.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Обработчик события переключения.\nExample :onToggle(); // Вызывает событие toggle с текущим значением переключателя.\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        invalidFalse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(false, () => ({\n    invalid: true,\n  }))\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/switch/switch.component.ts:77\n                        \n                    \n\n            \n                \n                    Контрол для валидации состояния переключателя (ложь).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        invalidTrue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(true, () => ({\n    invalid: true,\n  }))\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/switch/switch.component.ts:68\n                        \n                    \n\n            \n                \n                    Контроль для валидации состояния переключателя (истина).\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  OnInit,\n} from '@angular/core';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TuiSwitch, tuiSwitchOptionsProvider } from '@taiga-ui/kit';\n\n/**\n * Компонент SwitchComponent представляет собой переключатель, который позволяет пользователю включать или выключать определенную функцию.\n * Он интегрируется с Taiga UI для создания стилизованного и интерактивного интерфейса.\n *\n * @remarks\n * Этот компонент использует реактивные формы для управления состоянием переключателя.\n * Поддерживает валидацию и может быть настроен для отображения иконки и изменения внешнего вида.\n *\n * @example\n * HTML:\n * ```html\n * \n * ```\n *\n * TypeScript:\n * ```typescript\n * isFeatureEnabled: boolean = false;\n *\n * onToggle(value: boolean): void {\n *   this.isFeatureEnabled = value;\n *   console.log('Функция переключена:', value);\n * }\n * ```\n */\n@Component({\n  selector: 'app-switch',\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, TuiSwitch],\n  templateUrl: './switch.component.html',\n  styleUrls: ['./switch.component.css'],\n  providers: [\n    tuiSwitchOptionsProvider({ showIcons: false, appearance: () => 'primary' }),\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SwitchComponent implements OnInit {\n  /**\n   * Значение переключателя.\n   * @type {boolean}\n   * @default false\n   * @memberof SwitchComponent\n   */\n  @Input() value: boolean = false;\n\n  /**\n   * Событие, которое срабатывает при переключении состояния.\n   * @type {EventEmitter}\n   * @memberof SwitchComponent\n   */\n  @Output() toggle: EventEmitter = new EventEmitter();\n\n  /**\n   * Контроль для валидации состояния переключателя (истина).\n   * @type {FormControl}\n   * @memberof SwitchComponent\n   */\n  protected readonly invalidTrue = new FormControl(true, () => ({\n    invalid: true,\n  }));\n\n  /**\n   * Контрол для валидации состояния переключателя (ложь).\n   * @type {FormControl}\n   * @memberof SwitchComponent\n   */\n  protected readonly invalidFalse = new FormControl(false, () => ({\n    invalid: true,\n  }));\n\n  /**\n   * Инициализация компонента.\n   * @memberof SwitchComponent\n   */\n  public ngOnInit(): void {\n    this.invalidTrue.markAsTouched();\n    this.invalidFalse.markAsTouched();\n  }\n\n  /**\n   * Обработчик события переключения.\n   * @memberof SwitchComponent\n   * @example\n   * onToggle(); // Вызывает событие toggle с текущим значением переключателя.\n   */\n  onToggle(): void {\n    this.toggle.emit(this.value);\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./switch.component.css\n                \n                .switch {\n    position: relative;\n    display: inline-block;\n    width: 40.8px; /* 34px * 1.2 */\n    height: 24px;  /* 20px * 1.2 */\n}\n\n.switch input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n}\n\n.slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #f44336;\n    transition: .4s;\n    border-radius: 34px; /* Можно оставить без изменений, если не хотите менять форму */\n}\n\n.slider:before {\n    position: absolute;\n    content: \"\";\n    height: 16.8px; /* 14px * 1.2 */\n    width: 16.8px;  /* 14px * 1.2 */\n    left: 4px;      /* 3px * 1.2 */\n    bottom: 4px;    /* 3px * 1.2 */\n    background-color: white;\n    transition: .4s;\n    border-radius: 50%;\n}\n\ninput:checked + .slider {\n    background-color: #4caf50;\n}\n\ninput:checked + .slider:before {\n    transform: translateX(16.8px); /* 14px * 1.2 */\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'ApiDialogComponent', 'selector': 'app-api-edit-dialog'},{'name': 'ApiEndpointListComponent', 'selector': 'app-api-endpoint-list'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'CardApiComponent', 'selector': 'app-card-api'},{'name': 'CardApiListComponent', 'selector': 'app-card-api-list'},{'name': 'CardEndpointComponent', 'selector': 'app-card-endpoint'},{'name': 'CardEntityComponent', 'selector': 'app-card-entity'},{'name': 'EndpointCardListComponent', 'selector': 'app-endpoint-card-list'},{'name': 'EndpointDialogComponent', 'selector': 'app-endpoint-dialog'},{'name': 'EntityCardListComponent', 'selector': 'app-entity-card-list'},{'name': 'EntityDialogComponent', 'selector': 'app-entity-edit-dialog'},{'name': 'ErrorDisplayComponent', 'selector': 'app-error-display'},{'name': 'ExportApiButtonComponent', 'selector': 'app-export-api-button'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'ImportDialogComponent', 'selector': 'app-import-dialog'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SwitchComponent', 'selector': 'app-switch'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SwitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/apiServiceShortStructure.html":{"url":"interfaces/apiServiceShortStructure.html","title":"interface - apiServiceShortStructure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  apiServiceShortStructure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/apiServiceShortStructure.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс, представляющий краткую структуру API сервиса.\nЭтот интерфейс используется для описания основных характеристик API сервиса.\nОн включает в себя имя сервиса, его статус активности и краткое описание.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Описание сервиса.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : false\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Флаг активности сервиса.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Название сервиса.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface apiServiceShortStructure {\n  /**\n   * Название сервиса.\n   * @type {string}\n   */\n  name: string;\n\n  /**\n   * Флаг активности сервиса.\n   * @type {boolean}\n   * @default false\n   */\n  isActive: boolean;\n\n  /**\n   * Описание сервиса.\n   * @type {string}\n   */\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/components/alert-delete/alert-delete.component.ts\n            \n            component\n            AlertDeleteComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/data/components/api-dialog/api-dialog.component.ts\n            \n            component\n            ApiDialogComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/data/components/back-button/back-button.component.ts\n            \n            component\n            BackButtonComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/data/components/card-api/card-api.component.ts\n            \n            component\n            CardApiComponent\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/data/components/card-endpoint/card-endpoint.component.ts\n            \n            component\n            CardEndpointComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/data/components/card-entity/card-entity.component.ts\n            \n            component\n            CardEntityComponent\n            \n                82 %\n                (14/17)\n            \n        \n        \n            \n                \n                src/app/data/components/endpoint-dialog/endpoint-dialog.component.ts\n            \n            component\n            EndpointDialogComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/data/components/entity-dialog/entity-dialog.component.ts\n            \n            component\n            EntityDialogComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/data/components/export-api-button/export-api-button.component.ts\n            \n            component\n            ExportApiButtonComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/data/components/filter-by-input/filter-by-input.component.ts\n            \n            component\n            FilterByInputComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/data/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/data/components/icon-trash/icon-trash.component.ts\n            \n            component\n            IconTrashComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/data/components/import-dialog/import-dialog.component.ts\n            \n            component\n            ImportDialogComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/data/components/loading/loading.component.ts\n            \n            component\n            LoadingComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/data/components/pagination/pagination.component.ts\n            \n            component\n            PaginationComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/data/components/switch/switch.component.ts\n            \n            component\n            SwitchComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/data/pages/api-endpoint-list/api-endpoint-list.component.ts\n            \n            component\n            ApiEndpointListComponent\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                src/app/data/pages/card-api-list/card-api-list.component.ts\n            \n            component\n            CardApiListComponent\n            \n                100 %\n                (45/45)\n            \n        \n        \n            \n                \n                src/app/data/pages/endpoint-card-list/endpoint-card-list.component.ts\n            \n            component\n            EndpointCardListComponent\n            \n                100 %\n                (24/24)\n            \n        \n        \n            \n                \n                src/app/data/pages/entity-card-list/entity-card-list.component.ts\n            \n            component\n            EntityCardListComponent\n            \n                100 %\n                (34/34)\n            \n        \n        \n            \n                \n                src/app/data/pages/error-display/error-display.component.ts\n            \n            component\n            ErrorDisplayComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/data/pages/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/interceptors/http-error.interceptor.ts\n            \n            interceptor\n            HttpErrorInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/ApiServiceStructure.ts\n            \n            interface\n            ApiServiceStructure\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/Endpoint.ts\n            \n            interface\n            Endpoint\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/Entity.ts\n            \n            interface\n            Entity\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/EntityShort.ts\n            \n            interface\n            EntityShort\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/FileStatus.ts\n            \n            interface\n            FileStatus\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/apiServiceShortStructure.ts\n            \n            interface\n            apiServiceShortStructure\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/repositories/api-service-repository.service.ts\n            \n            injectable\n            ApiServiceRepositoryService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/repositories/endpoint-repository.service.ts\n            \n            injectable\n            EndpointRepositoryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/repositories/entity-repository.service.ts\n            \n            injectable\n            EntityRepositoryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/api-hub-service.service.ts\n            \n            injectable\n            ApiHubServiceService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/api-service.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/endpoint-service.service.ts\n            \n            injectable\n            EndpointService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/entity-service.service.ts\n            \n            injectable\n            EntityService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/error-handler.service.ts\n            \n            injectable\n            ErrorHandlerService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^19.1.0\n        \n            @angular/common : ^19.1.0\n        \n            @angular/compiler : ^19.1.0\n        \n            @angular/core : ^19.1.0\n        \n            @angular/forms : ^19.1.0\n        \n            @angular/platform-browser : ^19.1.0\n        \n            @angular/platform-browser-dynamic : ^19.1.0\n        \n            @angular/router : ^19.1.0\n        \n            @microsoft/signalr : ^8.0.7\n        \n            @taiga-ui/addon-charts : ^4.21.0\n        \n            @taiga-ui/addon-commerce : ^4.21.0\n        \n            @taiga-ui/addon-doc : ^4.21.0\n        \n            @taiga-ui/addon-mobile : ^4.21.0\n        \n            @taiga-ui/addon-table : ^4.21.0\n        \n            @taiga-ui/cdk : ^4.21.0\n        \n            @taiga-ui/core : ^4.21.0\n        \n            @taiga-ui/event-plugins : ^4.0.2\n        \n            @taiga-ui/experimental : ^4.21.0\n        \n            @taiga-ui/icons : ^4.22.0\n        \n            @taiga-ui/icons-fontawesome : ^4.22.0\n        \n            @taiga-ui/icons-material : ^4.22.0\n        \n            @taiga-ui/kit : ^4.21.0\n        \n            @taiga-ui/layout : ^4.21.0\n        \n            @taiga-ui/legacy : ^4.24.0\n        \n            jszip : ^3.10.1\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nApiEasier\nThis project was generated using Angular CLI version 19.1.3.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    23 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideHttpClient(),\n    { provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true },\n    provideAnimations(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(APP_ROUTES),\n    NG_EVENT_PLUGINS,\n  ],\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
